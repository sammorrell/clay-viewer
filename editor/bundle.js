/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 69);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin_extend__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin_notifier__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(9);\n\n\n\n\n/**\n * Base class of all objects\n * @constructor\n * @alias clay.core.Base\n * @mixes clay.core.mixin.notifier\n */\nvar Base = function () {\n    /**\n     * @type {number}\n     */\n    this.__uid__ = __WEBPACK_IMPORTED_MODULE_2__util__[\"a\" /* default */].genGUID();\n};\n\nBase.__initializers__ = [\n    function (opts) {\n        __WEBPACK_IMPORTED_MODULE_2__util__[\"a\" /* default */].extend(this, opts);\n    }\n];\n\n__WEBPACK_IMPORTED_MODULE_2__util__[\"a\" /* default */].extend(Base, __WEBPACK_IMPORTED_MODULE_0__mixin_extend__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_2__util__[\"a\" /* default */].extend(Base.prototype, __WEBPACK_IMPORTED_MODULE_1__mixin_notifier__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Base);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9jb3JlL0Jhc2UuanM/NjAzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXh0ZW5kTWl4aW4gZnJvbSAnLi9taXhpbi9leHRlbmQnO1xuaW1wb3J0IG5vdGlmaWVyTWl4aW4gZnJvbSAnLi9taXhpbi9ub3RpZmllcic7XG5pbXBvcnQgdXRpbCBmcm9tICcuL3V0aWwnO1xuXG4vKipcbiAqIEJhc2UgY2xhc3Mgb2YgYWxsIG9iamVjdHNcbiAqIEBjb25zdHJ1Y3RvclxuICogQGFsaWFzIGNsYXkuY29yZS5CYXNlXG4gKiBAbWl4ZXMgY2xheS5jb3JlLm1peGluLm5vdGlmaWVyXG4gKi9cbnZhciBCYXNlID0gZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgdGhpcy5fX3VpZF9fID0gdXRpbC5nZW5HVUlEKCk7XG59O1xuXG5CYXNlLl9faW5pdGlhbGl6ZXJzX18gPSBbXG4gICAgZnVuY3Rpb24gKG9wdHMpIHtcbiAgICAgICAgdXRpbC5leHRlbmQodGhpcywgb3B0cyk7XG4gICAgfVxuXTtcblxudXRpbC5leHRlbmQoQmFzZSwgZXh0ZW5kTWl4aW4pO1xudXRpbC5leHRlbmQoQmFzZS5wcm90b3R5cGUsIG5vdGlmaWVyTWl4aW4pO1xuXG5leHBvcnQgZGVmYXVsdCBCYXNlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9CYXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_Cache__ = __webpack_require__(34);\n/**\n * Base class for all textures like compressed texture, texture2d, texturecube\n * TODO mapping\n */\n\n\n\n\n/**\n * @constructor\n * @alias clay.Texture\n * @extends clay.core.Base\n */\nvar Texture = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend( /** @lends clay.Texture# */ {\n    /**\n     * Texture width, readonly when the texture source is image\n     * @type {number}\n     */\n    width: 512,\n    /**\n     * Texture height, readonly when the texture source is image\n     * @type {number}\n     */\n    height: 512,\n    /**\n     * Texel data type.\n     * Possible values:\n     *  + {@link clay.Texture.UNSIGNED_BYTE}\n     *  + {@link clay.Texture.HALF_FLOAT}\n     *  + {@link clay.Texture.FLOAT}\n     *  + {@link clay.Texture.UNSIGNED_INT_24_8_WEBGL}\n     *  + {@link clay.Texture.UNSIGNED_INT}\n     * @type {number}\n     */\n    type: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].UNSIGNED_BYTE,\n    /**\n     * Format of texel data\n     * Possible values:\n     *  + {@link clay.Texture.RGBA}\n     *  + {@link clay.Texture.DEPTH_COMPONENT}\n     *  + {@link clay.Texture.DEPTH_STENCIL}\n     * @type {number}\n     */\n    format: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].RGBA,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapS: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].REPEAT,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapT: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].REPEAT,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_LINEAR}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_LINEAR}\n     * @type {number}\n     */\n    minFilter: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_LINEAR,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     * @type {number}\n     */\n    magFilter: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR,\n    /**\n     * If enable mimap.\n     * @type {boolean}\n     */\n    useMipmap: true,\n\n    /**\n     * Anisotropic filtering, enabled if value is larger than 1\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_filter_anisotropic\n     * @type {number}\n     */\n    anisotropic: 1,\n    // pixelStorei parameters, not available when texture is used as render target\n    // http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml\n    /**\n     * If flip in y axis for given image source\n     * @type {boolean}\n     * @default true\n     */\n    flipY: true,\n\n    /**\n     * A flag to indicate if texture source is sRGB\n     */\n    sRGB: true,\n    /**\n     * @type {number}\n     * @default 4\n     */\n    unpackAlignment: 4,\n    /**\n     * @type {boolean}\n     * @default false\n     */\n    premultiplyAlpha: false,\n\n    /**\n     * Dynamic option for texture like video\n     * @type {boolean}\n     */\n    dynamic: false,\n\n    NPOT: false,\n\n    // PENDING\n    // Init it here to avoid deoptimization when it's assigned in application dynamically\n    __used: 0\n\n}, function () {\n    this._cache = new __WEBPACK_IMPORTED_MODULE_2__core_Cache__[\"a\" /* default */]();\n},\n/** @lends clay.Texture.prototype */\n{\n\n    getWebGLTexture: function (renderer) {\n        var _gl = renderer.gl;\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n\n        if (cache.miss('webgl_texture')) {\n            // In a new gl context, create new texture and set dirty true\n            cache.put('webgl_texture', _gl.createTexture());\n        }\n        if (this.dynamic) {\n            this.update(renderer);\n        }\n        else if (cache.isDirty()) {\n            this.update(renderer);\n            cache.fresh();\n        }\n\n        return cache.get('webgl_texture');\n    },\n\n    bind: function () {},\n    unbind: function () {},\n\n    /**\n     * Mark texture is dirty and update in the next frame\n     */\n    dirty: function () {\n        if (this._cache) {\n            this._cache.dirtyAll();\n        }\n    },\n\n    update: function (renderer) {},\n\n    // Update the common parameters of texture\n    updateCommon: function (renderer) {\n        var _gl = renderer.gl;\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n\n        // Use of none-power of two texture\n        // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences\n        if (this.format === __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].DEPTH_COMPONENT) {\n            this.useMipmap = false;\n        }\n\n        var sRGBExt = renderer.getGLExtension('EXT_sRGB');\n        // Fallback\n        if (this.format === Texture.SRGB && !sRGBExt) {\n            this.format = Texture.RGB;\n        }\n        if (this.format === Texture.SRGB_ALPHA && !sRGBExt) {\n            this.format = Texture.RGBA;\n        }\n\n        this.NPOT = !this.isPowerOfTwo();\n    },\n\n    getAvailableWrapS: function () {\n        if (this.NPOT) {\n            return __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CLAMP_TO_EDGE;\n        }\n        return this.wrapS;\n    },\n    getAvailableWrapT: function () {\n        if (this.NPOT) {\n            return __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CLAMP_TO_EDGE;\n        }\n        return this.wrapT;\n    },\n    getAvailableMinFilter: function () {\n        var minFilter = this.minFilter;\n        if (this.NPOT || !this.useMipmap) {\n            if (minFilter === __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST_MIPMAP_NEAREST ||\n                minFilter === __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST_MIPMAP_LINEAR\n            ) {\n                return __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST;\n            }\n            else if (minFilter === __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_LINEAR ||\n                minFilter === __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_NEAREST\n            ) {\n                return __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR;\n            }\n            else {\n                return minFilter;\n            }\n        }\n        else {\n            return minFilter;\n        }\n    },\n    getAvailableMagFilter: function () {\n        return this.magFilter;\n    },\n\n    nextHighestPowerOfTwo: function (x) {\n        --x;\n        for (var i = 1; i < 32; i <<= 1) {\n            x = x | x >> i;\n        }\n        return x + 1;\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n\n        var webglTexture = cache.get('webgl_texture');\n        if (webglTexture){\n            renderer.gl.deleteTexture(webglTexture);\n        }\n        cache.deleteContext(renderer.__uid__);\n\n    },\n    /**\n     * Test if image of texture is valid and loaded.\n     * @return {boolean}\n     */\n    isRenderable: function () {},\n\n    /**\n     * Test if texture size is power of two\n     * @return {boolean}\n     */\n    isPowerOfTwo: function () {}\n});\n\nObject.defineProperty(Texture.prototype, 'width', {\n    get: function () {\n        return this._width;\n    },\n    set: function (value) {\n        this._width = value;\n    }\n});\nObject.defineProperty(Texture.prototype, 'height', {\n    get: function () {\n        return this._height;\n    },\n    set: function (value) {\n        this._height = value;\n    }\n});\n\n/* DataType */\n\n/**\n * @type {number}\n */\nTexture.BYTE = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].BYTE;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_BYTE = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].UNSIGNED_BYTE;\n/**\n * @type {number}\n */\nTexture.SHORT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].SHORT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_SHORT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].UNSIGNED_SHORT;\n/**\n * @type {number}\n */\nTexture.INT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].INT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_INT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].UNSIGNED_INT;\n/**\n * @type {number}\n */\nTexture.FLOAT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].FLOAT;\n/**\n * @type {number}\n */\nTexture.HALF_FLOAT = 0x8D61;\n\n/**\n * UNSIGNED_INT_24_8_WEBGL for WEBGL_depth_texture extension\n * @type {number}\n */\nTexture.UNSIGNED_INT_24_8_WEBGL = 34042;\n\n/* PixelFormat */\n/**\n * @type {number}\n */\nTexture.DEPTH_COMPONENT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].DEPTH_COMPONENT;\n/**\n * @type {number}\n */\nTexture.DEPTH_STENCIL = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].DEPTH_STENCIL;\n/**\n * @type {number}\n */\nTexture.ALPHA = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].ALPHA;\n/**\n * @type {number}\n */\nTexture.RGB = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].RGB;\n/**\n * @type {number}\n */\nTexture.RGBA = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].RGBA;\n/**\n * @type {number}\n */\nTexture.LUMINANCE = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LUMINANCE;\n/**\n * @type {number}\n */\nTexture.LUMINANCE_ALPHA = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LUMINANCE_ALPHA;\n\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB = 0x8C40;\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB_ALPHA = 0x8C42;\n\n/* Compressed Texture */\nTexture.COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\nTexture.COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\nTexture.COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\nTexture.COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n/* TextureMagFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR;\n\n/* TextureMinFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_NEAREST = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_NEAREST = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_LINEAR = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST_MIPMAP_LINEAR;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_LINEAR = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_LINEAR;\n\n/* TextureWrapMode */\n/**\n * @type {number}\n */\nTexture.REPEAT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].REPEAT;\n/**\n * @type {number}\n */\nTexture.CLAMP_TO_EDGE = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CLAMP_TO_EDGE;\n/**\n * @type {number}\n */\nTexture.MIRRORED_REPEAT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].MIRRORED_REPEAT;\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Texture);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_vendor__ = __webpack_require__(5);\n/**\n * Mainly do the parse and compile of shader string\n * Support shader code chunk import and export\n * Support shader semantics\n * http://www.nvidia.com/object/using_sas.html\n * https://github.com/KhronosGroup/collada2json/issues/45\n */\n\n\n\nvar uniformRegex = /uniform\\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\\s+([\\s\\S]*?);/g;\nvar attributeRegex = /attribute\\s+(float|int|vec2|vec3|vec4)\\s+([\\s\\S]*?);/g;\n// Only parse number define.\nvar defineRegex = /#define\\s+(\\w+)?(\\s+[\\d-.]+)?\\s*;?\\s*\\n/g;\n\nvar uniformTypeMap = {\n    'bool': '1i',\n    'int': '1i',\n    'sampler2D': 't',\n    'samplerCube': 't',\n    'float': '1f',\n    'vec2': '2f',\n    'vec3': '3f',\n    'vec4': '4f',\n    'ivec2': '2i',\n    'ivec3': '3i',\n    'ivec4': '4i',\n    'mat2': 'm2',\n    'mat3': 'm3',\n    'mat4': 'm4'\n};\n\nfunction createZeroArray(len) {\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr[i] = 0;\n    }\n    return arr;\n}\n\nvar uniformValueConstructor = {\n    'bool': function () { return true; },\n    'int': function () { return 0; },\n    'float': function () { return 0; },\n    'sampler2D': function () { return null; },\n    'samplerCube': function () { return null; },\n\n    'vec2': function () { return createZeroArray(2); },\n    'vec3': function () { return createZeroArray(3); },\n    'vec4': function () { return createZeroArray(4); },\n\n    'ivec2': function () { return createZeroArray(2); },\n    'ivec3': function () { return createZeroArray(3); },\n    'ivec4': function () { return createZeroArray(4); },\n\n    'mat2': function () { return createZeroArray(4); },\n    'mat3': function () { return createZeroArray(9); },\n    'mat4': function () { return createZeroArray(16); },\n\n    'array': function () { return []; }\n};\n\nvar attributeSemantics = [\n    'POSITION',\n    'NORMAL',\n    'BINORMAL',\n    'TANGENT',\n    'TEXCOORD',\n    'TEXCOORD_0',\n    'TEXCOORD_1',\n    'COLOR',\n    // Skinning\n    // https://github.com/KhronosGroup/glTF/blob/master/specification/README.md#semantics\n    'JOINT',\n    'WEIGHT'\n];\nvar uniformSemantics = [\n    'SKIN_MATRIX',\n    // Information about viewport\n    'VIEWPORT_SIZE',\n    'VIEWPORT',\n    'DEVICEPIXELRATIO',\n    // Window size for window relative coordinate\n    // https://www.opengl.org/sdk/docs/man/html/gl_FragCoord.xhtml\n    'WINDOW_SIZE',\n    // Infomation about camera\n    'NEAR',\n    'FAR',\n    // Time\n    'TIME'\n];\nvar matrixSemantics = [\n    'WORLD',\n    'VIEW',\n    'PROJECTION',\n    'WORLDVIEW',\n    'VIEWPROJECTION',\n    'WORLDVIEWPROJECTION',\n    'WORLDINVERSE',\n    'VIEWINVERSE',\n    'PROJECTIONINVERSE',\n    'WORLDVIEWINVERSE',\n    'VIEWPROJECTIONINVERSE',\n    'WORLDVIEWPROJECTIONINVERSE',\n    'WORLDTRANSPOSE',\n    'VIEWTRANSPOSE',\n    'PROJECTIONTRANSPOSE',\n    'WORLDVIEWTRANSPOSE',\n    'VIEWPROJECTIONTRANSPOSE',\n    'WORLDVIEWPROJECTIONTRANSPOSE',\n    'WORLDINVERSETRANSPOSE',\n    'VIEWINVERSETRANSPOSE',\n    'PROJECTIONINVERSETRANSPOSE',\n    'WORLDVIEWINVERSETRANSPOSE',\n    'VIEWPROJECTIONINVERSETRANSPOSE',\n    'WORLDVIEWPROJECTIONINVERSETRANSPOSE'\n];\n\nvar attributeSizeMap = {\n    // WebGL does not support integer attributes\n    'vec4': 4,\n    'vec3': 3,\n    'vec2': 2,\n    'float': 1\n};\n\n\nvar shaderIDCache = {};\nvar shaderCodeCache = {};\n\nfunction getShaderID(vertex, fragment) {\n    var key = 'vertex:' + vertex + 'fragment:' + fragment;\n    if (shaderIDCache[key]) {\n        return shaderIDCache[key];\n    }\n    var id = __WEBPACK_IMPORTED_MODULE_0__core_util__[\"a\" /* default */].genGUID();\n    shaderIDCache[key] = id;\n\n    shaderCodeCache[id] = {\n        vertex: vertex,\n        fragment: fragment\n    };\n\n    return id;\n}\n\nfunction removeComment(code) {\n    return code.replace(/[ \\t]*\\/\\/.*\\n/g, '' )   // remove //\n        .replace(/[ \\t]*\\/\\*[\\s\\S]*?\\*\\//g, '' ); // remove /* */\n}\n\nfunction logSyntaxError() {\n    console.error('Wrong uniform/attributes syntax');\n}\n\nfunction parseDeclarations(type, line) {\n    var speratorsRegexp = /[,=\\(\\):]/;\n    var tokens = line\n        // Convert `symbol: [1,2,3]` to `symbol: vec3(1,2,3)`\n        .replace(/:\\s*\\[\\s*(.*)\\s*\\]/g, '=' + type + '($1)')\n        .replace(/\\s+/g, '')\n        .split(/(?=[,=\\(\\):])/g);\n\n    var newTokens = [];\n    for (var i = 0; i < tokens.length; i++) {\n        if (tokens[i].match(speratorsRegexp)) {\n            newTokens.push(\n                tokens[i].charAt(0),\n                tokens[i].slice(1)\n            );\n        }\n        else {\n            newTokens.push(tokens[i]);\n        }\n    }\n    tokens = newTokens;\n\n    var TYPE_SYMBOL = 0;\n    var TYPE_ASSIGN = 1;\n    var TYPE_VEC = 2;\n    var TYPE_ARR = 3;\n    var TYPE_SEMANTIC = 4;\n    var TYPE_NORMAL = 5;\n\n    var opType = TYPE_SYMBOL;\n    var declarations = {};\n    var declarationValue = null;\n    var currentDeclaration;\n\n    addSymbol(tokens[0]);\n\n    function addSymbol(symbol) {\n        if (!symbol) {\n            logSyntaxError();\n        }\n        var arrResult = symbol.match(/\\[(.*?)\\]/);\n        currentDeclaration = symbol.replace(/\\[(.*?)\\]/, '');\n        declarations[currentDeclaration] = {};\n        if (arrResult) {\n            declarations[currentDeclaration].isArray = true;\n            declarations[currentDeclaration].arraySize = arrResult[1];\n        }\n    }\n\n    for (var i = 1; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (!token) {   // Empty token;\n            continue;\n        }\n        if (token === '=') {\n            if (opType !== TYPE_SYMBOL\n            && opType !== TYPE_ARR) {\n                logSyntaxError();\n                break;\n            }\n            opType = TYPE_ASSIGN;\n\n            continue;\n        }\n        else if (token === ':') {\n            opType = TYPE_SEMANTIC;\n\n            continue;\n        }\n        else if (token === ',') {\n            if (opType === TYPE_VEC) {\n                if (!(declarationValue instanceof Array)) {\n                    logSyntaxError();\n                    break;\n                }\n                declarationValue.push(+tokens[++i]);\n            }\n            else {\n                opType = TYPE_NORMAL;\n            }\n\n            continue;\n        }\n        else if (token === ')') {\n            declarations[currentDeclaration].value = new __WEBPACK_IMPORTED_MODULE_1__core_vendor__[\"a\" /* default */].Float32Array(declarationValue);\n            declarationValue = null;\n            opType = TYPE_NORMAL;\n            continue;\n        }\n        else if (token === '(') {\n            if (opType !== TYPE_VEC) {\n                logSyntaxError();\n                break;\n            }\n            if (!(declarationValue instanceof Array)) {\n                logSyntaxError();\n                break;\n            }\n            declarationValue.push(+tokens[++i]);\n            continue;\n        }\n        else if (token.indexOf('vec') >= 0) {\n            if (opType !== TYPE_ASSIGN\n            // Compatitable with old syntax `symbol: [1,2,3]`\n            && opType !== TYPE_SEMANTIC) {\n                logSyntaxError();\n                break;\n            }\n            opType = TYPE_VEC;\n            declarationValue = [];\n            continue;\n        }\n        else if (opType === TYPE_ASSIGN) {\n            if (type === 'bool') {\n                declarations[currentDeclaration].value = token === 'true';\n            }\n            else {\n                declarations[currentDeclaration].value = parseFloat(token);\n            }\n            declarationValue = null;\n            continue;\n        }\n        else if (opType === TYPE_SEMANTIC) {\n            var semantic = token;\n            if (attributeSemantics.indexOf(semantic) >= 0\n                || uniformSemantics.indexOf(semantic) >= 0\n                || matrixSemantics.indexOf(semantic) >= 0\n            ) {\n                declarations[currentDeclaration].semantic = semantic;\n            }\n            else if (semantic === 'ignore' || semantic === 'unconfigurable') {\n                declarations[currentDeclaration].ignore = true;\n            }\n            else {\n                // Try to parse as a default tvalue.\n                if (type === 'bool') {\n                    declarations[currentDeclaration].value = semantic === 'true';\n                }\n                else {\n                    declarations[currentDeclaration].value = parseFloat(semantic);\n                }\n            }\n            continue;\n        }\n\n        // treat as symbol.\n        addSymbol(token);\n        opType = TYPE_SYMBOL;\n    }\n\n    return declarations;\n}\n\n\n/**\n * @constructor\n * @extends clay.core.Base\n * @alias clay.Shader\n * @param {string} vertex\n * @param {string} fragment\n * @example\n * // Create a phong shader\n * var shader = new clay.Shader(\n *      clay.Shader.source('clay.standard.vertex'),\n *      clay.Shader.source('clay.standard.fragment')\n * );\n */\nfunction Shader(vertex, fragment) {\n    // First argument can be { vertex, fragment }\n    if (typeof vertex === 'object') {\n        fragment = vertex.fragment;\n        vertex = vertex.vertex;\n    }\n\n    vertex = removeComment(vertex);\n    fragment = removeComment(fragment);\n\n    this._shaderID = getShaderID(vertex, fragment);\n\n    this._vertexCode = Shader.parseImport(vertex);\n    this._fragmentCode = Shader.parseImport(fragment);\n\n    /**\n     * @readOnly\n     */\n    this.attributeSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.matrixSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.uniformSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.matrixSemanticKeys = [];\n    /**\n     * @readOnly\n     */\n    this.uniformTemplates = {};\n    /**\n     * @readOnly\n     */\n    this.attributes = {};\n    /**\n     * @readOnly\n     */\n    this.textures = {};\n    /**\n     * @readOnly\n     */\n    this.vertexDefines = {};\n    /**\n     * @readOnly\n     */\n    this.fragmentDefines = {};\n\n    this._parseAttributes();\n    this._parseUniforms();\n    this._parseDefines();\n}\n\nShader.prototype = {\n\n    constructor: Shader,\n\n    // Create a new uniform instance for material\n    createUniforms: function () {\n        var uniforms = {};\n\n        for (var symbol in this.uniformTemplates){\n            var uniformTpl = this.uniformTemplates[symbol];\n            uniforms[symbol] = {\n                type: uniformTpl.type,\n                value: uniformTpl.value()\n            };\n        }\n\n        return uniforms;\n    },\n\n    _parseImport: function () {\n        this._vertexCode = Shader.parseImport(this.vertex);\n        this._fragmentCode = Shader.parseImport(this.fragment);\n    },\n\n    _addSemanticUniform: function (symbol, uniformType, semantic) {\n        // This case is only for SKIN_MATRIX\n        // TODO\n        if (attributeSemantics.indexOf(semantic) >= 0) {\n            this.attributeSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType\n            };\n        }\n        else if (matrixSemantics.indexOf(semantic) >= 0) {\n            var isTranspose = false;\n            var semanticNoTranspose = semantic;\n            if (semantic.match(/TRANSPOSE$/)) {\n                isTranspose = true;\n                semanticNoTranspose = semantic.slice(0, -9);\n            }\n            this.matrixSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType,\n                isTranspose: isTranspose,\n                semanticNoTranspose: semanticNoTranspose\n            };\n        }\n        else if (uniformSemantics.indexOf(semantic) >= 0) {\n            this.uniformSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType\n            };\n        }\n    },\n\n    _addMaterialUniform: function (symbol, type, uniformType, defaultValueFunc, isArray, materialUniforms) {\n        materialUniforms[symbol] = {\n            type: uniformType,\n            value: isArray ? uniformValueConstructor['array'] : (defaultValueFunc || uniformValueConstructor[type]),\n            semantic: null\n        };\n    },\n\n    _parseUniforms: function () {\n        var uniforms = {};\n        var self = this;\n        var shaderType = 'vertex';\n        this._uniformList = [];\n\n        this._vertexCode = this._vertexCode.replace(uniformRegex, _uniformParser);\n        shaderType = 'fragment';\n        this._fragmentCode = this._fragmentCode.replace(uniformRegex, _uniformParser);\n\n        self.matrixSemanticKeys = Object.keys(this.matrixSemantics);\n\n        function makeDefaultValueFunc(value) {\n            return value != null ? function () { return value; } : null;\n        }\n\n        function _uniformParser(str, type, content) {\n            var declaredUniforms = parseDeclarations(type, content);\n            var uniformMainStr = [];\n            for (var symbol in declaredUniforms) {\n\n                var uniformInfo = declaredUniforms[symbol];\n                var semantic = uniformInfo.semantic;\n                var tmpStr = symbol;\n                var uniformType = uniformTypeMap[type];\n                var defaultValueFunc = makeDefaultValueFunc(declaredUniforms[symbol].value);\n                if (declaredUniforms[symbol].isArray) {\n                    tmpStr += '[' + declaredUniforms[symbol].arraySize + ']';\n                    uniformType += 'v';\n                }\n\n                uniformMainStr.push(tmpStr);\n\n                self._uniformList.push(symbol);\n\n                if (!uniformInfo.ignore) {\n                    if (type === 'sampler2D' || type === 'samplerCube') {\n                        // Texture is default disabled\n                        self.textures[symbol] = {\n                            shaderType: shaderType,\n                            type: type\n                        };\n                    }\n\n                    if (semantic) {\n                        // TODO Should not declare multiple symbols if have semantic.\n                        self._addSemanticUniform(symbol, uniformType, semantic);\n                    }\n                    else {\n                        self._addMaterialUniform(\n                            symbol, type, uniformType, defaultValueFunc,\n                            declaredUniforms[symbol].isArray, uniforms\n                        );\n                    }\n                }\n            }\n            return uniformMainStr.length > 0\n                ? 'uniform ' + type + ' ' + uniformMainStr.join(',') + ';\\n' : '';\n        }\n\n        this.uniformTemplates = uniforms;\n    },\n\n    _parseAttributes: function () {\n        var attributes = {};\n        var self = this;\n        this._vertexCode = this._vertexCode.replace(attributeRegex, _attributeParser);\n\n        function _attributeParser(str, type, content) {\n            var declaredAttributes = parseDeclarations(type, content);\n\n            var size = attributeSizeMap[type] || 1;\n            var attributeMainStr = [];\n            for (var symbol in declaredAttributes) {\n                var semantic = declaredAttributes[symbol].semantic;\n                attributes[symbol] = {\n                    // TODO Can only be float\n                    type: 'float',\n                    size: size,\n                    semantic: semantic || null\n                };\n                // TODO Should not declare multiple symbols if have semantic.\n                if (semantic) {\n                    if (attributeSemantics.indexOf(semantic) < 0) {\n                        throw new Error('Unkown semantic \"' + semantic + '\"');\n                    }\n                    else {\n                        self.attributeSemantics[semantic] = {\n                            symbol: symbol,\n                            type: type\n                        };\n                    }\n                }\n                attributeMainStr.push(symbol);\n            }\n\n            return 'attribute ' + type + ' ' + attributeMainStr.join(',') + ';\\n';\n        }\n\n        this.attributes = attributes;\n    },\n\n    _parseDefines: function () {\n        var self = this;\n        var shaderType = 'vertex';\n        this._vertexCode = this._vertexCode.replace(defineRegex, _defineParser);\n        shaderType = 'fragment';\n        this._fragmentCode = this._fragmentCode.replace(defineRegex, _defineParser);\n\n        function _defineParser(str, symbol, value) {\n            var defines = shaderType === 'vertex' ? self.vertexDefines : self.fragmentDefines;\n            if (!defines[symbol]) { // Haven't been defined by user\n                if (value === 'false') {\n                    defines[symbol] = false;\n                }\n                else if (value === 'true') {\n                    defines[symbol] = true;\n                }\n                else {\n                    defines[symbol] = value\n                        // If can parse to float\n                        ? (isNaN(parseFloat(value)) ? value.trim() : parseFloat(value))\n                        : null;\n                }\n            }\n            return '';\n        }\n    },\n\n    /**\n     * Clone a new shader\n     * @return {clay.Shader}\n     */\n    clone: function () {\n        var code = shaderCodeCache[this._shaderID];\n        var shader = new Shader(code.vertex, code.fragment);\n        return shader;\n    }\n};\n\nif (Object.defineProperty) {\n    Object.defineProperty(Shader.prototype, 'shaderID', {\n        get: function () {\n            return this._shaderID;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'vertex', {\n        get: function () {\n            return this._vertexCode;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'fragment', {\n        get: function () {\n            return this._fragmentCode;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'uniforms', {\n        get: function () {\n            return this._uniformList;\n        }\n    });\n}\n\nvar importRegex = /(@import)\\s*([0-9a-zA-Z_\\-\\.]*)/g;\nShader.parseImport = function (shaderStr) {\n    shaderStr = shaderStr.replace(importRegex, function (str, importSymbol, importName) {\n        var str = Shader.source(importName);\n        if (str) {\n            // Recursively parse\n            return Shader.parseImport(str);\n        }\n        else {\n            console.error('Shader chunk \"' + importName + '\" not existed in library');\n            return '';\n        }\n    });\n    return shaderStr;\n};\n\nvar exportRegex = /(@export)\\s*([0-9a-zA-Z_\\-\\.]*)\\s*\\n([\\s\\S]*?)@end/g;\n\n/**\n * Import shader source\n * @param  {string} shaderStr\n * @memberOf clay.Shader\n */\nShader['import'] = function (shaderStr) {\n    shaderStr.replace(exportRegex, function (str, exportSymbol, exportName, code) {\n        var code = code.replace(/(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+\\x24)/g, '');\n        if (code) {\n            var parts = exportName.split('.');\n            var obj = Shader.codes;\n            var i = 0;\n            var key;\n            while (i < parts.length - 1) {\n                key = parts[i++];\n                if (!obj[key]) {\n                    obj[key] = {};\n                }\n                obj = obj[key];\n            }\n            key = parts[i];\n            obj[key] = code;\n        }\n        return code;\n    });\n};\n\n/**\n * Library to store all the loaded shader codes\n * @type {Object}\n * @readOnly\n * @memberOf clay.Shader\n */\nShader.codes = {};\n\n/**\n * Get shader source\n * @param  {string} name\n * @return {string}\n */\nShader.source = function (name) {\n    var parts = name.split('.');\n    var obj = Shader.codes;\n    var i = 0;\n    while (obj && i < parts.length) {\n        var key = parts[i++];\n        obj = obj[key];\n    }\n    if (typeof obj !== 'string') {\n        // FIXME Use default instead\n        console.error('Shader \"' + name + '\" not existed in library');\n        return '';\n    }\n    return obj;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Shader);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9TaGFkZXIuanM/NTJiOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1haW5seSBkbyB0aGUgcGFyc2UgYW5kIGNvbXBpbGUgb2Ygc2hhZGVyIHN0cmluZ1xuICogU3VwcG9ydCBzaGFkZXIgY29kZSBjaHVuayBpbXBvcnQgYW5kIGV4cG9ydFxuICogU3VwcG9ydCBzaGFkZXIgc2VtYW50aWNzXG4gKiBodHRwOi8vd3d3Lm52aWRpYS5jb20vb2JqZWN0L3VzaW5nX3Nhcy5odG1sXG4gKiBodHRwczovL2dpdGh1Yi5jb20vS2hyb25vc0dyb3VwL2NvbGxhZGEyanNvbi9pc3N1ZXMvNDVcbiAqL1xuaW1wb3J0IHV0aWwgZnJvbSAnLi9jb3JlL3V0aWwnO1xuaW1wb3J0IHZlbmRvciBmcm9tICcuL2NvcmUvdmVuZG9yJztcblxudmFyIHVuaWZvcm1SZWdleCA9IC91bmlmb3JtXFxzKyhib29sfGZsb2F0fGludHx2ZWMyfHZlYzN8dmVjNHxpdmVjMnxpdmVjM3xpdmVjNHxtYXQyfG1hdDN8bWF0NHxzYW1wbGVyMkR8c2FtcGxlckN1YmUpXFxzKyhbXFxzXFxTXSo/KTsvZztcbnZhciBhdHRyaWJ1dGVSZWdleCA9IC9hdHRyaWJ1dGVcXHMrKGZsb2F0fGludHx2ZWMyfHZlYzN8dmVjNClcXHMrKFtcXHNcXFNdKj8pOy9nO1xuLy8gT25seSBwYXJzZSBudW1iZXIgZGVmaW5lLlxudmFyIGRlZmluZVJlZ2V4ID0gLyNkZWZpbmVcXHMrKFxcdyspPyhcXHMrW1xcZC0uXSspP1xccyo7P1xccypcXG4vZztcblxudmFyIHVuaWZvcm1UeXBlTWFwID0ge1xuICAgICdib29sJzogJzFpJyxcbiAgICAnaW50JzogJzFpJyxcbiAgICAnc2FtcGxlcjJEJzogJ3QnLFxuICAgICdzYW1wbGVyQ3ViZSc6ICd0JyxcbiAgICAnZmxvYXQnOiAnMWYnLFxuICAgICd2ZWMyJzogJzJmJyxcbiAgICAndmVjMyc6ICczZicsXG4gICAgJ3ZlYzQnOiAnNGYnLFxuICAgICdpdmVjMic6ICcyaScsXG4gICAgJ2l2ZWMzJzogJzNpJyxcbiAgICAnaXZlYzQnOiAnNGknLFxuICAgICdtYXQyJzogJ20yJyxcbiAgICAnbWF0Myc6ICdtMycsXG4gICAgJ21hdDQnOiAnbTQnXG59O1xuXG5mdW5jdGlvbiBjcmVhdGVaZXJvQXJyYXkobGVuKSB7XG4gICAgdmFyIGFyciA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgYXJyW2ldID0gMDtcbiAgICB9XG4gICAgcmV0dXJuIGFycjtcbn1cblxudmFyIHVuaWZvcm1WYWx1ZUNvbnN0cnVjdG9yID0ge1xuICAgICdib29sJzogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHJ1ZTsgfSxcbiAgICAnaW50JzogZnVuY3Rpb24gKCkgeyByZXR1cm4gMDsgfSxcbiAgICAnZmxvYXQnOiBmdW5jdGlvbiAoKSB7IHJldHVybiAwOyB9LFxuICAgICdzYW1wbGVyMkQnOiBmdW5jdGlvbiAoKSB7IHJldHVybiBudWxsOyB9LFxuICAgICdzYW1wbGVyQ3ViZSc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG51bGw7IH0sXG5cbiAgICAndmVjMic6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNyZWF0ZVplcm9BcnJheSgyKTsgfSxcbiAgICAndmVjMyc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNyZWF0ZVplcm9BcnJheSgzKTsgfSxcbiAgICAndmVjNCc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNyZWF0ZVplcm9BcnJheSg0KTsgfSxcblxuICAgICdpdmVjMic6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNyZWF0ZVplcm9BcnJheSgyKTsgfSxcbiAgICAnaXZlYzMnOiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcmVhdGVaZXJvQXJyYXkoMyk7IH0sXG4gICAgJ2l2ZWM0JzogZnVuY3Rpb24gKCkgeyByZXR1cm4gY3JlYXRlWmVyb0FycmF5KDQpOyB9LFxuXG4gICAgJ21hdDInOiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcmVhdGVaZXJvQXJyYXkoNCk7IH0sXG4gICAgJ21hdDMnOiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcmVhdGVaZXJvQXJyYXkoOSk7IH0sXG4gICAgJ21hdDQnOiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcmVhdGVaZXJvQXJyYXkoMTYpOyB9LFxuXG4gICAgJ2FycmF5JzogZnVuY3Rpb24gKCkgeyByZXR1cm4gW107IH1cbn07XG5cbnZhciBhdHRyaWJ1dGVTZW1hbnRpY3MgPSBbXG4gICAgJ1BPU0lUSU9OJyxcbiAgICAnTk9STUFMJyxcbiAgICAnQklOT1JNQUwnLFxuICAgICdUQU5HRU5UJyxcbiAgICAnVEVYQ09PUkQnLFxuICAgICdURVhDT09SRF8wJyxcbiAgICAnVEVYQ09PUkRfMScsXG4gICAgJ0NPTE9SJyxcbiAgICAvLyBTa2lubmluZ1xuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9ibG9iL21hc3Rlci9zcGVjaWZpY2F0aW9uL1JFQURNRS5tZCNzZW1hbnRpY3NcbiAgICAnSk9JTlQnLFxuICAgICdXRUlHSFQnXG5dO1xudmFyIHVuaWZvcm1TZW1hbnRpY3MgPSBbXG4gICAgJ1NLSU5fTUFUUklYJyxcbiAgICAvLyBJbmZvcm1hdGlvbiBhYm91dCB2aWV3cG9ydFxuICAgICdWSUVXUE9SVF9TSVpFJyxcbiAgICAnVklFV1BPUlQnLFxuICAgICdERVZJQ0VQSVhFTFJBVElPJyxcbiAgICAvLyBXaW5kb3cgc2l6ZSBmb3Igd2luZG93IHJlbGF0aXZlIGNvb3JkaW5hdGVcbiAgICAvLyBodHRwczovL3d3dy5vcGVuZ2wub3JnL3Nkay9kb2NzL21hbi9odG1sL2dsX0ZyYWdDb29yZC54aHRtbFxuICAgICdXSU5ET1dfU0laRScsXG4gICAgLy8gSW5mb21hdGlvbiBhYm91dCBjYW1lcmFcbiAgICAnTkVBUicsXG4gICAgJ0ZBUicsXG4gICAgLy8gVGltZVxuICAgICdUSU1FJ1xuXTtcbnZhciBtYXRyaXhTZW1hbnRpY3MgPSBbXG4gICAgJ1dPUkxEJyxcbiAgICAnVklFVycsXG4gICAgJ1BST0pFQ1RJT04nLFxuICAgICdXT1JMRFZJRVcnLFxuICAgICdWSUVXUFJPSkVDVElPTicsXG4gICAgJ1dPUkxEVklFV1BST0pFQ1RJT04nLFxuICAgICdXT1JMRElOVkVSU0UnLFxuICAgICdWSUVXSU5WRVJTRScsXG4gICAgJ1BST0pFQ1RJT05JTlZFUlNFJyxcbiAgICAnV09STERWSUVXSU5WRVJTRScsXG4gICAgJ1ZJRVdQUk9KRUNUSU9OSU5WRVJTRScsXG4gICAgJ1dPUkxEVklFV1BST0pFQ1RJT05JTlZFUlNFJyxcbiAgICAnV09STERUUkFOU1BPU0UnLFxuICAgICdWSUVXVFJBTlNQT1NFJyxcbiAgICAnUFJPSkVDVElPTlRSQU5TUE9TRScsXG4gICAgJ1dPUkxEVklFV1RSQU5TUE9TRScsXG4gICAgJ1ZJRVdQUk9KRUNUSU9OVFJBTlNQT1NFJyxcbiAgICAnV09STERWSUVXUFJPSkVDVElPTlRSQU5TUE9TRScsXG4gICAgJ1dPUkxESU5WRVJTRVRSQU5TUE9TRScsXG4gICAgJ1ZJRVdJTlZFUlNFVFJBTlNQT1NFJyxcbiAgICAnUFJPSkVDVElPTklOVkVSU0VUUkFOU1BPU0UnLFxuICAgICdXT1JMRFZJRVdJTlZFUlNFVFJBTlNQT1NFJyxcbiAgICAnVklFV1BST0pFQ1RJT05JTlZFUlNFVFJBTlNQT1NFJyxcbiAgICAnV09STERWSUVXUFJPSkVDVElPTklOVkVSU0VUUkFOU1BPU0UnXG5dO1xuXG52YXIgYXR0cmlidXRlU2l6ZU1hcCA9IHtcbiAgICAvLyBXZWJHTCBkb2VzIG5vdCBzdXBwb3J0IGludGVnZXIgYXR0cmlidXRlc1xuICAgICd2ZWM0JzogNCxcbiAgICAndmVjMyc6IDMsXG4gICAgJ3ZlYzInOiAyLFxuICAgICdmbG9hdCc6IDFcbn07XG5cblxudmFyIHNoYWRlcklEQ2FjaGUgPSB7fTtcbnZhciBzaGFkZXJDb2RlQ2FjaGUgPSB7fTtcblxuZnVuY3Rpb24gZ2V0U2hhZGVySUQodmVydGV4LCBmcmFnbWVudCkge1xuICAgIHZhciBrZXkgPSAndmVydGV4OicgKyB2ZXJ0ZXggKyAnZnJhZ21lbnQ6JyArIGZyYWdtZW50O1xuICAgIGlmIChzaGFkZXJJRENhY2hlW2tleV0pIHtcbiAgICAgICAgcmV0dXJuIHNoYWRlcklEQ2FjaGVba2V5XTtcbiAgICB9XG4gICAgdmFyIGlkID0gdXRpbC5nZW5HVUlEKCk7XG4gICAgc2hhZGVySURDYWNoZVtrZXldID0gaWQ7XG5cbiAgICBzaGFkZXJDb2RlQ2FjaGVbaWRdID0ge1xuICAgICAgICB2ZXJ0ZXg6IHZlcnRleCxcbiAgICAgICAgZnJhZ21lbnQ6IGZyYWdtZW50XG4gICAgfTtcblxuICAgIHJldHVybiBpZDtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQ29tbWVudChjb2RlKSB7XG4gICAgcmV0dXJuIGNvZGUucmVwbGFjZSgvWyBcXHRdKlxcL1xcLy4qXFxuL2csICcnICkgICAvLyByZW1vdmUgLy9cbiAgICAgICAgLnJlcGxhY2UoL1sgXFx0XSpcXC9cXCpbXFxzXFxTXSo/XFwqXFwvL2csICcnICk7IC8vIHJlbW92ZSAvKiAqL1xufVxuXG5mdW5jdGlvbiBsb2dTeW50YXhFcnJvcigpIHtcbiAgICBjb25zb2xlLmVycm9yKCdXcm9uZyB1bmlmb3JtL2F0dHJpYnV0ZXMgc3ludGF4Jyk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlRGVjbGFyYXRpb25zKHR5cGUsIGxpbmUpIHtcbiAgICB2YXIgc3BlcmF0b3JzUmVnZXhwID0gL1ssPVxcKFxcKTpdLztcbiAgICB2YXIgdG9rZW5zID0gbGluZVxuICAgICAgICAvLyBDb252ZXJ0IGBzeW1ib2w6IFsxLDIsM11gIHRvIGBzeW1ib2w6IHZlYzMoMSwyLDMpYFxuICAgICAgICAucmVwbGFjZSgvOlxccypcXFtcXHMqKC4qKVxccypcXF0vZywgJz0nICsgdHlwZSArICcoJDEpJylcbiAgICAgICAgLnJlcGxhY2UoL1xccysvZywgJycpXG4gICAgICAgIC5zcGxpdCgvKD89Wyw9XFwoXFwpOl0pL2cpO1xuXG4gICAgdmFyIG5ld1Rva2VucyA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0b2tlbnNbaV0ubWF0Y2goc3BlcmF0b3JzUmVnZXhwKSkge1xuICAgICAgICAgICAgbmV3VG9rZW5zLnB1c2goXG4gICAgICAgICAgICAgICAgdG9rZW5zW2ldLmNoYXJBdCgwKSxcbiAgICAgICAgICAgICAgICB0b2tlbnNbaV0uc2xpY2UoMSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBuZXdUb2tlbnMucHVzaCh0b2tlbnNbaV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRva2VucyA9IG5ld1Rva2VucztcblxuICAgIHZhciBUWVBFX1NZTUJPTCA9IDA7XG4gICAgdmFyIFRZUEVfQVNTSUdOID0gMTtcbiAgICB2YXIgVFlQRV9WRUMgPSAyO1xuICAgIHZhciBUWVBFX0FSUiA9IDM7XG4gICAgdmFyIFRZUEVfU0VNQU5USUMgPSA0O1xuICAgIHZhciBUWVBFX05PUk1BTCA9IDU7XG5cbiAgICB2YXIgb3BUeXBlID0gVFlQRV9TWU1CT0w7XG4gICAgdmFyIGRlY2xhcmF0aW9ucyA9IHt9O1xuICAgIHZhciBkZWNsYXJhdGlvblZhbHVlID0gbnVsbDtcbiAgICB2YXIgY3VycmVudERlY2xhcmF0aW9uO1xuXG4gICAgYWRkU3ltYm9sKHRva2Vuc1swXSk7XG5cbiAgICBmdW5jdGlvbiBhZGRTeW1ib2woc3ltYm9sKSB7XG4gICAgICAgIGlmICghc3ltYm9sKSB7XG4gICAgICAgICAgICBsb2dTeW50YXhFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhcnJSZXN1bHQgPSBzeW1ib2wubWF0Y2goL1xcWyguKj8pXFxdLyk7XG4gICAgICAgIGN1cnJlbnREZWNsYXJhdGlvbiA9IHN5bWJvbC5yZXBsYWNlKC9cXFsoLio/KVxcXS8sICcnKTtcbiAgICAgICAgZGVjbGFyYXRpb25zW2N1cnJlbnREZWNsYXJhdGlvbl0gPSB7fTtcbiAgICAgICAgaWYgKGFyclJlc3VsdCkge1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zW2N1cnJlbnREZWNsYXJhdGlvbl0uaXNBcnJheSA9IHRydWU7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnNbY3VycmVudERlY2xhcmF0aW9uXS5hcnJheVNpemUgPSBhcnJSZXN1bHRbMV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV07XG4gICAgICAgIGlmICghdG9rZW4pIHsgICAvLyBFbXB0eSB0b2tlbjtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0b2tlbiA9PT0gJz0nKSB7XG4gICAgICAgICAgICBpZiAob3BUeXBlICE9PSBUWVBFX1NZTUJPTFxuICAgICAgICAgICAgJiYgb3BUeXBlICE9PSBUWVBFX0FSUikge1xuICAgICAgICAgICAgICAgIGxvZ1N5bnRheEVycm9yKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcFR5cGUgPSBUWVBFX0FTU0lHTjtcblxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodG9rZW4gPT09ICc6Jykge1xuICAgICAgICAgICAgb3BUeXBlID0gVFlQRV9TRU1BTlRJQztcblxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodG9rZW4gPT09ICcsJykge1xuICAgICAgICAgICAgaWYgKG9wVHlwZSA9PT0gVFlQRV9WRUMpIHtcbiAgICAgICAgICAgICAgICBpZiAoIShkZWNsYXJhdGlvblZhbHVlIGluc3RhbmNlb2YgQXJyYXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ1N5bnRheEVycm9yKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkZWNsYXJhdGlvblZhbHVlLnB1c2goK3Rva2Vuc1srK2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG9wVHlwZSA9IFRZUEVfTk9STUFMO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0b2tlbiA9PT0gJyknKSB7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnNbY3VycmVudERlY2xhcmF0aW9uXS52YWx1ZSA9IG5ldyB2ZW5kb3IuRmxvYXQzMkFycmF5KGRlY2xhcmF0aW9uVmFsdWUpO1xuICAgICAgICAgICAgZGVjbGFyYXRpb25WYWx1ZSA9IG51bGw7XG4gICAgICAgICAgICBvcFR5cGUgPSBUWVBFX05PUk1BTDtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRva2VuID09PSAnKCcpIHtcbiAgICAgICAgICAgIGlmIChvcFR5cGUgIT09IFRZUEVfVkVDKSB7XG4gICAgICAgICAgICAgICAgbG9nU3ludGF4RXJyb3IoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghKGRlY2xhcmF0aW9uVmFsdWUgaW5zdGFuY2VvZiBBcnJheSkpIHtcbiAgICAgICAgICAgICAgICBsb2dTeW50YXhFcnJvcigpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVjbGFyYXRpb25WYWx1ZS5wdXNoKCt0b2tlbnNbKytpXSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0b2tlbi5pbmRleE9mKCd2ZWMnKSA+PSAwKSB7XG4gICAgICAgICAgICBpZiAob3BUeXBlICE9PSBUWVBFX0FTU0lHTlxuICAgICAgICAgICAgLy8gQ29tcGF0aXRhYmxlIHdpdGggb2xkIHN5bnRheCBgc3ltYm9sOiBbMSwyLDNdYFxuICAgICAgICAgICAgJiYgb3BUeXBlICE9PSBUWVBFX1NFTUFOVElDKSB7XG4gICAgICAgICAgICAgICAgbG9nU3ludGF4RXJyb3IoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wVHlwZSA9IFRZUEVfVkVDO1xuICAgICAgICAgICAgZGVjbGFyYXRpb25WYWx1ZSA9IFtdO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAob3BUeXBlID09PSBUWVBFX0FTU0lHTikge1xuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdib29sJykge1xuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uc1tjdXJyZW50RGVjbGFyYXRpb25dLnZhbHVlID0gdG9rZW4gPT09ICd0cnVlJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uc1tjdXJyZW50RGVjbGFyYXRpb25dLnZhbHVlID0gcGFyc2VGbG9hdCh0b2tlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWNsYXJhdGlvblZhbHVlID0gbnVsbDtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG9wVHlwZSA9PT0gVFlQRV9TRU1BTlRJQykge1xuICAgICAgICAgICAgdmFyIHNlbWFudGljID0gdG9rZW47XG4gICAgICAgICAgICBpZiAoYXR0cmlidXRlU2VtYW50aWNzLmluZGV4T2Yoc2VtYW50aWMpID49IDBcbiAgICAgICAgICAgICAgICB8fCB1bmlmb3JtU2VtYW50aWNzLmluZGV4T2Yoc2VtYW50aWMpID49IDBcbiAgICAgICAgICAgICAgICB8fCBtYXRyaXhTZW1hbnRpY3MuaW5kZXhPZihzZW1hbnRpYykgPj0gMFxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgZGVjbGFyYXRpb25zW2N1cnJlbnREZWNsYXJhdGlvbl0uc2VtYW50aWMgPSBzZW1hbnRpYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHNlbWFudGljID09PSAnaWdub3JlJyB8fCBzZW1hbnRpYyA9PT0gJ3VuY29uZmlndXJhYmxlJykge1xuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uc1tjdXJyZW50RGVjbGFyYXRpb25dLmlnbm9yZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBUcnkgdG8gcGFyc2UgYXMgYSBkZWZhdWx0IHR2YWx1ZS5cbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gJ2Jvb2wnKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uc1tjdXJyZW50RGVjbGFyYXRpb25dLnZhbHVlID0gc2VtYW50aWMgPT09ICd0cnVlJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uc1tjdXJyZW50RGVjbGFyYXRpb25dLnZhbHVlID0gcGFyc2VGbG9hdChzZW1hbnRpYyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB0cmVhdCBhcyBzeW1ib2wuXG4gICAgICAgIGFkZFN5bWJvbCh0b2tlbik7XG4gICAgICAgIG9wVHlwZSA9IFRZUEVfU1lNQk9MO1xuICAgIH1cblxuICAgIHJldHVybiBkZWNsYXJhdGlvbnM7XG59XG5cblxuLyoqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIGNsYXkuY29yZS5CYXNlXG4gKiBAYWxpYXMgY2xheS5TaGFkZXJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2ZXJ0ZXhcbiAqIEBwYXJhbSB7c3RyaW5nfSBmcmFnbWVudFxuICogQGV4YW1wbGVcbiAqIC8vIENyZWF0ZSBhIHBob25nIHNoYWRlclxuICogdmFyIHNoYWRlciA9IG5ldyBjbGF5LlNoYWRlcihcbiAqICAgICAgY2xheS5TaGFkZXIuc291cmNlKCdjbGF5LnN0YW5kYXJkLnZlcnRleCcpLFxuICogICAgICBjbGF5LlNoYWRlci5zb3VyY2UoJ2NsYXkuc3RhbmRhcmQuZnJhZ21lbnQnKVxuICogKTtcbiAqL1xuZnVuY3Rpb24gU2hhZGVyKHZlcnRleCwgZnJhZ21lbnQpIHtcbiAgICAvLyBGaXJzdCBhcmd1bWVudCBjYW4gYmUgeyB2ZXJ0ZXgsIGZyYWdtZW50IH1cbiAgICBpZiAodHlwZW9mIHZlcnRleCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgZnJhZ21lbnQgPSB2ZXJ0ZXguZnJhZ21lbnQ7XG4gICAgICAgIHZlcnRleCA9IHZlcnRleC52ZXJ0ZXg7XG4gICAgfVxuXG4gICAgdmVydGV4ID0gcmVtb3ZlQ29tbWVudCh2ZXJ0ZXgpO1xuICAgIGZyYWdtZW50ID0gcmVtb3ZlQ29tbWVudChmcmFnbWVudCk7XG5cbiAgICB0aGlzLl9zaGFkZXJJRCA9IGdldFNoYWRlcklEKHZlcnRleCwgZnJhZ21lbnQpO1xuXG4gICAgdGhpcy5fdmVydGV4Q29kZSA9IFNoYWRlci5wYXJzZUltcG9ydCh2ZXJ0ZXgpO1xuICAgIHRoaXMuX2ZyYWdtZW50Q29kZSA9IFNoYWRlci5wYXJzZUltcG9ydChmcmFnbWVudCk7XG5cbiAgICAvKipcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKi9cbiAgICB0aGlzLmF0dHJpYnV0ZVNlbWFudGljcyA9IHt9O1xuICAgIC8qKlxuICAgICAqIEByZWFkT25seVxuICAgICAqL1xuICAgIHRoaXMubWF0cml4U2VtYW50aWNzID0ge307XG4gICAgLyoqXG4gICAgICogQHJlYWRPbmx5XG4gICAgICovXG4gICAgdGhpcy51bmlmb3JtU2VtYW50aWNzID0ge307XG4gICAgLyoqXG4gICAgICogQHJlYWRPbmx5XG4gICAgICovXG4gICAgdGhpcy5tYXRyaXhTZW1hbnRpY0tleXMgPSBbXTtcbiAgICAvKipcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKi9cbiAgICB0aGlzLnVuaWZvcm1UZW1wbGF0ZXMgPSB7fTtcbiAgICAvKipcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKi9cbiAgICB0aGlzLmF0dHJpYnV0ZXMgPSB7fTtcbiAgICAvKipcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKi9cbiAgICB0aGlzLnRleHR1cmVzID0ge307XG4gICAgLyoqXG4gICAgICogQHJlYWRPbmx5XG4gICAgICovXG4gICAgdGhpcy52ZXJ0ZXhEZWZpbmVzID0ge307XG4gICAgLyoqXG4gICAgICogQHJlYWRPbmx5XG4gICAgICovXG4gICAgdGhpcy5mcmFnbWVudERlZmluZXMgPSB7fTtcblxuICAgIHRoaXMuX3BhcnNlQXR0cmlidXRlcygpO1xuICAgIHRoaXMuX3BhcnNlVW5pZm9ybXMoKTtcbiAgICB0aGlzLl9wYXJzZURlZmluZXMoKTtcbn1cblxuU2hhZGVyLnByb3RvdHlwZSA9IHtcblxuICAgIGNvbnN0cnVjdG9yOiBTaGFkZXIsXG5cbiAgICAvLyBDcmVhdGUgYSBuZXcgdW5pZm9ybSBpbnN0YW5jZSBmb3IgbWF0ZXJpYWxcbiAgICBjcmVhdGVVbmlmb3JtczogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdW5pZm9ybXMgPSB7fTtcblxuICAgICAgICBmb3IgKHZhciBzeW1ib2wgaW4gdGhpcy51bmlmb3JtVGVtcGxhdGVzKXtcbiAgICAgICAgICAgIHZhciB1bmlmb3JtVHBsID0gdGhpcy51bmlmb3JtVGVtcGxhdGVzW3N5bWJvbF07XG4gICAgICAgICAgICB1bmlmb3Jtc1tzeW1ib2xdID0ge1xuICAgICAgICAgICAgICAgIHR5cGU6IHVuaWZvcm1UcGwudHlwZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdW5pZm9ybVRwbC52YWx1ZSgpXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHVuaWZvcm1zO1xuICAgIH0sXG5cbiAgICBfcGFyc2VJbXBvcnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fdmVydGV4Q29kZSA9IFNoYWRlci5wYXJzZUltcG9ydCh0aGlzLnZlcnRleCk7XG4gICAgICAgIHRoaXMuX2ZyYWdtZW50Q29kZSA9IFNoYWRlci5wYXJzZUltcG9ydCh0aGlzLmZyYWdtZW50KTtcbiAgICB9LFxuXG4gICAgX2FkZFNlbWFudGljVW5pZm9ybTogZnVuY3Rpb24gKHN5bWJvbCwgdW5pZm9ybVR5cGUsIHNlbWFudGljKSB7XG4gICAgICAgIC8vIFRoaXMgY2FzZSBpcyBvbmx5IGZvciBTS0lOX01BVFJJWFxuICAgICAgICAvLyBUT0RPXG4gICAgICAgIGlmIChhdHRyaWJ1dGVTZW1hbnRpY3MuaW5kZXhPZihzZW1hbnRpYykgPj0gMCkge1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVTZW1hbnRpY3Nbc2VtYW50aWNdID0ge1xuICAgICAgICAgICAgICAgIHN5bWJvbDogc3ltYm9sLFxuICAgICAgICAgICAgICAgIHR5cGU6IHVuaWZvcm1UeXBlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG1hdHJpeFNlbWFudGljcy5pbmRleE9mKHNlbWFudGljKSA+PSAwKSB7XG4gICAgICAgICAgICB2YXIgaXNUcmFuc3Bvc2UgPSBmYWxzZTtcbiAgICAgICAgICAgIHZhciBzZW1hbnRpY05vVHJhbnNwb3NlID0gc2VtYW50aWM7XG4gICAgICAgICAgICBpZiAoc2VtYW50aWMubWF0Y2goL1RSQU5TUE9TRSQvKSkge1xuICAgICAgICAgICAgICAgIGlzVHJhbnNwb3NlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBzZW1hbnRpY05vVHJhbnNwb3NlID0gc2VtYW50aWMuc2xpY2UoMCwgLTkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5tYXRyaXhTZW1hbnRpY3Nbc2VtYW50aWNdID0ge1xuICAgICAgICAgICAgICAgIHN5bWJvbDogc3ltYm9sLFxuICAgICAgICAgICAgICAgIHR5cGU6IHVuaWZvcm1UeXBlLFxuICAgICAgICAgICAgICAgIGlzVHJhbnNwb3NlOiBpc1RyYW5zcG9zZSxcbiAgICAgICAgICAgICAgICBzZW1hbnRpY05vVHJhbnNwb3NlOiBzZW1hbnRpY05vVHJhbnNwb3NlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVuaWZvcm1TZW1hbnRpY3MuaW5kZXhPZihzZW1hbnRpYykgPj0gMCkge1xuICAgICAgICAgICAgdGhpcy51bmlmb3JtU2VtYW50aWNzW3NlbWFudGljXSA9IHtcbiAgICAgICAgICAgICAgICBzeW1ib2w6IHN5bWJvbCxcbiAgICAgICAgICAgICAgICB0eXBlOiB1bmlmb3JtVHlwZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBfYWRkTWF0ZXJpYWxVbmlmb3JtOiBmdW5jdGlvbiAoc3ltYm9sLCB0eXBlLCB1bmlmb3JtVHlwZSwgZGVmYXVsdFZhbHVlRnVuYywgaXNBcnJheSwgbWF0ZXJpYWxVbmlmb3Jtcykge1xuICAgICAgICBtYXRlcmlhbFVuaWZvcm1zW3N5bWJvbF0gPSB7XG4gICAgICAgICAgICB0eXBlOiB1bmlmb3JtVHlwZSxcbiAgICAgICAgICAgIHZhbHVlOiBpc0FycmF5ID8gdW5pZm9ybVZhbHVlQ29uc3RydWN0b3JbJ2FycmF5J10gOiAoZGVmYXVsdFZhbHVlRnVuYyB8fCB1bmlmb3JtVmFsdWVDb25zdHJ1Y3Rvclt0eXBlXSksXG4gICAgICAgICAgICBzZW1hbnRpYzogbnVsbFxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICBfcGFyc2VVbmlmb3JtczogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdW5pZm9ybXMgPSB7fTtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICB2YXIgc2hhZGVyVHlwZSA9ICd2ZXJ0ZXgnO1xuICAgICAgICB0aGlzLl91bmlmb3JtTGlzdCA9IFtdO1xuXG4gICAgICAgIHRoaXMuX3ZlcnRleENvZGUgPSB0aGlzLl92ZXJ0ZXhDb2RlLnJlcGxhY2UodW5pZm9ybVJlZ2V4LCBfdW5pZm9ybVBhcnNlcik7XG4gICAgICAgIHNoYWRlclR5cGUgPSAnZnJhZ21lbnQnO1xuICAgICAgICB0aGlzLl9mcmFnbWVudENvZGUgPSB0aGlzLl9mcmFnbWVudENvZGUucmVwbGFjZSh1bmlmb3JtUmVnZXgsIF91bmlmb3JtUGFyc2VyKTtcblxuICAgICAgICBzZWxmLm1hdHJpeFNlbWFudGljS2V5cyA9IE9iamVjdC5rZXlzKHRoaXMubWF0cml4U2VtYW50aWNzKTtcblxuICAgICAgICBmdW5jdGlvbiBtYWtlRGVmYXVsdFZhbHVlRnVuYyh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlICE9IG51bGwgPyBmdW5jdGlvbiAoKSB7IHJldHVybiB2YWx1ZTsgfSA6IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBfdW5pZm9ybVBhcnNlcihzdHIsIHR5cGUsIGNvbnRlbnQpIHtcbiAgICAgICAgICAgIHZhciBkZWNsYXJlZFVuaWZvcm1zID0gcGFyc2VEZWNsYXJhdGlvbnModHlwZSwgY29udGVudCk7XG4gICAgICAgICAgICB2YXIgdW5pZm9ybU1haW5TdHIgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIHN5bWJvbCBpbiBkZWNsYXJlZFVuaWZvcm1zKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgdW5pZm9ybUluZm8gPSBkZWNsYXJlZFVuaWZvcm1zW3N5bWJvbF07XG4gICAgICAgICAgICAgICAgdmFyIHNlbWFudGljID0gdW5pZm9ybUluZm8uc2VtYW50aWM7XG4gICAgICAgICAgICAgICAgdmFyIHRtcFN0ciA9IHN5bWJvbDtcbiAgICAgICAgICAgICAgICB2YXIgdW5pZm9ybVR5cGUgPSB1bmlmb3JtVHlwZU1hcFt0eXBlXTtcbiAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdFZhbHVlRnVuYyA9IG1ha2VEZWZhdWx0VmFsdWVGdW5jKGRlY2xhcmVkVW5pZm9ybXNbc3ltYm9sXS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKGRlY2xhcmVkVW5pZm9ybXNbc3ltYm9sXS5pc0FycmF5KSB7XG4gICAgICAgICAgICAgICAgICAgIHRtcFN0ciArPSAnWycgKyBkZWNsYXJlZFVuaWZvcm1zW3N5bWJvbF0uYXJyYXlTaXplICsgJ10nO1xuICAgICAgICAgICAgICAgICAgICB1bmlmb3JtVHlwZSArPSAndic7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdW5pZm9ybU1haW5TdHIucHVzaCh0bXBTdHIpO1xuXG4gICAgICAgICAgICAgICAgc2VsZi5fdW5pZm9ybUxpc3QucHVzaChzeW1ib2wpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCF1bmlmb3JtSW5mby5pZ25vcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdzYW1wbGVyMkQnIHx8IHR5cGUgPT09ICdzYW1wbGVyQ3ViZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRleHR1cmUgaXMgZGVmYXVsdCBkaXNhYmxlZFxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi50ZXh0dXJlc1tzeW1ib2xdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYWRlclR5cGU6IHNoYWRlclR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChzZW1hbnRpYykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETyBTaG91bGQgbm90IGRlY2xhcmUgbXVsdGlwbGUgc3ltYm9scyBpZiBoYXZlIHNlbWFudGljLlxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fYWRkU2VtYW50aWNVbmlmb3JtKHN5bWJvbCwgdW5pZm9ybVR5cGUsIHNlbWFudGljKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2FkZE1hdGVyaWFsVW5pZm9ybShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzeW1ib2wsIHR5cGUsIHVuaWZvcm1UeXBlLCBkZWZhdWx0VmFsdWVGdW5jLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlY2xhcmVkVW5pZm9ybXNbc3ltYm9sXS5pc0FycmF5LCB1bmlmb3Jtc1xuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB1bmlmb3JtTWFpblN0ci5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgPyAndW5pZm9ybSAnICsgdHlwZSArICcgJyArIHVuaWZvcm1NYWluU3RyLmpvaW4oJywnKSArICc7XFxuJyA6ICcnO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy51bmlmb3JtVGVtcGxhdGVzID0gdW5pZm9ybXM7XG4gICAgfSxcblxuICAgIF9wYXJzZUF0dHJpYnV0ZXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSB7fTtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICB0aGlzLl92ZXJ0ZXhDb2RlID0gdGhpcy5fdmVydGV4Q29kZS5yZXBsYWNlKGF0dHJpYnV0ZVJlZ2V4LCBfYXR0cmlidXRlUGFyc2VyKTtcblxuICAgICAgICBmdW5jdGlvbiBfYXR0cmlidXRlUGFyc2VyKHN0ciwgdHlwZSwgY29udGVudCkge1xuICAgICAgICAgICAgdmFyIGRlY2xhcmVkQXR0cmlidXRlcyA9IHBhcnNlRGVjbGFyYXRpb25zKHR5cGUsIGNvbnRlbnQpO1xuXG4gICAgICAgICAgICB2YXIgc2l6ZSA9IGF0dHJpYnV0ZVNpemVNYXBbdHlwZV0gfHwgMTtcbiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVNYWluU3RyID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBzeW1ib2wgaW4gZGVjbGFyZWRBdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNlbWFudGljID0gZGVjbGFyZWRBdHRyaWJ1dGVzW3N5bWJvbF0uc2VtYW50aWM7XG4gICAgICAgICAgICAgICAgYXR0cmlidXRlc1tzeW1ib2xdID0ge1xuICAgICAgICAgICAgICAgICAgICAvLyBUT0RPIENhbiBvbmx5IGJlIGZsb2F0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdmbG9hdCcsXG4gICAgICAgICAgICAgICAgICAgIHNpemU6IHNpemUsXG4gICAgICAgICAgICAgICAgICAgIHNlbWFudGljOiBzZW1hbnRpYyB8fCBudWxsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAvLyBUT0RPIFNob3VsZCBub3QgZGVjbGFyZSBtdWx0aXBsZSBzeW1ib2xzIGlmIGhhdmUgc2VtYW50aWMuXG4gICAgICAgICAgICAgICAgaWYgKHNlbWFudGljKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVTZW1hbnRpY3MuaW5kZXhPZihzZW1hbnRpYykgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua293biBzZW1hbnRpYyBcIicgKyBzZW1hbnRpYyArICdcIicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5hdHRyaWJ1dGVTZW1hbnRpY3Nbc2VtYW50aWNdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN5bWJvbDogc3ltYm9sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHR5cGVcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXR0cmlidXRlTWFpblN0ci5wdXNoKHN5bWJvbCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiAnYXR0cmlidXRlICcgKyB0eXBlICsgJyAnICsgYXR0cmlidXRlTWFpblN0ci5qb2luKCcsJykgKyAnO1xcbic7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzO1xuICAgIH0sXG5cbiAgICBfcGFyc2VEZWZpbmVzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgdmFyIHNoYWRlclR5cGUgPSAndmVydGV4JztcbiAgICAgICAgdGhpcy5fdmVydGV4Q29kZSA9IHRoaXMuX3ZlcnRleENvZGUucmVwbGFjZShkZWZpbmVSZWdleCwgX2RlZmluZVBhcnNlcik7XG4gICAgICAgIHNoYWRlclR5cGUgPSAnZnJhZ21lbnQnO1xuICAgICAgICB0aGlzLl9mcmFnbWVudENvZGUgPSB0aGlzLl9mcmFnbWVudENvZGUucmVwbGFjZShkZWZpbmVSZWdleCwgX2RlZmluZVBhcnNlcik7XG5cbiAgICAgICAgZnVuY3Rpb24gX2RlZmluZVBhcnNlcihzdHIsIHN5bWJvbCwgdmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBkZWZpbmVzID0gc2hhZGVyVHlwZSA9PT0gJ3ZlcnRleCcgPyBzZWxmLnZlcnRleERlZmluZXMgOiBzZWxmLmZyYWdtZW50RGVmaW5lcztcbiAgICAgICAgICAgIGlmICghZGVmaW5lc1tzeW1ib2xdKSB7IC8vIEhhdmVuJ3QgYmVlbiBkZWZpbmVkIGJ5IHVzZXJcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT09ICdmYWxzZScpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lc1tzeW1ib2xdID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlID09PSAndHJ1ZScpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lc1tzeW1ib2xdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmluZXNbc3ltYm9sXSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiBjYW4gcGFyc2UgdG8gZmxvYXRcbiAgICAgICAgICAgICAgICAgICAgICAgID8gKGlzTmFOKHBhcnNlRmxvYXQodmFsdWUpKSA/IHZhbHVlLnRyaW0oKSA6IHBhcnNlRmxvYXQodmFsdWUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDbG9uZSBhIG5ldyBzaGFkZXJcbiAgICAgKiBAcmV0dXJuIHtjbGF5LlNoYWRlcn1cbiAgICAgKi9cbiAgICBjbG9uZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29kZSA9IHNoYWRlckNvZGVDYWNoZVt0aGlzLl9zaGFkZXJJRF07XG4gICAgICAgIHZhciBzaGFkZXIgPSBuZXcgU2hhZGVyKGNvZGUudmVydGV4LCBjb2RlLmZyYWdtZW50KTtcbiAgICAgICAgcmV0dXJuIHNoYWRlcjtcbiAgICB9XG59O1xuXG5pZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNoYWRlci5wcm90b3R5cGUsICdzaGFkZXJJRCcsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2hhZGVySUQ7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU2hhZGVyLnByb3RvdHlwZSwgJ3ZlcnRleCcsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdmVydGV4Q29kZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTaGFkZXIucHJvdG90eXBlLCAnZnJhZ21lbnQnLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2ZyYWdtZW50Q29kZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTaGFkZXIucHJvdG90eXBlLCAndW5pZm9ybXMnLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3VuaWZvcm1MaXN0O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbnZhciBpbXBvcnRSZWdleCA9IC8oQGltcG9ydClcXHMqKFswLTlhLXpBLVpfXFwtXFwuXSopL2c7XG5TaGFkZXIucGFyc2VJbXBvcnQgPSBmdW5jdGlvbiAoc2hhZGVyU3RyKSB7XG4gICAgc2hhZGVyU3RyID0gc2hhZGVyU3RyLnJlcGxhY2UoaW1wb3J0UmVnZXgsIGZ1bmN0aW9uIChzdHIsIGltcG9ydFN5bWJvbCwgaW1wb3J0TmFtZSkge1xuICAgICAgICB2YXIgc3RyID0gU2hhZGVyLnNvdXJjZShpbXBvcnROYW1lKTtcbiAgICAgICAgaWYgKHN0cikge1xuICAgICAgICAgICAgLy8gUmVjdXJzaXZlbHkgcGFyc2VcbiAgICAgICAgICAgIHJldHVybiBTaGFkZXIucGFyc2VJbXBvcnQoc3RyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1NoYWRlciBjaHVuayBcIicgKyBpbXBvcnROYW1lICsgJ1wiIG5vdCBleGlzdGVkIGluIGxpYnJhcnknKTtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBzaGFkZXJTdHI7XG59O1xuXG52YXIgZXhwb3J0UmVnZXggPSAvKEBleHBvcnQpXFxzKihbMC05YS16QS1aX1xcLVxcLl0qKVxccypcXG4oW1xcc1xcU10qPylAZW5kL2c7XG5cbi8qKlxuICogSW1wb3J0IHNoYWRlciBzb3VyY2VcbiAqIEBwYXJhbSAge3N0cmluZ30gc2hhZGVyU3RyXG4gKiBAbWVtYmVyT2YgY2xheS5TaGFkZXJcbiAqL1xuU2hhZGVyWydpbXBvcnQnXSA9IGZ1bmN0aW9uIChzaGFkZXJTdHIpIHtcbiAgICBzaGFkZXJTdHIucmVwbGFjZShleHBvcnRSZWdleCwgZnVuY3Rpb24gKHN0ciwgZXhwb3J0U3ltYm9sLCBleHBvcnROYW1lLCBjb2RlKSB7XG4gICAgICAgIHZhciBjb2RlID0gY29kZS5yZXBsYWNlKC8oXltcXHNcXHRcXHhhMFxcdTMwMDBdKyl8KFtcXHUzMDAwXFx4YTBcXHNcXHRdK1xceDI0KS9nLCAnJyk7XG4gICAgICAgIGlmIChjb2RlKSB7XG4gICAgICAgICAgICB2YXIgcGFydHMgPSBleHBvcnROYW1lLnNwbGl0KCcuJyk7XG4gICAgICAgICAgICB2YXIgb2JqID0gU2hhZGVyLmNvZGVzO1xuICAgICAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAgICAgdmFyIGtleTtcbiAgICAgICAgICAgIHdoaWxlIChpIDwgcGFydHMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIGtleSA9IHBhcnRzW2krK107XG4gICAgICAgICAgICAgICAgaWYgKCFvYmpba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICBvYmpba2V5XSA9IHt9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBvYmogPSBvYmpba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGtleSA9IHBhcnRzW2ldO1xuICAgICAgICAgICAgb2JqW2tleV0gPSBjb2RlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb2RlO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiBMaWJyYXJ5IHRvIHN0b3JlIGFsbCB0aGUgbG9hZGVkIHNoYWRlciBjb2Rlc1xuICogQHR5cGUge09iamVjdH1cbiAqIEByZWFkT25seVxuICogQG1lbWJlck9mIGNsYXkuU2hhZGVyXG4gKi9cblNoYWRlci5jb2RlcyA9IHt9O1xuXG4vKipcbiAqIEdldCBzaGFkZXIgc291cmNlXG4gKiBAcGFyYW0gIHtzdHJpbmd9IG5hbWVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuU2hhZGVyLnNvdXJjZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdmFyIHBhcnRzID0gbmFtZS5zcGxpdCgnLicpO1xuICAgIHZhciBvYmogPSBTaGFkZXIuY29kZXM7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChvYmogJiYgaSA8IHBhcnRzLmxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0gcGFydHNbaSsrXTtcbiAgICAgICAgb2JqID0gb2JqW2tleV07XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBGSVhNRSBVc2UgZGVmYXVsdCBpbnN0ZWFkXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1NoYWRlciBcIicgKyBuYW1lICsgJ1wiIG5vdCBleGlzdGVkIGluIGxpYnJhcnknKTtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gb2JqO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2hhZGVyO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvU2hhZGVyLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\n\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = Object(__WEBPACK_IMPORTED_MODULE_0__common__[\"c\" /* GLMAT_RANDOM */])() * 2.0 * Math.PI;\n    var z = (Object(__WEBPACK_IMPORTED_MODULE_0__common__[\"c\" /* GLMAT_RANDOM */])() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n      //Translate point to the origin\n      p[0] = a[0] - b[0];\n      p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n      //perform rotation\n      r[0] = p[0];\n      r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n      r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n      //translate to correct position\n      out[0] = r[0] + b[0];\n      out[1] = r[1] + b[1];\n      out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n    var p = [], r=[];\n    //Translate point to the origin\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n    //perform rotation\n    r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n    r[1] = p[1];\n    r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n    //translate to correct position\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n    var p = [], r=[];\n    //Translate point to the origin\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n    //perform rotation\n    r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n    r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n    r[2] = p[2];\n\n    //translate to correct position\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n\n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n\n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n\n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n\n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (vec3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9nbG1hdHJpeC92ZWMzLmpzP2YxNmUiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKiBDb3B5cmlnaHQgKGMpIDIwMTMsIEJyYW5kb24gSm9uZXMsIENvbGluIE1hY0tlbnppZSBJVi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cblxuUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0IG1vZGlmaWNhdGlvbixcbmFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDpcblxuICAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpc1xuICAgIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLlxuICAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAgICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uXG4gICAgYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG5cblRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgXCJBUyBJU1wiIEFORFxuQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRURcbldBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkVcbkRJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgSE9MREVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SXG5BTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVNcbihJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUztcbkxPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTlxuQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlRcbihJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTXG5TT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4gKi9cblxuaW1wb3J0IHsgR0xNQVRfUkFORE9NLCBHTE1BVF9BUlJBWV9UWVBFIH0gZnJvbSAnLi9jb21tb24nO1xuXG4vKipcbiAqIEBjbGFzcyAzIERpbWVuc2lvbmFsIFZlY3RvclxuICogQG5hbWUgdmVjM1xuICovXG5cbnZhciB2ZWMzID0ge307XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldywgZW1wdHkgdmVjM1xuICpcbiAqIEByZXR1cm5zIHt2ZWMzfSBhIG5ldyAzRCB2ZWN0b3JcbiAqL1xudmVjMy5jcmVhdGUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgb3V0ID0gbmV3IEdMTUFUX0FSUkFZX1RZUEUoMyk7XG4gICAgb3V0WzBdID0gMDtcbiAgICBvdXRbMV0gPSAwO1xuICAgIG91dFsyXSA9IDA7XG4gICAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyB2ZWMzIGluaXRpYWxpemVkIHdpdGggdmFsdWVzIGZyb20gYW4gZXhpc3RpbmcgdmVjdG9yXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBhIHZlY3RvciB0byBjbG9uZVxuICogQHJldHVybnMge3ZlYzN9IGEgbmV3IDNEIHZlY3RvclxuICovXG52ZWMzLmNsb25lID0gZnVuY3Rpb24oYSkge1xuICAgIHZhciBvdXQgPSBuZXcgR0xNQVRfQVJSQVlfVFlQRSgzKTtcbiAgICBvdXRbMF0gPSBhWzBdO1xuICAgIG91dFsxXSA9IGFbMV07XG4gICAgb3V0WzJdID0gYVsyXTtcbiAgICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHZlYzMgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgZ2l2ZW4gdmFsdWVzXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHggWCBjb21wb25lbnRcbiAqIEBwYXJhbSB7TnVtYmVyfSB5IFkgY29tcG9uZW50XG4gKiBAcGFyYW0ge051bWJlcn0geiBaIGNvbXBvbmVudFxuICogQHJldHVybnMge3ZlYzN9IGEgbmV3IDNEIHZlY3RvclxuICovXG52ZWMzLmZyb21WYWx1ZXMgPSBmdW5jdGlvbih4LCB5LCB6KSB7XG4gICAgdmFyIG91dCA9IG5ldyBHTE1BVF9BUlJBWV9UWVBFKDMpO1xuICAgIG91dFswXSA9IHg7XG4gICAgb3V0WzFdID0geTtcbiAgICBvdXRbMl0gPSB6O1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIENvcHkgdGhlIHZhbHVlcyBmcm9tIG9uZSB2ZWMzIHRvIGFub3RoZXJcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IG91dCB0aGUgcmVjZWl2aW5nIHZlY3RvclxuICogQHBhcmFtIHt2ZWMzfSBhIHRoZSBzb3VyY2UgdmVjdG9yXG4gKiBAcmV0dXJucyB7dmVjM30gb3V0XG4gKi9cbnZlYzMuY29weSA9IGZ1bmN0aW9uKG91dCwgYSkge1xuICAgIG91dFswXSA9IGFbMF07XG4gICAgb3V0WzFdID0gYVsxXTtcbiAgICBvdXRbMl0gPSBhWzJdO1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFNldCB0aGUgY29tcG9uZW50cyBvZiBhIHZlYzMgdG8gdGhlIGdpdmVuIHZhbHVlc1xuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge051bWJlcn0geCBYIGNvbXBvbmVudFxuICogQHBhcmFtIHtOdW1iZXJ9IHkgWSBjb21wb25lbnRcbiAqIEBwYXJhbSB7TnVtYmVyfSB6IFogY29tcG9uZW50XG4gKiBAcmV0dXJucyB7dmVjM30gb3V0XG4gKi9cbnZlYzMuc2V0ID0gZnVuY3Rpb24ob3V0LCB4LCB5LCB6KSB7XG4gICAgb3V0WzBdID0geDtcbiAgICBvdXRbMV0gPSB5O1xuICAgIG91dFsyXSA9IHo7XG4gICAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogQWRkcyB0d28gdmVjMydzXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBvdXQgdGhlIHJlY2VpdmluZyB2ZWN0b3JcbiAqIEBwYXJhbSB7dmVjM30gYSB0aGUgZmlyc3Qgb3BlcmFuZFxuICogQHBhcmFtIHt2ZWMzfSBiIHRoZSBzZWNvbmQgb3BlcmFuZFxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLmFkZCA9IGZ1bmN0aW9uKG91dCwgYSwgYikge1xuICAgIG91dFswXSA9IGFbMF0gKyBiWzBdO1xuICAgIG91dFsxXSA9IGFbMV0gKyBiWzFdO1xuICAgIG91dFsyXSA9IGFbMl0gKyBiWzJdO1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFN1YnRyYWN0cyB2ZWN0b3IgYiBmcm9tIHZlY3RvciBhXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBvdXQgdGhlIHJlY2VpdmluZyB2ZWN0b3JcbiAqIEBwYXJhbSB7dmVjM30gYSB0aGUgZmlyc3Qgb3BlcmFuZFxuICogQHBhcmFtIHt2ZWMzfSBiIHRoZSBzZWNvbmQgb3BlcmFuZFxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLnN1YnRyYWN0ID0gZnVuY3Rpb24ob3V0LCBhLCBiKSB7XG4gICAgb3V0WzBdID0gYVswXSAtIGJbMF07XG4gICAgb3V0WzFdID0gYVsxXSAtIGJbMV07XG4gICAgb3V0WzJdID0gYVsyXSAtIGJbMl07XG4gICAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogQWxpYXMgZm9yIHtAbGluayB2ZWMzLnN1YnRyYWN0fVxuICogQGZ1bmN0aW9uXG4gKi9cbnZlYzMuc3ViID0gdmVjMy5zdWJ0cmFjdDtcblxuLyoqXG4gKiBNdWx0aXBsaWVzIHR3byB2ZWMzJ3NcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IG91dCB0aGUgcmVjZWl2aW5nIHZlY3RvclxuICogQHBhcmFtIHt2ZWMzfSBhIHRoZSBmaXJzdCBvcGVyYW5kXG4gKiBAcGFyYW0ge3ZlYzN9IGIgdGhlIHNlY29uZCBvcGVyYW5kXG4gKiBAcmV0dXJucyB7dmVjM30gb3V0XG4gKi9cbnZlYzMubXVsdGlwbHkgPSBmdW5jdGlvbihvdXQsIGEsIGIpIHtcbiAgICBvdXRbMF0gPSBhWzBdICogYlswXTtcbiAgICBvdXRbMV0gPSBhWzFdICogYlsxXTtcbiAgICBvdXRbMl0gPSBhWzJdICogYlsyXTtcbiAgICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBBbGlhcyBmb3Ige0BsaW5rIHZlYzMubXVsdGlwbHl9XG4gKiBAZnVuY3Rpb25cbiAqL1xudmVjMy5tdWwgPSB2ZWMzLm11bHRpcGx5O1xuXG4vKipcbiAqIERpdmlkZXMgdHdvIHZlYzMnc1xuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIGZpcnN0IG9wZXJhbmRcbiAqIEBwYXJhbSB7dmVjM30gYiB0aGUgc2Vjb25kIG9wZXJhbmRcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy5kaXZpZGUgPSBmdW5jdGlvbihvdXQsIGEsIGIpIHtcbiAgICBvdXRbMF0gPSBhWzBdIC8gYlswXTtcbiAgICBvdXRbMV0gPSBhWzFdIC8gYlsxXTtcbiAgICBvdXRbMl0gPSBhWzJdIC8gYlsyXTtcbiAgICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBBbGlhcyBmb3Ige0BsaW5rIHZlYzMuZGl2aWRlfVxuICogQGZ1bmN0aW9uXG4gKi9cbnZlYzMuZGl2ID0gdmVjMy5kaXZpZGU7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgbWluaW11bSBvZiB0d28gdmVjMydzXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBvdXQgdGhlIHJlY2VpdmluZyB2ZWN0b3JcbiAqIEBwYXJhbSB7dmVjM30gYSB0aGUgZmlyc3Qgb3BlcmFuZFxuICogQHBhcmFtIHt2ZWMzfSBiIHRoZSBzZWNvbmQgb3BlcmFuZFxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLm1pbiA9IGZ1bmN0aW9uKG91dCwgYSwgYikge1xuICAgIG91dFswXSA9IE1hdGgubWluKGFbMF0sIGJbMF0pO1xuICAgIG91dFsxXSA9IE1hdGgubWluKGFbMV0sIGJbMV0pO1xuICAgIG91dFsyXSA9IE1hdGgubWluKGFbMl0sIGJbMl0pO1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdGhlIG1heGltdW0gb2YgdHdvIHZlYzMnc1xuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIGZpcnN0IG9wZXJhbmRcbiAqIEBwYXJhbSB7dmVjM30gYiB0aGUgc2Vjb25kIG9wZXJhbmRcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy5tYXggPSBmdW5jdGlvbihvdXQsIGEsIGIpIHtcbiAgICBvdXRbMF0gPSBNYXRoLm1heChhWzBdLCBiWzBdKTtcbiAgICBvdXRbMV0gPSBNYXRoLm1heChhWzFdLCBiWzFdKTtcbiAgICBvdXRbMl0gPSBNYXRoLm1heChhWzJdLCBiWzJdKTtcbiAgICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBTY2FsZXMgYSB2ZWMzIGJ5IGEgc2NhbGFyIG51bWJlclxuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIHZlY3RvciB0byBzY2FsZVxuICogQHBhcmFtIHtOdW1iZXJ9IGIgYW1vdW50IHRvIHNjYWxlIHRoZSB2ZWN0b3IgYnlcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy5zY2FsZSA9IGZ1bmN0aW9uKG91dCwgYSwgYikge1xuICAgIG91dFswXSA9IGFbMF0gKiBiO1xuICAgIG91dFsxXSA9IGFbMV0gKiBiO1xuICAgIG91dFsyXSA9IGFbMl0gKiBiO1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIEFkZHMgdHdvIHZlYzMncyBhZnRlciBzY2FsaW5nIHRoZSBzZWNvbmQgb3BlcmFuZCBieSBhIHNjYWxhciB2YWx1ZVxuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIGZpcnN0IG9wZXJhbmRcbiAqIEBwYXJhbSB7dmVjM30gYiB0aGUgc2Vjb25kIG9wZXJhbmRcbiAqIEBwYXJhbSB7TnVtYmVyfSBzY2FsZSB0aGUgYW1vdW50IHRvIHNjYWxlIGIgYnkgYmVmb3JlIGFkZGluZ1xuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLnNjYWxlQW5kQWRkID0gZnVuY3Rpb24ob3V0LCBhLCBiLCBzY2FsZSkge1xuICAgIG91dFswXSA9IGFbMF0gKyAoYlswXSAqIHNjYWxlKTtcbiAgICBvdXRbMV0gPSBhWzFdICsgKGJbMV0gKiBzY2FsZSk7XG4gICAgb3V0WzJdID0gYVsyXSArIChiWzJdICogc2NhbGUpO1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIGV1Y2xpZGlhbiBkaXN0YW5jZSBiZXR3ZWVuIHR3byB2ZWMzJ3NcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIGZpcnN0IG9wZXJhbmRcbiAqIEBwYXJhbSB7dmVjM30gYiB0aGUgc2Vjb25kIG9wZXJhbmRcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IGRpc3RhbmNlIGJldHdlZW4gYSBhbmQgYlxuICovXG52ZWMzLmRpc3RhbmNlID0gZnVuY3Rpb24oYSwgYikge1xuICAgIHZhciB4ID0gYlswXSAtIGFbMF0sXG4gICAgICAgIHkgPSBiWzFdIC0gYVsxXSxcbiAgICAgICAgeiA9IGJbMl0gLSBhWzJdO1xuICAgIHJldHVybiBNYXRoLnNxcnQoeCp4ICsgeSp5ICsgeip6KTtcbn07XG5cbi8qKlxuICogQWxpYXMgZm9yIHtAbGluayB2ZWMzLmRpc3RhbmNlfVxuICogQGZ1bmN0aW9uXG4gKi9cbnZlYzMuZGlzdCA9IHZlYzMuZGlzdGFuY2U7XG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgc3F1YXJlZCBldWNsaWRpYW4gZGlzdGFuY2UgYmV0d2VlbiB0d28gdmVjMydzXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBhIHRoZSBmaXJzdCBvcGVyYW5kXG4gKiBAcGFyYW0ge3ZlYzN9IGIgdGhlIHNlY29uZCBvcGVyYW5kXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBzcXVhcmVkIGRpc3RhbmNlIGJldHdlZW4gYSBhbmQgYlxuICovXG52ZWMzLnNxdWFyZWREaXN0YW5jZSA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgeCA9IGJbMF0gLSBhWzBdLFxuICAgICAgICB5ID0gYlsxXSAtIGFbMV0sXG4gICAgICAgIHogPSBiWzJdIC0gYVsyXTtcbiAgICByZXR1cm4geCp4ICsgeSp5ICsgeip6O1xufTtcblxuLyoqXG4gKiBBbGlhcyBmb3Ige0BsaW5rIHZlYzMuc3F1YXJlZERpc3RhbmNlfVxuICogQGZ1bmN0aW9uXG4gKi9cbnZlYzMuc3FyRGlzdCA9IHZlYzMuc3F1YXJlZERpc3RhbmNlO1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIGxlbmd0aCBvZiBhIHZlYzNcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdmVjdG9yIHRvIGNhbGN1bGF0ZSBsZW5ndGggb2ZcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IGxlbmd0aCBvZiBhXG4gKi9cbnZlYzMubGVuZ3RoID0gZnVuY3Rpb24gKGEpIHtcbiAgICB2YXIgeCA9IGFbMF0sXG4gICAgICAgIHkgPSBhWzFdLFxuICAgICAgICB6ID0gYVsyXTtcbiAgICByZXR1cm4gTWF0aC5zcXJ0KHgqeCArIHkqeSArIHoqeik7XG59O1xuXG4vKipcbiAqIEFsaWFzIGZvciB7QGxpbmsgdmVjMy5sZW5ndGh9XG4gKiBAZnVuY3Rpb25cbiAqL1xudmVjMy5sZW4gPSB2ZWMzLmxlbmd0aDtcblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBzcXVhcmVkIGxlbmd0aCBvZiBhIHZlYzNcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdmVjdG9yIHRvIGNhbGN1bGF0ZSBzcXVhcmVkIGxlbmd0aCBvZlxuICogQHJldHVybnMge051bWJlcn0gc3F1YXJlZCBsZW5ndGggb2YgYVxuICovXG52ZWMzLnNxdWFyZWRMZW5ndGggPSBmdW5jdGlvbiAoYSkge1xuICAgIHZhciB4ID0gYVswXSxcbiAgICAgICAgeSA9IGFbMV0sXG4gICAgICAgIHogPSBhWzJdO1xuICAgIHJldHVybiB4KnggKyB5KnkgKyB6Kno7XG59O1xuXG4vKipcbiAqIEFsaWFzIGZvciB7QGxpbmsgdmVjMy5zcXVhcmVkTGVuZ3RofVxuICogQGZ1bmN0aW9uXG4gKi9cbnZlYzMuc3FyTGVuID0gdmVjMy5zcXVhcmVkTGVuZ3RoO1xuXG4vKipcbiAqIE5lZ2F0ZXMgdGhlIGNvbXBvbmVudHMgb2YgYSB2ZWMzXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBvdXQgdGhlIHJlY2VpdmluZyB2ZWN0b3JcbiAqIEBwYXJhbSB7dmVjM30gYSB2ZWN0b3IgdG8gbmVnYXRlXG4gKiBAcmV0dXJucyB7dmVjM30gb3V0XG4gKi9cbnZlYzMubmVnYXRlID0gZnVuY3Rpb24ob3V0LCBhKSB7XG4gICAgb3V0WzBdID0gLWFbMF07XG4gICAgb3V0WzFdID0gLWFbMV07XG4gICAgb3V0WzJdID0gLWFbMl07XG4gICAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0aGUgaW52ZXJzZSBvZiB0aGUgY29tcG9uZW50cyBvZiBhIHZlYzNcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IG91dCB0aGUgcmVjZWl2aW5nIHZlY3RvclxuICogQHBhcmFtIHt2ZWMzfSBhIHZlY3RvciB0byBpbnZlcnRcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy5pbnZlcnNlID0gZnVuY3Rpb24ob3V0LCBhKSB7XG4gIG91dFswXSA9IDEuMCAvIGFbMF07XG4gIG91dFsxXSA9IDEuMCAvIGFbMV07XG4gIG91dFsyXSA9IDEuMCAvIGFbMl07XG4gIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIE5vcm1hbGl6ZSBhIHZlYzNcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IG91dCB0aGUgcmVjZWl2aW5nIHZlY3RvclxuICogQHBhcmFtIHt2ZWMzfSBhIHZlY3RvciB0byBub3JtYWxpemVcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy5ub3JtYWxpemUgPSBmdW5jdGlvbihvdXQsIGEpIHtcbiAgICB2YXIgeCA9IGFbMF0sXG4gICAgICAgIHkgPSBhWzFdLFxuICAgICAgICB6ID0gYVsyXTtcbiAgICB2YXIgbGVuID0geCp4ICsgeSp5ICsgeip6O1xuICAgIGlmIChsZW4gPiAwKSB7XG4gICAgICAgIC8vVE9ETzogZXZhbHVhdGUgdXNlIG9mIGdsbV9pbnZzcXJ0IGhlcmU/XG4gICAgICAgIGxlbiA9IDEgLyBNYXRoLnNxcnQobGVuKTtcbiAgICAgICAgb3V0WzBdID0gYVswXSAqIGxlbjtcbiAgICAgICAgb3V0WzFdID0gYVsxXSAqIGxlbjtcbiAgICAgICAgb3V0WzJdID0gYVsyXSAqIGxlbjtcbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgZG90IHByb2R1Y3Qgb2YgdHdvIHZlYzMnc1xuICpcbiAqIEBwYXJhbSB7dmVjM30gYSB0aGUgZmlyc3Qgb3BlcmFuZFxuICogQHBhcmFtIHt2ZWMzfSBiIHRoZSBzZWNvbmQgb3BlcmFuZFxuICogQHJldHVybnMge051bWJlcn0gZG90IHByb2R1Y3Qgb2YgYSBhbmQgYlxuICovXG52ZWMzLmRvdCA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGFbMF0gKiBiWzBdICsgYVsxXSAqIGJbMV0gKyBhWzJdICogYlsyXTtcbn07XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIGNyb3NzIHByb2R1Y3Qgb2YgdHdvIHZlYzMnc1xuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIGZpcnN0IG9wZXJhbmRcbiAqIEBwYXJhbSB7dmVjM30gYiB0aGUgc2Vjb25kIG9wZXJhbmRcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy5jcm9zcyA9IGZ1bmN0aW9uKG91dCwgYSwgYikge1xuICAgIHZhciBheCA9IGFbMF0sIGF5ID0gYVsxXSwgYXogPSBhWzJdLFxuICAgICAgICBieCA9IGJbMF0sIGJ5ID0gYlsxXSwgYnogPSBiWzJdO1xuXG4gICAgb3V0WzBdID0gYXkgKiBieiAtIGF6ICogYnk7XG4gICAgb3V0WzFdID0gYXogKiBieCAtIGF4ICogYno7XG4gICAgb3V0WzJdID0gYXggKiBieSAtIGF5ICogYng7XG4gICAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogUGVyZm9ybXMgYSBsaW5lYXIgaW50ZXJwb2xhdGlvbiBiZXR3ZWVuIHR3byB2ZWMzJ3NcbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IG91dCB0aGUgcmVjZWl2aW5nIHZlY3RvclxuICogQHBhcmFtIHt2ZWMzfSBhIHRoZSBmaXJzdCBvcGVyYW5kXG4gKiBAcGFyYW0ge3ZlYzN9IGIgdGhlIHNlY29uZCBvcGVyYW5kXG4gKiBAcGFyYW0ge051bWJlcn0gdCBpbnRlcnBvbGF0aW9uIGFtb3VudCBiZXR3ZWVuIHRoZSB0d28gaW5wdXRzXG4gKiBAcmV0dXJucyB7dmVjM30gb3V0XG4gKi9cbnZlYzMubGVycCA9IGZ1bmN0aW9uIChvdXQsIGEsIGIsIHQpIHtcbiAgICB2YXIgYXggPSBhWzBdLFxuICAgICAgICBheSA9IGFbMV0sXG4gICAgICAgIGF6ID0gYVsyXTtcbiAgICBvdXRbMF0gPSBheCArIHQgKiAoYlswXSAtIGF4KTtcbiAgICBvdXRbMV0gPSBheSArIHQgKiAoYlsxXSAtIGF5KTtcbiAgICBvdXRbMl0gPSBheiArIHQgKiAoYlsyXSAtIGF6KTtcbiAgICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBHZW5lcmF0ZXMgYSByYW5kb20gdmVjdG9yIHdpdGggdGhlIGdpdmVuIHNjYWxlXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBvdXQgdGhlIHJlY2VpdmluZyB2ZWN0b3JcbiAqIEBwYXJhbSB7TnVtYmVyfSBbc2NhbGVdIExlbmd0aCBvZiB0aGUgcmVzdWx0aW5nIHZlY3Rvci4gSWYgb21taXR0ZWQsIGEgdW5pdCB2ZWN0b3Igd2lsbCBiZSByZXR1cm5lZFxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLnJhbmRvbSA9IGZ1bmN0aW9uIChvdXQsIHNjYWxlKSB7XG4gICAgc2NhbGUgPSBzY2FsZSB8fCAxLjA7XG5cbiAgICB2YXIgciA9IEdMTUFUX1JBTkRPTSgpICogMi4wICogTWF0aC5QSTtcbiAgICB2YXIgeiA9IChHTE1BVF9SQU5ET00oKSAqIDIuMCkgLSAxLjA7XG4gICAgdmFyIHpTY2FsZSA9IE1hdGguc3FydCgxLjAteip6KSAqIHNjYWxlO1xuXG4gICAgb3V0WzBdID0gTWF0aC5jb3MocikgKiB6U2NhbGU7XG4gICAgb3V0WzFdID0gTWF0aC5zaW4ocikgKiB6U2NhbGU7XG4gICAgb3V0WzJdID0geiAqIHNjYWxlO1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFRyYW5zZm9ybXMgdGhlIHZlYzMgd2l0aCBhIG1hdDQuXG4gKiA0dGggdmVjdG9yIGNvbXBvbmVudCBpcyBpbXBsaWNpdGx5ICcxJ1xuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIHZlY3RvciB0byB0cmFuc2Zvcm1cbiAqIEBwYXJhbSB7bWF0NH0gbSBtYXRyaXggdG8gdHJhbnNmb3JtIHdpdGhcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy50cmFuc2Zvcm1NYXQ0ID0gZnVuY3Rpb24ob3V0LCBhLCBtKSB7XG4gICAgdmFyIHggPSBhWzBdLCB5ID0gYVsxXSwgeiA9IGFbMl0sXG4gICAgICAgIHcgPSBtWzNdICogeCArIG1bN10gKiB5ICsgbVsxMV0gKiB6ICsgbVsxNV07XG4gICAgdyA9IHcgfHwgMS4wO1xuICAgIG91dFswXSA9IChtWzBdICogeCArIG1bNF0gKiB5ICsgbVs4XSAqIHogKyBtWzEyXSkgLyB3O1xuICAgIG91dFsxXSA9IChtWzFdICogeCArIG1bNV0gKiB5ICsgbVs5XSAqIHogKyBtWzEzXSkgLyB3O1xuICAgIG91dFsyXSA9IChtWzJdICogeCArIG1bNl0gKiB5ICsgbVsxMF0gKiB6ICsgbVsxNF0pIC8gdztcbiAgICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBUcmFuc2Zvcm1zIHRoZSB2ZWMzIHdpdGggYSBtYXQzLlxuICpcbiAqIEBwYXJhbSB7dmVjM30gb3V0IHRoZSByZWNlaXZpbmcgdmVjdG9yXG4gKiBAcGFyYW0ge3ZlYzN9IGEgdGhlIHZlY3RvciB0byB0cmFuc2Zvcm1cbiAqIEBwYXJhbSB7bWF0NH0gbSB0aGUgM3gzIG1hdHJpeCB0byB0cmFuc2Zvcm0gd2l0aFxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLnRyYW5zZm9ybU1hdDMgPSBmdW5jdGlvbihvdXQsIGEsIG0pIHtcbiAgICB2YXIgeCA9IGFbMF0sIHkgPSBhWzFdLCB6ID0gYVsyXTtcbiAgICBvdXRbMF0gPSB4ICogbVswXSArIHkgKiBtWzNdICsgeiAqIG1bNl07XG4gICAgb3V0WzFdID0geCAqIG1bMV0gKyB5ICogbVs0XSArIHogKiBtWzddO1xuICAgIG91dFsyXSA9IHggKiBtWzJdICsgeSAqIG1bNV0gKyB6ICogbVs4XTtcbiAgICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBUcmFuc2Zvcm1zIHRoZSB2ZWMzIHdpdGggYSBxdWF0XG4gKlxuICogQHBhcmFtIHt2ZWMzfSBvdXQgdGhlIHJlY2VpdmluZyB2ZWN0b3JcbiAqIEBwYXJhbSB7dmVjM30gYSB0aGUgdmVjdG9yIHRvIHRyYW5zZm9ybVxuICogQHBhcmFtIHtxdWF0fSBxIHF1YXRlcm5pb24gdG8gdHJhbnNmb3JtIHdpdGhcbiAqIEByZXR1cm5zIHt2ZWMzfSBvdXRcbiAqL1xudmVjMy50cmFuc2Zvcm1RdWF0ID0gZnVuY3Rpb24ob3V0LCBhLCBxKSB7XG4gICAgLy8gYmVuY2htYXJrczogaHR0cDovL2pzcGVyZi5jb20vcXVhdGVybmlvbi10cmFuc2Zvcm0tdmVjMy1pbXBsZW1lbnRhdGlvbnNcblxuICAgIHZhciB4ID0gYVswXSwgeSA9IGFbMV0sIHogPSBhWzJdLFxuICAgICAgICBxeCA9IHFbMF0sIHF5ID0gcVsxXSwgcXogPSBxWzJdLCBxdyA9IHFbM10sXG5cbiAgICAgICAgLy8gY2FsY3VsYXRlIHF1YXQgKiB2ZWNcbiAgICAgICAgaXggPSBxdyAqIHggKyBxeSAqIHogLSBxeiAqIHksXG4gICAgICAgIGl5ID0gcXcgKiB5ICsgcXogKiB4IC0gcXggKiB6LFxuICAgICAgICBpeiA9IHF3ICogeiArIHF4ICogeSAtIHF5ICogeCxcbiAgICAgICAgaXcgPSAtcXggKiB4IC0gcXkgKiB5IC0gcXogKiB6O1xuXG4gICAgLy8gY2FsY3VsYXRlIHJlc3VsdCAqIGludmVyc2UgcXVhdFxuICAgIG91dFswXSA9IGl4ICogcXcgKyBpdyAqIC1xeCArIGl5ICogLXF6IC0gaXogKiAtcXk7XG4gICAgb3V0WzFdID0gaXkgKiBxdyArIGl3ICogLXF5ICsgaXogKiAtcXggLSBpeCAqIC1xejtcbiAgICBvdXRbMl0gPSBpeiAqIHF3ICsgaXcgKiAtcXogKyBpeCAqIC1xeSAtIGl5ICogLXF4O1xuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFJvdGF0ZSBhIDNEIHZlY3RvciBhcm91bmQgdGhlIHgtYXhpc1xuICogQHBhcmFtIHt2ZWMzfSBvdXQgVGhlIHJlY2VpdmluZyB2ZWMzXG4gKiBAcGFyYW0ge3ZlYzN9IGEgVGhlIHZlYzMgcG9pbnQgdG8gcm90YXRlXG4gKiBAcGFyYW0ge3ZlYzN9IGIgVGhlIG9yaWdpbiBvZiB0aGUgcm90YXRpb25cbiAqIEBwYXJhbSB7TnVtYmVyfSBjIFRoZSBhbmdsZSBvZiByb3RhdGlvblxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLnJvdGF0ZVggPSBmdW5jdGlvbihvdXQsIGEsIGIsIGMpe1xuICAgdmFyIHAgPSBbXSwgcj1bXTtcbiAgICAgIC8vVHJhbnNsYXRlIHBvaW50IHRvIHRoZSBvcmlnaW5cbiAgICAgIHBbMF0gPSBhWzBdIC0gYlswXTtcbiAgICAgIHBbMV0gPSBhWzFdIC0gYlsxXTtcbiAgICBwWzJdID0gYVsyXSAtIGJbMl07XG5cbiAgICAgIC8vcGVyZm9ybSByb3RhdGlvblxuICAgICAgclswXSA9IHBbMF07XG4gICAgICByWzFdID0gcFsxXSpNYXRoLmNvcyhjKSAtIHBbMl0qTWF0aC5zaW4oYyk7XG4gICAgICByWzJdID0gcFsxXSpNYXRoLnNpbihjKSArIHBbMl0qTWF0aC5jb3MoYyk7XG5cbiAgICAgIC8vdHJhbnNsYXRlIHRvIGNvcnJlY3QgcG9zaXRpb25cbiAgICAgIG91dFswXSA9IHJbMF0gKyBiWzBdO1xuICAgICAgb3V0WzFdID0gclsxXSArIGJbMV07XG4gICAgICBvdXRbMl0gPSByWzJdICsgYlsyXTtcblxuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFJvdGF0ZSBhIDNEIHZlY3RvciBhcm91bmQgdGhlIHktYXhpc1xuICogQHBhcmFtIHt2ZWMzfSBvdXQgVGhlIHJlY2VpdmluZyB2ZWMzXG4gKiBAcGFyYW0ge3ZlYzN9IGEgVGhlIHZlYzMgcG9pbnQgdG8gcm90YXRlXG4gKiBAcGFyYW0ge3ZlYzN9IGIgVGhlIG9yaWdpbiBvZiB0aGUgcm90YXRpb25cbiAqIEBwYXJhbSB7TnVtYmVyfSBjIFRoZSBhbmdsZSBvZiByb3RhdGlvblxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLnJvdGF0ZVkgPSBmdW5jdGlvbihvdXQsIGEsIGIsIGMpe1xuICAgIHZhciBwID0gW10sIHI9W107XG4gICAgLy9UcmFuc2xhdGUgcG9pbnQgdG8gdGhlIG9yaWdpblxuICAgIHBbMF0gPSBhWzBdIC0gYlswXTtcbiAgICBwWzFdID0gYVsxXSAtIGJbMV07XG4gICAgcFsyXSA9IGFbMl0gLSBiWzJdO1xuXG4gICAgLy9wZXJmb3JtIHJvdGF0aW9uXG4gICAgclswXSA9IHBbMl0qTWF0aC5zaW4oYykgKyBwWzBdKk1hdGguY29zKGMpO1xuICAgIHJbMV0gPSBwWzFdO1xuICAgIHJbMl0gPSBwWzJdKk1hdGguY29zKGMpIC0gcFswXSpNYXRoLnNpbihjKTtcblxuICAgIC8vdHJhbnNsYXRlIHRvIGNvcnJlY3QgcG9zaXRpb25cbiAgICBvdXRbMF0gPSByWzBdICsgYlswXTtcbiAgICBvdXRbMV0gPSByWzFdICsgYlsxXTtcbiAgICBvdXRbMl0gPSByWzJdICsgYlsyXTtcblxuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFJvdGF0ZSBhIDNEIHZlY3RvciBhcm91bmQgdGhlIHotYXhpc1xuICogQHBhcmFtIHt2ZWMzfSBvdXQgVGhlIHJlY2VpdmluZyB2ZWMzXG4gKiBAcGFyYW0ge3ZlYzN9IGEgVGhlIHZlYzMgcG9pbnQgdG8gcm90YXRlXG4gKiBAcGFyYW0ge3ZlYzN9IGIgVGhlIG9yaWdpbiBvZiB0aGUgcm90YXRpb25cbiAqIEBwYXJhbSB7TnVtYmVyfSBjIFRoZSBhbmdsZSBvZiByb3RhdGlvblxuICogQHJldHVybnMge3ZlYzN9IG91dFxuICovXG52ZWMzLnJvdGF0ZVogPSBmdW5jdGlvbihvdXQsIGEsIGIsIGMpe1xuICAgIHZhciBwID0gW10sIHI9W107XG4gICAgLy9UcmFuc2xhdGUgcG9pbnQgdG8gdGhlIG9yaWdpblxuICAgIHBbMF0gPSBhWzBdIC0gYlswXTtcbiAgICBwWzFdID0gYVsxXSAtIGJbMV07XG4gICAgcFsyXSA9IGFbMl0gLSBiWzJdO1xuXG4gICAgLy9wZXJmb3JtIHJvdGF0aW9uXG4gICAgclswXSA9IHBbMF0qTWF0aC5jb3MoYykgLSBwWzFdKk1hdGguc2luKGMpO1xuICAgIHJbMV0gPSBwWzBdKk1hdGguc2luKGMpICsgcFsxXSpNYXRoLmNvcyhjKTtcbiAgICByWzJdID0gcFsyXTtcblxuICAgIC8vdHJhbnNsYXRlIHRvIGNvcnJlY3QgcG9zaXRpb25cbiAgICBvdXRbMF0gPSByWzBdICsgYlswXTtcbiAgICBvdXRbMV0gPSByWzFdICsgYlsxXTtcbiAgICBvdXRbMl0gPSByWzJdICsgYlsyXTtcblxuICAgIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFBlcmZvcm0gc29tZSBvcGVyYXRpb24gb3ZlciBhbiBhcnJheSBvZiB2ZWMzcy5cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBhIHRoZSBhcnJheSBvZiB2ZWN0b3JzIHRvIGl0ZXJhdGUgb3ZlclxuICogQHBhcmFtIHtOdW1iZXJ9IHN0cmlkZSBOdW1iZXIgb2YgZWxlbWVudHMgYmV0d2VlbiB0aGUgc3RhcnQgb2YgZWFjaCB2ZWMzLiBJZiAwIGFzc3VtZXMgdGlnaHRseSBwYWNrZWRcbiAqIEBwYXJhbSB7TnVtYmVyfSBvZmZzZXQgTnVtYmVyIG9mIGVsZW1lbnRzIHRvIHNraXAgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgYXJyYXlcbiAqIEBwYXJhbSB7TnVtYmVyfSBjb3VudCBOdW1iZXIgb2YgdmVjM3MgdG8gaXRlcmF0ZSBvdmVyLiBJZiAwIGl0ZXJhdGVzIG92ZXIgZW50aXJlIGFycmF5XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBGdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIHZlY3RvciBpbiB0aGUgYXJyYXlcbiAqIEBwYXJhbSB7T2JqZWN0fSBbYXJnXSBhZGRpdGlvbmFsIGFyZ3VtZW50IHRvIHBhc3MgdG8gZm5cbiAqIEByZXR1cm5zIHtBcnJheX0gYVxuICogQGZ1bmN0aW9uXG4gKi9cbnZlYzMuZm9yRWFjaCA9IChmdW5jdGlvbigpIHtcbiAgICB2YXIgdmVjID0gdmVjMy5jcmVhdGUoKTtcblxuICAgIHJldHVybiBmdW5jdGlvbihhLCBzdHJpZGUsIG9mZnNldCwgY291bnQsIGZuLCBhcmcpIHtcbiAgICAgICAgdmFyIGksIGw7XG4gICAgICAgIGlmKCFzdHJpZGUpIHtcbiAgICAgICAgICAgIHN0cmlkZSA9IDM7XG4gICAgICAgIH1cblxuICAgICAgICBpZighb2Zmc2V0KSB7XG4gICAgICAgICAgICBvZmZzZXQgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYoY291bnQpIHtcbiAgICAgICAgICAgIGwgPSBNYXRoLm1pbigoY291bnQgKiBzdHJpZGUpICsgb2Zmc2V0LCBhLmxlbmd0aCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsID0gYS5sZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IoaSA9IG9mZnNldDsgaSA8IGw7IGkgKz0gc3RyaWRlKSB7XG4gICAgICAgICAgICB2ZWNbMF0gPSBhW2ldOyB2ZWNbMV0gPSBhW2krMV07IHZlY1syXSA9IGFbaSsyXTtcbiAgICAgICAgICAgIGZuKHZlYywgdmVjLCBhcmcpO1xuICAgICAgICAgICAgYVtpXSA9IHZlY1swXTsgYVtpKzFdID0gdmVjWzFdOyBhW2krMl0gPSB2ZWNbMl07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYTtcbiAgICB9O1xufSkoKTtcblxuLyoqXG4gKiBHZXQgdGhlIGFuZ2xlIGJldHdlZW4gdHdvIDNEIHZlY3RvcnNcbiAqIEBwYXJhbSB7dmVjM30gYSBUaGUgZmlyc3Qgb3BlcmFuZFxuICogQHBhcmFtIHt2ZWMzfSBiIFRoZSBzZWNvbmQgb3BlcmFuZFxuICogQHJldHVybnMge051bWJlcn0gVGhlIGFuZ2xlIGluIHJhZGlhbnNcbiAqL1xudmVjMy5hbmdsZSA9IGZ1bmN0aW9uKGEsIGIpIHtcblxuICAgIHZhciB0ZW1wQSA9IHZlYzMuZnJvbVZhbHVlcyhhWzBdLCBhWzFdLCBhWzJdKTtcbiAgICB2YXIgdGVtcEIgPSB2ZWMzLmZyb21WYWx1ZXMoYlswXSwgYlsxXSwgYlsyXSk7XG5cbiAgICB2ZWMzLm5vcm1hbGl6ZSh0ZW1wQSwgdGVtcEEpO1xuICAgIHZlYzMubm9ybWFsaXplKHRlbXBCLCB0ZW1wQik7XG5cbiAgICB2YXIgY29zaW5lID0gdmVjMy5kb3QodGVtcEEsIHRlbXBCKTtcblxuICAgIGlmKGNvc2luZSA+IDEuMCl7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBNYXRoLmFjb3MoY29zaW5lKTtcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCB2ZWMzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2dsbWF0cml4L3ZlYzMuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_util__ = __webpack_require__(50);\n\n\n\n\nvar isPowerOfTwo = __WEBPACK_IMPORTED_MODULE_3__math_util__[\"a\" /* default */].isPowerOfTwo;\n\nfunction nearestPowerOfTwo(val) {\n    return Math.pow(2, Math.round(Math.log(val) / Math.LN2));\n}\nfunction convertTextureToPowerOfTwo(texture, canvas) {\n    // var canvas = document.createElement('canvas');\n    var width = nearestPowerOfTwo(texture.width);\n    var height = nearestPowerOfTwo(texture.height);\n    canvas = canvas || document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(texture.image, 0, 0, width, height);\n\n    return canvas;\n}\n\n/**\n * @constructor clay.Texture2D\n * @extends clay.Texture\n *\n * @example\n *     ...\n *     var mat = new clay.Material({\n *         shader: clay.shader.library.get('clay.phong', 'diffuseMap')\n *     });\n *     var diffuseMap = new clay.Texture2D();\n *     diffuseMap.load('assets/textures/diffuse.jpg');\n *     mat.set('diffuseMap', diffuseMap);\n *     ...\n *     diffuseMap.success(function () {\n *         // Wait for the diffuse texture loaded\n *         animation.on('frame', function (frameTime) {\n *             renderer.render(scene, camera);\n *         });\n *     });\n */\nvar Texture2D = __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Texture2D# */ {\n        /**\n         * @type {?HTMLImageElement|HTMLCanvasElemnet}\n         */\n        // TODO mark dirty when assigned.\n        image: null,\n        /**\n         * Pixels data. Will be ignored if image is set.\n         * @type {?Uint8Array|Float32Array}\n         */\n        pixels: null,\n        /**\n         * @type {Array.<Object>}\n         * @example\n         *     [{\n         *         image: mipmap0,\n         *         pixels: null\n         *     }, {\n         *         image: mipmap1,\n         *         pixels: null\n         *     }, ....]\n         */\n        mipmaps: [],\n\n        /**\n         * If convert texture to power-of-two\n         * @type {boolean}\n         */\n        convertToPOT: false\n    };\n}, {\n\n    textureType: 'texture2D',\n\n    update: function (renderer) {\n\n        var _gl = renderer.gl;\n        _gl.bindTexture(_gl.TEXTURE_2D, this._cache.get('webgl_texture'));\n\n        this.updateCommon(renderer);\n\n        var glFormat = this.format;\n        var glType = this.type;\n\n        // Convert to pot is only available when using image/canvas/video element.\n        var convertToPOT = !!(this.convertToPOT\n            && !this.mipmaps.length && this.image\n            && (this.wrapS === __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].REPEAT || this.wrapT === __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].REPEAT)\n            && this.NPOT\n        );\n\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, convertToPOT ? this.wrapS : this.getAvailableWrapS());\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, convertToPOT ? this.wrapT : this.getAvailableWrapT());\n\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, convertToPOT ? this.magFilter : this.getAvailableMagFilter());\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, convertToPOT ? this.minFilter : this.getAvailableMinFilter());\n\n        var anisotropicExt = renderer.getGLExtension('EXT_texture_filter_anisotropic');\n        if (anisotropicExt && this.anisotropic > 1) {\n            _gl.texParameterf(_gl.TEXTURE_2D, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropic);\n        }\n\n        // Fallback to float type if browser don't have half float extension\n        if (glType === 36193) {\n            var halfFloatExt = renderer.getGLExtension('OES_texture_half_float');\n            if (!halfFloatExt) {\n                glType = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].FLOAT;\n            }\n        }\n\n        if (this.mipmaps.length) {\n            var width = this.width;\n            var height = this.height;\n            for (var i = 0; i < this.mipmaps.length; i++) {\n                var mipmap = this.mipmaps[i];\n                this._updateTextureData(_gl, mipmap, i, width, height, glFormat, glType, false);\n                width /= 2;\n                height /= 2;\n            }\n        }\n        else {\n            this._updateTextureData(_gl, this, 0, this.width, this.height, glFormat, glType, convertToPOT);\n\n            if (this.useMipmap && (!this.NPOT || convertToPOT)) {\n                _gl.generateMipmap(_gl.TEXTURE_2D);\n            }\n        }\n\n        _gl.bindTexture(_gl.TEXTURE_2D, null);\n    },\n\n    _updateTextureData: function (_gl, data, level, width, height, glFormat, glType, convertToPOT) {\n        if (data.image) {\n            var imgData = data.image;\n            if (convertToPOT) {\n                this._potCanvas = convertTextureToPowerOfTwo(this, this._potCanvas);\n                imgData = this._potCanvas;\n            }\n            _gl.texImage2D(_gl.TEXTURE_2D, level, glFormat, glFormat, glType, imgData);\n        }\n        else {\n            // Can be used as a blank texture when writing render to texture(RTT)\n            if (\n                glFormat <= __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].COMPRESSED_RGBA_S3TC_DXT5_EXT\n                && glFormat >= __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].COMPRESSED_RGB_S3TC_DXT1_EXT\n            ) {\n                _gl.compressedTexImage2D(_gl.TEXTURE_2D, level, glFormat, width, height, 0, data.pixels);\n            }\n            else {\n                // Is a render target if pixels is null\n                _gl.texImage2D(_gl.TEXTURE_2D, level, glFormat, width, height, 0, glFormat, glType, data.pixels);\n            }\n        }\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     * @memberOf clay.Texture2D.prototype\n     */\n    generateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        if (this.useMipmap && !this.NPOT) {\n            _gl.bindTexture(_gl.TEXTURE_2D, this._cache.get('webgl_texture'));\n            _gl.generateMipmap(_gl.TEXTURE_2D);\n        }\n    },\n\n    isPowerOfTwo: function () {\n        return isPowerOfTwo(this.width) && isPowerOfTwo(this.height);\n    },\n\n    isRenderable: function () {\n        if (this.image) {\n            return this.image.width > 0 && this.image.height > 0;\n        }\n        else {\n            return !!(this.width && this.height);\n        }\n    },\n\n    bind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, this.getWebGLTexture(renderer));\n    },\n\n    unbind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, null);\n    },\n\n    load: function (src, crossOrigin) {\n        var image = __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].createImage();\n        if (crossOrigin) {\n            image.crossOrigin = crossOrigin;\n        }\n        var self = this;\n        image.onload = function () {\n            self.dirty();\n            self.trigger('success', self);\n        };\n        image.onerror = function () {\n            self.trigger('error', self);\n        };\n\n        image.src = src;\n        this.image = image;\n\n        return this;\n    }\n});\n\nObject.defineProperty(Texture2D.prototype, 'width', {\n    get: function () {\n        if (this.image) {\n            return this.image.width;\n        }\n        return this._width;\n    },\n    set: function (value) {\n        if (this.image) {\n            console.warn('Texture from image can\\'t set width');\n        }\n        else {\n            if (this._width !== value) {\n                this.dirty();\n            }\n            this._width = value;\n        }\n    }\n});\nObject.defineProperty(Texture2D.prototype, 'height', {\n    get: function () {\n        if (this.image) {\n            return this.image.height;\n        }\n        return this._height;\n    },\n    set: function (value) {\n        if (this.image) {\n            console.warn('Texture from image can\\'t set height');\n        }\n        else {\n            if (this._height !== value) {\n                this.dirty();\n            }\n            this._height = value;\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Texture2D);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__request__ = __webpack_require__(75);\n\n\nvar supportWebGL;\n\nvar vendor = {};\n\n/**\n * If support WebGL\n * @return {boolean}\n */\nvendor.supportWebGL = function () {\n    if (supportWebGL == null) {\n        try {\n            var canvas = document.createElement('canvas');\n            var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n            if (!gl) {\n                throw new Error();\n            }\n        }\n        catch (e) {\n            supportWebGL = false;\n        }\n\n    }\n    return supportWebGL;\n};\n\nvendor.Int8Array = typeof Int8Array === 'undefined' ? Array : Int8Array;\n\nvendor.Uint8Array = typeof Uint8Array === 'undefined' ? Array : Uint8Array;\n\nvendor.Uint16Array = typeof Uint16Array === 'undefined' ? Array : Uint16Array;\n\nvendor.Uint32Array = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\n\nvendor.Int16Array = typeof Int16Array === 'undefined' ? Array : Int16Array;\n\nvendor.Float32Array = typeof Float32Array === 'undefined' ? Array : Float32Array;\n\nvendor.Float64Array = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nvar g = {};\nif (typeof window !== 'undefined') {\n    g = window;\n}\nelse if (typeof global !== 'undefined') {\n    g = global;\n}\n\n\nvendor.requestAnimationFrame = g.requestAnimationFrame\n    || g.msRequestAnimationFrame\n    || g.mozRequestAnimationFrame\n    || g.webkitRequestAnimationFrame\n    || function (func){ setTimeout(func, 16); };\n\nvendor.createCanvas = function () {\n    return document.createElement('canvas');\n};\n\nvendor.createImage = function () {\n    return new g.Image();\n};\n\nvendor.request = {\n    get: __WEBPACK_IMPORTED_MODULE_0__request__[\"a\" /* default */].get\n};\n\nvendor.addEventListener = function (dom, type, func, useCapture) {\n    dom.addEventListener(type, func, useCapture);\n};\n\nvendor.removeEventListener = function (dom, type, func) {\n    dom.removeEventListener(type, func);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (vendor);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(74)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9jb3JlL3ZlbmRvci5qcz9iNDVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXF1ZXN0IGZyb20gJy4vcmVxdWVzdCc7XG5cbnZhciBzdXBwb3J0V2ViR0w7XG5cbnZhciB2ZW5kb3IgPSB7fTtcblxuLyoqXG4gKiBJZiBzdXBwb3J0IFdlYkdMXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG52ZW5kb3Iuc3VwcG9ydFdlYkdMID0gZnVuY3Rpb24gKCkge1xuICAgIGlmIChzdXBwb3J0V2ViR0wgPT0gbnVsbCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgICAgICAgICAgdmFyIGdsID0gY2FudmFzLmdldENvbnRleHQoJ3dlYmdsJykgfHwgY2FudmFzLmdldENvbnRleHQoJ2V4cGVyaW1lbnRhbC13ZWJnbCcpO1xuICAgICAgICAgICAgaWYgKCFnbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBzdXBwb3J0V2ViR0wgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgfVxuICAgIHJldHVybiBzdXBwb3J0V2ViR0w7XG59O1xuXG52ZW5kb3IuSW50OEFycmF5ID0gdHlwZW9mIEludDhBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyBBcnJheSA6IEludDhBcnJheTtcblxudmVuZG9yLlVpbnQ4QXJyYXkgPSB0eXBlb2YgVWludDhBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyBBcnJheSA6IFVpbnQ4QXJyYXk7XG5cbnZlbmRvci5VaW50MTZBcnJheSA9IHR5cGVvZiBVaW50MTZBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyBBcnJheSA6IFVpbnQxNkFycmF5O1xuXG52ZW5kb3IuVWludDMyQXJyYXkgPSB0eXBlb2YgVWludDMyQXJyYXkgPT09ICd1bmRlZmluZWQnID8gQXJyYXkgOiBVaW50MzJBcnJheTtcblxudmVuZG9yLkludDE2QXJyYXkgPSB0eXBlb2YgSW50MTZBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyBBcnJheSA6IEludDE2QXJyYXk7XG5cbnZlbmRvci5GbG9hdDMyQXJyYXkgPSB0eXBlb2YgRmxvYXQzMkFycmF5ID09PSAndW5kZWZpbmVkJyA/IEFycmF5IDogRmxvYXQzMkFycmF5O1xuXG52ZW5kb3IuRmxvYXQ2NEFycmF5ID0gdHlwZW9mIEZsb2F0NjRBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyBBcnJheSA6IEZsb2F0NjRBcnJheTtcblxudmFyIGcgPSB7fTtcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGcgPSB3aW5kb3c7XG59XG5lbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICAgIGcgPSBnbG9iYWw7XG59XG5cblxudmVuZG9yLnJlcXVlc3RBbmltYXRpb25GcmFtZSA9IGcucmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gICAgfHwgZy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZVxuICAgIHx8IGcubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gICAgfHwgZy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgICB8fCBmdW5jdGlvbiAoZnVuYyl7IHNldFRpbWVvdXQoZnVuYywgMTYpOyB9O1xuXG52ZW5kb3IuY3JlYXRlQ2FudmFzID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcbn07XG5cbnZlbmRvci5jcmVhdGVJbWFnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gbmV3IGcuSW1hZ2UoKTtcbn07XG5cbnZlbmRvci5yZXF1ZXN0ID0ge1xuICAgIGdldDogcmVxdWVzdC5nZXRcbn07XG5cbnZlbmRvci5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gKGRvbSwgdHlwZSwgZnVuYywgdXNlQ2FwdHVyZSkge1xuICAgIGRvbS5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMsIHVzZUNhcHR1cmUpO1xufTtcblxudmVuZG9yLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiAoZG9tLCB0eXBlLCBmdW5jKSB7XG4gICAgZG9tLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgZnVuYyk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB2ZW5kb3I7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9jb3JlL3ZlbmRvci5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__ = __webpack_require__(3);\n\n\n/**\n * @constructor\n * @alias clay.Vector3\n * @param {number} x\n * @param {number} y\n * @param {number} z\n */\nvar Vector3 = function(x, y, z) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n\n    /**\n     * Storage of Vector3, read and write of x, y, z will change the values in array\n     * All methods also operate on the array instead of x, y, z components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector3#\n     */\n    this.array = __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].fromValues(x, y, z);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector3#\n     */\n    this._dirty = true;\n};\n\nVector3.prototype = {\n\n    constructor: Vector3,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    add: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @return {clay.Vector3}\n     */\n    set: function (x, y, z) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector3}\n     */\n    setArray: function (arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector3\n     * @return {clay.Vector3}\n     */\n    clone: function () {\n        return new Vector3(this.x, this.y, this.z);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    copy: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Cross product of self and b, written to a Vector3 out\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    cross: function (a, b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].cross(this.array, a.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    dist: function (b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    distance: function (b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    div: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    divide: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    dot: function (b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].length(this.array);\n    },\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @param  {number}  t\n     * @return {clay.Vector3}\n     */\n    lerp: function (a, b, t) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    min: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    max: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    mul: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    multiply: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector3}\n     */\n    negate: function () {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector3}\n     */\n    normalize: function () {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y, z components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector3}\n     */\n    random: function (scale) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector3}\n     */\n    scale: function (s) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector3} b\n     * @param  {number}  scale\n     * @return {clay.Vector3}\n     */\n    scaleAndAdd: function (b, s) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    sqrDist: function (b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    squaredDistance: function (b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    sub: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    subtract: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix3 m\n     * @param  {clay.Matrix3} m\n     * @return {clay.Vector3}\n     */\n    transformMat3: function (m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].transformMat3(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector3}\n     */\n    transformMat4: function (m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Transform self with a Quaternion q\n     * @param  {clay.Quaternion} q\n     * @return {clay.Vector3}\n     */\n    transformQuat: function (q) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].transformQuat(this.array, this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Trasnform self into projection space with m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector3}\n     */\n    applyProjection: function (m) {\n        var v = this.array;\n        m = m.array;\n\n        // Perspective projection\n        if (m[15] === 0) {\n            var w = -1 / v[2];\n            v[0] = m[0] * v[0] * w;\n            v[1] = m[5] * v[1] * w;\n            v[2] = (m[10] * v[2] + m[14]) * w;\n        }\n        else {\n            v[0] = m[0] * v[0] + m[12];\n            v[1] = m[5] * v[1] + m[13];\n            v[2] = m[10] * v[2] + m[14];\n        }\n        this._dirty = true;\n\n        return this;\n    },\n\n    eulerFromQuat: function(q, order) {\n        Vector3.eulerFromQuat(this, q, order);\n    },\n\n    eulerFromMat3: function (m, order) {\n        Vector3.eulerFromMat3(this, m, order);\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Vector3.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.add = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector3}\n */\nVector3.set = function(out, x, y, z) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].set(out.array, x, y, z);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.copy = function(out, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.cross = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].cross(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.dist = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.distance = Vector3.dist;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.div = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.divide = Vector3.div;\n\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.dot = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.len = function(b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].length(b.array);\n};\n\n// Vector3.length = Vector3.len;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @param  {number}  t\n * @return {clay.Vector3}\n */\nVector3.lerp = function(out, a, b, t) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.min = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.max = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.mul = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.multiply = Vector3.mul;\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @return {clay.Vector3}\n */\nVector3.negate = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @return {clay.Vector3}\n */\nVector3.normalize = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.random = function(out, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.scale = function(out, a, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.scaleAndAdd = function(out, a, b, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.sqrDist = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].sqrDist(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.squaredDistance = Vector3.sqrDist;\n/**\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.sqrLen = function(a) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.squaredLength = Vector3.sqrLen;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.sub = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.subtract = Vector3.sub;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {Matrix3} m\n * @return {clay.Vector3}\n */\nVector3.transformMat3 = function(out, a, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].transformMat3(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector3}\n */\nVector3.transformMat4 = function(out, a, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector3}\n */\nVector3.transformQuat = function(out, a, q) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec3__[\"a\" /* default */].transformQuat(out.array, a.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\nfunction clamp(val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n}\nvar atan2 = Math.atan2;\nvar asin = Math.asin;\nvar abs = Math.abs;\n/**\n * Convert quaternion to euler angle\n * Quaternion must be normalized\n * From three.js\n */\nVector3.eulerFromQuat = function (out, q, order) {\n    out._dirty = true;\n    q = q.array;\n\n    var target = out.array;\n    var x = q[0], y = q[1], z = q[2], w = q[3];\n    var x2 = x * x;\n    var y2 = y * y;\n    var z2 = z * z;\n    var w2 = w * w;\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    switch (order) {\n        case 'XYZ':\n            target[0] = atan2(2 * (x * w - y * z), (w2 - x2 - y2 + z2));\n            target[1] = asin(clamp(2 * (x * z + y * w), - 1, 1));\n            target[2] = atan2(2 * (z * w - x * y), (w2 + x2 - y2 - z2));\n            break;\n        case 'YXZ':\n            target[0] = asin(clamp(2 * (x * w - y * z), - 1, 1));\n            target[1] = atan2(2 * (x * z + y * w), (w2 - x2 - y2 + z2));\n            target[2] = atan2(2 * (x * y + z * w), (w2 - x2 + y2 - z2));\n            break;\n        case 'ZXY':\n            target[0] = asin(clamp(2 * (x * w + y * z), - 1, 1));\n            target[1] = atan2(2 * (y * w - z * x), (w2 - x2 - y2 + z2));\n            target[2] = atan2(2 * (z * w - x * y), (w2 - x2 + y2 - z2));\n            break;\n        case 'ZYX':\n            target[0] = atan2(2 * (x * w + z * y), (w2 - x2 - y2 + z2));\n            target[1] = asin(clamp(2 * (y * w - x * z), - 1, 1));\n            target[2] = atan2(2 * (x * y + z * w), (w2 + x2 - y2 - z2));\n            break;\n        case 'YZX':\n            target[0] = atan2(2 * (x * w - z * y), (w2 - x2 + y2 - z2));\n            target[1] = atan2(2 * (y * w - x * z), (w2 + x2 - y2 - z2));\n            target[2] = asin(clamp(2 * (x * y + z * w), - 1, 1));\n            break;\n        case 'XZY':\n            target[0] = atan2(2 * (x * w + y * z), (w2 - x2 + y2 - z2));\n            target[1] = atan2(2 * (x * z + y * w), (w2 + x2 - y2 - z2));\n            target[2] = asin(clamp(2 * (z * w - x * y), - 1, 1));\n            break;\n        default:\n            console.warn('Unkown order: ' + order);\n    }\n    return out;\n};\n\n/**\n * Convert rotation matrix to euler angle\n * from three.js\n */\nVector3.eulerFromMat3 = function (out, m, order) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.array;\n    var m11 = te[0], m12 = te[3], m13 = te[6];\n    var m21 = te[1], m22 = te[4], m23 = te[7];\n    var m31 = te[2], m32 = te[5], m33 = te[8];\n    var target = out.array;\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    switch (order) {\n        case 'XYZ':\n            target[1] = asin(clamp(m13, -1, 1));\n            if (abs(m13) < 0.99999) {\n                target[0] = atan2(-m23, m33);\n                target[2] = atan2(-m12, m11);\n            }\n            else {\n                target[0] = atan2(m32, m22);\n                target[2] = 0;\n            }\n            break;\n        case 'YXZ':\n            target[0] = asin(-clamp(m23, -1, 1));\n            if (abs(m23) < 0.99999) {\n                target[1] = atan2(m13, m33);\n                target[2] = atan2(m21, m22);\n            }\n            else {\n                target[1] = atan2(-m31, m11);\n                target[2] = 0;\n            }\n            break;\n        case 'ZXY':\n            target[0] = asin(clamp(m32, -1, 1));\n            if (abs(m32) < 0.99999) {\n                target[1] = atan2(-m31, m33);\n                target[2] = atan2(-m12, m22);\n            }\n            else {\n                target[1] = 0;\n                target[2] = atan2(m21, m11);\n            }\n            break;\n        case 'ZYX':\n            target[1] = asin(-clamp(m31, -1, 1));\n            if (abs(m31) < 0.99999) {\n                target[0] = atan2(m32, m33);\n                target[2] = atan2(m21, m11);\n            }\n            else {\n                target[0] = 0;\n                target[2] = atan2(-m12, m22);\n            }\n            break;\n        case 'YZX':\n            target[2] = asin(clamp(m21, -1, 1));\n            if (abs(m21) < 0.99999) {\n                target[0] = atan2(-m23, m22);\n                target[1] = atan2(-m31, m11);\n            }\n            else {\n                target[0] = 0;\n                target[1] = atan2(m13, m33);\n            }\n            break;\n        case 'XZY':\n            target[2] = asin(-clamp(m12, -1, 1));\n            if (abs(m12) < 0.99999) {\n                target[0] = atan2(m32, m22);\n                target[1] = atan2(m13, m11);\n            }\n            else {\n                target[0] = atan2(-m23, m33);\n                target[1] = 0;\n            }\n            break;\n        default:\n            console.warn('Unkown order: ' + order);\n    }\n    out._dirty = true;\n\n    return out;\n};\n\nObject.defineProperties(Vector3, {\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_X: {\n        get: function () {\n            return new Vector3(1, 0, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    NEGATIVE_X: {\n        get: function () {\n            return new Vector3(-1, 0, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_Y: {\n        get: function () {\n            return new Vector3(0, 1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    NEGATIVE_Y: {\n        get: function () {\n            return new Vector3(0, -1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_Z: {\n        get: function () {\n            return new Vector3(0, 0, 1);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     */\n    NEGATIVE_Z: {\n        get: function () {\n            return new Vector3(0, 0, -1);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    UP: {\n        get: function () {\n            return new Vector3(0, 1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    ZERO: {\n        get: function () {\n            return new Vector3();\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vector3);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\n * @namespace clay.core.glenum\n * @see http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    /* ClearBufferMask */\n    DEPTH_BUFFER_BIT               : 0x00000100,\n    STENCIL_BUFFER_BIT             : 0x00000400,\n    COLOR_BUFFER_BIT               : 0x00004000,\n\n    /* BeginMode */\n    POINTS                         : 0x0000,\n    LINES                          : 0x0001,\n    LINE_LOOP                      : 0x0002,\n    LINE_STRIP                     : 0x0003,\n    TRIANGLES                      : 0x0004,\n    TRIANGLE_STRIP                 : 0x0005,\n    TRIANGLE_FAN                   : 0x0006,\n\n    /* AlphaFunction (not supported in ES20) */\n    /*      NEVER */\n    /*      LESS */\n    /*      EQUAL */\n    /*      LEQUAL */\n    /*      GREATER */\n    /*      NOTEQUAL */\n    /*      GEQUAL */\n    /*      ALWAYS */\n\n    /* BlendingFactorDest */\n    ZERO                           : 0,\n    ONE                            : 1,\n    SRC_COLOR                      : 0x0300,\n    ONE_MINUS_SRC_COLOR            : 0x0301,\n    SRC_ALPHA                      : 0x0302,\n    ONE_MINUS_SRC_ALPHA            : 0x0303,\n    DST_ALPHA                      : 0x0304,\n    ONE_MINUS_DST_ALPHA            : 0x0305,\n\n    /* BlendingFactorSrc */\n    /*      ZERO */\n    /*      ONE */\n    DST_COLOR                      : 0x0306,\n    ONE_MINUS_DST_COLOR            : 0x0307,\n    SRC_ALPHA_SATURATE             : 0x0308,\n    /*      SRC_ALPHA */\n    /*      ONE_MINUS_SRC_ALPHA */\n    /*      DST_ALPHA */\n    /*      ONE_MINUS_DST_ALPHA */\n\n    /* BlendEquationSeparate */\n    FUNC_ADD                       : 0x8006,\n    BLEND_EQUATION                 : 0x8009,\n    BLEND_EQUATION_RGB             : 0x8009, /* same as BLEND_EQUATION */\n    BLEND_EQUATION_ALPHA           : 0x883D,\n\n    /* BlendSubtract */\n    FUNC_SUBTRACT                  : 0x800A,\n    FUNC_REVERSE_SUBTRACT          : 0x800B,\n\n    /* Separate Blend Functions */\n    BLEND_DST_RGB                  : 0x80C8,\n    BLEND_SRC_RGB                  : 0x80C9,\n    BLEND_DST_ALPHA                : 0x80CA,\n    BLEND_SRC_ALPHA                : 0x80CB,\n    CONSTANT_COLOR                 : 0x8001,\n    ONE_MINUS_CONSTANT_COLOR       : 0x8002,\n    CONSTANT_ALPHA                 : 0x8003,\n    ONE_MINUS_CONSTANT_ALPHA       : 0x8004,\n    BLEND_COLOR                    : 0x8005,\n\n    /* Buffer Objects */\n    ARRAY_BUFFER                   : 0x8892,\n    ELEMENT_ARRAY_BUFFER           : 0x8893,\n    ARRAY_BUFFER_BINDING           : 0x8894,\n    ELEMENT_ARRAY_BUFFER_BINDING   : 0x8895,\n\n    STREAM_DRAW                    : 0x88E0,\n    STATIC_DRAW                    : 0x88E4,\n    DYNAMIC_DRAW                   : 0x88E8,\n\n    BUFFER_SIZE                    : 0x8764,\n    BUFFER_USAGE                   : 0x8765,\n\n    CURRENT_VERTEX_ATTRIB          : 0x8626,\n\n    /* CullFaceMode */\n    FRONT                          : 0x0404,\n    BACK                           : 0x0405,\n    FRONT_AND_BACK                 : 0x0408,\n\n    /* DepthFunction */\n    /*      NEVER */\n    /*      LESS */\n    /*      EQUAL */\n    /*      LEQUAL */\n    /*      GREATER */\n    /*      NOTEQUAL */\n    /*      GEQUAL */\n    /*      ALWAYS */\n\n    /* EnableCap */\n    /* TEXTURE_2D */\n    CULL_FACE                      : 0x0B44,\n    BLEND                          : 0x0BE2,\n    DITHER                         : 0x0BD0,\n    STENCIL_TEST                   : 0x0B90,\n    DEPTH_TEST                     : 0x0B71,\n    SCISSOR_TEST                   : 0x0C11,\n    POLYGON_OFFSET_FILL            : 0x8037,\n    SAMPLE_ALPHA_TO_COVERAGE       : 0x809E,\n    SAMPLE_COVERAGE                : 0x80A0,\n\n    /* ErrorCode */\n    NO_ERROR                       : 0,\n    INVALID_ENUM                   : 0x0500,\n    INVALID_VALUE                  : 0x0501,\n    INVALID_OPERATION              : 0x0502,\n    OUT_OF_MEMORY                  : 0x0505,\n\n    /* FrontFaceDirection */\n    CW                             : 0x0900,\n    CCW                            : 0x0901,\n\n    /* GetPName */\n    LINE_WIDTH                     : 0x0B21,\n    ALIASED_POINT_SIZE_RANGE       : 0x846D,\n    ALIASED_LINE_WIDTH_RANGE       : 0x846E,\n    CULL_FACE_MODE                 : 0x0B45,\n    FRONT_FACE                     : 0x0B46,\n    DEPTH_RANGE                    : 0x0B70,\n    DEPTH_WRITEMASK                : 0x0B72,\n    DEPTH_CLEAR_VALUE              : 0x0B73,\n    DEPTH_FUNC                     : 0x0B74,\n    STENCIL_CLEAR_VALUE            : 0x0B91,\n    STENCIL_FUNC                   : 0x0B92,\n    STENCIL_FAIL                   : 0x0B94,\n    STENCIL_PASS_DEPTH_FAIL        : 0x0B95,\n    STENCIL_PASS_DEPTH_PASS        : 0x0B96,\n    STENCIL_REF                    : 0x0B97,\n    STENCIL_VALUE_MASK             : 0x0B93,\n    STENCIL_WRITEMASK              : 0x0B98,\n    STENCIL_BACK_FUNC              : 0x8800,\n    STENCIL_BACK_FAIL              : 0x8801,\n    STENCIL_BACK_PASS_DEPTH_FAIL   : 0x8802,\n    STENCIL_BACK_PASS_DEPTH_PASS   : 0x8803,\n    STENCIL_BACK_REF               : 0x8CA3,\n    STENCIL_BACK_VALUE_MASK        : 0x8CA4,\n    STENCIL_BACK_WRITEMASK         : 0x8CA5,\n    VIEWPORT                       : 0x0BA2,\n    SCISSOR_BOX                    : 0x0C10,\n    /*      SCISSOR_TEST */\n    COLOR_CLEAR_VALUE              : 0x0C22,\n    COLOR_WRITEMASK                : 0x0C23,\n    UNPACK_ALIGNMENT               : 0x0CF5,\n    PACK_ALIGNMENT                 : 0x0D05,\n    MAX_TEXTURE_SIZE               : 0x0D33,\n    MAX_VIEWPORT_DIMS              : 0x0D3A,\n    SUBPIXEL_BITS                  : 0x0D50,\n    RED_BITS                       : 0x0D52,\n    GREEN_BITS                     : 0x0D53,\n    BLUE_BITS                      : 0x0D54,\n    ALPHA_BITS                     : 0x0D55,\n    DEPTH_BITS                     : 0x0D56,\n    STENCIL_BITS                   : 0x0D57,\n    POLYGON_OFFSET_UNITS           : 0x2A00,\n    /*      POLYGON_OFFSET_FILL */\n    POLYGON_OFFSET_FACTOR          : 0x8038,\n    TEXTURE_BINDING_2D             : 0x8069,\n    SAMPLE_BUFFERS                 : 0x80A8,\n    SAMPLES                        : 0x80A9,\n    SAMPLE_COVERAGE_VALUE          : 0x80AA,\n    SAMPLE_COVERAGE_INVERT         : 0x80AB,\n\n    /* GetTextureParameter */\n    /*      TEXTURE_MAG_FILTER */\n    /*      TEXTURE_MIN_FILTER */\n    /*      TEXTURE_WRAP_S */\n    /*      TEXTURE_WRAP_T */\n\n    COMPRESSED_TEXTURE_FORMATS     : 0x86A3,\n\n    /* HintMode */\n    DONT_CARE                      : 0x1100,\n    FASTEST                        : 0x1101,\n    NICEST                         : 0x1102,\n\n    /* HintTarget */\n    GENERATE_MIPMAP_HINT            : 0x8192,\n\n    /* DataType */\n    BYTE                           : 0x1400,\n    UNSIGNED_BYTE                  : 0x1401,\n    SHORT                          : 0x1402,\n    UNSIGNED_SHORT                 : 0x1403,\n    INT                            : 0x1404,\n    UNSIGNED_INT                   : 0x1405,\n    FLOAT                          : 0x1406,\n\n    /* PixelFormat */\n    DEPTH_COMPONENT                : 0x1902,\n    ALPHA                          : 0x1906,\n    RGB                            : 0x1907,\n    RGBA                           : 0x1908,\n    LUMINANCE                      : 0x1909,\n    LUMINANCE_ALPHA                : 0x190A,\n\n    /* PixelType */\n    /*      UNSIGNED_BYTE */\n    UNSIGNED_SHORT_4_4_4_4         : 0x8033,\n    UNSIGNED_SHORT_5_5_5_1         : 0x8034,\n    UNSIGNED_SHORT_5_6_5           : 0x8363,\n\n    /* Shaders */\n    FRAGMENT_SHADER                  : 0x8B30,\n    VERTEX_SHADER                    : 0x8B31,\n    MAX_VERTEX_ATTRIBS               : 0x8869,\n    MAX_VERTEX_UNIFORM_VECTORS       : 0x8DFB,\n    MAX_VARYING_VECTORS              : 0x8DFC,\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS : 0x8B4D,\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS   : 0x8B4C,\n    MAX_TEXTURE_IMAGE_UNITS          : 0x8872,\n    MAX_FRAGMENT_UNIFORM_VECTORS     : 0x8DFD,\n    SHADER_TYPE                      : 0x8B4F,\n    DELETE_STATUS                    : 0x8B80,\n    LINK_STATUS                      : 0x8B82,\n    VALIDATE_STATUS                  : 0x8B83,\n    ATTACHED_SHADERS                 : 0x8B85,\n    ACTIVE_UNIFORMS                  : 0x8B86,\n    ACTIVE_ATTRIBUTES                : 0x8B89,\n    SHADING_LANGUAGE_VERSION         : 0x8B8C,\n    CURRENT_PROGRAM                  : 0x8B8D,\n\n    /* StencilFunction */\n    NEVER                          : 0x0200,\n    LESS                           : 0x0201,\n    EQUAL                          : 0x0202,\n    LEQUAL                         : 0x0203,\n    GREATER                        : 0x0204,\n    NOTEQUAL                       : 0x0205,\n    GEQUAL                         : 0x0206,\n    ALWAYS                         : 0x0207,\n\n    /* StencilOp */\n    /*      ZERO */\n    KEEP                           : 0x1E00,\n    REPLACE                        : 0x1E01,\n    INCR                           : 0x1E02,\n    DECR                           : 0x1E03,\n    INVERT                         : 0x150A,\n    INCR_WRAP                      : 0x8507,\n    DECR_WRAP                      : 0x8508,\n\n    /* StringName */\n    VENDOR                         : 0x1F00,\n    RENDERER                       : 0x1F01,\n    VERSION                        : 0x1F02,\n\n    /* TextureMagFilter */\n    NEAREST                        : 0x2600,\n    LINEAR                         : 0x2601,\n\n    /* TextureMinFilter */\n    /*      NEAREST */\n    /*      LINEAR */\n    NEAREST_MIPMAP_NEAREST         : 0x2700,\n    LINEAR_MIPMAP_NEAREST          : 0x2701,\n    NEAREST_MIPMAP_LINEAR          : 0x2702,\n    LINEAR_MIPMAP_LINEAR           : 0x2703,\n\n    /* TextureParameterName */\n    TEXTURE_MAG_FILTER             : 0x2800,\n    TEXTURE_MIN_FILTER             : 0x2801,\n    TEXTURE_WRAP_S                 : 0x2802,\n    TEXTURE_WRAP_T                 : 0x2803,\n\n    /* TextureTarget */\n    TEXTURE_2D                     : 0x0DE1,\n    TEXTURE                        : 0x1702,\n\n    TEXTURE_CUBE_MAP               : 0x8513,\n    TEXTURE_BINDING_CUBE_MAP       : 0x8514,\n    TEXTURE_CUBE_MAP_POSITIVE_X    : 0x8515,\n    TEXTURE_CUBE_MAP_NEGATIVE_X    : 0x8516,\n    TEXTURE_CUBE_MAP_POSITIVE_Y    : 0x8517,\n    TEXTURE_CUBE_MAP_NEGATIVE_Y    : 0x8518,\n    TEXTURE_CUBE_MAP_POSITIVE_Z    : 0x8519,\n    TEXTURE_CUBE_MAP_NEGATIVE_Z    : 0x851A,\n    MAX_CUBE_MAP_TEXTURE_SIZE      : 0x851C,\n\n    /* TextureUnit */\n    TEXTURE0                       : 0x84C0,\n    TEXTURE1                       : 0x84C1,\n    TEXTURE2                       : 0x84C2,\n    TEXTURE3                       : 0x84C3,\n    TEXTURE4                       : 0x84C4,\n    TEXTURE5                       : 0x84C5,\n    TEXTURE6                       : 0x84C6,\n    TEXTURE7                       : 0x84C7,\n    TEXTURE8                       : 0x84C8,\n    TEXTURE9                       : 0x84C9,\n    TEXTURE10                      : 0x84CA,\n    TEXTURE11                      : 0x84CB,\n    TEXTURE12                      : 0x84CC,\n    TEXTURE13                      : 0x84CD,\n    TEXTURE14                      : 0x84CE,\n    TEXTURE15                      : 0x84CF,\n    TEXTURE16                      : 0x84D0,\n    TEXTURE17                      : 0x84D1,\n    TEXTURE18                      : 0x84D2,\n    TEXTURE19                      : 0x84D3,\n    TEXTURE20                      : 0x84D4,\n    TEXTURE21                      : 0x84D5,\n    TEXTURE22                      : 0x84D6,\n    TEXTURE23                      : 0x84D7,\n    TEXTURE24                      : 0x84D8,\n    TEXTURE25                      : 0x84D9,\n    TEXTURE26                      : 0x84DA,\n    TEXTURE27                      : 0x84DB,\n    TEXTURE28                      : 0x84DC,\n    TEXTURE29                      : 0x84DD,\n    TEXTURE30                      : 0x84DE,\n    TEXTURE31                      : 0x84DF,\n    ACTIVE_TEXTURE                 : 0x84E0,\n\n    /* TextureWrapMode */\n    REPEAT                         : 0x2901,\n    CLAMP_TO_EDGE                  : 0x812F,\n    MIRRORED_REPEAT                : 0x8370,\n\n    /* Uniform Types */\n    FLOAT_VEC2                     : 0x8B50,\n    FLOAT_VEC3                     : 0x8B51,\n    FLOAT_VEC4                     : 0x8B52,\n    INT_VEC2                       : 0x8B53,\n    INT_VEC3                       : 0x8B54,\n    INT_VEC4                       : 0x8B55,\n    BOOL                           : 0x8B56,\n    BOOL_VEC2                      : 0x8B57,\n    BOOL_VEC3                      : 0x8B58,\n    BOOL_VEC4                      : 0x8B59,\n    FLOAT_MAT2                     : 0x8B5A,\n    FLOAT_MAT3                     : 0x8B5B,\n    FLOAT_MAT4                     : 0x8B5C,\n    SAMPLER_2D                     : 0x8B5E,\n    SAMPLER_CUBE                   : 0x8B60,\n\n    /* Vertex Arrays */\n    VERTEX_ATTRIB_ARRAY_ENABLED        : 0x8622,\n    VERTEX_ATTRIB_ARRAY_SIZE           : 0x8623,\n    VERTEX_ATTRIB_ARRAY_STRIDE         : 0x8624,\n    VERTEX_ATTRIB_ARRAY_TYPE           : 0x8625,\n    VERTEX_ATTRIB_ARRAY_NORMALIZED     : 0x886A,\n    VERTEX_ATTRIB_ARRAY_POINTER        : 0x8645,\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : 0x889F,\n\n    /* Shader Source */\n    COMPILE_STATUS                 : 0x8B81,\n\n    /* Shader Precision-Specified Types */\n    LOW_FLOAT                      : 0x8DF0,\n    MEDIUM_FLOAT                   : 0x8DF1,\n    HIGH_FLOAT                     : 0x8DF2,\n    LOW_INT                        : 0x8DF3,\n    MEDIUM_INT                     : 0x8DF4,\n    HIGH_INT                       : 0x8DF5,\n\n    /* Framebuffer Object. */\n    FRAMEBUFFER                    : 0x8D40,\n    RENDERBUFFER                   : 0x8D41,\n\n    RGBA4                          : 0x8056,\n    RGB5_A1                        : 0x8057,\n    RGB565                         : 0x8D62,\n    DEPTH_COMPONENT16              : 0x81A5,\n    STENCIL_INDEX                  : 0x1901,\n    STENCIL_INDEX8                 : 0x8D48,\n    DEPTH_STENCIL                  : 0x84F9,\n\n    RENDERBUFFER_WIDTH             : 0x8D42,\n    RENDERBUFFER_HEIGHT            : 0x8D43,\n    RENDERBUFFER_INTERNAL_FORMAT   : 0x8D44,\n    RENDERBUFFER_RED_SIZE          : 0x8D50,\n    RENDERBUFFER_GREEN_SIZE        : 0x8D51,\n    RENDERBUFFER_BLUE_SIZE         : 0x8D52,\n    RENDERBUFFER_ALPHA_SIZE        : 0x8D53,\n    RENDERBUFFER_DEPTH_SIZE        : 0x8D54,\n    RENDERBUFFER_STENCIL_SIZE      : 0x8D55,\n\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           : 0x8CD0,\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           : 0x8CD1,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         : 0x8CD2,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : 0x8CD3,\n\n    COLOR_ATTACHMENT0              : 0x8CE0,\n    DEPTH_ATTACHMENT               : 0x8D00,\n    STENCIL_ATTACHMENT             : 0x8D20,\n    DEPTH_STENCIL_ATTACHMENT       : 0x821A,\n\n    NONE                           : 0,\n\n    FRAMEBUFFER_COMPLETE                      : 0x8CD5,\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT         : 0x8CD6,\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : 0x8CD7,\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS         : 0x8CD9,\n    FRAMEBUFFER_UNSUPPORTED                   : 0x8CDD,\n\n    FRAMEBUFFER_BINDING            : 0x8CA6,\n    RENDERBUFFER_BINDING           : 0x8CA7,\n    MAX_RENDERBUFFER_SIZE          : 0x84E8,\n\n    INVALID_FRAMEBUFFER_OPERATION  : 0x0506,\n\n    /* WebGL-specific enums */\n    UNPACK_FLIP_Y_WEBGL            : 0x9240,\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL : 0x9241,\n    CONTEXT_LOST_WEBGL             : 0x9242,\n    UNPACK_COLORSPACE_CONVERSION_WEBGL : 0x9243,\n    BROWSER_DEFAULT_WEBGL          : 0x9244,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__glmatrix_quat__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__glmatrix_mat3__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Vector3__ = __webpack_require__(6);\n\n\n\n\n\n\n/**\n * @constructor\n * @alias clay.Matrix4\n */\nvar Matrix4 = function() {\n\n    this._axisX = new __WEBPACK_IMPORTED_MODULE_4__Vector3__[\"a\" /* default */]();\n    this._axisY = new __WEBPACK_IMPORTED_MODULE_4__Vector3__[\"a\" /* default */]();\n    this._axisZ = new __WEBPACK_IMPORTED_MODULE_4__Vector3__[\"a\" /* default */]();\n\n    /**\n     * Storage of Matrix4\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix4#\n     */\n    this.array = __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix4#\n     */\n    this._dirty = true;\n};\n\nMatrix4.prototype = {\n\n    constructor: Matrix4,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix4}\n     */\n    adjoint: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Matrix4\n     * @return {clay.Matrix4}\n     */\n    clone: function() {\n        return (new Matrix4()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    copy: function(a) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].copy(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].determinant(this.array);\n    },\n\n    /**\n     * Set upper 3x3 part from quaternion\n     * @param  {clay.Quaternion} q\n     * @return {clay.Matrix4}\n     */\n    fromQuat: function(q) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].fromQuat(this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from a quaternion rotation and a vector translation\n     * @param  {clay.Quaternion} q\n     * @param  {clay.Vector3} v\n     * @return {clay.Matrix4}\n     */\n    fromRotationTranslation: function(q, v) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].fromRotationTranslation(this.array, q.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from Matrix2d, it is used when converting a 2d shape to 3d space.\n     * In 3d space it is equivalent to ranslate on xy plane and rotate about z axis\n     * @param  {clay.Matrix2d} m2d\n     * @return {clay.Matrix4}\n     */\n    fromMat2d: function(m2d) {\n        Matrix4.fromMat2d(this, m2d);\n        return this;\n    },\n\n    /**\n     * Set from frustum bounds\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    frustum: function (left, right, bottom, top, near, far) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].frustum(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix4}\n     */\n    identity: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix4}\n     */\n    invert: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a matrix with the given eye position, focal point, and up axis\n     * @param  {clay.Vector3} eye\n     * @param  {clay.Vector3} center\n     * @param  {clay.Vector3} up\n     * @return {clay.Matrix4}\n     */\n    lookAt: function(eye, center, up) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].lookAt(this.array, eye.array, center.array, up.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    mul: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix4} a\n     * @return {clay.Matrix4}\n     */\n    mulLeft: function(a) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    multiply: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    multiplyLeft: function(a) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a orthographic projection matrix\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    ortho: function(left, right, bottom, top, near, far) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].ortho(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Set as a perspective projection matrix\n     * @param  {number} fovy\n     * @param  {number} aspect\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    perspective: function(fovy, aspect, near, far) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].perspective(this.array, fovy, aspect, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by rad about axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param  {number}   rad\n     * @param  {clay.Vector3} axis\n     * @return {clay.Matrix4}\n     */\n    rotate: function(rad, axis) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotate(this.array, this.array, rad, axis.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about X axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateX: function(rad) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotateX(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Y axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateY: function(rad) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotateY(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Z axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateZ: function(rad) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotateZ(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * Equal to right-multiply a scale matrix\n     * @param  {clay.Vector3}  s\n     * @return {clay.Matrix4}\n     */\n    scale: function(v) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v.\n     * Equal to right-multiply a translate matrix\n     * @param  {clay.Vector3}  v\n     * @return {clay.Matrix4}\n     */\n    translate: function(v) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Decompose a matrix to SRT\n     * @param {clay.Vector3} [scale]\n     * @param {clay.Quaternion} rotation\n     * @param {clay.Vector} position\n     * @see http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.matrix.decompose.aspx\n     */\n    decomposeMatrix: (function() {\n\n        var x = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var y = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var z = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n\n        var m3 = __WEBPACK_IMPORTED_MODULE_3__glmatrix_mat3__[\"a\" /* default */].create();\n\n        return function(scale, rotation, position) {\n\n            var el = this.array;\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].set(x, el[0], el[1], el[2]);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].set(y, el[4], el[5], el[6]);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].set(z, el[8], el[9], el[10]);\n\n            var sx = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].length(x);\n            var sy = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].length(y);\n            var sz = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].length(z);\n\n            // if determine is negative, we need to invert one scale\n            var det = this.determinant();\n            if (det < 0) {\n                sx = -sx;\n            }\n\n            if (scale) {\n                scale.set(sx, sy, sz);\n            }\n\n            position.set(el[12], el[13], el[14]);\n\n            __WEBPACK_IMPORTED_MODULE_3__glmatrix_mat3__[\"a\" /* default */].fromMat4(m3, el);\n            // Not like mat4, mat3 in glmatrix seems to be row-based\n            // Seems fixed in gl-matrix 2.2.2\n            // https://github.com/toji/gl-matrix/issues/114\n            // mat3.transpose(m3, m3);\n\n            m3[0] /= sx;\n            m3[1] /= sx;\n            m3[2] /= sx;\n\n            m3[3] /= sy;\n            m3[4] /= sy;\n            m3[5] /= sy;\n\n            m3[6] /= sz;\n            m3[7] /= sz;\n            m3[8] /= sz;\n\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_quat__[\"a\" /* default */].fromMat3(rotation.array, m3);\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_quat__[\"a\" /* default */].normalize(rotation.array, rotation.array);\n\n            rotation._dirty = true;\n            position._dirty = true;\n        };\n    })(),\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n\nif (defineProperty) {\n    var proto = Matrix4.prototype;\n    /**\n     * Z Axis of local transform\n     * @name z\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            var el = this.array;\n            this._axisZ.set(el[8], el[9], el[10]);\n            return this._axisZ;\n        },\n        set: function (v) {\n            // TODO Here has a problem\n            // If only set an item of vector will not work\n            var el = this.array;\n            v = v.array;\n            el[8] = v[0];\n            el[9] = v[1];\n            el[10] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * Y Axis of local transform\n     * @name y\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            var el = this.array;\n            this._axisY.set(el[4], el[5], el[6]);\n            return this._axisY;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[4] = v[0];\n            el[5] = v[1];\n            el[6] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * X Axis of local transform\n     * @name x\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            var el = this.array;\n            this._axisX.set(el[0], el[1], el[2]);\n            return this._axisX;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[0] = v[0];\n            el[1] = v[1];\n            el[2] = v[2];\n\n            this._dirty = true;\n        }\n    })\n}\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.adjoint = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.copy = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} a\n * @return {number}\n */\nMatrix4.determinant = function(a) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @return {clay.Matrix4}\n */\nMatrix4.identity = function(out) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  left\n * @param  {number}  right\n * @param  {number}  bottom\n * @param  {number}  top\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.ortho = function(out, left, right, bottom, top, near, far) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].ortho(out.array, left, right, bottom, top, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  fovy\n * @param  {number}  aspect\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.perspective = function(out, fovy, aspect, near, far) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].perspective(out.array, fovy, aspect, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Vector3} eye\n * @param  {clay.Vector3} center\n * @param  {clay.Vector3} up\n * @return {clay.Matrix4}\n */\nMatrix4.lookAt = function(out, eye, center, up) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].lookAt(out.array, eye.array, center.array, up.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.invert = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.mul = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.multiply = Matrix4.mul;\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @return {clay.Matrix4}\n */\nMatrix4.fromQuat = function(out, q) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].fromQuat(out.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @param  {clay.Vector3}    v\n * @return {clay.Matrix4}\n */\nMatrix4.fromRotationTranslation = function(out, q, v) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].fromRotationTranslation(out.array, q.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} m4\n * @param  {clay.Matrix2d} m2d\n * @return {clay.Matrix4}\n */\nMatrix4.fromMat2d = function(m4, m2d) {\n    m4._dirty = true;\n    var m2d = m2d.array;\n    var m4 = m4.array;\n\n    m4[0] = m2d[0];\n    m4[4] = m2d[2];\n    m4[12] = m2d[4];\n\n    m4[1] = m2d[1];\n    m4[5] = m2d[3];\n    m4[13] = m2d[5];\n\n    return m4;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @param  {clay.Vector3} axis\n * @return {clay.Matrix4}\n */\nMatrix4.rotate = function(out, a, rad, axis) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotate(out.array, a.array, rad, axis.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateX = function(out, a, rad) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotateX(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateY = function(out, a, rad) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotateY(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateZ = function(out, a, rad) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].rotateZ(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.scale = function(out, a, v) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.transpose = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.translate = function(out, a, v) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_mat4__[\"a\" /* default */].translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Matrix4);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var guid = 0;\n\nvar ArrayProto = Array.prototype;\nvar nativeForEach = ArrayProto.forEach;\n\n/**\n * Util functions\n * @namespace clay.core.util\n */\nvar util = {\n\n    /**\n     * Generate GUID\n     * @return {number}\n     * @memberOf clay.core.util\n     */\n    genGUID: function () {\n        return ++guid;\n    },\n    /**\n     * Relative path to absolute path\n     * @param  {string} path\n     * @param  {string} basePath\n     * @return {string}\n     * @memberOf clay.core.util\n     */\n    relative2absolute: function (path, basePath) {\n        if (!basePath || path.match(/^\\//)) {\n            return path;\n        }\n        var pathParts = path.split('/');\n        var basePathParts = basePath.split('/');\n\n        var item = pathParts[0];\n        while(item === '.' || item === '..') {\n            if (item === '..') {\n                basePathParts.pop();\n            }\n            pathParts.shift();\n            item = pathParts[0];\n        }\n        return basePathParts.join('/') + '/' + pathParts.join('/');\n    },\n\n    /**\n     * Extend target with source\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extend: function (target, source) {\n        if (source) {\n            for (var name in source) {\n                if (source.hasOwnProperty(name)) {\n                    target[name] = source[name];\n                }\n            }\n        }\n        return target;\n    },\n\n    /**\n     * Extend properties to target if not exist.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaults: function (target, source) {\n        if (source) {\n            for (var propName in source) {\n                if (target[propName] === undefined) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties with a given property list to avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extendWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                target[propName] = source[propName];\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties to target if not exist. With a given property list avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaultsWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                if (target[propName] == null) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * @param  {Object|Array} obj\n     * @param  {Function} iterator\n     * @param  {Object} [context]\n     * @memberOf clay.core.util\n     */\n    each: function (obj, iterator, context) {\n        if (!(obj && iterator)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(iterator, context);\n        }\n        else if (obj.length === + obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                iterator.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    },\n\n    /**\n     * Is object\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isObject: function (obj) {\n        return obj === Object(obj);\n    },\n\n    /**\n     * Is array ?\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArray: function (obj) {\n        return Array.isArray(obj);\n    },\n\n    /**\n     * Is array like, which have a length property\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArrayLike: function (obj) {\n        if (!obj) {\n            return false;\n        }\n        else {\n            return obj.length === + obj.length;\n        }\n    },\n\n    /**\n     * @param  {} obj\n     * @return {}\n     * @memberOf clay.core.util\n     */\n    clone: function (obj) {\n        if (!util.isObject(obj)) {\n            return obj;\n        }\n        else if (util.isArray(obj)) {\n            return obj.slice();\n        }\n        else if (util.isArrayLike(obj)) { // is typed array\n            var ret = new obj.constructor(obj.length);\n            for (var i = 0; i < obj.length; i++) {\n                ret[i] = obj[i];\n            }\n            return ret;\n        }\n        else {\n            return util.extend({}, obj);\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (util);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__ = __webpack_require__(3);\n\n\n\nvar vec3Set = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].set;\nvar vec3Copy = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].copy;\n\n/**\n * Axis aligned bounding box\n * @constructor\n * @alias clay.BoundingBox\n * @param {clay.Vector3} [min]\n * @param {clay.Vector3} [max]\n */\nvar BoundingBox = function (min, max) {\n\n    /**\n     * Minimum coords of bounding box\n     * @type {clay.Vector3}\n     */\n    this.min = min || new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */](Infinity, Infinity, Infinity);\n\n    /**\n     * Maximum coords of bounding box\n     * @type {clay.Vector3}\n     */\n    this.max = max || new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */](-Infinity, -Infinity, -Infinity);\n\n    this.vertices = null;\n};\n\nBoundingBox.prototype = {\n\n    constructor: BoundingBox,\n    /**\n     * Update min and max coords from a vertices array\n     * @param  {array} vertices\n     */\n    updateFromVertices: function (vertices) {\n        if (vertices.length > 0) {\n            var min = this.min;\n            var max = this.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            vec3Copy(minArr, vertices[0]);\n            vec3Copy(maxArr, vertices[0]);\n            for (var i = 1; i < vertices.length; i++) {\n                var vertex = vertices[i];\n\n                if (vertex[0] < minArr[0]) { minArr[0] = vertex[0]; }\n                if (vertex[1] < minArr[1]) { minArr[1] = vertex[1]; }\n                if (vertex[2] < minArr[2]) { minArr[2] = vertex[2]; }\n\n                if (vertex[0] > maxArr[0]) { maxArr[0] = vertex[0]; }\n                if (vertex[1] > maxArr[1]) { maxArr[1] = vertex[1]; }\n                if (vertex[2] > maxArr[2]) { maxArr[2] = vertex[2]; }\n            }\n            min._dirty = true;\n            max._dirty = true;\n        }\n    },\n\n    /**\n     * Union operation with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    union: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].min(min.array, min.array, bbox.min.array);\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].max(max.array, max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * Intersection operation with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    intersection: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].max(min.array, min.array, bbox.min.array);\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].min(max.array, max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * If intersect with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     * @return {boolean}\n     */\n    intersectBoundingBox: function (bbox) {\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _min2 = bbox.min.array;\n        var _max2 = bbox.max.array;\n\n        return ! (_min[0] > _max2[0] || _min[1] > _max2[1] || _min[2] > _max2[2]\n            || _max[0] < _min2[0] || _max[1] < _min2[1] || _max[2] < _min2[2]);\n    },\n\n    /**\n     * If contain another bounding box entirely\n     * @param  {clay.BoundingBox} bbox\n     * @return {boolean}\n     */\n    containBoundingBox: function (bbox) {\n\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _min2 = bbox.min.array;\n        var _max2 = bbox.max.array;\n\n        return _min[0] <= _min2[0] && _min[1] <= _min2[1] && _min[2] <= _min2[2]\n            && _max[0] >= _max2[0] && _max[1] >= _max2[1] && _max[2] >= _max2[2];\n    },\n\n    /**\n     * If contain point entirely\n     * @param  {clay.Vector3} point\n     * @return {boolean}\n     */\n    containPoint: function (p) {\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _p = p.array;\n\n        return _min[0] <= _p[0] && _min[1] <= _p[1] && _min[2] <= _p[2]\n            && _max[0] >= _p[0] && _max[1] >= _p[1] && _max[2] >= _p[2];\n    },\n\n    /**\n     * If bounding box is finite\n     */\n    isFinite: function () {\n        var _min = this.min.array;\n        var _max = this.max.array;\n        return isFinite(_min[0]) && isFinite(_min[1]) && isFinite(_min[2])\n            && isFinite(_max[0]) && isFinite(_max[1]) && isFinite(_max[2]);\n    },\n\n    /**\n     * Apply an affine transform matrix to the bounding box\n     * @param  {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n        this.transformFrom(this, matrix);\n    },\n\n    /**\n     * Get from another bounding box and an affine transform matrix.\n     * @param {clay.BoundingBox} source\n     * @param {clay.Matrix4} matrix\n     */\n    transformFrom: (function () {\n        // http://dev.theomader.com/transform-bounding-boxes/\n        var xa = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var xb = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var ya = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var yb = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var za = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var zb = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n\n        return function (source, matrix) {\n            var min = source.min.array;\n            var max = source.max.array;\n\n            var m = matrix.array;\n\n            xa[0] = m[0] * min[0]; xa[1] = m[1] * min[0]; xa[2] = m[2] * min[0];\n            xb[0] = m[0] * max[0]; xb[1] = m[1] * max[0]; xb[2] = m[2] * max[0];\n\n            ya[0] = m[4] * min[1]; ya[1] = m[5] * min[1]; ya[2] = m[6] * min[1];\n            yb[0] = m[4] * max[1]; yb[1] = m[5] * max[1]; yb[2] = m[6] * max[1];\n\n            za[0] = m[8] * min[2]; za[1] = m[9] * min[2]; za[2] = m[10] * min[2];\n            zb[0] = m[8] * max[2]; zb[1] = m[9] * max[2]; zb[2] = m[10] * max[2];\n\n            min = this.min.array;\n            max = this.max.array;\n            min[0] = Math.min(xa[0], xb[0]) + Math.min(ya[0], yb[0]) + Math.min(za[0], zb[0]) + m[12];\n            min[1] = Math.min(xa[1], xb[1]) + Math.min(ya[1], yb[1]) + Math.min(za[1], zb[1]) + m[13];\n            min[2] = Math.min(xa[2], xb[2]) + Math.min(ya[2], yb[2]) + Math.min(za[2], zb[2]) + m[14];\n\n            max[0] = Math.max(xa[0], xb[0]) + Math.max(ya[0], yb[0]) + Math.max(za[0], zb[0]) + m[12];\n            max[1] = Math.max(xa[1], xb[1]) + Math.max(ya[1], yb[1]) + Math.max(za[1], zb[1]) + m[13];\n            max[2] = Math.max(xa[2], xb[2]) + Math.max(ya[2], yb[2]) + Math.max(za[2], zb[2]) + m[14];\n\n            this.min._dirty = true;\n            this.max._dirty = true;\n\n            return this;\n        };\n    })(),\n\n    /**\n     * Apply a projection matrix to the bounding box\n     * @param  {clay.Matrix4} matrix\n     */\n    applyProjection: function (matrix) {\n        var min = this.min.array;\n        var max = this.max.array;\n\n        var m = matrix.array;\n        // min in min z\n        var v10 = min[0];\n        var v11 = min[1];\n        var v12 = min[2];\n        // max in min z\n        var v20 = max[0];\n        var v21 = max[1];\n        var v22 = min[2];\n        // max in max z\n        var v30 = max[0];\n        var v31 = max[1];\n        var v32 = max[2];\n\n        if (m[15] === 1) {  // Orthographic projection\n            min[0] = m[0] * v10 + m[12];\n            min[1] = m[5] * v11 + m[13];\n            max[2] = m[10] * v12 + m[14];\n\n            max[0] = m[0] * v30 + m[12];\n            max[1] = m[5] * v31 + m[13];\n            min[2] = m[10] * v32 + m[14];\n        }\n        else {\n            var w = -1 / v12;\n            min[0] = m[0] * v10 * w;\n            min[1] = m[5] * v11 * w;\n            max[2] = (m[10] * v12 + m[14]) * w;\n\n            w = -1 / v22;\n            max[0] = m[0] * v20 * w;\n            max[1] = m[5] * v21 * w;\n\n            w = -1 / v32;\n            min[2] = (m[10] * v32 + m[14]) * w;\n        }\n        this.min._dirty = true;\n        this.max._dirty = true;\n\n        return this;\n    },\n\n    updateVertices: function () {\n        var vertices = this.vertices;\n        if (!vertices) {\n            // Cube vertices\n            vertices = [];\n            for (var i = 0; i < 8; i++) {\n                vertices[i] = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].fromValues(0, 0, 0);\n            }\n\n            /**\n             * Eight coords of bounding box\n             * @type {Float32Array[]}\n             */\n            this.vertices = vertices;\n        }\n        var min = this.min.array;\n        var max = this.max.array;\n        //--- min z\n        // min x\n        vec3Set(vertices[0], min[0], min[1], min[2]);\n        vec3Set(vertices[1], min[0], max[1], min[2]);\n        // max x\n        vec3Set(vertices[2], max[0], min[1], min[2]);\n        vec3Set(vertices[3], max[0], max[1], min[2]);\n\n        //-- max z\n        vec3Set(vertices[4], min[0], min[1], max[2]);\n        vec3Set(vertices[5], min[0], max[1], max[2]);\n        vec3Set(vertices[6], max[0], min[1], max[2]);\n        vec3Set(vertices[7], max[0], max[1], max[2]);\n\n        return this;\n    },\n    /**\n     * Copy values from another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    copy: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        vec3Copy(min.array, bbox.min.array);\n        vec3Copy(max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new bounding box\n     * @return {clay.BoundingBox}\n     */\n    clone: function () {\n        var boundingBox = new BoundingBox();\n        boundingBox.copy(this);\n        return boundingBox;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BoundingBox);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__TextureCube__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_Cache__ = __webpack_require__(34);\n\n\n\n\n\n\nvar KEY_FRAMEBUFFER = 'framebuffer';\nvar KEY_RENDERBUFFER = 'renderbuffer';\nvar KEY_RENDERBUFFER_WIDTH = KEY_RENDERBUFFER + '_width';\nvar KEY_RENDERBUFFER_HEIGHT = KEY_RENDERBUFFER + '_height';\nvar KEY_RENDERBUFFER_ATTACHED = KEY_RENDERBUFFER + '_attached';\nvar KEY_DEPTHTEXTURE_ATTACHED = 'depthtexture_attached';\n\nvar GL_FRAMEBUFFER = __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].FRAMEBUFFER;\nvar GL_RENDERBUFFER = __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].RENDERBUFFER;\nvar GL_DEPTH_ATTACHMENT = __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].DEPTH_ATTACHMENT;\nvar GL_COLOR_ATTACHMENT0 = __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].COLOR_ATTACHMENT0;\n/**\n * @constructor clay.FrameBuffer\n * @extends clay.core.Base\n */\nvar FrameBuffer = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(\n/** @lends clay.FrameBuffer# */\n{\n    /**\n     * If use depth buffer\n     * @type {boolean}\n     */\n    depthBuffer: true,\n\n    /**\n     * @type {Object}\n     */\n    viewport: null,\n\n    _width: 0,\n    _height: 0,\n\n    _textures: null,\n\n    _boundRenderer: null,\n}, function () {\n    // Use cache\n    this._cache = new __WEBPACK_IMPORTED_MODULE_4__core_Cache__[\"a\" /* default */]();\n\n    this._textures = {};\n},\n\n/**@lends clay.FrameBuffer.prototype. */\n{\n    /**\n     * Get attached texture width\n     * {number}\n     */\n    // FIXME Can't use before #bind\n    getTextureWidth: function () {\n        return this._width;\n    },\n\n    /**\n     * Get attached texture height\n     * {number}\n     */\n    getTextureHeight: function () {\n        return this._height;\n    },\n\n    /**\n     * Bind the framebuffer to given renderer before rendering\n     * @param  {clay.Renderer} renderer\n     */\n    bind: function (renderer) {\n\n        if (renderer.__currentFrameBuffer) {\n            // Already bound\n            if (renderer.__currentFrameBuffer === this) {\n                return;\n            }\n\n            console.warn('Renderer already bound with another framebuffer. Unbind it first');\n        }\n        renderer.__currentFrameBuffer = this;\n\n        var _gl = renderer.gl;\n\n        _gl.bindFramebuffer(GL_FRAMEBUFFER, this._getFrameBufferGL(renderer));\n        this._boundRenderer = renderer;\n        var cache = this._cache;\n\n        cache.put('viewport', renderer.viewport);\n\n        var hasTextureAttached = false;\n        var width;\n        var height;\n        for (var attachment in this._textures) {\n            hasTextureAttached = true;\n            var obj = this._textures[attachment];\n            if (obj) {\n                // TODO Do width, height checking, make sure size are same\n                width = obj.texture.width;\n                height = obj.texture.height;\n                // Attach textures\n                this._doAttach(renderer, obj.texture, attachment, obj.target);\n            }\n        }\n\n        this._width = width;\n        this._height = height;\n\n        if (!hasTextureAttached && this.depthBuffer) {\n            console.error('Must attach texture before bind, or renderbuffer may have incorrect width and height.')\n        }\n\n        if (this.viewport) {\n            renderer.setViewport(this.viewport);\n        }\n        else {\n            renderer.setViewport(0, 0, width, height, 1);\n        }\n\n        var attachedTextures = cache.get('attached_textures');\n        if (attachedTextures) {\n            for (var attachment in attachedTextures) {\n                if (!this._textures[attachment]) {\n                    var target = attachedTextures[attachment];\n                    this._doDetach(_gl, attachment, target);\n                }\n            }\n        }\n        if (!cache.get(KEY_DEPTHTEXTURE_ATTACHED) && this.depthBuffer) {\n            // Create a new render buffer\n            if (cache.miss(KEY_RENDERBUFFER)) {\n                cache.put(KEY_RENDERBUFFER, _gl.createRenderbuffer());\n            }\n            var renderbuffer = cache.get(KEY_RENDERBUFFER);\n\n            if (width !== cache.get(KEY_RENDERBUFFER_WIDTH)\n                    || height !== cache.get(KEY_RENDERBUFFER_HEIGHT)) {\n                _gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer);\n                _gl.renderbufferStorage(GL_RENDERBUFFER, _gl.DEPTH_COMPONENT16, width, height);\n                cache.put(KEY_RENDERBUFFER_WIDTH, width);\n                cache.put(KEY_RENDERBUFFER_HEIGHT, height);\n                _gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n            }\n            if (!cache.get(KEY_RENDERBUFFER_ATTACHED)) {\n                _gl.framebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_RENDERBUFFER, renderbuffer);\n                cache.put(KEY_RENDERBUFFER_ATTACHED, true);\n            }\n        }\n    },\n\n    /**\n     * Unbind the frame buffer after rendering\n     * @param  {clay.Renderer} renderer\n     */\n    unbind: function (renderer) {\n        // Remove status record on renderer\n        renderer.__currentFrameBuffer = null;\n\n        var _gl = renderer.gl;\n\n        _gl.bindFramebuffer(GL_FRAMEBUFFER, null);\n        this._boundRenderer = null;\n\n        this._cache.use(renderer.__uid__);\n        var viewport = this._cache.get('viewport');\n        // Reset viewport;\n        if (viewport) {\n            renderer.setViewport(viewport);\n        }\n\n        this.updateMipmap(renderer);\n    },\n\n    // Because the data of texture is changed over time,\n    // Here update the mipmaps of texture each time after rendered;\n    updateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        for (var attachment in this._textures) {\n            var obj = this._textures[attachment];\n            if (obj) {\n                var texture = obj.texture;\n                // FIXME some texture format can't generate mipmap\n                if (!texture.NPOT && texture.useMipmap\n                    && texture.minFilter === __WEBPACK_IMPORTED_MODULE_1__Texture__[\"a\" /* default */].LINEAR_MIPMAP_LINEAR) {\n                    var target = texture.textureType === 'textureCube' ? __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].TEXTURE_CUBE_MAP : __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].TEXTURE_2D;\n                    _gl.bindTexture(target, texture.getWebGLTexture(renderer));\n                    _gl.generateMipmap(target);\n                    _gl.bindTexture(target, null);\n                }\n            }\n        }\n    },\n\n\n    // 0x8CD5, 36053, FRAMEBUFFER_COMPLETE\n    // 0x8CD6, 36054, FRAMEBUFFER_INCOMPLETE_ATTACHMENT\n    // 0x8CD7, 36055, FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n    // 0x8CD9, 36057, FRAMEBUFFER_INCOMPLETE_DIMENSIONS\n    // 0x8CDD, 36061, FRAMEBUFFER_UNSUPPORTED\n    checkStatus: function (_gl) {\n        return _gl.checkFramebufferStatus(GL_FRAMEBUFFER);\n    },\n\n    _getFrameBufferGL: function (renderer) {\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n\n        if (cache.miss(KEY_FRAMEBUFFER)) {\n            cache.put(KEY_FRAMEBUFFER, renderer.gl.createFramebuffer());\n        }\n\n        return cache.get(KEY_FRAMEBUFFER);\n    },\n\n    /**\n     * Attach a texture(RTT) to the framebuffer\n     * @param  {clay.Texture} texture\n     * @param  {number} [attachment=gl.COLOR_ATTACHMENT0]\n     * @param  {number} [target=gl.TEXTURE_2D]\n     */\n    attach: function (texture, attachment, target) {\n\n        if (!texture.width) {\n            throw new Error('The texture attached to color buffer is not a valid.');\n        }\n        // TODO width and height check\n\n        // If the depth_texture extension is enabled, developers\n        // Can attach a depth texture to the depth buffer\n        // http://blog.tojicode.com/2012/07/using-webgldepthtexture.html\n        attachment = attachment || GL_COLOR_ATTACHMENT0;\n        target = target || __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].TEXTURE_2D;\n\n        var boundRenderer = this._boundRenderer;\n        var _gl = boundRenderer && boundRenderer.gl;\n        var attachedTextures;\n\n        if (_gl) {\n            var cache = this._cache;\n            cache.use(boundRenderer.__uid__);\n            attachedTextures = cache.get('attached_textures');\n        }\n\n        // Check if texture attached\n        var previous = this._textures[attachment];\n        if (previous && previous.target === target\n            && previous.texture === texture\n            && (attachedTextures && attachedTextures[attachment] != null)\n        ) {\n            return;\n        }\n\n        var canAttach = true;\n        if (boundRenderer) {\n            canAttach = this._doAttach(boundRenderer, texture, attachment, target);\n            // Set viewport again incase attached to different size textures.\n            if (!this.viewport) {\n                boundRenderer.setViewport(0, 0, texture.width, texture.height, 1);\n            }\n        }\n\n        if (canAttach) {\n            this._textures[attachment] = this._textures[attachment] || {};\n            this._textures[attachment].texture = texture;\n            this._textures[attachment].target = target;\n        }\n    },\n\n    _doAttach: function (renderer, texture, attachment, target) {\n        var _gl = renderer.gl;\n        // Make sure texture is always updated\n        // Because texture width or height may be changed and in this we can't be notified\n        // FIXME awkward;\n        var webglTexture = texture.getWebGLTexture(renderer);\n        // Assume cache has been used.\n        var attachedTextures = this._cache.get('attached_textures');\n        if (attachedTextures && attachedTextures[attachment]) {\n            var obj = attachedTextures[attachment];\n            // Check if texture and target not changed\n            if (obj.texture === texture && obj.target === target) {\n                return;\n            }\n        }\n        attachment = +attachment;\n\n        var canAttach = true;\n        if (attachment === GL_DEPTH_ATTACHMENT || attachment === __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].DEPTH_STENCIL_ATTACHMENT) {\n            var extension = renderer.getGLExtension('WEBGL_depth_texture');\n\n            if (!extension) {\n                console.error('Depth texture is not supported by the browser');\n                canAttach = false;\n            }\n            if (texture.format !== __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].DEPTH_COMPONENT\n                && texture.format !== __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].DEPTH_STENCIL\n            ) {\n                console.error('The texture attached to depth buffer is not a valid.');\n                canAttach = false;\n            }\n\n            // Dispose render buffer created previous\n            if (canAttach) {\n                var renderbuffer = this._cache.get(KEY_RENDERBUFFER);\n                if (renderbuffer) {\n                    _gl.framebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_RENDERBUFFER, null);\n                    _gl.deleteRenderbuffer(renderbuffer);\n                    this._cache.put(KEY_RENDERBUFFER, false);\n                }\n\n                this._cache.put(KEY_RENDERBUFFER_ATTACHED, false);\n                this._cache.put(KEY_DEPTHTEXTURE_ATTACHED, true);\n            }\n        }\n\n        // Mipmap level can only be 0\n        _gl.framebufferTexture2D(GL_FRAMEBUFFER, attachment, target, webglTexture, 0);\n\n        if (!attachedTextures) {\n            attachedTextures = {};\n            this._cache.put('attached_textures', attachedTextures);\n        }\n        attachedTextures[attachment] = attachedTextures[attachment] || {};\n        attachedTextures[attachment].texture = texture;\n        attachedTextures[attachment].target = target;\n\n        return canAttach;\n    },\n\n    _doDetach: function (_gl, attachment, target) {\n        // Detach a texture from framebuffer\n        // https://github.com/KhronosGroup/WebGL/blob/master/conformance-suites/1.0.0/conformance/framebuffer-test.html#L145\n        _gl.framebufferTexture2D(GL_FRAMEBUFFER, attachment, target, null, 0);\n\n        // Assume cache has been used.\n        var attachedTextures = this._cache.get('attached_textures');\n        if (attachedTextures && attachedTextures[attachment]) {\n            attachedTextures[attachment] = null;\n        }\n\n        if (attachment === GL_DEPTH_ATTACHMENT || attachment === __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].DEPTH_STENCIL_ATTACHMENT) {\n            this._cache.put(KEY_DEPTHTEXTURE_ATTACHED, false);\n        }\n    },\n\n    /**\n     * Detach a texture\n     * @param  {number} [attachment=gl.COLOR_ATTACHMENT0]\n     * @param  {number} [target=gl.TEXTURE_2D]\n     */\n    detach: function (attachment, target) {\n        // TODO depth extension check ?\n        this._textures[attachment] = null;\n        if (this._boundRenderer) {\n            var cache = this._cache;\n            cache.use(this._boundRenderer.__uid__);\n            this._doDetach(this._boundRenderer.gl, attachment, target);\n        }\n    },\n    /**\n     * Dispose\n     * @param  {WebGLRenderingContext} _gl\n     */\n    dispose: function (renderer) {\n\n        var _gl = renderer.gl;\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n\n        var renderBuffer = cache.get(KEY_RENDERBUFFER);\n        if (renderBuffer) {\n            _gl.deleteRenderbuffer(renderBuffer);\n        }\n        var frameBuffer = cache.get(KEY_FRAMEBUFFER);\n        if (frameBuffer) {\n            _gl.deleteFramebuffer(frameBuffer);\n        }\n        cache.deleteContext(renderer.__uid__);\n\n        // Clear cache for reusing\n        this._textures = {};\n\n    }\n});\n\nFrameBuffer.DEPTH_ATTACHMENT = GL_DEPTH_ATTACHMENT;\nFrameBuffer.COLOR_ATTACHMENT0 = GL_COLOR_ATTACHMENT0;\nFrameBuffer.STENCIL_ATTACHMENT = __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].STENCIL_ATTACHMENT;\nFrameBuffer.DEPTH_STENCIL_ATTACHMENT = __WEBPACK_IMPORTED_MODULE_3__core_glenum__[\"a\" /* default */].DEPTH_STENCIL_ATTACHMENT;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FrameBuffer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_color__ = __webpack_require__(76);\n\n\n\nvar parseColor = __WEBPACK_IMPORTED_MODULE_2__core_color__[\"a\" /* default */].parseToFloat;\n\nvar programKeyCache = {};\n\nfunction getDefineCode(defines) {\n    var defineKeys = Object.keys(defines);\n    defineKeys.sort();\n    var defineStr = [];\n    // Custom Defines\n    for (var i = 0; i < defineKeys.length; i++) {\n        var key = defineKeys[i];\n        var value = defines[key];\n        if (value === null) {\n            defineStr.push(key);\n        }\n        else{\n            defineStr.push(key + ' ' + value.toString());\n        }\n    }\n    return defineStr.join('\\n');\n}\n\nfunction getProgramKey(vertexDefines, fragmentDefines, enabledTextures) {\n    enabledTextures.sort();\n    var defineStr = [];\n    for (var i = 0; i < enabledTextures.length; i++) {\n        var symbol = enabledTextures[i];\n        defineStr.push(symbol);\n    }\n    var key = getDefineCode(vertexDefines) + '\\n'\n        + getDefineCode(fragmentDefines) + '\\n'\n        + defineStr.join('\\n');\n\n    if (programKeyCache[key]) {\n        return programKeyCache[key];\n    }\n\n    var id = __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].genGUID();\n    programKeyCache[key] = id;\n    return id;\n}\n\n/**\n * Material defines the appearance of mesh surface, like `color`, `roughness`, `metalness`, etc.\n * It contains a {@link clay.Shader} and corresponding uniforms.\n *\n * Here is a basic example to create a standard material\n```js\nvar material = new clay.Material({\n    shader: new clay.Shader(\n        clay.Shader.source('clay.vertex'),\n        clay.Shader.source('clay.fragment')\n    )\n});\n```\n * @constructor clay.Material\n * @extends clay.core.Base\n */\nvar Material = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Material# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * @type {Object}\n         */\n        // uniforms: null,\n\n        /**\n         * @type {clay.Shader}\n         */\n        // shader: null,\n\n        /**\n         * @type {boolean}\n         */\n        depthTest: true,\n\n        /**\n         * @type {boolean}\n         */\n        depthMask: true,\n\n        /**\n         * @type {boolean}\n         */\n        transparent: false,\n        /**\n         * Blend func is a callback function when the material\n         * have custom blending\n         * The gl context will be the only argument passed in tho the\n         * blend function\n         * Detail of blend function in WebGL:\n         * http://www.khronos.org/registry/gles/specs/2.0/es_full_spec_2.0.25.pdf\n         *\n         * Example :\n         * function(_gl) {\n         *  _gl.blendEquation(_gl.FUNC_ADD);\n         *  _gl.blendFunc(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA);\n         * }\n         */\n        blend: null,\n\n        /**\n         * If update texture status automatically.\n         */\n        autoUpdateTextureStatus: true,\n\n        uniforms: {},\n        vertexDefines: {},\n        fragmentDefines: {},\n        _textureStatus: {},\n\n        // shadowTransparentMap : null\n\n        // PENDING enable the uniform that only used in shader.\n        _enabledUniforms: null,\n    };\n}, function () {\n    if (!this.name) {\n        this.name = 'MATERIAL_' + this.__uid__;\n    }\n\n    if (this.shader) {\n        // Keep status, mainly preset uniforms, vertexDefines and fragmentDefines\n        this.attachShader(this.shader, true);\n    }\n},\n/** @lends clay.Material.prototype */\n{\n    precision: 'highp',\n\n    /**\n     * Set material uniform\n     * @example\n     *  mat.setUniform('color', [1, 1, 1, 1]);\n     * @param {string} symbol\n     * @param {number|array|clay.Texture|ArrayBufferView} value\n     */\n    setUniform: function (symbol, value) {\n        if (value === undefined) {\n            console.warn('Uniform value \"' + symbol + '\" is undefined');\n        }\n        var uniform = this.uniforms[symbol];\n        if (uniform) {\n\n            if (typeof value === 'string') {\n                // Try to parse as a color. Invalid color string will return null.\n                value = parseColor(value) || value;\n            }\n\n            uniform.value = value;\n\n            if (this.autoUpdateTextureStatus && uniform.type === 't') {\n                if (value) {\n                    this.enableTexture(symbol);\n                }\n                else {\n                    this.disableTexture(symbol);\n                }\n            }\n        }\n    },\n\n    /**\n     * @param {Object} obj\n     */\n    setUniforms: function(obj) {\n        for (var key in obj) {\n            var val = obj[key];\n            this.setUniform(key, val);\n        }\n    },\n\n    /**\n     * @param  {string}  symbol\n     * @return {boolean}\n     */\n    isUniformEnabled: function (symbol) {\n        return this._enabledUniforms.indexOf(symbol) >= 0;\n    },\n\n    getEnabledUniforms: function () {\n        return this._enabledUniforms;\n    },\n    getTextureUniforms: function () {\n        return this._textureUniforms;\n    },\n\n    /**\n     * Alias of setUniform and setUniforms\n     * @param {object|string} symbol\n     * @param {number|array|clay.Texture|ArrayBufferView} [value]\n     */\n    set: function (symbol, value) {\n        if (typeof(symbol) === 'object') {\n            for (var key in symbol) {\n                var val = symbol[key];\n                this.setUniform(key, val);\n            }\n        }\n        else {\n            this.setUniform(symbol, value);\n        }\n    },\n    /**\n     * Get uniform value\n     * @param  {string} symbol\n     * @return {number|array|clay.Texture|ArrayBufferView}\n     */\n    get: function (symbol) {\n        var uniform = this.uniforms[symbol];\n        if (uniform) {\n            return uniform.value;\n        }\n    },\n    /**\n     * Attach a shader instance\n     * @param  {clay.Shader} shader\n     * @param  {boolean} keepStatus If try to keep uniform and texture\n     */\n    attachShader: function(shader, keepStatus) {\n        var originalUniforms = this.uniforms;\n\n        // Ignore if uniform can use in shader.\n        this.uniforms = shader.createUniforms();\n        this.shader = shader;\n\n        var uniforms = this.uniforms;\n        this._enabledUniforms = Object.keys(uniforms);\n        // Make sure uniforms are set in same order to avoid texture slot wrong\n        this._enabledUniforms.sort();\n        this._textureUniforms = this._enabledUniforms.filter(function (uniformName) {\n            var type = this.uniforms[uniformName].type;\n            return type === 't' || type === 'tv';\n        }, this);\n\n        var originalVertexDefines = this.vertexDefines;\n        var originalFragmentDefines = this.fragmentDefines;\n\n        this.vertexDefines = __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].clone(shader.vertexDefines);\n        this.fragmentDefines = __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].clone(shader.fragmentDefines);\n\n        if (keepStatus) {\n            for (var symbol in originalUniforms) {\n                if (uniforms[symbol]) {\n                    uniforms[symbol].value = originalUniforms[symbol].value;\n                }\n            }\n\n            __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].defaults(this.vertexDefines, originalVertexDefines);\n            __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].defaults(this.fragmentDefines, originalFragmentDefines);\n        }\n\n        var textureStatus = {};\n        for (var key in shader.textures) {\n            textureStatus[key] = {\n                shaderType: shader.textures[key].shaderType,\n                type: shader.textures[key].type,\n                enabled: (keepStatus && this._textureStatus[key]) ? this._textureStatus[key].enabled : false\n            };\n        }\n\n        this._textureStatus = textureStatus;\n\n        this._programKey = '';\n    },\n\n    /**\n     * Clone a new material and keep uniforms, shader will not be cloned\n     * @return {clay.Material}\n     */\n    clone: function () {\n        var material = new this.constructor({\n            name: this.name,\n            shader: this.shader\n        });\n        for (var symbol in this.uniforms) {\n            material.uniforms[symbol].value = this.uniforms[symbol].value;\n        }\n        material.depthTest = this.depthTest;\n        material.depthMask = this.depthMask;\n        material.transparent = this.transparent;\n        material.blend = this.blend;\n\n        material.vertexDefines = __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].clone(this.vertexDefines);\n        material.fragmentDefines = __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].clone(this.fragmentDefines);\n        material.enableTexture(this.getEnabledTextures());\n        material.precision = this.precision;\n\n        return material;\n    },\n\n    /**\n     * Add a #define macro in shader code\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     * @param  {number} [val]\n     */\n    define: function (shaderType, symbol, val) {\n        var vertexDefines = this.vertexDefines;\n        var fragmentDefines = this.fragmentDefines;\n        if (shaderType !== 'vertex' && shaderType !== 'fragment' && shaderType !== 'both'\n            && arguments.length < 3\n        ) {\n            // shaderType default to be 'both'\n            val = symbol;\n            symbol = shaderType;\n            shaderType = 'both';\n        }\n        val = val != null ? val : null;\n        if (shaderType === 'vertex' || shaderType === 'both') {\n            if (vertexDefines[symbol] !== val) {\n                vertexDefines[symbol] = val;\n                // Mark as dirty\n                this._programKey = '';\n            }\n        }\n        if (shaderType === 'fragment' || shaderType === 'both') {\n            if (fragmentDefines[symbol] !== val) {\n                fragmentDefines[symbol] = val;\n                if (shaderType !== 'both') {\n                    this._programKey = '';\n                }\n            }\n        }\n    },\n\n    /**\n     * Remove a #define macro in shader code\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     */\n    undefine: function (shaderType, symbol) {\n        if (shaderType !== 'vertex' && shaderType !== 'fragment' && shaderType !== 'both'\n            && arguments.length < 2\n        ) {\n            // shaderType default to be 'both'\n            symbol = shaderType;\n            shaderType = 'both';\n        }\n        if (shaderType === 'vertex' || shaderType === 'both') {\n            if (this.isDefined('vertex', symbol)) {\n                delete this.vertexDefines[symbol];\n                // Mark as dirty\n                this._programKey = '';\n            }\n        }\n        if (shaderType === 'fragment' || shaderType === 'both') {\n            if (this.isDefined('fragment', symbol)) {\n                delete this.fragmentDefines[symbol];\n                if (shaderType !== 'both') {\n                    this._programKey = '';\n                }\n            }\n        }\n    },\n\n    /**\n     * If macro is defined in shader.\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     */\n    isDefined: function (shaderType, symbol) {\n        // PENDING hasOwnProperty ?\n        switch (shaderType) {\n            case 'vertex':\n                return this.vertexDefines[symbol] !== undefined;\n            case 'fragment':\n                return this.fragmentDefines[symbol] !== undefined;\n        }\n    },\n    /**\n     * Get macro value defined in shader.\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     */\n    getDefine: function (shaderType, symbol) {\n        switch(shaderType) {\n            case 'vertex':\n                return this.vertexDefines[symbol];\n            case 'fragment':\n                return this.fragmentDefines[symbol];\n        }\n    },\n    /**\n     * Enable a texture, actually it will add a #define macro in the shader code\n     * For example, if texture symbol is diffuseMap, it will add a line `#define DIFFUSEMAP_ENABLED` in the shader code\n     * @param  {string} symbol\n     */\n    enableTexture: function (symbol) {\n        if (Array.isArray(symbol)) {\n            for (var i = 0; i < symbol.length; i++) {\n                this.enableTexture(symbol[i]);\n            }\n            return;\n        }\n\n        var status = this._textureStatus[symbol];\n        if (status) {\n            var isEnabled = status.enabled;\n            if (!isEnabled) {\n                status.enabled = true;\n                this._programKey = '';\n            }\n        }\n    },\n    /**\n     * Enable all textures used in the shader\n     */\n    enableTexturesAll: function () {\n        var textureStatus = this._textureStatus;\n        for (var symbol in textureStatus) {\n            textureStatus[symbol].enabled = true;\n        }\n\n        this._programKey = '';\n    },\n    /**\n     * Disable a texture, it remove a #define macro in the shader\n     * @param  {string} symbol\n     */\n    disableTexture: function (symbol) {\n        if (Array.isArray(symbol)) {\n            for (var i = 0; i < symbol.length; i++) {\n                this.disableTexture(symbol[i]);\n            }\n            return;\n        }\n\n        var status = this._textureStatus[symbol];\n        if (status) {\n            var isDisabled = ! status.enabled;\n            if (!isDisabled) {\n                status.enabled = false;\n                this._programKey = '';\n            }\n        }\n    },\n    /**\n     * Disable all textures used in the shader\n     */\n    disableTexturesAll: function () {\n        var textureStatus = this._textureStatus;\n        for (var symbol in textureStatus) {\n            textureStatus[symbol].enabled = false;\n        }\n\n        this._programKey = '';\n    },\n    /**\n     * If texture of given type is enabled.\n     * @param  {string}  symbol\n     * @return {boolean}\n     */\n    isTextureEnabled: function (symbol) {\n        var textureStatus = this._textureStatus;\n        return !!textureStatus[symbol]\n            && textureStatus[symbol].enabled;\n    },\n\n    /**\n     * Get all enabled textures\n     * @return {string[]}\n     */\n    getEnabledTextures: function () {\n        var enabledTextures = [];\n        var textureStatus = this._textureStatus;\n        for (var symbol in textureStatus) {\n            if (textureStatus[symbol].enabled) {\n                enabledTextures.push(symbol);\n            }\n        }\n        return enabledTextures;\n    },\n\n    /**\n     * Mark defines are updated.\n     */\n    dirtyDefines: function () {\n        this._programKey = '';\n    },\n\n    getProgramKey: function () {\n        if (!this._programKey) {\n            this._programKey = getProgramKey(\n                this.vertexDefines, this.fragmentDefines, this.getEnabledTextures()\n            );\n        }\n        return this._programKey;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Material);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\n\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Multiplies two affine mat4's\n * Add by https://github.com/pissang\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiplyAffine = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[4], a11 = a[5], a12 = a[6],\n        a20 = a[8], a21 = a[9], a22 = a[10],\n        a30 = a[12], a31 = a[13], a32 = a[14];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2];\n    out[0] = b0*a00 + b1*a10 + b2*a20;\n    out[1] = b0*a01 + b1*a11 + b2*a21;\n    out[2] = b0*a02 + b1*a12 + b2*a22;\n    // out[3] = 0;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6];\n    out[4] = b0*a00 + b1*a10 + b2*a20;\n    out[5] = b0*a01 + b1*a11 + b2*a21;\n    out[6] = b0*a02 + b1*a12 + b2*a22;\n    // out[7] = 0;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10];\n    out[8] = b0*a00 + b1*a10 + b2*a20;\n    out[9] = b0*a01 + b1*a11 + b2*a21;\n    out[10] = b0*a02 + b1*a12 + b2*a22;\n    // out[11] = 0;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + a32;\n    // out[15] = 1;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Alias for {@link mat4.multiplyAffine}\n * @function\n */\nmat4.mulAffine = mat4.multiplyAffine;\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < __WEBPACK_IMPORTED_MODULE_0__common__[\"b\" /* GLMAT_EPSILON */]) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < __WEBPACK_IMPORTED_MODULE_0__common__[\"b\" /* GLMAT_EPSILON */] &&\n        Math.abs(eyey - centery) < __WEBPACK_IMPORTED_MODULE_0__common__[\"b\" /* GLMAT_EPSILON */] &&\n        Math.abs(eyez - centerz) < __WEBPACK_IMPORTED_MODULE_0__common__[\"b\" /* GLMAT_EPSILON */]) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (mat4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__camera_Orthographic__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__geometry_Plane__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Mesh__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shader_source_compositor_vertex_glsl_js__ = __webpack_require__(104);\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_7__shader_source_compositor_vertex_glsl_js__[\"a\" /* default */]);\n\nvar planeGeo = new __WEBPACK_IMPORTED_MODULE_2__geometry_Plane__[\"a\" /* default */]();\nvar mesh = new __WEBPACK_IMPORTED_MODULE_5__Mesh__[\"a\" /* default */]({\n    geometry: planeGeo,\n    frustumCulling: false\n});\nvar camera = new __WEBPACK_IMPORTED_MODULE_1__camera_Orthographic__[\"a\" /* default */]();\n\n/**\n * @constructor clay.compositor.Pass\n * @extends clay.core.Base\n */\nvar Pass = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.compositor.Pass# */ {\n        /**\n         * Fragment shader string\n         * @type {string}\n         */\n        // PENDING shader or fragment ?\n        fragment: '',\n\n        /**\n         * @type {Object}\n         */\n        outputs: null,\n\n        /**\n         * @type {clay.Material}\n         */\n        material: null,\n\n        /**\n         * @type {Boolean}\n         */\n        blendWithPrevious: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearColor: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearDepth: true\n    };\n}, function() {\n\n    var shader = new __WEBPACK_IMPORTED_MODULE_3__Shader__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_3__Shader__[\"a\" /* default */].source('clay.compositor.vertex'), this.fragment);\n    var material = new __WEBPACK_IMPORTED_MODULE_4__Material__[\"a\" /* default */]({\n        shader: shader\n    });\n    material.enableTexturesAll();\n\n    this.material = material;\n\n},\n/** @lends clay.compositor.Pass.prototype */\n{\n    /**\n     * @param {string} name\n     * @param {} value\n     */\n    setUniform: function(name, value) {\n        this.material.setUniform(name, value);\n    },\n    /**\n     * @param  {string} name\n     * @return {}\n     */\n    getUniform: function(name) {\n        var uniform = this.material.uniforms[name];\n        if (uniform) {\n            return uniform.value;\n        }\n    },\n    /**\n     * @param  {clay.Texture} texture\n     * @param  {number} attachment\n     */\n    attachOutput: function(texture, attachment) {\n        if (!this.outputs) {\n            this.outputs = {};\n        }\n        attachment = attachment || __WEBPACK_IMPORTED_MODULE_6__core_glenum__[\"a\" /* default */].COLOR_ATTACHMENT0;\n        this.outputs[attachment] = texture;\n    },\n    /**\n     * @param  {clay.Texture} texture\n     */\n    detachOutput: function(texture) {\n        for (var attachment in this.outputs) {\n            if (this.outputs[attachment] === texture) {\n                this.outputs[attachment] = null;\n            }\n        }\n    },\n\n    bind: function(renderer, frameBuffer) {\n\n        if (this.outputs) {\n            for (var attachment in this.outputs) {\n                var texture = this.outputs[attachment];\n                if (texture) {\n                    frameBuffer.attach(texture, attachment);\n                }\n            }\n        }\n\n        if (frameBuffer) {\n            frameBuffer.bind(renderer);\n        }\n    },\n\n    unbind: function(renderer, frameBuffer) {\n        frameBuffer.unbind(renderer);\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.FrameBuffer} [frameBuffer]\n     */\n    render: function(renderer, frameBuffer) {\n\n        var _gl = renderer.gl;\n\n        if (frameBuffer) {\n            this.bind(renderer, frameBuffer);\n            // MRT Support in chrome\n            // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n            var ext = renderer.getGLExtension('EXT_draw_buffers');\n            if (ext && this.outputs) {\n                var bufs = [];\n                for (var attachment in this.outputs) {\n                    attachment = +attachment;\n                    if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n                        bufs.push(attachment);\n                    }\n                }\n                ext.drawBuffersEXT(bufs);\n            }\n        }\n\n        this.trigger('beforerender', this, renderer);\n\n        // FIXME Don't clear in each pass in default, let the color overwrite the buffer\n        // FIXME pixels may be discard\n        var clearBit = this.clearDepth ? _gl.DEPTH_BUFFER_BIT : 0;\n        _gl.depthMask(true);\n        if (this.clearColor) {\n            clearBit = clearBit | _gl.COLOR_BUFFER_BIT;\n            _gl.colorMask(true, true, true, true);\n            var cc = this.clearColor;\n            if (Array.isArray(cc)) {\n                _gl.clearColor(cc[0], cc[1], cc[2], cc[3]);\n            }\n        }\n        _gl.clear(clearBit);\n\n        if (this.blendWithPrevious) {\n            // Blend with previous rendered scene in the final output\n            // FIXME Configure blend.\n            // FIXME It will cause screen blink？\n            _gl.enable(_gl.BLEND);\n            this.material.transparent = true;\n        }\n        else {\n            _gl.disable(_gl.BLEND);\n            this.material.transparent = false;\n        }\n\n        this.renderQuad(renderer);\n\n        this.trigger('afterrender', this, renderer);\n\n        if (frameBuffer) {\n            this.unbind(renderer, frameBuffer);\n        }\n    },\n\n    /**\n     * Simply do quad rendering\n     */\n    renderQuad: function (renderer) {\n        mesh.material = this.material;\n        renderer.renderPass([mesh], camera);\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {}\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Pass);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return GLMAT_EPSILON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GLMAT_ARRAY_TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return GLMAT_RANDOM; });\n\nvar GLMAT_EPSILON = 0.000001;\n\n// Use Array instead of Float32Array. It seems to be much faster and higher precision.\nvar GLMAT_ARRAY_TYPE = Array;\n// if(!GLMAT_ARRAY_TYPE) {\n//     GLMAT_ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\n// }\n\nvar GLMAT_RANDOM = Math.random;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvZ2xtYXRyaXgvY29tbW9uLmpzPzg4ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgdmFyIEdMTUFUX0VQU0lMT04gPSAwLjAwMDAwMTtcblxuLy8gVXNlIEFycmF5IGluc3RlYWQgb2YgRmxvYXQzMkFycmF5LiBJdCBzZWVtcyB0byBiZSBtdWNoIGZhc3RlciBhbmQgaGlnaGVyIHByZWNpc2lvbi5cbmV4cG9ydCB2YXIgR0xNQVRfQVJSQVlfVFlQRSA9IEFycmF5O1xuLy8gaWYoIUdMTUFUX0FSUkFZX1RZUEUpIHtcbi8vICAgICBHTE1BVF9BUlJBWV9UWVBFID0gKHR5cGVvZiBGbG9hdDMyQXJyYXkgIT09ICd1bmRlZmluZWQnKSA/IEZsb2F0MzJBcnJheSA6IEFycmF5O1xuLy8gfVxuXG5leHBvcnQgdmFyIEdMTUFUX1JBTkRPTSA9IE1hdGgucmFuZG9tO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvZ2xtYXRyaXgvY29tbW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAxNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math_Quaternion__ = __webpack_require__(80);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__math_BoundingBox__ = __webpack_require__(10);\n\n\n\n\n\n\n\nvar nameId = 0;\n\n/**\n * @constructor clay.Node\n * @extends clay.core.Base\n */\nvar Node = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(/** @lends clay.Node# */{\n    /**\n     * Scene node name\n     * @type {string}\n     */\n    name: '',\n\n    /**\n     * Position relative to its parent node. aka translation.\n     * @type {clay.Vector3}\n     */\n    position: null,\n\n    /**\n     * Rotation relative to its parent node. Represented by a quaternion\n     * @type {clay.Quaternion}\n     */\n    rotation: null,\n\n    /**\n     * Scale relative to its parent node\n     * @type {clay.Vector3}\n     */\n    scale: null,\n\n    /**\n     * Affine transform matrix relative to its root scene.\n     * @type {clay.Matrix4}\n     */\n    worldTransform: null,\n\n    /**\n     * Affine transform matrix relative to its parent node.\n     * Composited with position, rotation and scale.\n     * @type {clay.Matrix4}\n     */\n    localTransform: null,\n\n    /**\n     * If the local transform is update from SRT(scale, rotation, translation, which is position here) each frame\n     * @type {boolean}\n     */\n    autoUpdateLocalTransform: true,\n\n    /**\n     * Parent of current scene node\n     * @type {?clay.Node}\n     * @private\n     */\n    _parent: null,\n    /**\n     * The root scene mounted. Null if it is a isolated node\n     * @type {?clay.Scene}\n     * @private\n     */\n    _scene: null,\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _needsUpdateWorldTransform: true,\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _inIterating: false,\n\n    // Depth for transparent list sorting\n    __depth: 0\n\n}, function () {\n\n    if (!this.name) {\n        this.name = (this.type || 'NODE') + '_' + (nameId++);\n    }\n\n    if (!this.position) {\n        this.position = new __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */]();\n    }\n    if (!this.rotation) {\n        this.rotation = new __WEBPACK_IMPORTED_MODULE_2__math_Quaternion__[\"a\" /* default */]();\n    }\n    if (!this.scale) {\n        this.scale = new __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */](1, 1, 1);\n    }\n\n    this.worldTransform = new __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */]();\n    this.localTransform = new __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */]();\n\n    this._children = [];\n\n},\n/**@lends clay.Node.prototype. */\n{\n\n    /**\n     * @type {?clay.Vector3}\n     * @instance\n     */\n    target: null,\n    /**\n     * If node and its chilren invisible\n     * @type {boolean}\n     * @instance\n     */\n    invisible: false,\n\n    /**\n     * If Node is a skinned mesh\n     * @return {boolean}\n     */\n    isSkinnedMesh: function () {\n        return false;\n    },\n    /**\n     * Return true if it is a renderable scene node, like Mesh and ParticleSystem\n     * @return {boolean}\n     */\n    isRenderable: function () {\n        return false;\n    },\n\n    /**\n     * Set the name of the scene node\n     * @param {string} name\n     */\n    setName: function (name) {\n        var scene = this._scene;\n        if (scene) {\n            var nodeRepository = scene._nodeRepository;\n            delete nodeRepository[this.name];\n            nodeRepository[name] = this;\n        }\n        this.name = name;\n    },\n\n    /**\n     * Add a child node\n     * @param {clay.Node} node\n     */\n    add: function (node) {\n        var originalParent = node._parent;\n        if (originalParent === this) {\n            return;\n        }\n        if (originalParent) {\n            originalParent.remove(node);\n        }\n        node._parent = this;\n        this._children.push(node);\n\n        var scene = this._scene;\n        if (scene && scene !== node.scene) {\n            node.traverse(this._addSelfToScene, this);\n        }\n        // Mark children needs update transform\n        // In case child are remove and added again after parent moved\n        node._needsUpdateWorldTransform = true;\n    },\n\n    /**\n     * Remove the given child scene node\n     * @param {clay.Node} node\n     */\n    remove: function (node) {\n        var children = this._children;\n        var idx = children.indexOf(node);\n        if (idx < 0) {\n            return;\n        }\n\n        children.splice(idx, 1);\n        node._parent = null;\n\n        if (this._scene) {\n            node.traverse(this._removeSelfFromScene, this);\n        }\n    },\n\n    /**\n     * Remove all children\n     */\n    removeAll: function () {\n        var children = this._children;\n\n        for (var idx = 0; idx < children.length; idx++) {\n            children[idx]._parent = null;\n\n            if (this._scene) {\n                children[idx].traverse(this._removeSelfFromScene, this);\n            }\n        }\n\n        this._children = [];\n    },\n\n    /**\n     * Get the scene mounted\n     * @return {clay.Scene}\n     */\n    getScene: function () {\n        return this._scene;\n    },\n\n    /**\n     * Get parent node\n     * @return {clay.Scene}\n     */\n    getParent: function () {\n        return this._parent;\n    },\n\n    _removeSelfFromScene: function (descendant) {\n        descendant._scene.removeFromScene(descendant);\n        descendant._scene = null;\n    },\n\n    _addSelfToScene: function (descendant) {\n        this._scene.addToScene(descendant);\n        descendant._scene = this._scene;\n    },\n\n    /**\n     * Return true if it is ancestor of the given scene node\n     * @param {clay.Node} node\n     */\n    isAncestor: function (node) {\n        var parent = node._parent;\n        while(parent) {\n            if (parent === this) {\n                return true;\n            }\n            parent = parent._parent;\n        }\n        return false;\n    },\n\n    /**\n     * Get a new created array of all children nodes\n     * @return {clay.Node[]}\n     */\n    children: function () {\n        return this._children.slice();\n    },\n\n    /**\n     * Get child scene node at given index.\n     * @param {number} idx\n     * @return {clay.Node}\n     */\n    childAt: function (idx) {\n        return this._children[idx];\n    },\n\n    /**\n     * Get first child with the given name\n     * @param {string} name\n     * @return {clay.Node}\n     */\n    getChildByName: function (name) {\n        var children = this._children;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].name === name) {\n                return children[i];\n            }\n        }\n    },\n\n    /**\n     * Get first descendant have the given name\n     * @param {string} name\n     * @return {clay.Node}\n     */\n    getDescendantByName: function (name) {\n        var children = this._children;\n        for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            if (child.name === name) {\n                return child;\n            } else {\n                var res = child.getDescendantByName(name);\n                if (res) {\n                    return res;\n                }\n            }\n        }\n    },\n\n    /**\n     * Query descendant node by path\n     * @param {string} path\n     * @return {clay.Node}\n     * @example\n     *  node.queryNode('root/parent/child');\n     */\n    queryNode: function (path) {\n        if (!path) {\n            return;\n        }\n        // TODO Name have slash ?\n        var pathArr = path.split('/');\n        var current = this;\n        for (var i = 0; i < pathArr.length; i++) {\n            var name = pathArr[i];\n            // Skip empty\n            if (!name) {\n                continue;\n            }\n            var found = false;\n            var children = current._children;\n            for (var j = 0; j < children.length; j++) {\n                var child = children[j];\n                if (child.name === name) {\n                    current = child;\n                    found = true;\n                    break;\n                }\n            }\n            // Early return if not found\n            if (!found) {\n                return;\n            }\n        }\n\n        return current;\n    },\n\n    /**\n     * Get query path, relative to rootNode(default is scene)\n     * @param {clay.Node} [rootNode]\n     * @return {string}\n     */\n    getPath: function (rootNode) {\n        if (!this._parent) {\n            return '/';\n        }\n\n        var current = this._parent;\n        var path = this.name;\n        while (current._parent) {\n            path = current.name + '/' + path;\n            if (current._parent == rootNode) {\n                break;\n            }\n            current = current._parent;\n        }\n        if (!current._parent && rootNode) {\n            return null;\n        }\n        return path;\n    },\n\n    /**\n     * Depth first traverse all its descendant scene nodes.\n     *\n     * **WARN** Don't do `add`, `remove` operation in the callback during traverse.\n     * @param {Function} callback\n     * @param {Node} [context]\n     */\n    traverse: function (callback, context) {\n        callback.call(context, this);\n        var _children = this._children;\n        for(var i = 0, len = _children.length; i < len; i++) {\n            _children[i].traverse(callback, context);\n        }\n    },\n\n    /**\n     * Traverse all children nodes.\n     *\n     * **WARN** DON'T do `add`, `remove` operation in the callback during iteration.\n     *\n     * @param {Function} callback\n     * @param {Node} [context]\n     */\n    eachChild: function (callback, context) {\n        var _children = this._children;\n        for(var i = 0, len = _children.length; i < len; i++) {\n            var child = _children[i];\n            callback.call(context, child, i);\n        }\n    },\n\n    /**\n     * Set the local transform and decompose to SRT\n     * @param {clay.Matrix4} matrix\n     */\n    setLocalTransform: function (matrix) {\n        __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].copy(this.localTransform.array, matrix.array);\n        this.decomposeLocalTransform();\n    },\n\n    /**\n     * Decompose the local transform to SRT\n     */\n    decomposeLocalTransform: function (keepScale) {\n        var scale = !keepScale ? this.scale: null;\n        this.localTransform.decomposeMatrix(scale, this.rotation, this.position);\n    },\n\n    /**\n     * Set the world transform and decompose to SRT\n     * @param {clay.Matrix4} matrix\n     */\n    setWorldTransform: function (matrix) {\n        __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].copy(this.worldTransform.array, matrix.array);\n        this.decomposeWorldTransform();\n    },\n\n    /**\n     * Decompose the world transform to SRT\n     * @function\n     */\n    decomposeWorldTransform: (function () {\n\n        var tmp = __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].create();\n\n        return function (keepScale) {\n            var localTransform = this.localTransform;\n            var worldTransform = this.worldTransform;\n            // Assume world transform is updated\n            if (this._parent) {\n                __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].invert(tmp, this._parent.worldTransform.array);\n                __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].multiply(localTransform.array, tmp, worldTransform.array);\n            } else {\n                __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].copy(localTransform.array, worldTransform.array);\n            }\n            var scale = !keepScale ? this.scale: null;\n            localTransform.decomposeMatrix(scale, this.rotation, this.position);\n        };\n    })(),\n\n    transformNeedsUpdate: function () {\n        return this.position._dirty\n            || this.rotation._dirty\n            || this.scale._dirty;\n    },\n\n    /**\n     * Update local transform from SRT\n     * Notice that local transform will not be updated if _dirty mark of position, rotation, scale is all false\n     */\n    updateLocalTransform: function () {\n        var position = this.position;\n        var rotation = this.rotation;\n        var scale = this.scale;\n\n        if (this.transformNeedsUpdate()) {\n            var m = this.localTransform.array;\n\n            // Transform order, scale->rotation->position\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].fromRotationTranslation(m, rotation.array, position.array);\n\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].scale(m, m, scale.array);\n\n            rotation._dirty = false;\n            scale._dirty = false;\n            position._dirty = false;\n\n            this._needsUpdateWorldTransform = true;\n        }\n    },\n\n    /**\n     * Update world transform, assume its parent world transform have been updated\n     * @private\n     */\n    _updateWorldTransformTopDown: function () {\n        var localTransform = this.localTransform.array;\n        var worldTransform = this.worldTransform.array;\n        if (this._parent) {\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].multiplyAffine(\n                worldTransform,\n                this._parent.worldTransform.array,\n                localTransform\n            );\n        }\n        else {\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_mat4__[\"a\" /* default */].copy(worldTransform, localTransform);\n        }\n    },\n\n    /**\n     * Update world transform before whole scene is updated.\n     */\n    updateWorldTransform: function () {\n        // Find the root node which transform needs update;\n        var rootNodeIsDirty = this;\n        while (rootNodeIsDirty && rootNodeIsDirty.getParent()\n            && rootNodeIsDirty.getParent().transformNeedsUpdate()\n        ) {\n            rootNodeIsDirty = rootNodeIsDirty.getParent();\n        }\n        rootNodeIsDirty.update();\n    },\n\n    /**\n     * Update local transform and world transform recursively\n     * @param {boolean} forceUpdateWorld\n     */\n    update: function (forceUpdateWorld) {\n        if (this.autoUpdateLocalTransform) {\n            this.updateLocalTransform();\n        }\n        else {\n            // Transform is manually setted\n            forceUpdateWorld = true;\n        }\n\n        if (forceUpdateWorld || this._needsUpdateWorldTransform) {\n            this._updateWorldTransformTopDown();\n            forceUpdateWorld = true;\n            this._needsUpdateWorldTransform = false;\n        }\n\n        var children = this._children;\n        for(var i = 0, len = children.length; i < len; i++) {\n            children[i].update(forceUpdateWorld);\n        }\n    },\n\n    /**\n     * Get bounding box of node\n     * @param  {Function} [filter]\n     * @param  {clay.BoundingBox} [out]\n     * @return {clay.BoundingBox}\n     */\n    // TODO Skinning\n    getBoundingBox: (function () {\n        function defaultFilter (el) {\n            return !el.invisible && el.geometry;\n        }\n        var tmpBBox = new __WEBPACK_IMPORTED_MODULE_5__math_BoundingBox__[\"a\" /* default */]();\n        var tmpMat4 = new __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */]();\n        var invWorldTransform = new __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */]();\n        return function (filter, out) {\n            out = out || new __WEBPACK_IMPORTED_MODULE_5__math_BoundingBox__[\"a\" /* default */]();\n            filter = filter || defaultFilter;\n\n            if (this._parent) {\n                __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */].invert(invWorldTransform, this._parent.worldTransform);\n            }\n            else {\n                __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */].identity(invWorldTransform);\n            }\n\n            this.traverse(function (mesh) {\n                if (mesh.geometry && mesh.geometry.boundingBox) {\n                    tmpBBox.copy(mesh.geometry.boundingBox);\n                    __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */].multiply(tmpMat4, invWorldTransform, mesh.worldTransform);\n                    tmpBBox.applyTransform(tmpMat4);\n                    out.union(tmpBBox);\n                }\n            }, this, defaultFilter);\n\n            return out;\n        };\n    })(),\n\n    /**\n     * Get world position, extracted from world transform\n     * @param  {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    getWorldPosition: function (out) {\n        // PENDING\n        if (this.transformNeedsUpdate()) {\n            this.updateWorldTransform();\n        }\n        var m = this.worldTransform.array;\n        if (out) {\n            var arr = out.array;\n            arr[0] = m[12];\n            arr[1] = m[13];\n            arr[2] = m[14];\n            return out;\n        }\n        else {\n            return new __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */](m[12], m[13], m[14]);\n        }\n    },\n\n    /**\n     * Clone a new node\n     * @return {Node}\n     */\n    clone: function () {\n        var node = new this.constructor();\n\n        var children = this._children;\n\n        node.setName(this.name);\n        node.position.copy(this.position);\n        node.rotation.copy(this.rotation);\n        node.scale.copy(this.scale);\n\n        for (var i = 0; i < children.length; i++) {\n            node.add(children[i].clone());\n        }\n\n        return node;\n    },\n\n    /**\n     * Rotate the node around a axis by angle degrees, axis passes through point\n     * @param {clay.Vector3} point Center point\n     * @param {clay.Vector3} axis  Center axis\n     * @param {number}       angle Rotation angle\n     * @see http://docs.unity3d.com/Documentation/ScriptReference/Transform.RotateAround.html\n     * @function\n     */\n    rotateAround: (function () {\n        var v = new __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */]();\n        var RTMatrix = new __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */]();\n\n        // TODO improve performance\n        return function (point, axis, angle) {\n\n            v.copy(this.position).subtract(point);\n\n            var localTransform = this.localTransform;\n            localTransform.identity();\n            // parent node\n            localTransform.translate(point);\n            localTransform.rotate(angle, axis);\n\n            RTMatrix.fromRotationTranslation(this.rotation, v);\n            localTransform.multiply(RTMatrix);\n            localTransform.scale(this.scale);\n\n            this.decomposeLocalTransform();\n            this._needsUpdateWorldTransform = true;\n        };\n    })(),\n\n    /**\n     * @param {clay.Vector3} target\n     * @param {clay.Vector3} [up]\n     * @see http://www.opengl.org/sdk/docs/man2/xhtml/gluLookAt.xml\n     * @function\n     */\n    lookAt: (function () {\n        var m = new __WEBPACK_IMPORTED_MODULE_3__math_Matrix4__[\"a\" /* default */]();\n        return function (target, up) {\n            m.lookAt(this.position, target, up || this.localTransform.y).invert();\n            this.setLocalTransform(m);\n\n            this.target = target;\n        };\n    })()\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Node);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_util__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_vendor__ = __webpack_require__(5);\n\n\n\n\n\nvar isPowerOfTwo = __WEBPACK_IMPORTED_MODULE_3__math_util__[\"a\" /* default */].isPowerOfTwo;\n\nvar targetList = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n/**\n * @constructor clay.TextureCube\n * @extends clay.Texture\n *\n * @example\n *     ...\n *     var mat = new clay.Material({\n *         shader: clay.shader.library.get('clay.phong', 'environmentMap')\n *     });\n *     var envMap = new clay.TextureCube();\n *     envMap.load({\n *         'px': 'assets/textures/sky/px.jpg',\n *         'nx': 'assets/textures/sky/nx.jpg'\n *         'py': 'assets/textures/sky/py.jpg'\n *         'ny': 'assets/textures/sky/ny.jpg'\n *         'pz': 'assets/textures/sky/pz.jpg'\n *         'nz': 'assets/textures/sky/nz.jpg'\n *     });\n *     mat.set('environmentMap', envMap);\n *     ...\n *     envMap.success(function () {\n *         // Wait for the sky texture loaded\n *         animation.on('frame', function (frameTime) {\n *             renderer.render(scene, camera);\n *         });\n *     });\n */\nvar TextureCube = __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.TextureCube# */{\n\n        /**\n         * @type {boolean}\n         * @default false\n         */\n        // PENDING cubemap should not flipY in default.\n        // flipY: false,\n\n        /**\n         * @type {Object}\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} px\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} nx\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} py\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} ny\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} pz\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} nz\n         */\n        image: {\n            px: null,\n            nx: null,\n            py: null,\n            ny: null,\n            pz: null,\n            nz: null\n        },\n        /**\n         * Pixels data of each side. Will be ignored if images are set.\n         * @type {Object}\n         * @property {?Uint8Array} px\n         * @property {?Uint8Array} nx\n         * @property {?Uint8Array} py\n         * @property {?Uint8Array} ny\n         * @property {?Uint8Array} pz\n         * @property {?Uint8Array} nz\n         */\n        pixels: {\n            px: null,\n            nx: null,\n            py: null,\n            ny: null,\n            pz: null,\n            nz: null\n        },\n\n        /**\n         * @type {Array.<Object>}\n         */\n        mipmaps: []\n    };\n}, {\n\n    textureType: 'textureCube',\n\n    update: function (renderer) {\n        var _gl = renderer.gl;\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, this._cache.get('webgl_texture'));\n\n        this.updateCommon(renderer);\n\n        var glFormat = this.format;\n        var glType = this.type;\n\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_WRAP_S, this.getAvailableWrapS());\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_WRAP_T, this.getAvailableWrapT());\n\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_MAG_FILTER, this.getAvailableMagFilter());\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_MIN_FILTER, this.getAvailableMinFilter());\n\n        var anisotropicExt = renderer.getGLExtension('EXT_texture_filter_anisotropic');\n        if (anisotropicExt && this.anisotropic > 1) {\n            _gl.texParameterf(_gl.TEXTURE_CUBE_MAP, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropic);\n        }\n\n        // Fallback to float type if browser don't have half float extension\n        if (glType === 36193) {\n            var halfFloatExt = renderer.getGLExtension('OES_texture_half_float');\n            if (!halfFloatExt) {\n                glType = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].FLOAT;\n            }\n        }\n\n        if (this.mipmaps.length) {\n            var width = this.width;\n            var height = this.height;\n            for (var i = 0; i < this.mipmaps.length; i++) {\n                var mipmap = this.mipmaps[i];\n                this._updateTextureData(_gl, mipmap, i, width, height, glFormat, glType);\n                width /= 2;\n                height /= 2;\n            }\n        }\n        else {\n            this._updateTextureData(_gl, this, 0, this.width, this.height, glFormat, glType);\n\n            if (!this.NPOT && this.useMipmap) {\n                _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n            }\n        }\n\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    },\n\n    _updateTextureData: function (_gl, data, level, width, height, glFormat, glType) {\n        for (var i = 0; i < 6; i++) {\n            var target = targetList[i];\n            var img = data.image && data.image[target];\n            if (img) {\n                _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, glFormat, glFormat, glType, img);\n            }\n            else {\n                _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, glFormat, width, height, 0, glFormat, glType, data.pixels && data.pixels[target]);\n            }\n        }\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     * @memberOf clay.TextureCube.prototype\n     */\n    generateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        if (this.useMipmap && !this.NPOT) {\n            _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, this._cache.get('webgl_texture'));\n            _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n    },\n\n    bind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_CUBE_MAP, this.getWebGLTexture(renderer));\n    },\n\n    unbind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_CUBE_MAP, null);\n    },\n\n    // Overwrite the isPowerOfTwo method\n    isPowerOfTwo: function () {\n        if (this.image.px) {\n            return isPowerOfTwo(this.image.px.width)\n                && isPowerOfTwo(this.image.px.height);\n        }\n        else {\n            return isPowerOfTwo(this.width)\n                && isPowerOfTwo(this.height);\n        }\n    },\n\n    isRenderable: function () {\n        if (this.image.px) {\n            return isImageRenderable(this.image.px)\n                && isImageRenderable(this.image.nx)\n                && isImageRenderable(this.image.py)\n                && isImageRenderable(this.image.ny)\n                && isImageRenderable(this.image.pz)\n                && isImageRenderable(this.image.nz);\n        }\n        else {\n            return !!(this.width && this.height);\n        }\n    },\n\n    load: function (imageList, crossOrigin) {\n        var loading = 0;\n        var self = this;\n        __WEBPACK_IMPORTED_MODULE_2__core_util__[\"a\" /* default */].each(imageList, function (src, target){\n            var image = __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].createImage();\n            if (crossOrigin) {\n                image.crossOrigin = crossOrigin;\n            }\n            image.onload = function () {\n                loading --;\n                if (loading === 0){\n                    self.dirty();\n                    self.trigger('success', self);\n                }\n            };\n            image.onerror = function () {\n                loading --;\n            };\n\n            loading++;\n            image.src = src;\n            self.image[target] = image;\n        });\n\n        return this;\n    }\n});\n\nObject.defineProperty(TextureCube.prototype, 'width', {\n    get: function () {\n        if (this.image && this.image.px) {\n            return this.image.px.width;\n        }\n        return this._width;\n    },\n    set: function (value) {\n        if (this.image && this.image.px) {\n            console.warn('Texture from image can\\'t set width');\n        }\n        else {\n            if (this._width !== value) {\n                this.dirty();\n            }\n            this._width = value;\n        }\n    }\n});\nObject.defineProperty(TextureCube.prototype, 'height', {\n    get: function () {\n        if (this.image && this.image.px) {\n            return this.image.px.height;\n        }\n        return this._height;\n    },\n    set: function (value) {\n        if (this.image && this.image.px) {\n            console.warn('Texture from image can\\'t set height');\n        }\n        else {\n            if (this._height !== value) {\n                this.dirty();\n            }\n            this._height = value;\n        }\n    }\n});\nfunction isImageRenderable(image) {\n    return image.width > 0 && image.height > 0;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextureCube);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vec4__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mat3__ = __webpack_require__(26);\n\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n\n\n\n\n/**\n * @class Quaternion\n * @name quat\n */\n\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].create();\n    var xUnitVec3 = __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].fromValues(1,0,0);\n    var yUnitVec3 = __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].dot(a, b);\n        if (dot < -0.999999) {\n            __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].cross(tmpvec3, xUnitVec3, a);\n            if (__WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].length(tmpvec3) < 0.000001)\n                __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].cross(tmpvec3, yUnitVec3, a);\n            __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */].cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = __WEBPACK_IMPORTED_MODULE_3__mat3__[\"a\" /* default */].create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n};\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */].normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n\n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n\n    return out;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (quat);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Camera__ = __webpack_require__(33);\n\n\n/**\n * @constructor clay.camera.Perspective\n * @extends clay.Camera\n */\nvar Perspective = __WEBPACK_IMPORTED_MODULE_0__Camera__[\"a\" /* default */].extend(/** @lends clay.camera.Perspective# */{\n    /**\n     * Vertical field of view in degrees\n     * @type {number}\n     */\n    fov: 50,\n    /**\n     * Aspect ratio, typically viewport width / height\n     * @type {number}\n     */\n    aspect: 1,\n    /**\n     * Near bound of the frustum\n     * @type {number}\n     */\n    near: 0.1,\n    /**\n     * Far bound of the frustum\n     * @type {number}\n     */\n    far: 2000\n},\n/** @lends clay.camera.Perspective.prototype */\n{\n\n    updateProjectionMatrix: function() {\n        var rad = this.fov / 180 * Math.PI;\n        this.projectionMatrix.perspective(rad, this.aspect, this.near, this.far);\n    },\n    decomposeProjectionMatrix: function () {\n        var m = this.projectionMatrix.array;\n        var rad = Math.atan(1 / m[5]) * 2;\n        this.fov = rad / Math.PI * 180;\n        this.aspect = m[5] / m[0];\n        this.near = m[14] / (m[10] - 1);\n        this.far = m[14] / (m[10] + 1);\n    },\n    /**\n     * @return {clay.camera.Perspective}\n     */\n    clone: function() {\n        var camera = __WEBPACK_IMPORTED_MODULE_0__Camera__[\"a\" /* default */].prototype.clone.call(this);\n        camera.fov = this.fov;\n        camera.aspect = this.aspect;\n        camera.near = this.near;\n        camera.far = this.far;\n\n        return camera;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Perspective);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY2FtZXJhL1BlcnNwZWN0aXZlLmpzPzM0ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhbWVyYSBmcm9tICcuLi9DYW1lcmEnO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvciBjbGF5LmNhbWVyYS5QZXJzcGVjdGl2ZVxuICogQGV4dGVuZHMgY2xheS5DYW1lcmFcbiAqL1xudmFyIFBlcnNwZWN0aXZlID0gQ2FtZXJhLmV4dGVuZCgvKiogQGxlbmRzIGNsYXkuY2FtZXJhLlBlcnNwZWN0aXZlIyAqL3tcbiAgICAvKipcbiAgICAgKiBWZXJ0aWNhbCBmaWVsZCBvZiB2aWV3IGluIGRlZ3JlZXNcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGZvdjogNTAsXG4gICAgLyoqXG4gICAgICogQXNwZWN0IHJhdGlvLCB0eXBpY2FsbHkgdmlld3BvcnQgd2lkdGggLyBoZWlnaHRcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGFzcGVjdDogMSxcbiAgICAvKipcbiAgICAgKiBOZWFyIGJvdW5kIG9mIHRoZSBmcnVzdHVtXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBuZWFyOiAwLjEsXG4gICAgLyoqXG4gICAgICogRmFyIGJvdW5kIG9mIHRoZSBmcnVzdHVtXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBmYXI6IDIwMDBcbn0sXG4vKiogQGxlbmRzIGNsYXkuY2FtZXJhLlBlcnNwZWN0aXZlLnByb3RvdHlwZSAqL1xue1xuXG4gICAgdXBkYXRlUHJvamVjdGlvbk1hdHJpeDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciByYWQgPSB0aGlzLmZvdiAvIDE4MCAqIE1hdGguUEk7XG4gICAgICAgIHRoaXMucHJvamVjdGlvbk1hdHJpeC5wZXJzcGVjdGl2ZShyYWQsIHRoaXMuYXNwZWN0LCB0aGlzLm5lYXIsIHRoaXMuZmFyKTtcbiAgICB9LFxuICAgIGRlY29tcG9zZVByb2plY3Rpb25NYXRyaXg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG0gPSB0aGlzLnByb2plY3Rpb25NYXRyaXguYXJyYXk7XG4gICAgICAgIHZhciByYWQgPSBNYXRoLmF0YW4oMSAvIG1bNV0pICogMjtcbiAgICAgICAgdGhpcy5mb3YgPSByYWQgLyBNYXRoLlBJICogMTgwO1xuICAgICAgICB0aGlzLmFzcGVjdCA9IG1bNV0gLyBtWzBdO1xuICAgICAgICB0aGlzLm5lYXIgPSBtWzE0XSAvIChtWzEwXSAtIDEpO1xuICAgICAgICB0aGlzLmZhciA9IG1bMTRdIC8gKG1bMTBdICsgMSk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHtjbGF5LmNhbWVyYS5QZXJzcGVjdGl2ZX1cbiAgICAgKi9cbiAgICBjbG9uZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBjYW1lcmEgPSBDYW1lcmEucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyk7XG4gICAgICAgIGNhbWVyYS5mb3YgPSB0aGlzLmZvdjtcbiAgICAgICAgY2FtZXJhLmFzcGVjdCA9IHRoaXMuYXNwZWN0O1xuICAgICAgICBjYW1lcmEubmVhciA9IHRoaXMubmVhcjtcbiAgICAgICAgY2FtZXJhLmZhciA9IHRoaXMuZmFyO1xuXG4gICAgICAgIHJldHVybiBjYW1lcmE7XG4gICAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFBlcnNwZWN0aXZlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY2FtZXJhL1BlcnNwZWN0aXZlLmpzXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Node__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Light__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Camera__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_LRU__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__math_Matrix4__ = __webpack_require__(8);\n\n\n\n\n\n\n\n\n\nvar IDENTITY = __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__[\"a\" /* default */].create();\nvar WORLDVIEW = __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__[\"a\" /* default */].create();\n\nvar programKeyCache = {};\n\nfunction getProgramKey(lightNumbers) {\n    var defineStr = [];\n    var lightTypes = Object.keys(lightNumbers);\n    lightTypes.sort();\n    for (var i = 0; i < lightTypes.length; i++) {\n        var lightType = lightTypes[i];\n        defineStr.push(lightType + ' ' + lightNumbers[lightType]);\n    }\n    var key = defineStr.join('\\n');\n\n    if (programKeyCache[key]) {\n        return programKeyCache[key];\n    }\n\n    var id = __WEBPACK_IMPORTED_MODULE_4__core_util__[\"a\" /* default */].genGUID();\n    programKeyCache[key] = id;\n    return id;\n}\n\nfunction RenderList() {\n\n    this.opaque = [];\n    this.transparent = [];\n\n    this._opaqueCount = 0;\n    this._transparentCount = 0;\n}\n\nRenderList.prototype.startCount = function () {\n    this._opaqueCount = 0;\n    this._transparentCount = 0;\n};\n\nRenderList.prototype.add = function (object, isTransparent) {\n    if (isTransparent) {\n        this.transparent[this._transparentCount++] = object;\n    }\n    else {\n        this.opaque[this._opaqueCount++] = object;\n    }\n};\n\nRenderList.prototype.endCount = function () {\n    this.transparent.length = this._transparentCount;\n    this.opaque.length = this._opaqueCount;\n};\n\n/**\n * @typedef {Object} clay.Scene.RenderList\n * @property {Array.<clay.Renderable>} opaque\n * @property {Array.<clay.Renderable>} transparent\n */\n\n/**\n * @constructor clay.Scene\n * @extends clay.Node\n */\nvar Scene = __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Scene# */ {\n        /**\n         * Global material of scene\n         * @type {clay.Material}\n         */\n        material: null,\n\n        lights: [],\n\n        /**\n         * Scene bounding box in view space.\n         * Used when camera needs to adujst the near and far plane automatically\n         * so that the view frustum contains the visible objects as tightly as possible.\n         * Notice:\n         *  It is updated after rendering (in the step of frustum culling passingly). So may be not so accurate, but saves a lot of calculation\n         *\n         * @type {clay.BoundingBox}\n         */\n        viewBoundingBoxLastFrame: new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */](),\n\n        // Uniforms for shadow map.\n        shadowUniforms: {},\n\n        _cameraList: [],\n\n        // Properties to save the light information in the scene\n        // Will be set in the render function\n        _lightUniforms: {},\n\n        _previousLightNumber: {},\n\n        _lightNumber: {\n            // groupId: {\n                // POINT_LIGHT: 0,\n                // DIRECTIONAL_LIGHT: 0,\n                // SPOT_LIGHT: 0,\n                // AMBIENT_LIGHT: 0,\n                // AMBIENT_SH_LIGHT: 0\n            // }\n        },\n\n        _lightProgramKeys: {},\n\n        _nodeRepository: {},\n\n        _renderLists: new __WEBPACK_IMPORTED_MODULE_6__core_LRU__[\"a\" /* default */](20)\n\n    };\n}, function () {\n    this._scene = this;\n},\n/** @lends clay.Scene.prototype. */\n{\n\n    // Add node to scene\n    addToScene: function (node) {\n        if (node instanceof __WEBPACK_IMPORTED_MODULE_2__Camera__[\"a\" /* default */]) {\n            if (this._cameraList.length > 0) {\n                console.warn('Found multiple camera in one scene. Use the fist one.');\n            }\n            this._cameraList.push(node);\n        }\n        else if (node instanceof __WEBPACK_IMPORTED_MODULE_1__Light__[\"a\" /* default */]) {\n            this.lights.push(node);\n        }\n        if (node.name) {\n            this._nodeRepository[node.name] = node;\n        }\n    },\n\n    // Remove node from scene\n    removeFromScene: function (node) {\n        var idx;\n        if (node instanceof __WEBPACK_IMPORTED_MODULE_2__Camera__[\"a\" /* default */]) {\n            idx = this._cameraList.indexOf(node);\n            if (idx >= 0) {\n                this._cameraList.splice(idx, 1);\n            }\n        }\n        else if (node instanceof __WEBPACK_IMPORTED_MODULE_1__Light__[\"a\" /* default */]) {\n            idx = this.lights.indexOf(node);\n            if (idx >= 0) {\n                this.lights.splice(idx, 1);\n            }\n        }\n        if (node.name) {\n            delete this._nodeRepository[node.name];\n        }\n    },\n\n    /**\n     * Get node by name\n     * @param  {string} name\n     * @return {Node}\n     * @DEPRECATED\n     */\n    getNode: function (name) {\n        return this._nodeRepository[name];\n    },\n\n    /**\n     * Set main camera of the scene.\n     * @param {claygl.Camera} camera\n     */\n    setMainCamera: function (camera) {\n        var idx = this._cameraList.indexOf(camera);\n        if (idx >= 0) {\n            this._cameraList.splice(idx, 1);\n        }\n        this._cameraList.unshift(camera);\n    },\n    /**\n     * Get main camera of the scene.\n     */\n    getMainCamera: function () {\n        return this._cameraList[0];\n    },\n\n    getLights: function () {\n        return this.lights;\n    },\n\n    updateLights: function () {\n        var lights = this.lights;\n        this._previousLightNumber = this._lightNumber;\n\n        var lightNumber = {};\n        for (var i = 0; i < lights.length; i++) {\n            var light = lights[i];\n            if (light.invisible) {\n                continue;\n            }\n            var group = light.group;\n            if (!lightNumber[group]) {\n                lightNumber[group] = {};\n            }\n            // User can use any type of light\n            lightNumber[group][light.type] = lightNumber[group][light.type] || 0;\n            lightNumber[group][light.type]++;\n        }\n        this._lightNumber = lightNumber;\n\n        for (var groupId in lightNumber) {\n            this._lightProgramKeys[groupId] = getProgramKey(lightNumber[groupId]);\n        }\n\n        this._updateLightUniforms();\n    },\n\n    /**\n     * Clone a node and it's children, including mesh, camera, light, etc.\n     * Unlike using `Node#clone`. It will clone skeleton and remap the joints. Material will also be cloned.\n     *\n     * @param {clay.Node} node\n     * @return {clay.Node}\n     */\n    cloneNode: function (node) {\n        var newNode = node.clone();\n        var clonedNodesMap = {};\n        function buildNodesMap(sNode, tNode) {\n            clonedNodesMap[sNode.__uid__] = tNode;\n\n            for (var i = 0; i < sNode._children.length; i++) {\n                var sChild = sNode._children[i];\n                var tChild = tNode._children[i];\n                buildNodesMap(sChild, tChild);\n            }\n        }\n        buildNodesMap(node, newNode);\n\n        newNode.traverse(function (newChild) {\n            if (newChild.skeleton) {\n                newChild.skeleton = newChild.skeleton.clone(clonedNodesMap);\n            }\n            if (newChild.material) {\n                newChild.material = newChild.material.clone();\n            }\n        });\n\n        return newNode;\n    },\n\n    /**\n     * Traverse the scene and add the renderable object to the render list.\n     * It needs camera for the frustum culling.\n     *\n     * @param {clay.Camera} camera\n     * @param {boolean} updateSceneBoundingBox\n     * @return {clay.Scene.RenderList}\n     */\n    updateRenderList: function (camera, updateSceneBoundingBox) {\n        var id = camera.__uid__;\n        var renderList = this._renderLists.get(id);\n        if (!renderList) {\n            renderList = new RenderList();\n            this._renderLists.put(id, renderList);\n        }\n        renderList.startCount();\n\n        if (updateSceneBoundingBox) {\n            this.viewBoundingBoxLastFrame.min.set(Infinity, Infinity, Infinity);\n            this.viewBoundingBoxLastFrame.max.set(-Infinity, -Infinity, -Infinity);\n        }\n\n        var sceneMaterialTransparent = this.material && this.material.transparent || false;\n        this._doUpdateRenderList(this, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox);\n\n        renderList.endCount();\n\n        return renderList;\n    },\n\n    /**\n     * Get render list. Used after {@link clay.Scene#updateRenderList}\n     * @param {clay.Camera} camera\n     * @return {clay.Scene.RenderList}\n     */\n    getRenderList: function (camera) {\n        return this._renderLists.get(camera.__uid__);\n    },\n\n    _doUpdateRenderList: function (parent, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox) {\n        if (parent.invisible) {\n            return;\n        }\n        // TODO Optimize\n        for (var i = 0; i < parent._children.length; i++) {\n            var child = parent._children[i];\n\n            if (child.isRenderable()) {\n                // Frustum culling\n                var worldM = child.isSkinnedMesh() ? IDENTITY : child.worldTransform.array;\n                var geometry = child.geometry;\n\n                __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__[\"a\" /* default */].multiplyAffine(WORLDVIEW, camera.viewMatrix.array, worldM);\n                if (updateSceneBoundingBox && !geometry.boundingBox || !this.isFrustumCulled(child, camera, WORLDVIEW)) {\n                    renderList.add(child, child.material.transparent || sceneMaterialTransparent);\n                }\n            }\n            if (child._children.length > 0) {\n                this._doUpdateRenderList(child, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox);\n            }\n        }\n    },\n\n    /**\n     * If an scene object is culled by camera frustum\n     *\n     * Object can be a renderable or a light\n     *\n     * @param {clay.Node} object\n     * @param {clay.Camera} camera\n     * @param {Array.<number>} worldViewMat represented with array\n     * @param {Array.<number>} projectionMat represented with array\n     */\n    isFrustumCulled: (function () {\n        // Frustum culling\n        // http://www.cse.chalmers.se/~uffe/vfc_bbox.pdf\n        var cullingBoundingBox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n        var cullingMatrix = new __WEBPACK_IMPORTED_MODULE_7__math_Matrix4__[\"a\" /* default */]();\n        return function(object, camera, worldViewMat) {\n            // Bounding box can be a property of object(like light) or renderable.geometry\n            // PENDING\n            var geoBBox = object.boundingBox;\n            if (!geoBBox) {\n                if (object.skeleton && object.skeleton.boundingBox) {\n                    geoBBox = object.skeleton.boundingBox;\n                }\n                else {\n                    geoBBox = object.geometry.boundingBox;\n                }\n            }\n\n            if (!geoBBox) {\n                return false;\n            }\n\n            cullingMatrix.array = worldViewMat;\n            cullingBoundingBox.transformFrom(geoBBox, cullingMatrix);\n\n            // Passingly update the scene bounding box\n            // FIXME exclude very large mesh like ground plane or terrain ?\n            // FIXME Only rendererable which cast shadow ?\n\n            // FIXME boundingBox becomes much larger after transformd.\n            if (object.castShadow) {\n                this.viewBoundingBoxLastFrame.union(cullingBoundingBox);\n            }\n            // Ignore frustum culling if object is skinned mesh.\n            if (object.frustumCulling)  {\n                if (!cullingBoundingBox.intersectBoundingBox(camera.frustum.boundingBox)) {\n                    return true;\n                }\n\n                cullingMatrix.array = camera.projectionMatrix.array;\n                if (\n                    cullingBoundingBox.max.array[2] > 0 &&\n                    cullingBoundingBox.min.array[2] < 0\n                ) {\n                    // Clip in the near plane\n                    cullingBoundingBox.max.array[2] = -1e-20;\n                }\n\n                cullingBoundingBox.applyProjection(cullingMatrix);\n\n                var min = cullingBoundingBox.min.array;\n                var max = cullingBoundingBox.max.array;\n\n                if (\n                    max[0] < -1 || min[0] > 1\n                    || max[1] < -1 || min[1] > 1\n                    || max[2] < -1 || min[2] > 1\n                ) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    })(),\n\n    _updateLightUniforms: function () {\n        var lights = this.lights;\n        // Put the light cast shadow before the light not cast shadow\n        lights.sort(lightSortFunc);\n\n        var lightUniforms = this._lightUniforms;\n        for (var group in lightUniforms) {\n            for (var symbol in lightUniforms[group]) {\n                lightUniforms[group][symbol].value.length = 0;\n            }\n        }\n        for (var i = 0; i < lights.length; i++) {\n\n            var light = lights[i];\n\n            if (light.invisible) {\n                continue;\n            }\n\n            var group = light.group;\n\n            for (var symbol in light.uniformTemplates) {\n                var uniformTpl = light.uniformTemplates[symbol];\n                var value = uniformTpl.value(light);\n                if (value == null) {\n                    continue;\n                }\n                if (!lightUniforms[group]) {\n                    lightUniforms[group] = {};\n                }\n                if (!lightUniforms[group][symbol]) {\n                    lightUniforms[group][symbol] = {\n                        type: '',\n                        value: []\n                    };\n                }\n                var lu = lightUniforms[group][symbol];\n                lu.type = uniformTpl.type + 'v';\n                switch (uniformTpl.type) {\n                    case '1i':\n                    case '1f':\n                    case 't':\n                        lu.value.push(value);\n                        break;\n                    case '2f':\n                    case '3f':\n                    case '4f':\n                        for (var j = 0; j < value.length; j++) {\n                            lu.value.push(value[j]);\n                        }\n                        break;\n                    default:\n                        console.error('Unkown light uniform type ' + uniformTpl.type);\n                }\n            }\n        }\n    },\n\n    getLightGroups: function () {\n        var lightGroups = [];\n        for (var groupId in this._lightNumber) {\n            lightGroups.push(groupId);\n        }\n        return lightGroups;\n    },\n\n    getNumberChangedLightGroups: function () {\n        var lightGroups = [];\n        for (var groupId in this._lightNumber) {\n            if (this.isLightNumberChanged(groupId)) {\n                lightGroups.push(groupId);\n            }\n        }\n        return lightGroups;\n    },\n\n    // Determine if light group is different with since last frame\n    // Used to determine whether to update shader and scene's uniforms in Renderer.render\n    isLightNumberChanged: function (lightGroup) {\n        var prevLightNumber = this._previousLightNumber;\n        var currentLightNumber = this._lightNumber;\n        // PENDING Performance\n        for (var type in currentLightNumber[lightGroup]) {\n            if (!prevLightNumber[lightGroup]) {\n                return true;\n            }\n            if (currentLightNumber[lightGroup][type] !== prevLightNumber[lightGroup][type]) {\n                return true;\n            }\n        }\n        for (var type in prevLightNumber[lightGroup]) {\n            if (!currentLightNumber[lightGroup]) {\n                return true;\n            }\n            if (currentLightNumber[lightGroup][type] !== prevLightNumber[lightGroup][type]) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    getLightsNumbers: function (lightGroup) {\n        return this._lightNumber[lightGroup];\n    },\n\n    getProgramKey: function (lightGroup) {\n        return this._lightProgramKeys[lightGroup];\n    },\n\n    setLightUniforms: (function () {\n        function setUniforms(uniforms, program, renderer) {\n            for (var symbol in uniforms) {\n                var lu = uniforms[symbol];\n                if (lu.type === 'tv') {\n                    if (!program.hasUniform(symbol)) {\n                        continue;\n                    }\n                    var texSlots = [];\n                    for (var i = 0; i < lu.value.length; i++) {\n                        var texture = lu.value[i];\n                        var slot = program.takeCurrentTextureSlot(renderer, texture);\n                        texSlots.push(slot);\n                    }\n                    program.setUniform(renderer.gl, '1iv', symbol, texSlots);\n                }\n                else {\n                    program.setUniform(renderer.gl, lu.type, symbol, lu.value);\n                }\n            }\n        }\n\n        return function (program, lightGroup, renderer) {\n            setUniforms(this._lightUniforms[lightGroup], program, renderer);\n            // Set shadows\n            setUniforms(this.shadowUniforms, program, renderer);\n        };\n    })(),\n\n    /**\n     * Dispose self, clear all the scene objects\n     * But resources of gl like texuture, shader will not be disposed.\n     * Mostly you should use disposeScene method in Renderer to do dispose.\n     */\n    dispose: function () {\n        this.material = null;\n        this._opaqueList = [];\n        this._transparentList = [];\n\n        this.lights = [];\n\n        this._lightUniforms = {};\n\n        this._lightNumber = {};\n        this._nodeRepository = {};\n    }\n});\n\nfunction lightSortFunc(a, b) {\n    if (b.castShadow && !a.castShadow) {\n        return true;\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Scene);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export vec4 */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\n\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n        out[3] = a[3] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = Object(__WEBPACK_IMPORTED_MODULE_0__common__[\"c\" /* GLMAT_RANDOM */])();\n    out[1] = Object(__WEBPACK_IMPORTED_MODULE_0__common__[\"c\" /* GLMAT_RANDOM */])();\n    out[2] = Object(__WEBPACK_IMPORTED_MODULE_0__common__[\"c\" /* GLMAT_RANDOM */])();\n    out[3] = Object(__WEBPACK_IMPORTED_MODULE_0__common__[\"c\" /* GLMAT_RANDOM */])();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n\n        return a;\n    };\n})();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (vec4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Node__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shader_source_header_light__ = __webpack_require__(45);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_2__shader_source_header_light__[\"a\" /* default */]);\n\n/**\n * @constructor clay.Light\n * @extends clay.Node\n */\nvar Light = __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].extend(function(){\n    return /** @lends clay.Light# */ {\n        /**\n         * Light RGB color\n         * @type {number[]}\n         */\n        color: [1, 1, 1],\n\n        /**\n         * Light intensity\n         * @type {number}\n         */\n        intensity: 1.0,\n\n        // Config for shadow map\n        /**\n         * If light cast shadow\n         * @type {boolean}\n         */\n        castShadow: true,\n\n        /**\n         * Shadow map size\n         * @type {number}\n         */\n        shadowResolution: 512,\n\n        /**\n         * Light group, shader with same `lightGroup` will be affected\n         *\n         * Only useful in forward rendering\n         * @type {number}\n         */\n        group: 0\n    };\n},\n/** @lends clay.Light.prototype. */\n{\n    /**\n     * Light type\n     * @type {string}\n     * @memberOf clay.Light#\n     */\n    type: '',\n\n    /**\n     * @return {clay.Light}\n     * @memberOf clay.Light.prototype\n     */\n    clone: function() {\n        var light = __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].prototype.clone.call(this);\n        light.color = Array.prototype.slice.call(this.color);\n        light.intensity = this.intensity;\n        light.castShadow = this.castShadow;\n        light.shadowResolution = this.shadowResolution;\n\n        return light;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Light);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvTGlnaHQuanM/ZGNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTm9kZSBmcm9tICcuL05vZGUnO1xuaW1wb3J0IFNoYWRlciBmcm9tICcuL1NoYWRlcic7XG5cbmltcG9ydCBsaWdodFNoYWRlciBmcm9tICcuL3NoYWRlci9zb3VyY2UvaGVhZGVyL2xpZ2h0JztcblNoYWRlclsnaW1wb3J0J10obGlnaHRTaGFkZXIpO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvciBjbGF5LkxpZ2h0XG4gKiBAZXh0ZW5kcyBjbGF5Lk5vZGVcbiAqL1xudmFyIExpZ2h0ID0gTm9kZS5leHRlbmQoZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gLyoqIEBsZW5kcyBjbGF5LkxpZ2h0IyAqLyB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBMaWdodCBSR0IgY29sb3JcbiAgICAgICAgICogQHR5cGUge251bWJlcltdfVxuICAgICAgICAgKi9cbiAgICAgICAgY29sb3I6IFsxLCAxLCAxXSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogTGlnaHQgaW50ZW5zaXR5XG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgICAqL1xuICAgICAgICBpbnRlbnNpdHk6IDEuMCxcblxuICAgICAgICAvLyBDb25maWcgZm9yIHNoYWRvdyBtYXBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGxpZ2h0IGNhc3Qgc2hhZG93XG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgY2FzdFNoYWRvdzogdHJ1ZSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogU2hhZG93IG1hcCBzaXplXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgICAqL1xuICAgICAgICBzaGFkb3dSZXNvbHV0aW9uOiA1MTIsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIExpZ2h0IGdyb3VwLCBzaGFkZXIgd2l0aCBzYW1lIGBsaWdodEdyb3VwYCB3aWxsIGJlIGFmZmVjdGVkXG4gICAgICAgICAqXG4gICAgICAgICAqIE9ubHkgdXNlZnVsIGluIGZvcndhcmQgcmVuZGVyaW5nXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgICAqL1xuICAgICAgICBncm91cDogMFxuICAgIH07XG59LFxuLyoqIEBsZW5kcyBjbGF5LkxpZ2h0LnByb3RvdHlwZS4gKi9cbntcbiAgICAvKipcbiAgICAgKiBMaWdodCB0eXBlXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKiBAbWVtYmVyT2YgY2xheS5MaWdodCNcbiAgICAgKi9cbiAgICB0eXBlOiAnJyxcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm4ge2NsYXkuTGlnaHR9XG4gICAgICogQG1lbWJlck9mIGNsYXkuTGlnaHQucHJvdG90eXBlXG4gICAgICovXG4gICAgY2xvbmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbGlnaHQgPSBOb2RlLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMpO1xuICAgICAgICBsaWdodC5jb2xvciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuY29sb3IpO1xuICAgICAgICBsaWdodC5pbnRlbnNpdHkgPSB0aGlzLmludGVuc2l0eTtcbiAgICAgICAgbGlnaHQuY2FzdFNoYWRvdyA9IHRoaXMuY2FzdFNoYWRvdztcbiAgICAgICAgbGlnaHQuc2hhZG93UmVzb2x1dGlvbiA9IHRoaXMuc2hhZG93UmVzb2x1dGlvbjtcblxuICAgICAgICByZXR1cm4gbGlnaHQ7XG4gICAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IExpZ2h0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvTGlnaHQuanNcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Renderable__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n\n\n\n/**\n * @constructor clay.Mesh\n * @extends clay.Renderable\n */\nvar Mesh = __WEBPACK_IMPORTED_MODULE_0__Renderable__[\"a\" /* default */].extend(/** @lends clay.Mesh# */ {\n    /**\n     * Used when it is a skinned mesh\n     * @type {clay.Skeleton}\n     */\n    skeleton: null,\n    /**\n     * Joints indices Meshes can share the one skeleton instance and each mesh can use one part of joints. Joints indices indicate the index of joint in the skeleton instance\n     * @type {number[]}\n     */\n    joints: null\n\n}, function () {\n    if (!this.joints) {\n        this.joints = [];\n    }\n}, {\n\n    /**\n     * Offset matrix used for multiple skinned mesh clone sharing one skeleton\n     * @type {clay.Matrix4}\n     */\n    offsetMatrix: null,\n\n    isInstancedMesh: function () { return false; },\n\n    isSkinnedMesh: function () {\n        return !!(this.skeleton && this.joints && this.joints.length > 0);\n    },\n\n    clone: function () {\n        var mesh = __WEBPACK_IMPORTED_MODULE_0__Renderable__[\"a\" /* default */].prototype.clone.call(this);\n        mesh.skeleton = this.skeleton;\n        if (this.joints) {\n            mesh.joints = this.joints.slice();\n        }\n        return mesh;\n    }\n});\n\n// Enums\nMesh.POINTS = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].POINTS;\nMesh.LINES = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINES;\nMesh.LINE_LOOP = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINE_LOOP;\nMesh.LINE_STRIP = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINE_STRIP;\nMesh.TRIANGLES = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].TRIANGLES;\nMesh.TRIANGLE_STRIP = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].TRIANGLE_STRIP;\nMesh.TRIANGLE_FAN = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].TRIANGLE_FAN;\n\nMesh.BACK = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].BACK;\nMesh.FRONT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].FRONT;\nMesh.FRONT_AND_BACK = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].FRONT_AND_BACK;\nMesh.CW = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CW;\nMesh.CCW = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CCW;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Mesh);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvTWVzaC5qcz8zYTNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZW5kZXJhYmxlIGZyb20gJy4vUmVuZGVyYWJsZSc7XG5pbXBvcnQgZ2xlbnVtIGZyb20gJy4vY29yZS9nbGVudW0nO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvciBjbGF5Lk1lc2hcbiAqIEBleHRlbmRzIGNsYXkuUmVuZGVyYWJsZVxuICovXG52YXIgTWVzaCA9IFJlbmRlcmFibGUuZXh0ZW5kKC8qKiBAbGVuZHMgY2xheS5NZXNoIyAqLyB7XG4gICAgLyoqXG4gICAgICogVXNlZCB3aGVuIGl0IGlzIGEgc2tpbm5lZCBtZXNoXG4gICAgICogQHR5cGUge2NsYXkuU2tlbGV0b259XG4gICAgICovXG4gICAgc2tlbGV0b246IG51bGwsXG4gICAgLyoqXG4gICAgICogSm9pbnRzIGluZGljZXMgTWVzaGVzIGNhbiBzaGFyZSB0aGUgb25lIHNrZWxldG9uIGluc3RhbmNlIGFuZCBlYWNoIG1lc2ggY2FuIHVzZSBvbmUgcGFydCBvZiBqb2ludHMuIEpvaW50cyBpbmRpY2VzIGluZGljYXRlIHRoZSBpbmRleCBvZiBqb2ludCBpbiB0aGUgc2tlbGV0b24gaW5zdGFuY2VcbiAgICAgKiBAdHlwZSB7bnVtYmVyW119XG4gICAgICovXG4gICAgam9pbnRzOiBudWxsXG5cbn0sIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXRoaXMuam9pbnRzKSB7XG4gICAgICAgIHRoaXMuam9pbnRzID0gW107XG4gICAgfVxufSwge1xuXG4gICAgLyoqXG4gICAgICogT2Zmc2V0IG1hdHJpeCB1c2VkIGZvciBtdWx0aXBsZSBza2lubmVkIG1lc2ggY2xvbmUgc2hhcmluZyBvbmUgc2tlbGV0b25cbiAgICAgKiBAdHlwZSB7Y2xheS5NYXRyaXg0fVxuICAgICAqL1xuICAgIG9mZnNldE1hdHJpeDogbnVsbCxcblxuICAgIGlzSW5zdGFuY2VkTWVzaDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmFsc2U7IH0sXG5cbiAgICBpc1NraW5uZWRNZXNoOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAhISh0aGlzLnNrZWxldG9uICYmIHRoaXMuam9pbnRzICYmIHRoaXMuam9pbnRzLmxlbmd0aCA+IDApO1xuICAgIH0sXG5cbiAgICBjbG9uZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWVzaCA9IFJlbmRlcmFibGUucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyk7XG4gICAgICAgIG1lc2guc2tlbGV0b24gPSB0aGlzLnNrZWxldG9uO1xuICAgICAgICBpZiAodGhpcy5qb2ludHMpIHtcbiAgICAgICAgICAgIG1lc2guam9pbnRzID0gdGhpcy5qb2ludHMuc2xpY2UoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWVzaDtcbiAgICB9XG59KTtcblxuLy8gRW51bXNcbk1lc2guUE9JTlRTID0gZ2xlbnVtLlBPSU5UUztcbk1lc2guTElORVMgPSBnbGVudW0uTElORVM7XG5NZXNoLkxJTkVfTE9PUCA9IGdsZW51bS5MSU5FX0xPT1A7XG5NZXNoLkxJTkVfU1RSSVAgPSBnbGVudW0uTElORV9TVFJJUDtcbk1lc2guVFJJQU5HTEVTID0gZ2xlbnVtLlRSSUFOR0xFUztcbk1lc2guVFJJQU5HTEVfU1RSSVAgPSBnbGVudW0uVFJJQU5HTEVfU1RSSVA7XG5NZXNoLlRSSUFOR0xFX0ZBTiA9IGdsZW51bS5UUklBTkdMRV9GQU47XG5cbk1lc2guQkFDSyA9IGdsZW51bS5CQUNLO1xuTWVzaC5GUk9OVCA9IGdsZW51bS5GUk9OVDtcbk1lc2guRlJPTlRfQU5EX0JBQ0sgPSBnbGVudW0uRlJPTlRfQU5EX0JBQ0s7XG5NZXNoLkNXID0gZ2xlbnVtLkNXO1xuTWVzaC5DQ1cgPSBnbGVudW0uQ0NXO1xuXG5leHBvcnQgZGVmYXVsdCBNZXNoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvTWVzaC5qc1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("function Handler(action, context) {\n    this.action = action;\n    this.context = context;\n}\n/**\n * @mixin\n * @alias clay.core.mixin.notifier\n */\nvar notifier = {\n    /**\n     * Trigger event\n     * @param  {string} name\n     */\n    trigger: function(name) {\n        if (!this.hasOwnProperty('__handlers__')) {\n            return;\n        }\n        if (!this.__handlers__.hasOwnProperty(name)) {\n            return;\n        }\n\n        var hdls = this.__handlers__[name];\n        var l = hdls.length, i = -1, args = arguments;\n        // Optimize advise from backbone\n        switch (args.length) {\n            case 1:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context);\n                }\n                return;\n            case 2:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1]);\n                }\n                return;\n            case 3:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2]);\n                }\n                return;\n            case 4:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3]);\n                }\n                return;\n            case 5:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3], args[4]);\n                }\n                return;\n            default:\n                while (++i < l) {\n                    hdls[i].action.apply(hdls[i].context, Array.prototype.slice.call(args, 1));\n                }\n                return;\n        }\n    },\n    /**\n     * Register event handler\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    on: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var handlers = this.__handlers__ || (this.__handlers__={});\n        if (!handlers[name]) {\n            handlers[name] = [];\n        }\n        else {\n            if (this.has(name, action)) {\n                return;\n            }\n        }\n        var handler = new Handler(action, context || this);\n        handlers[name].push(handler);\n\n        return this;\n    },\n\n    /**\n     * Register event, event will only be triggered once and then removed\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    once: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var self = this;\n        function wrapper() {\n            self.off(name, wrapper);\n            action.apply(this, arguments);\n        }\n        return this.on(name, wrapper, context);\n    },\n\n    /**\n     * Alias of once('before' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    before: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'before' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of once('after' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    after: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'after' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of on('success')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    success: function(action, context) {\n        return this.once('success', action, context);\n    },\n\n    /**\n     * Alias of on('error')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    error: function(action, context) {\n        return this.once('error', action, context);\n    },\n\n    /**\n     * Remove event listener\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    off: function(name, action) {\n\n        var handlers = this.__handlers__ || (this.__handlers__={});\n\n        if (!action) {\n            handlers[name] = [];\n            return;\n        }\n        if (handlers[name]) {\n            var hdls = handlers[name];\n            var retains = [];\n            for (var i = 0; i < hdls.length; i++) {\n                if (action && hdls[i].action !== action) {\n                    retains.push(hdls[i]);\n                }\n            }\n            handlers[name] = retains;\n        }\n\n        return this;\n    },\n\n    /**\n     * If registered the event handler\n     * @param  {string}  name\n     * @param  {Function}  action\n     * @return {boolean}\n     */\n    has: function(name, action) {\n        var handlers = this.__handlers__;\n\n        if (! handlers ||\n            ! handlers[name]) {\n            return false;\n        }\n        var hdls = handlers[name];\n        for (var i = 0; i < hdls.length; i++) {\n            if (hdls[i].action === action) {\n                return true;\n            }\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (notifier);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9taXhpbi9ub3RpZmllci5qcz9jN2Q4Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIEhhbmRsZXIoYWN0aW9uLCBjb250ZXh0KSB7XG4gICAgdGhpcy5hY3Rpb24gPSBhY3Rpb247XG4gICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbn1cbi8qKlxuICogQG1peGluXG4gKiBAYWxpYXMgY2xheS5jb3JlLm1peGluLm5vdGlmaWVyXG4gKi9cbnZhciBub3RpZmllciA9IHtcbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyIGV2ZW50XG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBuYW1lXG4gICAgICovXG4gICAgdHJpZ2dlcjogZnVuY3Rpb24obmFtZSkge1xuICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoJ19faGFuZGxlcnNfXycpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLl9faGFuZGxlcnNfXy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGhkbHMgPSB0aGlzLl9faGFuZGxlcnNfX1tuYW1lXTtcbiAgICAgICAgdmFyIGwgPSBoZGxzLmxlbmd0aCwgaSA9IC0xLCBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAvLyBPcHRpbWl6ZSBhZHZpc2UgZnJvbSBiYWNrYm9uZVxuICAgICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgd2hpbGUgKCsraSA8IGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaGRsc1tpXS5hY3Rpb24uY2FsbChoZGxzW2ldLmNvbnRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgd2hpbGUgKCsraSA8IGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaGRsc1tpXS5hY3Rpb24uY2FsbChoZGxzW2ldLmNvbnRleHQsIGFyZ3NbMV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgd2hpbGUgKCsraSA8IGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaGRsc1tpXS5hY3Rpb24uY2FsbChoZGxzW2ldLmNvbnRleHQsIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgd2hpbGUgKCsraSA8IGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaGRsc1tpXS5hY3Rpb24uY2FsbChoZGxzW2ldLmNvbnRleHQsIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgd2hpbGUgKCsraSA8IGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaGRsc1tpXS5hY3Rpb24uY2FsbChoZGxzW2ldLmNvbnRleHQsIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10sIGFyZ3NbNF0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHdoaWxlICgrK2kgPCBsKSB7XG4gICAgICAgICAgICAgICAgICAgIGhkbHNbaV0uYWN0aW9uLmFwcGx5KGhkbHNbaV0uY29udGV4dCwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJncywgMSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8qKlxuICAgICAqIFJlZ2lzdGVyIGV2ZW50IGhhbmRsZXJcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IG5hbWVcbiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gYWN0aW9uXG4gICAgICogQHBhcmFtICB7T2JqZWN0fSBbY29udGV4dF1cbiAgICAgKiBAY2hhaW5hYmxlXG4gICAgICovXG4gICAgb246IGZ1bmN0aW9uKG5hbWUsIGFjdGlvbiwgY29udGV4dCkge1xuICAgICAgICBpZiAoIW5hbWUgfHwgIWFjdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBoYW5kbGVycyA9IHRoaXMuX19oYW5kbGVyc19fIHx8ICh0aGlzLl9faGFuZGxlcnNfXz17fSk7XG4gICAgICAgIGlmICghaGFuZGxlcnNbbmFtZV0pIHtcbiAgICAgICAgICAgIGhhbmRsZXJzW25hbWVdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAodGhpcy5oYXMobmFtZSwgYWN0aW9uKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgaGFuZGxlciA9IG5ldyBIYW5kbGVyKGFjdGlvbiwgY29udGV4dCB8fCB0aGlzKTtcbiAgICAgICAgaGFuZGxlcnNbbmFtZV0ucHVzaChoYW5kbGVyKTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUmVnaXN0ZXIgZXZlbnQsIGV2ZW50IHdpbGwgb25seSBiZSB0cmlnZ2VyZWQgb25jZSBhbmQgdGhlbiByZW1vdmVkXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBuYW1lXG4gICAgICogQHBhcmFtICB7RnVuY3Rpb259IGFjdGlvblxuICAgICAqIEBwYXJhbSAge09iamVjdH0gW2NvbnRleHRdXG4gICAgICogQGNoYWluYWJsZVxuICAgICAqL1xuICAgIG9uY2U6IGZ1bmN0aW9uKG5hbWUsIGFjdGlvbiwgY29udGV4dCkge1xuICAgICAgICBpZiAoIW5hbWUgfHwgIWFjdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgZnVuY3Rpb24gd3JhcHBlcigpIHtcbiAgICAgICAgICAgIHNlbGYub2ZmKG5hbWUsIHdyYXBwZXIpO1xuICAgICAgICAgICAgYWN0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMub24obmFtZSwgd3JhcHBlciwgY29udGV4dCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEFsaWFzIG9mIG9uY2UoJ2JlZm9yZScgKyBuYW1lKVxuICAgICAqIEBwYXJhbSAge3N0cmluZ30gbmFtZVxuICAgICAqIEBwYXJhbSAge0Z1bmN0aW9ufSBhY3Rpb25cbiAgICAgKiBAcGFyYW0gIHtPYmplY3R9IFtjb250ZXh0XVxuICAgICAqIEBjaGFpbmFibGVcbiAgICAgKi9cbiAgICBiZWZvcmU6IGZ1bmN0aW9uKG5hbWUsIGFjdGlvbiwgY29udGV4dCkge1xuICAgICAgICBpZiAoIW5hbWUgfHwgIWFjdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG5hbWUgPSAnYmVmb3JlJyArIG5hbWU7XG4gICAgICAgIHJldHVybiB0aGlzLm9uKG5hbWUsIGFjdGlvbiwgY29udGV4dCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEFsaWFzIG9mIG9uY2UoJ2FmdGVyJyArIG5hbWUpXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBuYW1lXG4gICAgICogQHBhcmFtICB7RnVuY3Rpb259IGFjdGlvblxuICAgICAqIEBwYXJhbSAge09iamVjdH0gW2NvbnRleHRdXG4gICAgICogQGNoYWluYWJsZVxuICAgICAqL1xuICAgIGFmdGVyOiBmdW5jdGlvbihuYW1lLCBhY3Rpb24sIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKCFuYW1lIHx8ICFhY3Rpb24pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBuYW1lID0gJ2FmdGVyJyArIG5hbWU7XG4gICAgICAgIHJldHVybiB0aGlzLm9uKG5hbWUsIGFjdGlvbiwgY29udGV4dCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEFsaWFzIG9mIG9uKCdzdWNjZXNzJylcbiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gYWN0aW9uXG4gICAgICogQHBhcmFtICB7T2JqZWN0fSBbY29udGV4dF1cbiAgICAgKiBAY2hhaW5hYmxlXG4gICAgICovXG4gICAgc3VjY2VzczogZnVuY3Rpb24oYWN0aW9uLCBjb250ZXh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9uY2UoJ3N1Y2Nlc3MnLCBhY3Rpb24sIGNvbnRleHQpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBBbGlhcyBvZiBvbignZXJyb3InKVxuICAgICAqIEBwYXJhbSAge0Z1bmN0aW9ufSBhY3Rpb25cbiAgICAgKiBAcGFyYW0gIHtPYmplY3R9IFtjb250ZXh0XVxuICAgICAqIEBjaGFpbmFibGVcbiAgICAgKi9cbiAgICBlcnJvcjogZnVuY3Rpb24oYWN0aW9uLCBjb250ZXh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9uY2UoJ2Vycm9yJywgYWN0aW9uLCBjb250ZXh0KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGV2ZW50IGxpc3RlbmVyXG4gICAgICogQHBhcmFtICB7RnVuY3Rpb259IGFjdGlvblxuICAgICAqIEBwYXJhbSAge09iamVjdH0gW2NvbnRleHRdXG4gICAgICogQGNoYWluYWJsZVxuICAgICAqL1xuICAgIG9mZjogZnVuY3Rpb24obmFtZSwgYWN0aW9uKSB7XG5cbiAgICAgICAgdmFyIGhhbmRsZXJzID0gdGhpcy5fX2hhbmRsZXJzX18gfHwgKHRoaXMuX19oYW5kbGVyc19fPXt9KTtcblxuICAgICAgICBpZiAoIWFjdGlvbikge1xuICAgICAgICAgICAgaGFuZGxlcnNbbmFtZV0gPSBbXTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaGFuZGxlcnNbbmFtZV0pIHtcbiAgICAgICAgICAgIHZhciBoZGxzID0gaGFuZGxlcnNbbmFtZV07XG4gICAgICAgICAgICB2YXIgcmV0YWlucyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBoZGxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGFjdGlvbiAmJiBoZGxzW2ldLmFjdGlvbiAhPT0gYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldGFpbnMucHVzaChoZGxzW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoYW5kbGVyc1tuYW1lXSA9IHJldGFpbnM7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogSWYgcmVnaXN0ZXJlZCB0aGUgZXZlbnQgaGFuZGxlclxuICAgICAqIEBwYXJhbSAge3N0cmluZ30gIG5hbWVcbiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gIGFjdGlvblxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICovXG4gICAgaGFzOiBmdW5jdGlvbihuYW1lLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIGhhbmRsZXJzID0gdGhpcy5fX2hhbmRsZXJzX187XG5cbiAgICAgICAgaWYgKCEgaGFuZGxlcnMgfHxcbiAgICAgICAgICAgICEgaGFuZGxlcnNbbmFtZV0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaGRscyA9IGhhbmRsZXJzW25hbWVdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhkbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChoZGxzW2ldLmFjdGlvbiA9PT0gYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBub3RpZmllcjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9jb3JlL21peGluL25vdGlmaWVyLmpzXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__ = __webpack_require__(42);\n\n\n/**\n * @constructor\n * @alias clay.Vector2\n * @param {number} x\n * @param {number} y\n */\nvar Vector2 = function(x, y) {\n\n    x = x || 0;\n    y = y || 0;\n\n    /**\n     * Storage of Vector2, read and write of x, y will change the values in array\n     * All methods also operate on the array instead of x, y components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector2#\n     */\n    this.array = __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].fromValues(x, y);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector2#\n     */\n    this._dirty = true;\n};\n\nVector2.prototype = {\n\n    constructor: Vector2,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    add: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x and y components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @return {clay.Vector2}\n     */\n    set: function(x, y) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x and y components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector2}\n     */\n    setArray: function(arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector2\n     * @return {clay.Vector2}\n     */\n    clone: function() {\n        return new Vector2(this.x, this.y);\n    },\n\n    /**\n     * Copy x, y from b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    copy: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Cross product of self and b, written to a Vector3 out\n     * @param  {clay.Vector3} out\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    cross: function(out, b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].cross(out.array, this.array, b.array);\n        out._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    dist: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    distance: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    div: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    divide: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    dot: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].length(this.array);\n    },\n\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector2} a\n     * @param  {clay.Vector2} b\n     * @param  {number}  t\n     * @return {clay.Vector2}\n     */\n    lerp: function(a, b, t) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    min: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    max: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    mul: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    multiply: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector2}\n     */\n    negate: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector2}\n     */\n    normalize: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector2}\n     */\n    random: function(scale) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector2}\n     */\n    scale: function(s) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector2} b\n     * @param  {number}  scale\n     * @return {clay.Vector2}\n     */\n    scaleAndAdd: function(b, s) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    sqrDist: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    squaredDistance: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    sub: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    subtract: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix2 m\n     * @param  {clay.Matrix2} m\n     * @return {clay.Vector2}\n     */\n    transformMat2: function(m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat2(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix2d m\n     * @param  {clay.Matrix2d} m\n     * @return {clay.Vector2}\n     */\n    transformMat2d: function(m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat2d(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix3 m\n     * @param  {clay.Matrix3} m\n     * @return {clay.Vector2}\n     */\n    transformMat3: function(m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat3(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector2}\n     */\n    transformMat4: function(m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\n// Getter and Setter\nif (Object.defineProperty) {\n\n    var proto = Vector2.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector2\n     * @instance\n     */\n    Object.defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector2\n     * @instance\n     */\n    Object.defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.add = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {number}  x\n * @param  {number}  y\n * @return {clay.Vector2}\n */\nVector2.set = function(out, x, y) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].set(out.array, x, y);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.copy = function(out, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.cross = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].cross(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.dist = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].distance(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.distance = Vector2.dist;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.div = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.divide = Vector2.div;\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.dot = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.len = function(b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].length(b.array);\n};\n\n// Vector2.length = Vector2.len;\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @param  {number}  t\n * @return {clay.Vector2}\n */\nVector2.lerp = function(out, a, b, t) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.min = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.max = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.mul = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.multiply = Vector2.mul;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @return {clay.Vector2}\n */\nVector2.negate = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @return {clay.Vector2}\n */\nVector2.normalize = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.random = function(out, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.scale = function(out, a, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.scaleAndAdd = function(out, a, b, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.sqrDist = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].sqrDist(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.squaredDistance = Vector2.sqrDist;\n\n/**\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.sqrLen = function(a) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.squaredLength = Vector2.sqrLen;\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.sub = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.subtract = Vector2.sub;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Matrix2} m\n * @return {clay.Vector2}\n */\nVector2.transformMat2 = function(out, a, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat2(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2}  out\n * @param  {clay.Vector2}  a\n * @param  {clay.Matrix2d} m\n * @return {clay.Vector2}\n */\nVector2.transformMat2d = function(out, a, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat2d(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {Matrix3} m\n * @return {clay.Vector2}\n */\nVector2.transformMat3 = function(out, a, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat3(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector2}\n */\nVector2.transformMat4 = function(out, a, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec2__[\"a\" /* default */].transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vector2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\n\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (mat3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Camera__ = __webpack_require__(33);\n\n/**\n * @constructor clay.camera.Orthographic\n * @extends clay.Camera\n */\nvar Orthographic = __WEBPACK_IMPORTED_MODULE_0__Camera__[\"a\" /* default */].extend(\n/** @lends clay.camera.Orthographic# */\n{\n    /**\n     * @type {number}\n     */\n    left: -1,\n    /**\n     * @type {number}\n     */\n    right: 1,\n    /**\n     * @type {number}\n     */\n    near: -1,\n    /**\n     * @type {number}\n     */\n    far: 1,\n    /**\n     * @type {number}\n     */\n    top: 1,\n    /**\n     * @type {number}\n     */\n    bottom: -1\n},\n/** @lends clay.camera.Orthographic.prototype */\n{\n\n    updateProjectionMatrix: function() {\n        this.projectionMatrix.ortho(this.left, this.right, this.bottom, this.top, this.near, this.far);\n    },\n\n    decomposeProjectionMatrix: function () {\n        var m = this.projectionMatrix.array;\n        this.left = (-1 - m[12]) / m[0];\n        this.right = (1 - m[12]) / m[0];\n        this.top = (1 - m[13]) / m[5];\n        this.bottom = (-1 - m[13]) / m[5];\n        this.near = -(-1 - m[14]) / m[10];\n        this.far = -(1 - m[14]) / m[10];\n    },\n    /**\n     * @return {clay.camera.Orthographic}\n     */\n    clone: function() {\n        var camera = __WEBPACK_IMPORTED_MODULE_0__Camera__[\"a\" /* default */].prototype.clone.call(this);\n        camera.left = this.left;\n        camera.right = this.right;\n        camera.near = this.near;\n        camera.far = this.far;\n        camera.top = this.top;\n        camera.bottom = this.bottom;\n\n        return camera;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Orthographic);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY2FtZXJhL09ydGhvZ3JhcGhpYy5qcz81YTljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDYW1lcmEgZnJvbSAnLi4vQ2FtZXJhJztcbi8qKlxuICogQGNvbnN0cnVjdG9yIGNsYXkuY2FtZXJhLk9ydGhvZ3JhcGhpY1xuICogQGV4dGVuZHMgY2xheS5DYW1lcmFcbiAqL1xudmFyIE9ydGhvZ3JhcGhpYyA9IENhbWVyYS5leHRlbmQoXG4vKiogQGxlbmRzIGNsYXkuY2FtZXJhLk9ydGhvZ3JhcGhpYyMgKi9cbntcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGxlZnQ6IC0xLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgcmlnaHQ6IDEsXG4gICAgLyoqXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBuZWFyOiAtMSxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGZhcjogMSxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIHRvcDogMSxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGJvdHRvbTogLTFcbn0sXG4vKiogQGxlbmRzIGNsYXkuY2FtZXJhLk9ydGhvZ3JhcGhpYy5wcm90b3R5cGUgKi9cbntcblxuICAgIHVwZGF0ZVByb2plY3Rpb25NYXRyaXg6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnByb2plY3Rpb25NYXRyaXgub3J0aG8odGhpcy5sZWZ0LCB0aGlzLnJpZ2h0LCB0aGlzLmJvdHRvbSwgdGhpcy50b3AsIHRoaXMubmVhciwgdGhpcy5mYXIpO1xuICAgIH0sXG5cbiAgICBkZWNvbXBvc2VQcm9qZWN0aW9uTWF0cml4OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtID0gdGhpcy5wcm9qZWN0aW9uTWF0cml4LmFycmF5O1xuICAgICAgICB0aGlzLmxlZnQgPSAoLTEgLSBtWzEyXSkgLyBtWzBdO1xuICAgICAgICB0aGlzLnJpZ2h0ID0gKDEgLSBtWzEyXSkgLyBtWzBdO1xuICAgICAgICB0aGlzLnRvcCA9ICgxIC0gbVsxM10pIC8gbVs1XTtcbiAgICAgICAgdGhpcy5ib3R0b20gPSAoLTEgLSBtWzEzXSkgLyBtWzVdO1xuICAgICAgICB0aGlzLm5lYXIgPSAtKC0xIC0gbVsxNF0pIC8gbVsxMF07XG4gICAgICAgIHRoaXMuZmFyID0gLSgxIC0gbVsxNF0pIC8gbVsxMF07XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHtjbGF5LmNhbWVyYS5PcnRob2dyYXBoaWN9XG4gICAgICovXG4gICAgY2xvbmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY2FtZXJhID0gQ2FtZXJhLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMpO1xuICAgICAgICBjYW1lcmEubGVmdCA9IHRoaXMubGVmdDtcbiAgICAgICAgY2FtZXJhLnJpZ2h0ID0gdGhpcy5yaWdodDtcbiAgICAgICAgY2FtZXJhLm5lYXIgPSB0aGlzLm5lYXI7XG4gICAgICAgIGNhbWVyYS5mYXIgPSB0aGlzLmZhcjtcbiAgICAgICAgY2FtZXJhLnRvcCA9IHRoaXMudG9wO1xuICAgICAgICBjYW1lcmEuYm90dG9tID0gdGhpcy5ib3R0b207XG5cbiAgICAgICAgcmV0dXJuIGNhbWVyYTtcbiAgICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgT3J0aG9ncmFwaGljO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY2FtZXJhL09ydGhvZ3JhcGhpYy5qc1xuLy8gbW9kdWxlIGlkID0gMjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__GeometryBase__ = __webpack_require__(87);\n\n\n\n\n\n\nvar vec3Create = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create;\nvar vec3Add = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].add;\nvar vec3Set = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].set;\n\nvar Attribute = __WEBPACK_IMPORTED_MODULE_4__GeometryBase__[\"a\" /* default */].Attribute;\n\n/**\n * Geometry in ClayGL contains vertex attributes of mesh. These vertex attributes will be finally provided to the {@link clay.Shader}.\n * Different {@link clay.Shader} needs different attributes. Here is a list of attributes used in the builtin shaders.\n *\n * + position: `clay.basic`, `clay.lambert`, `clay.standard`\n * + texcoord0: `clay.basic`, `clay.lambert`, `clay.standard`\n * + color: `clay.basic`, `clay.lambert`, `clay.standard`\n * + weight: `clay.basic`, `clay.lambert`, `clay.standard`\n * + joint: `clay.basic`, `clay.lambert`, `clay.standard`\n * + normal: `clay.lambert`, `clay.standard`\n * + tangent: `clay.standard`\n *\n * #### Create a procedural geometry\n *\n * ClayGL provides a couple of builtin procedural geometries. Inlcuding:\n *\n *  + {@link clay.geometry.Cube}\n *  + {@link clay.geometry.Sphere}\n *  + {@link clay.geometry.Plane}\n *  + {@link clay.geometry.Cylinder}\n *  + {@link clay.geometry.Cone}\n *  + {@link clay.geometry.ParametricSurface}\n *\n * It's simple to create a basic geometry with these classes.\n *\n```js\nvar sphere = new clay.geometry.Sphere({\n    radius: 2\n});\n```\n *\n * #### Create the geometry data by yourself\n *\n * Usually the vertex attributes data are created by the {@link clay.loader.GLTF} or procedural geometries like {@link clay.geometry.Sphere}.\n * Besides these, you can create the data manually. Here is a simple example to create a triangle.\n```js\nvar TRIANGLE_POSITIONS = [\n    [-0.5, -0.5, 0],\n    [0.5, -0.5, 0],\n    [0, 0.5, 0]\n];\nvar geometry = new clay.StaticGeometryBase();\n// Add triangle vertices to position attribute.\ngeometry.attributes.position.fromArray(TRIANGLE_POSITIONS);\n```\n * Then you can use the utility methods like `generateVertexNormals`, `generateTangents` to create the remaining necessary attributes.\n *\n *\n * #### Use with custom shaders\n *\n * If you wan't to write custom shaders. Don't forget to add SEMANTICS to these attributes. For example\n *\n ```glsl\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n```\n * These `POSITION`, `TEXCOORD_0`, `NORMAL` are SEMANTICS which will map the attributes in shader to the attributes in the GeometryBase\n *\n * Available attributes SEMANTICS includes `POSITION`, `TEXCOORD_0`, `TEXCOORD_1` `NORMAL`, `TANGENT`, `COLOR`, `WEIGHT`, `JOINT`.\n *\n *\n * @constructor clay.Geometry\n * @extends clay.GeometryBase\n */\nvar Geometry = __WEBPACK_IMPORTED_MODULE_4__GeometryBase__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Geometry# */ {\n        /**\n         * Attributes of geometry. Including:\n         *  + `position`\n         *  + `texcoord0`\n         *  + `texcoord1`\n         *  + `normal`\n         *  + `tangent`\n         *  + `color`\n         *  + `weight`\n         *  + `joint`\n         *  + `barycentric`\n         *\n         * @type {Object.<string, clay.Geometry.Attribute>}\n         */\n        attributes: {\n            position: new Attribute('position', 'float', 3, 'POSITION'),\n            texcoord0: new Attribute('texcoord0', 'float', 2, 'TEXCOORD_0'),\n            texcoord1: new Attribute('texcoord1', 'float', 2, 'TEXCOORD_1'),\n            normal: new Attribute('normal', 'float', 3, 'NORMAL'),\n            tangent: new Attribute('tangent', 'float', 4, 'TANGENT'),\n            color: new Attribute('color', 'float', 4, 'COLOR'),\n            // Skinning attributes\n            // Each vertex can be bind to 4 bones, because the\n            // sum of weights is 1, so the weights is stored in vec3 and the last\n            // can be calculated by 1-w.x-w.y-w.z\n            weight: new Attribute('weight', 'float', 3, 'WEIGHT'),\n            joint: new Attribute('joint', 'float', 4, 'JOINT'),\n            // For wireframe display\n            // http://codeflow.org/entries/2012/aug/02/easy-wireframe-display-with-barycentric-coordinates/\n            barycentric: new Attribute('barycentric', 'float', 3, null),\n        },\n        /**\n         * Calculated bounding box of geometry.\n         * @type {clay.BoundingBox}\n         */\n        boundingBox: null\n    };\n},\n/** @lends clay.Geometry.prototype */\n{\n\n    mainAttribute: 'position',\n\n    /**\n     * Update boundingBox of Geometry\n     */\n    updateBoundingBox: function () {\n        var bbox = this.boundingBox;\n        if (!bbox) {\n            bbox = this.boundingBox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n        }\n        var posArr = this.attributes.position.value;\n        if (posArr && posArr.length) {\n            var min = bbox.min;\n            var max = bbox.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].set(minArr, posArr[0], posArr[1], posArr[2]);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].set(maxArr, posArr[0], posArr[1], posArr[2]);\n            for (var i = 3; i < posArr.length;) {\n                var x = posArr[i++];\n                var y = posArr[i++];\n                var z = posArr[i++];\n                if (x < minArr[0]) { minArr[0] = x; }\n                if (y < minArr[1]) { minArr[1] = y; }\n                if (z < minArr[2]) { minArr[2] = z; }\n\n                if (x > maxArr[0]) { maxArr[0] = x; }\n                if (y > maxArr[1]) { maxArr[1] = y; }\n                if (z > maxArr[2]) { maxArr[2] = z; }\n            }\n            min._dirty = true;\n            max._dirty = true;\n        }\n    },\n\n    /**\n     * Generate normals per vertex.\n     */\n    generateVertexNormals: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        var indices = this.indices;\n        var attributes = this.attributes;\n        var positions = attributes.position.value;\n        var normals = attributes.normal.value;\n\n        if (!normals || normals.length !== positions.length) {\n            normals = attributes.normal.value = new __WEBPACK_IMPORTED_MODULE_0__core_vendor__[\"a\" /* default */].Float32Array(positions.length);\n        }\n        else {\n            // Reset\n            for (var i = 0; i < normals.length; i++) {\n                normals[i] = 0;\n            }\n        }\n\n        var p1 = vec3Create();\n        var p2 = vec3Create();\n        var p3 = vec3Create();\n\n        var v21 = vec3Create();\n        var v32 = vec3Create();\n\n        var n = vec3Create();\n\n        var len = indices ? indices.length : this.vertexCount;\n        var i1, i2, i3;\n        for (var f = 0; f < len;) {\n            if (indices) {\n                i1 = indices[f++];\n                i2 = indices[f++];\n                i3 = indices[f++];\n            }\n            else {\n                i1 = f++;\n                i2 = f++;\n                i3 = f++;\n            }\n\n            vec3Set(p1, positions[i1*3], positions[i1*3+1], positions[i1*3+2]);\n            vec3Set(p2, positions[i2*3], positions[i2*3+1], positions[i2*3+2]);\n            vec3Set(p3, positions[i3*3], positions[i3*3+1], positions[i3*3+2]);\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(v21, p1, p2);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(v32, p2, p3);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].cross(n, v21, v32);\n            // Already be weighted by the triangle area\n            for (var i = 0; i < 3; i++) {\n                normals[i1*3+i] = normals[i1*3+i] + n[i];\n                normals[i2*3+i] = normals[i2*3+i] + n[i];\n                normals[i3*3+i] = normals[i3*3+i] + n[i];\n            }\n        }\n\n        for (var i = 0; i < normals.length;) {\n            vec3Set(n, normals[i], normals[i+1], normals[i+2]);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].normalize(n, n);\n            normals[i++] = n[0];\n            normals[i++] = n[1];\n            normals[i++] = n[2];\n        }\n        this.dirty();\n    },\n\n    /**\n     * Generate normals per face.\n     */\n    generateFaceNormals: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        if (!this.isUniqueVertex()) {\n            this.generateUniqueVertex();\n        }\n\n        var indices = this.indices;\n        var attributes = this.attributes;\n        var positions = attributes.position.value;\n        var normals = attributes.normal.value;\n\n        var p1 = vec3Create();\n        var p2 = vec3Create();\n        var p3 = vec3Create();\n\n        var v21 = vec3Create();\n        var v32 = vec3Create();\n        var n = vec3Create();\n\n        if (!normals) {\n            normals = attributes.normal.value = new Float32Array(positions.length);\n        }\n        var len = indices ? indices.length : this.vertexCount;\n        var i1, i2, i3;\n        for (var f = 0; f < len;) {\n            if (indices) {\n                i1 = indices[f++];\n                i2 = indices[f++];\n                i3 = indices[f++];\n            }\n            else {\n                i1 = f++;\n                i2 = f++;\n                i3 = f++;\n            }\n\n            vec3Set(p1, positions[i1*3], positions[i1*3+1], positions[i1*3+2]);\n            vec3Set(p2, positions[i2*3], positions[i2*3+1], positions[i2*3+2]);\n            vec3Set(p3, positions[i3*3], positions[i3*3+1], positions[i3*3+2]);\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(v21, p1, p2);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(v32, p2, p3);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].cross(n, v21, v32);\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].normalize(n, n);\n\n            for (var i = 0; i < 3; i++) {\n                normals[i1*3 + i] = n[i];\n                normals[i2*3 + i] = n[i];\n                normals[i3*3 + i] = n[i];\n            }\n        }\n        this.dirty();\n    },\n\n    /**\n     * Generate tangents attributes.\n     */\n    generateTangents: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        var nVertex = this.vertexCount;\n        var attributes = this.attributes;\n        if (!attributes.tangent.value) {\n            attributes.tangent.value = new Float32Array(nVertex * 4);\n        }\n        var texcoords = attributes.texcoord0.value;\n        var positions = attributes.position.value;\n        var tangents = attributes.tangent.value;\n        var normals = attributes.normal.value;\n\n        if (!texcoords) {\n            console.warn('Geometry without texcoords can\\'t generate tangents.');\n            return;\n        }\n\n        var tan1 = [];\n        var tan2 = [];\n        for (var i = 0; i < nVertex; i++) {\n            tan1[i] = [0.0, 0.0, 0.0];\n            tan2[i] = [0.0, 0.0, 0.0];\n        }\n\n        var sdir = [0.0, 0.0, 0.0];\n        var tdir = [0.0, 0.0, 0.0];\n        var indices = this.indices;\n\n        var len = indices ? indices.length : this.vertexCount;\n        var i1, i2, i3;\n        for (var i = 0; i < len;) {\n            if (indices) {\n                i1 = indices[i++];\n                i2 = indices[i++];\n                i3 = indices[i++];\n            }\n            else {\n                i1 = i++;\n                i2 = i++;\n                i3 = i++;\n            }\n\n            var st1s = texcoords[i1 * 2],\n                st2s = texcoords[i2 * 2],\n                st3s = texcoords[i3 * 2],\n                st1t = texcoords[i1 * 2 + 1],\n                st2t = texcoords[i2 * 2 + 1],\n                st3t = texcoords[i3 * 2 + 1],\n\n                p1x = positions[i1 * 3],\n                p2x = positions[i2 * 3],\n                p3x = positions[i3 * 3],\n                p1y = positions[i1 * 3 + 1],\n                p2y = positions[i2 * 3 + 1],\n                p3y = positions[i3 * 3 + 1],\n                p1z = positions[i1 * 3 + 2],\n                p2z = positions[i2 * 3 + 2],\n                p3z = positions[i3 * 3 + 2];\n\n            var x1 = p2x - p1x,\n                x2 = p3x - p1x,\n                y1 = p2y - p1y,\n                y2 = p3y - p1y,\n                z1 = p2z - p1z,\n                z2 = p3z - p1z;\n\n            var s1 = st2s - st1s,\n                s2 = st3s - st1s,\n                t1 = st2t - st1t,\n                t2 = st3t - st1t;\n\n            var r = 1.0 / (s1 * t2 - t1 * s2);\n            sdir[0] = (t2 * x1 - t1 * x2) * r;\n            sdir[1] = (t2 * y1 - t1 * y2) * r;\n            sdir[2] = (t2 * z1 - t1 * z2) * r;\n\n            tdir[0] = (s1 * x2 - s2 * x1) * r;\n            tdir[1] = (s1 * y2 - s2 * y1) * r;\n            tdir[2] = (s1 * z2 - s2 * z1) * r;\n\n            vec3Add(tan1[i1], tan1[i1], sdir);\n            vec3Add(tan1[i2], tan1[i2], sdir);\n            vec3Add(tan1[i3], tan1[i3], sdir);\n            vec3Add(tan2[i1], tan2[i1], tdir);\n            vec3Add(tan2[i2], tan2[i2], tdir);\n            vec3Add(tan2[i3], tan2[i3], tdir);\n        }\n        var tmp = vec3Create();\n        var nCrossT = vec3Create();\n        var n = vec3Create();\n        for (var i = 0; i < nVertex; i++) {\n            n[0] = normals[i * 3];\n            n[1] = normals[i * 3 + 1];\n            n[2] = normals[i * 3 + 2];\n            var t = tan1[i];\n\n            // Gram-Schmidt orthogonalize\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].scale(tmp, n, __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(n, t));\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(tmp, t, tmp);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].normalize(tmp, tmp);\n            // Calculate handedness.\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].cross(nCrossT, n, t);\n            tangents[i * 4] = tmp[0];\n            tangents[i * 4 + 1] = tmp[1];\n            tangents[i * 4 + 2] = tmp[2];\n            // PENDING can config ?\n            tangents[i * 4 + 3] = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(nCrossT, tan2[i]) < 0.0 ? -1.0 : 1.0;\n        }\n        this.dirty();\n    },\n\n    /**\n     * If vertices are not shared by different indices.\n     */\n    isUniqueVertex: function () {\n        if (this.isUseIndices()) {\n            return this.vertexCount === this.indices.length;\n        }\n        else {\n            return true;\n        }\n    },\n    /**\n     * Create a unique vertex for each index.\n     */\n    generateUniqueVertex: function () {\n        if (!this.vertexCount || !this.indices) {\n            return;\n        }\n\n        if (this.indices.length > 0xffff) {\n            this.indices = new __WEBPACK_IMPORTED_MODULE_0__core_vendor__[\"a\" /* default */].Uint32Array(this.indices);\n        }\n\n        var attributes = this.attributes;\n        var indices = this.indices;\n\n        var attributeNameList = this.getEnabledAttributes();\n\n        var oldAttrValues = {};\n        for (var a = 0; a < attributeNameList.length; a++) {\n            var name = attributeNameList[a];\n            oldAttrValues[name] = attributes[name].value;\n            attributes[name].init(this.indices.length);\n        }\n\n        var cursor = 0;\n        for (var i = 0; i < indices.length; i++) {\n            var ii = indices[i];\n            for (var a = 0; a < attributeNameList.length; a++) {\n                var name = attributeNameList[a];\n                var array = attributes[name].value;\n                var size = attributes[name].size;\n\n                for (var k = 0; k < size; k++) {\n                    array[cursor * size + k] = oldAttrValues[name][ii * size + k];\n                }\n            }\n            indices[i] = cursor;\n            cursor++;\n        }\n\n        this.dirty();\n    },\n\n    /**\n     * Generate barycentric coordinates for wireframe draw.\n     */\n    generateBarycentric: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        if (!this.isUniqueVertex()) {\n            this.generateUniqueVertex();\n        }\n\n        var attributes = this.attributes;\n        var array = attributes.barycentric.value;\n        var indices = this.indices;\n        // Already existed;\n        if (array && array.length === indices.length * 3) {\n            return;\n        }\n        array = attributes.barycentric.value = new Float32Array(indices.length * 3);\n\n        for (var i = 0; i < (indices ? indices.length : this.vertexCount / 3);) {\n            for (var j = 0; j < 3; j++) {\n                var ii = indices ? indices[i++] : (i * 3 + j);\n                array[ii * 3 + j] = 1;\n            }\n        }\n        this.dirty();\n    },\n\n    /**\n     * Apply transform to geometry attributes.\n     * @param {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n\n        var attributes = this.attributes;\n        var positions = attributes.position.value;\n        var normals = attributes.normal.value;\n        var tangents = attributes.tangent.value;\n\n        matrix = matrix.array;\n        // Normal Matrix\n        var inverseTransposeMatrix = __WEBPACK_IMPORTED_MODULE_2__glmatrix_mat4__[\"a\" /* default */].create();\n        __WEBPACK_IMPORTED_MODULE_2__glmatrix_mat4__[\"a\" /* default */].invert(inverseTransposeMatrix, matrix);\n        __WEBPACK_IMPORTED_MODULE_2__glmatrix_mat4__[\"a\" /* default */].transpose(inverseTransposeMatrix, inverseTransposeMatrix);\n\n        var vec3TransformMat4 = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].transformMat4;\n        var vec3ForEach = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].forEach;\n        vec3ForEach(positions, 3, 0, null, vec3TransformMat4, matrix);\n        if (normals) {\n            vec3ForEach(normals, 3, 0, null, vec3TransformMat4, inverseTransposeMatrix);\n        }\n        if (tangents) {\n            vec3ForEach(tangents, 4, 0, null, vec3TransformMat4, inverseTransposeMatrix);\n        }\n\n        if (this.boundingBox) {\n            this.updateBoundingBox();\n        }\n    },\n    /**\n     * Dispose geometry data in GL context.\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n        var chunks = cache.get('chunks');\n        if (chunks) {\n            for (var c = 0; c < chunks.length; c++) {\n                var chunk = chunks[c];\n\n                for (var k = 0; k < chunk.attributeBuffers.length; k++) {\n                    var attribs = chunk.attributeBuffers[k];\n                    renderer.gl.deleteBuffer(attribs.buffer);\n                }\n\n                if (chunk.indicesBuffer) {\n                    renderer.gl.deleteBuffer(chunk.indicesBuffer.buffer);\n                }\n            }\n        }\n        if (this.__vaoCache) {\n            var vaoExt = renderer.getGLExtension('OES_vertex_array_object');\n            for (var id in this.__vaoCache) {\n                var vao = this.__vaoCache[id].vao;\n                if (vao) {\n                    vaoExt.deleteVertexArrayOES(vao);\n                }\n            }\n        }\n        this.__vaoCache = {};\n        cache.deleteContext(renderer.__uid__);\n    }\n\n});\n\nGeometry.STATIC_DRAW = __WEBPACK_IMPORTED_MODULE_4__GeometryBase__[\"a\" /* default */].STATIC_DRAW;\nGeometry.DYNAMIC_DRAW = __WEBPACK_IMPORTED_MODULE_4__GeometryBase__[\"a\" /* default */].DYNAMIC_DRAW;\nGeometry.STREAM_DRAW = __WEBPACK_IMPORTED_MODULE_4__GeometryBase__[\"a\" /* default */].STREAM_DRAW;\n\nGeometry.AttributeBuffer = __WEBPACK_IMPORTED_MODULE_4__GeometryBase__[\"a\" /* default */].AttributeBuffer;\nGeometry.IndicesBuffer = __WEBPACK_IMPORTED_MODULE_4__GeometryBase__[\"a\" /* default */].IndicesBuffer;\n\nGeometry.Attribute = Attribute;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Geometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Mesh__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__geometry_Cube__ = __webpack_require__(99);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__camera_Perspective__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shader_source_skybox_glsl_js__ = __webpack_require__(55);\n// TODO Should not derived from mesh?\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_2__Shader__[\"a\" /* default */].import(__WEBPACK_IMPORTED_MODULE_7__shader_source_skybox_glsl_js__[\"a\" /* default */]);\n/**\n * @constructor clay.plugin.Skybox\n *\n * @example\n *     var skyTex = new clay.TextureCube();\n *     skyTex.load({\n *         'px': 'assets/textures/sky/px.jpg',\n *         'nx': 'assets/textures/sky/nx.jpg'\n *         'py': 'assets/textures/sky/py.jpg'\n *         'ny': 'assets/textures/sky/ny.jpg'\n *         'pz': 'assets/textures/sky/pz.jpg'\n *         'nz': 'assets/textures/sky/nz.jpg'\n *     });\n *     var skybox = new clay.plugin.Skybox({\n *         scene: scene\n *     });\n *     skybox.material.set('environmentMap', skyTex);\n */\nvar Skybox = __WEBPACK_IMPORTED_MODULE_0__Mesh__[\"a\" /* default */].extend(function () {\n\n    var skyboxShader = new __WEBPACK_IMPORTED_MODULE_2__Shader__[\"a\" /* default */]({\n        vertex: __WEBPACK_IMPORTED_MODULE_2__Shader__[\"a\" /* default */].source('clay.skybox.vertex'),\n        fragment: __WEBPACK_IMPORTED_MODULE_2__Shader__[\"a\" /* default */].source('clay.skybox.fragment')\n    });\n    var material = new __WEBPACK_IMPORTED_MODULE_3__Material__[\"a\" /* default */]({\n        shader: skyboxShader,\n        depthMask: false\n    });\n\n    return {\n        /**\n         * @type {clay.Scene}\n         * @memberOf clay.plugin.Skybox.prototype\n         */\n        scene: null,\n\n        geometry: new __WEBPACK_IMPORTED_MODULE_1__geometry_Cube__[\"a\" /* default */](),\n\n        material: material,\n\n        environmentMap: null,\n\n        culling: false,\n\n        _dummyCamera: new __WEBPACK_IMPORTED_MODULE_5__camera_Perspective__[\"a\" /* default */]()\n    };\n}, function () {\n    var scene = this.scene;\n    if (scene) {\n        this.attachScene(scene);\n    }\n    if (this.environmentMap) {\n        this.setEnvironmentMap(this.environmentMap);\n    }\n}, /** @lends clay.plugin.Skybox# */ {\n    /**\n     * Attach the skybox to the scene\n     * @param  {clay.Scene} scene\n     */\n    attachScene: function (scene) {\n        if (this.scene) {\n            this.detachScene();\n        }\n        scene.skybox = this;\n\n        this.scene = scene;\n        scene.on('beforerender', this._beforeRenderScene, this);\n    },\n    /**\n     * Detach from scene\n     */\n    detachScene: function () {\n        if (this.scene) {\n            this.scene.off('beforerender', this._beforeRenderScene);\n            this.scene.skybox = null;\n        }\n        this.scene = null;\n    },\n\n    /**\n     * Dispose skybox\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this.detachScene();\n        this.geometry.dispose(renderer);\n    },\n    /**\n     * Set environment map\n     * @param {clay.TextureCube} envMap\n     */\n    setEnvironmentMap: function (envMap) {\n        if (envMap.textureType === 'texture2D') {\n            this.material.define('EQUIRECTANGULAR');\n            // LINEAR filter can remove the artifacts in pole\n            envMap.minFilter = __WEBPACK_IMPORTED_MODULE_4__Texture__[\"a\" /* default */].LINEAR;\n        }\n        else {\n            this.material.undefine('EQUIRECTANGULAR');\n        }\n        this.material.set('environmentMap', envMap);\n    },\n    /**\n     * Get environment map\n     * @return {clay.TextureCube}\n     */\n    getEnvironmentMap: function () {\n        return this.material.get('environmentMap');\n    },\n\n    _beforeRenderScene: function(renderer, scene, camera) {\n        this.renderSkybox(renderer, camera);\n    },\n\n    renderSkybox: function (renderer, camera) {\n        var dummyCamera = this._dummyCamera;\n        dummyCamera.aspect = renderer.getViewportAspect();\n        dummyCamera.fov = camera.fov || 50;\n        dummyCamera.updateProjectionMatrix();\n        __WEBPACK_IMPORTED_MODULE_6__math_Matrix4__[\"a\" /* default */].invert(dummyCamera.invProjectionMatrix, dummyCamera.projectionMatrix);\n        dummyCamera.worldTransform.copy(camera.worldTransform);\n        dummyCamera.viewMatrix.copy(camera.viewMatrix);\n\n        this.position.copy(camera.getWorldPosition());\n        this.update();\n\n        // Don't remember to disable blend\n        renderer.gl.disable(renderer.gl.BLEND);\n        if (this.material.get('lod') > 0) {\n            this.material.define('fragment', 'LOD');\n        }\n        else {\n            this.material.undefine('fragment', 'LOD');\n        }\n        renderer.renderPass([this], dummyCamera);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Skybox);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvcGx1Z2luL1NreWJveC5qcz83ZDkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8gU2hvdWxkIG5vdCBkZXJpdmVkIGZyb20gbWVzaD9cbmltcG9ydCBNZXNoIGZyb20gJy4uL01lc2gnO1xuaW1wb3J0IEN1YmVHZW9tZXRyeSBmcm9tICcuLi9nZW9tZXRyeS9DdWJlJztcbmltcG9ydCBTaGFkZXIgZnJvbSAnLi4vU2hhZGVyJztcbmltcG9ydCBNYXRlcmlhbCBmcm9tICcuLi9NYXRlcmlhbCc7XG5pbXBvcnQgVGV4dHVyZSBmcm9tICcuLi9UZXh0dXJlJztcbmltcG9ydCBQZXJzcGVjdGl2ZUNhbWVyYSBmcm9tICcuLi9jYW1lcmEvUGVyc3BlY3RpdmUnO1xuaW1wb3J0IE1hdHJpeDQgZnJvbSAnLi4vbWF0aC9NYXRyaXg0JztcblxuaW1wb3J0IHNreWJveEVzc2wgZnJvbSAnLi4vc2hhZGVyL3NvdXJjZS9za3lib3guZ2xzbC5qcyc7XG5TaGFkZXIuaW1wb3J0KHNreWJveEVzc2wpO1xuLyoqXG4gKiBAY29uc3RydWN0b3IgY2xheS5wbHVnaW4uU2t5Ym94XG4gKlxuICogQGV4YW1wbGVcbiAqICAgICB2YXIgc2t5VGV4ID0gbmV3IGNsYXkuVGV4dHVyZUN1YmUoKTtcbiAqICAgICBza3lUZXgubG9hZCh7XG4gKiAgICAgICAgICdweCc6ICdhc3NldHMvdGV4dHVyZXMvc2t5L3B4LmpwZycsXG4gKiAgICAgICAgICdueCc6ICdhc3NldHMvdGV4dHVyZXMvc2t5L254LmpwZydcbiAqICAgICAgICAgJ3B5JzogJ2Fzc2V0cy90ZXh0dXJlcy9za3kvcHkuanBnJ1xuICogICAgICAgICAnbnknOiAnYXNzZXRzL3RleHR1cmVzL3NreS9ueS5qcGcnXG4gKiAgICAgICAgICdweic6ICdhc3NldHMvdGV4dHVyZXMvc2t5L3B6LmpwZydcbiAqICAgICAgICAgJ256JzogJ2Fzc2V0cy90ZXh0dXJlcy9za3kvbnouanBnJ1xuICogICAgIH0pO1xuICogICAgIHZhciBza3lib3ggPSBuZXcgY2xheS5wbHVnaW4uU2t5Ym94KHtcbiAqICAgICAgICAgc2NlbmU6IHNjZW5lXG4gKiAgICAgfSk7XG4gKiAgICAgc2t5Ym94Lm1hdGVyaWFsLnNldCgnZW52aXJvbm1lbnRNYXAnLCBza3lUZXgpO1xuICovXG52YXIgU2t5Ym94ID0gTWVzaC5leHRlbmQoZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyIHNreWJveFNoYWRlciA9IG5ldyBTaGFkZXIoe1xuICAgICAgICB2ZXJ0ZXg6IFNoYWRlci5zb3VyY2UoJ2NsYXkuc2t5Ym94LnZlcnRleCcpLFxuICAgICAgICBmcmFnbWVudDogU2hhZGVyLnNvdXJjZSgnY2xheS5za3lib3guZnJhZ21lbnQnKVxuICAgIH0pO1xuICAgIHZhciBtYXRlcmlhbCA9IG5ldyBNYXRlcmlhbCh7XG4gICAgICAgIHNoYWRlcjogc2t5Ym94U2hhZGVyLFxuICAgICAgICBkZXB0aE1hc2s6IGZhbHNlXG4gICAgfSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogQHR5cGUge2NsYXkuU2NlbmV9XG4gICAgICAgICAqIEBtZW1iZXJPZiBjbGF5LnBsdWdpbi5Ta3lib3gucHJvdG90eXBlXG4gICAgICAgICAqL1xuICAgICAgICBzY2VuZTogbnVsbCxcblxuICAgICAgICBnZW9tZXRyeTogbmV3IEN1YmVHZW9tZXRyeSgpLFxuXG4gICAgICAgIG1hdGVyaWFsOiBtYXRlcmlhbCxcblxuICAgICAgICBlbnZpcm9ubWVudE1hcDogbnVsbCxcblxuICAgICAgICBjdWxsaW5nOiBmYWxzZSxcblxuICAgICAgICBfZHVtbXlDYW1lcmE6IG5ldyBQZXJzcGVjdGl2ZUNhbWVyYSgpXG4gICAgfTtcbn0sIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2NlbmUgPSB0aGlzLnNjZW5lO1xuICAgIGlmIChzY2VuZSkge1xuICAgICAgICB0aGlzLmF0dGFjaFNjZW5lKHNjZW5lKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuZW52aXJvbm1lbnRNYXApIHtcbiAgICAgICAgdGhpcy5zZXRFbnZpcm9ubWVudE1hcCh0aGlzLmVudmlyb25tZW50TWFwKTtcbiAgICB9XG59LCAvKiogQGxlbmRzIGNsYXkucGx1Z2luLlNreWJveCMgKi8ge1xuICAgIC8qKlxuICAgICAqIEF0dGFjaCB0aGUgc2t5Ym94IHRvIHRoZSBzY2VuZVxuICAgICAqIEBwYXJhbSAge2NsYXkuU2NlbmV9IHNjZW5lXG4gICAgICovXG4gICAgYXR0YWNoU2NlbmU6IGZ1bmN0aW9uIChzY2VuZSkge1xuICAgICAgICBpZiAodGhpcy5zY2VuZSkge1xuICAgICAgICAgICAgdGhpcy5kZXRhY2hTY2VuZSgpO1xuICAgICAgICB9XG4gICAgICAgIHNjZW5lLnNreWJveCA9IHRoaXM7XG5cbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgICAgICBzY2VuZS5vbignYmVmb3JlcmVuZGVyJywgdGhpcy5fYmVmb3JlUmVuZGVyU2NlbmUsIHRoaXMpO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRGV0YWNoIGZyb20gc2NlbmVcbiAgICAgKi9cbiAgICBkZXRhY2hTY2VuZTogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5zY2VuZSkge1xuICAgICAgICAgICAgdGhpcy5zY2VuZS5vZmYoJ2JlZm9yZXJlbmRlcicsIHRoaXMuX2JlZm9yZVJlbmRlclNjZW5lKTtcbiAgICAgICAgICAgIHRoaXMuc2NlbmUuc2t5Ym94ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNjZW5lID0gbnVsbDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogRGlzcG9zZSBza3lib3hcbiAgICAgKiBAcGFyYW0gIHtjbGF5LlJlbmRlcmVyfSByZW5kZXJlclxuICAgICAqL1xuICAgIGRpc3Bvc2U6IGZ1bmN0aW9uIChyZW5kZXJlcikge1xuICAgICAgICB0aGlzLmRldGFjaFNjZW5lKCk7XG4gICAgICAgIHRoaXMuZ2VvbWV0cnkuZGlzcG9zZShyZW5kZXJlcik7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBTZXQgZW52aXJvbm1lbnQgbWFwXG4gICAgICogQHBhcmFtIHtjbGF5LlRleHR1cmVDdWJlfSBlbnZNYXBcbiAgICAgKi9cbiAgICBzZXRFbnZpcm9ubWVudE1hcDogZnVuY3Rpb24gKGVudk1hcCkge1xuICAgICAgICBpZiAoZW52TWFwLnRleHR1cmVUeXBlID09PSAndGV4dHVyZTJEJykge1xuICAgICAgICAgICAgdGhpcy5tYXRlcmlhbC5kZWZpbmUoJ0VRVUlSRUNUQU5HVUxBUicpO1xuICAgICAgICAgICAgLy8gTElORUFSIGZpbHRlciBjYW4gcmVtb3ZlIHRoZSBhcnRpZmFjdHMgaW4gcG9sZVxuICAgICAgICAgICAgZW52TWFwLm1pbkZpbHRlciA9IFRleHR1cmUuTElORUFSO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tYXRlcmlhbC51bmRlZmluZSgnRVFVSVJFQ1RBTkdVTEFSJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5tYXRlcmlhbC5zZXQoJ2Vudmlyb25tZW50TWFwJywgZW52TWFwKTtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEdldCBlbnZpcm9ubWVudCBtYXBcbiAgICAgKiBAcmV0dXJuIHtjbGF5LlRleHR1cmVDdWJlfVxuICAgICAqL1xuICAgIGdldEVudmlyb25tZW50TWFwOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hdGVyaWFsLmdldCgnZW52aXJvbm1lbnRNYXAnKTtcbiAgICB9LFxuXG4gICAgX2JlZm9yZVJlbmRlclNjZW5lOiBmdW5jdGlvbihyZW5kZXJlciwgc2NlbmUsIGNhbWVyYSkge1xuICAgICAgICB0aGlzLnJlbmRlclNreWJveChyZW5kZXJlciwgY2FtZXJhKTtcbiAgICB9LFxuXG4gICAgcmVuZGVyU2t5Ym94OiBmdW5jdGlvbiAocmVuZGVyZXIsIGNhbWVyYSkge1xuICAgICAgICB2YXIgZHVtbXlDYW1lcmEgPSB0aGlzLl9kdW1teUNhbWVyYTtcbiAgICAgICAgZHVtbXlDYW1lcmEuYXNwZWN0ID0gcmVuZGVyZXIuZ2V0Vmlld3BvcnRBc3BlY3QoKTtcbiAgICAgICAgZHVtbXlDYW1lcmEuZm92ID0gY2FtZXJhLmZvdiB8fCA1MDtcbiAgICAgICAgZHVtbXlDYW1lcmEudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpO1xuICAgICAgICBNYXRyaXg0LmludmVydChkdW1teUNhbWVyYS5pbnZQcm9qZWN0aW9uTWF0cml4LCBkdW1teUNhbWVyYS5wcm9qZWN0aW9uTWF0cml4KTtcbiAgICAgICAgZHVtbXlDYW1lcmEud29ybGRUcmFuc2Zvcm0uY29weShjYW1lcmEud29ybGRUcmFuc2Zvcm0pO1xuICAgICAgICBkdW1teUNhbWVyYS52aWV3TWF0cml4LmNvcHkoY2FtZXJhLnZpZXdNYXRyaXgpO1xuXG4gICAgICAgIHRoaXMucG9zaXRpb24uY29weShjYW1lcmEuZ2V0V29ybGRQb3NpdGlvbigpKTtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcblxuICAgICAgICAvLyBEb24ndCByZW1lbWJlciB0byBkaXNhYmxlIGJsZW5kXG4gICAgICAgIHJlbmRlcmVyLmdsLmRpc2FibGUocmVuZGVyZXIuZ2wuQkxFTkQpO1xuICAgICAgICBpZiAodGhpcy5tYXRlcmlhbC5nZXQoJ2xvZCcpID4gMCkge1xuICAgICAgICAgICAgdGhpcy5tYXRlcmlhbC5kZWZpbmUoJ2ZyYWdtZW50JywgJ0xPRCcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tYXRlcmlhbC51bmRlZmluZSgnZnJhZ21lbnQnLCAnTE9EJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVuZGVyZXIucmVuZGVyUGFzcyhbdGhpc10sIGR1bW15Q2FtZXJhKTtcbiAgICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgU2t5Ym94O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvcGx1Z2luL1NreWJveC5qc1xuLy8gbW9kdWxlIGlkID0gMjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n\n\n// PENDING\n// Use topological sort ?\n\n/**\n * Node of graph based post processing.\n *\n * @constructor clay.compositor.CompositorNode\n * @extends clay.core.Base\n *\n */\nvar CompositorNode = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.compositor.CompositorNode# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * Input links, will be updated by the graph\n         * @example:\n         *     inputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        inputLinks: {},\n\n        /**\n         * Output links, will be updated by the graph\n         * @example:\n         *     outputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        outputLinks: {},\n\n        // Save the output texture of previous frame\n        // Will be used when there exist a circular reference\n        _prevOutputTextures: {},\n        _outputTextures: {},\n\n        // Example: { name: 2 }\n        _outputReferences: {},\n\n        _rendering: false,\n        // If rendered in this frame\n        _rendered: false,\n\n        _compositor: null\n    };\n},\n/** @lends clay.compositor.CompositorNode.prototype */\n{\n\n    // TODO Remove parameter function callback\n    updateParameter: function (outputName, renderer) {\n        var outputInfo = this.outputs[outputName];\n        var parameters = outputInfo.parameters;\n        var parametersCopy = outputInfo._parametersCopy;\n        if (!parametersCopy) {\n            parametersCopy = outputInfo._parametersCopy = {};\n        }\n        if (parameters) {\n            for (var key in parameters) {\n                if (key !== 'width' && key !== 'height') {\n                    parametersCopy[key] = parameters[key];\n                }\n            }\n        }\n        var width, height;\n        if (parameters.width instanceof Function) {\n            width = parameters.width.call(this, renderer);\n        }\n        else {\n            width = parameters.width;\n        }\n        if (parameters.height instanceof Function) {\n            height = parameters.height.call(this, renderer);\n        }\n        else {\n            height = parameters.height;\n        }\n        if (\n            parametersCopy.width !== width\n            || parametersCopy.height !== height\n        ) {\n            if (this._outputTextures[outputName]) {\n                this._outputTextures[outputName].dispose(renderer.gl);\n            }\n        }\n        parametersCopy.width = width;\n        parametersCopy.height = height;\n\n        return parametersCopy;\n    },\n\n    /**\n     * Set parameter\n     * @param {string} name\n     * @param {} value\n     */\n    setParameter: function (name, value) {},\n    /**\n     * Get parameter value\n     * @param  {string} name\n     * @return {}\n     */\n    getParameter: function (name) {},\n    /**\n     * Set parameters\n     * @param {Object} obj\n     */\n    setParameters: function (obj) {\n        for (var name in obj) {\n            this.setParameter(name, obj[name]);\n        }\n    },\n\n    render: function () {},\n\n    getOutput: function (renderer /*optional*/, name) {\n        if (name == null) {\n            // Return the output texture without rendering\n            name = renderer;\n            return this._outputTextures[name];\n        }\n        var outputInfo = this.outputs[name];\n        if (!outputInfo) {\n            return ;\n        }\n\n        // Already been rendered in this frame\n        if (this._rendered) {\n            // Force return texture in last frame\n            if (outputInfo.outputLastFrame) {\n                return this._prevOutputTextures[name];\n            }\n            else {\n                return this._outputTextures[name];\n            }\n        }\n        else if (\n            // TODO\n            this._rendering   // Solve Circular Reference\n        ) {\n            if (!this._prevOutputTextures[name]) {\n                // Create a blank texture at first pass\n                this._prevOutputTextures[name] = this._compositor.allocateTexture(outputInfo.parameters || {});\n            }\n            return this._prevOutputTextures[name];\n        }\n\n        this.render(renderer);\n\n        return this._outputTextures[name];\n    },\n\n    removeReference: function (outputName) {\n        this._outputReferences[outputName]--;\n        if (this._outputReferences[outputName] === 0) {\n            var outputInfo = this.outputs[outputName];\n            if (outputInfo.keepLastFrame) {\n                if (this._prevOutputTextures[outputName]) {\n                    this._compositor.releaseTexture(this._prevOutputTextures[outputName]);\n                }\n                this._prevOutputTextures[outputName] = this._outputTextures[outputName];\n            }\n            else {\n                // Output of this node have alreay been used by all other nodes\n                // Put the texture back to the pool.\n                this._compositor.releaseTexture(this._outputTextures[outputName]);\n            }\n        }\n    },\n\n    link: function (inputPinName, fromNode, fromPinName) {\n\n        // The relationship from output pin to input pin is one-on-multiple\n        this.inputLinks[inputPinName] = {\n            node: fromNode,\n            pin: fromPinName\n        };\n        if (!fromNode.outputLinks[fromPinName]) {\n            fromNode.outputLinks[fromPinName] = [];\n        }\n        fromNode.outputLinks[fromPinName].push({\n            node: this,\n            pin: inputPinName\n        });\n\n        // Enabled the pin texture in shader\n        this.pass.material.enableTexture(inputPinName);\n    },\n\n    clear: function () {\n        this.inputLinks = {};\n        this.outputLinks = {};\n    },\n\n    updateReference: function (outputName) {\n        if (!this._rendering) {\n            this._rendering = true;\n            for (var inputName in this.inputLinks) {\n                var link = this.inputLinks[inputName];\n                link.node.updateReference(link.pin);\n            }\n            this._rendering = false;\n        }\n        if (outputName) {\n            this._outputReferences[outputName] ++;\n        }\n    },\n\n    beforeFrame: function () {\n        this._rendered = false;\n\n        for (var name in this.outputLinks) {\n            this._outputReferences[name] = 0;\n        }\n    },\n\n    afterFrame: function () {\n        // Put back all the textures to pool\n        for (var name in this.outputLinks) {\n            if (this._outputReferences[name] > 0) {\n                var outputInfo = this.outputs[name];\n                if (outputInfo.keepLastFrame) {\n                    if (this._prevOutputTextures[name]) {\n                        this._compositor.releaseTexture(this._prevOutputTextures[name]);\n                    }\n                    this._prevOutputTextures[name] = this._outputTextures[name];\n                }\n                else {\n                    this._compositor.releaseTexture(this._outputTextures[name]);\n                }\n            }\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (CompositorNode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\n// Generate halton sequence\n// https://en.wikipedia.org/wiki/Halton_sequence\nfunction halton(index, base) {\n\n    var result = 0;\n    var f = 1 / base;\n    var i = index;\n    while (i > 0) {\n        result = result + f * (i % base);\n        i = Math.floor(i / base);\n        f = f / base;\n    }\n    return result;\n}\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (halton);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dyYXBoaWMvaGFsdG9uLmpzPzJhMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBHZW5lcmF0ZSBoYWx0b24gc2VxdWVuY2Vcbi8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hhbHRvbl9zZXF1ZW5jZVxuZnVuY3Rpb24gaGFsdG9uKGluZGV4LCBiYXNlKSB7XG5cbiAgICB2YXIgcmVzdWx0ID0gMDtcbiAgICB2YXIgZiA9IDEgLyBiYXNlO1xuICAgIHZhciBpID0gaW5kZXg7XG4gICAgd2hpbGUgKGkgPiAwKSB7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdCArIGYgKiAoaSAlIGJhc2UpO1xuICAgICAgICBpID0gTWF0aC5mbG9vcihpIC8gYmFzZSk7XG4gICAgICAgIGYgPSBmIC8gYmFzZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBoYWx0b247XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vc3JjL2dyYXBoaWMvaGFsdG9uLmpzXG4vLyBtb2R1bGUgaWQgPSAzMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_zrender_src_core_LRU__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_util_texture__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_light_AmbientCubemap__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_light_AmbientSH__ = __webpack_require__(130);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_claygl_src_util_sh__ = __webpack_require__(131);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_zrender_src_tool_color__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_claygl_src_Texture2D__ = __webpack_require__(4);\n\n\n\n\n\n\n\n\n\n\nfunction isValueNone(value) {\n    return !value || value === 'none';\n}\n\nfunction isValueImage(value) {\n    return value instanceof HTMLCanvasElement\n        || value instanceof HTMLImageElement\n        || value instanceof HTMLVideoElement\n        || value instanceof Image;\n}\n\n\n/**\n * @param {string} textureName\n * @param {string|HTMLImageElement|HTMLCanvasElement} imgValue\n * @param {Viewer} app\n * @param {Object} [textureOpts]\n */\n__WEBPACK_IMPORTED_MODULE_1_claygl_src_Material__[\"a\" /* default */].prototype.setTextureImage = function (textureName, imgValue, app, textureOpts) {\n    if (!this.shader) {\n        return;\n    }\n\n    var material = this;\n    var texture;\n    // disableTexture first\n    material.disableTexture(textureName);\n    if (!isValueNone(imgValue)) {\n        texture = helper.loadTexture(imgValue, app, textureOpts, function (texture) {\n            material.enableTexture(textureName);\n            app.refresh();\n        });\n        // Set texture immediately for other code to verify if have this texture.\n        material.set(textureName, texture);\n    }\n\n    return texture;\n};\n\nvar helper = {};\n\n// Texture utilities\nvar blankImage = __WEBPACK_IMPORTED_MODULE_3_claygl_src_util_texture__[\"a\" /* default */].createBlank('rgba(255,255,255,0)').image;\n\nhelper.firstNotNull = function () {\n    for (var i = 0, len = arguments.length; i < len; i++) {\n        if (arguments[i] != null) {\n            return arguments[i];\n        }\n    }\n},\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement} imgValue\n * @param {Viewer} app\n * @param {Object} [textureOpts]\n * @param {Function} cb\n */\n// TODO Promise, test\nhelper.loadTexture = function (imgValue, app, textureOpts, cb) {\n    if (typeof textureOpts === 'function') {\n        cb = textureOpts;\n        textureOpts = {};\n    }\n    textureOpts = textureOpts || {};\n\n    var keys = Object.keys(textureOpts).sort();\n    var prefix = '';\n    for (var i = 0; i < keys.length; i++) {\n        prefix += keys[i] + '_' + textureOpts[keys[i]] + '_';\n    }\n\n    var textureCache = app.__textureCache = app.__textureCache || new __WEBPACK_IMPORTED_MODULE_2_zrender_src_core_LRU__[\"a\" /* default */](20);\n\n    if (isValueImage(imgValue)) {\n        var id = imgValue.__textureid__;\n        var textureObj = textureCache.get(prefix + id);\n        if (!textureObj) {\n            textureObj = {\n                texture: new __WEBPACK_IMPORTED_MODULE_8_claygl_src_Texture2D__[\"a\" /* default */]({\n                    image: imgValue,\n                    convertToPOT: true,\n                    dynamic: imgValue instanceof HTMLVideoElement\n                })\n            };\n            for (var i = 0; i < keys.length; i++) {\n                textureObj.texture[keys[i]] = textureOpts[keys[i]];\n            }\n            id = imgValue.__textureid__ || '__ecgl_image__' + textureObj.texture.__GUID__;\n            imgValue.__textureid__ = id;\n            textureCache.put(prefix + id, textureObj);\n\n            // TODO Next tick?\n            cb && cb(textureObj.texture);\n        }\n        return textureObj.texture;\n    }\n    else {\n        var textureObj = textureCache.get(prefix + imgValue);\n        if (textureObj) {\n            if (textureObj.callbacks) {\n                // Add to pending callbacks\n                textureObj.callbacks.push(cb);\n            }\n            else {\n                // TODO Next tick?\n                cb && cb(textureObj.texture);\n            }\n        }\n        else {\n            // Maybe base64\n            if (imgValue.match(/.hdr$|^data:application\\/octet-stream/)) {\n                textureObj = {\n                    callbacks: [cb]\n                };\n                var texture = __WEBPACK_IMPORTED_MODULE_3_claygl_src_util_texture__[\"a\" /* default */].loadTexture(imgValue, {\n                    exposure: textureOpts.exposure,\n                    fileType: 'hdr'\n                }, function () {\n                    texture.dirty();\n                    textureObj.callbacks.forEach(function (cb) {\n                        cb && cb(texture);\n                    });\n                    textureObj.callbacks = null;\n                });\n                textureObj.texture = texture;\n                textureCache.put(prefix + imgValue, textureObj);\n            }\n            else {\n                var fileType = imgValue.split('.').pop();\n                var isVideo = fileType === 'mp4'\n                    || fileType === 'webm'\n                    || fileType === 'ogg';\n                var texture = new __WEBPACK_IMPORTED_MODULE_8_claygl_src_Texture2D__[\"a\" /* default */]({\n                    convertToPOT: true,\n                    image: isVideo ? document.createElement('video') : new Image(),\n                    dynamic: isVideo\n                });\n                texture.image.crossOrigin = 'anonymous';\n\n                for (var i = 0; i < keys.length; i++) {\n                    texture[keys[i]] = textureOpts[keys[i]];\n                }\n\n                textureObj = {\n                    texture: texture,\n                    callbacks: [cb]\n                };\n                var originalImage = texture.image;\n                var onload = function () {\n                    texture.image = originalImage;\n\n                    texture.dirty();\n                    textureObj.callbacks.forEach(function (cb) {\n                        cb && cb(texture);\n                    });\n                    textureObj.callbacks = null;\n                };\n                if (isVideo) {\n                    originalImage.oncanplay = function () {\n                        originalImage.width = originalImage.videoWidth;\n                        originalImage.height = originalImage.videoHeight;\n                        originalImage.oncanplay = null;\n                        originalImage.loop = true;\n                        originalImage.play();\n                        onload();\n                    };\n                }\n                else {\n                    originalImage.onload = onload;\n                }\n                originalImage.src = imgValue;\n                // Use blank image as place holder.\n                texture.image = blankImage;\n\n                textureCache.put(prefix + imgValue, textureObj);\n            }\n        }\n\n        return textureObj.texture;\n    }\n};\n\n/**\n * Create ambientCubemap and ambientSH light. respectively to have specular and diffuse light\n * @return {Object} { specular, diffuse }\n */\nhelper.createAmbientCubemap = function (opt, app, cb) {\n    opt = opt || {};\n    var renderer = app.getRenderer();\n    var textureUrl = opt.texture;\n    var exposure = helper.firstNotNull(opt.exposure, 1.0);\n\n    var ambientCubemap, ambientSH;\n    if (opt.diffuseIntensity !== 0) {\n        ambientSH = new __WEBPACK_IMPORTED_MODULE_5_claygl_src_light_AmbientSH__[\"a\" /* default */]({\n            coefficients: [0.844, 0.712, 0.691, -0.037, 0.083, 0.167, 0.343, 0.288, 0.299, -0.041, -0.021, -0.009, -0.003, -0.041, -0.064, -0.011, -0.007, -0.004, -0.031, 0.034, 0.081, -0.060, -0.049, -0.060, 0.046, 0.056, 0.050]\n        });\n    }\n\n    if (opt.specularIntensity !== 0) {\n        ambientCubemap = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_light_AmbientCubemap__[\"a\" /* default */]();\n        ambientCubemap.cubemap = helper.loadTexture(textureUrl, app, {\n            exposure: exposure\n        }, function (cubemap) {\n            ambientCubemap.cubemap = cubemap;\n            // TODO Performance when multiple view\n            cubemap.flipY = false;\n            ambientCubemap.prefilter(renderer, 64);\n            ambientSH.coefficients = __WEBPACK_IMPORTED_MODULE_6_claygl_src_util_sh__[\"a\" /* default */].projectEnvironmentMap(renderer, ambientCubemap.cubemap, {\n                lod: 1\n            });\n\n            setTimeout(function () {\n                cb && cb();\n            });\n            // TODO Refresh ?\n        });\n    }\n    else {\n        setTimeout(function () {\n            cb && cb();\n        });\n    }\n    return {\n        specular: ambientCubemap,\n        diffuse: ambientSH\n    };\n};\n\n/**\n * Create a blank texture for placeholder\n */\nhelper.createBlankTexture = __WEBPACK_IMPORTED_MODULE_3_claygl_src_util_texture__[\"a\" /* default */].createBlank;\n\n/**\n * If value is image\n * @param {*}\n * @return {boolean}\n */\nhelper.isImage = isValueImage;\n\nhelper.additiveBlend = function (gl) {\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n};\n\n/**\n * @param {string|Array.<number>} colorStr\n * @param {Array.<number>} [rgba]\n * @return {Array.<number>} rgba\n */\nhelper.parseColor = function (colorStr, rgba) {\n    if (colorStr instanceof Array) {\n        if (!rgba) {\n            rgba = [];\n        }\n        // Color has been parsed.\n        rgba[0] = colorStr[0];\n        rgba[1] = colorStr[1];\n        rgba[2] = colorStr[2];\n        if (colorStr.length > 3) {\n            rgba[3] = colorStr[3];\n        }\n        else {\n            rgba[3] = 1;\n        }\n        return rgba;\n    }\n\n    rgba = __WEBPACK_IMPORTED_MODULE_7_zrender_src_tool_color__[\"a\" /* parse */](colorStr || '#000', rgba) || [0, 0, 0, 0];\n    rgba[0] /= 255;\n    rgba[1] /= 255;\n    rgba[2] /= 255;\n    return rgba;\n};\n\n/**\n * @param {Array.<number>} colorArr\n * @return {string}\n */\nhelper.stringifyColor = function (colorArr, type) {\n    colorArr = colorArr.slice();\n    colorArr[0] = Math.round(colorArr[0] * 255);\n    colorArr[1] = Math.round(colorArr[1] * 255);\n    colorArr[2] = Math.round(colorArr[2] * 255);\n    if (type === 'hex') {\n        return '#' + ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + colorArr[2]).toString(16).slice(1);\n    }\n    return __WEBPACK_IMPORTED_MODULE_7_zrender_src_tool_color__[\"b\" /* stringify */](colorArr, type);\n};\n\n/**\n * Convert alpha beta rotation to direction.\n * @param {number} alpha\n * @param {number} beta\n * @return {Array.<number>}\n */\nhelper.directionFromAlphaBeta = function (alpha, beta) {\n    var theta = alpha / 180 * Math.PI + Math.PI / 2;\n    var phi = -beta / 180 * Math.PI + Math.PI / 2;\n\n    var dir = [];\n    var r = Math.sin(theta);\n    dir[0] = r * Math.cos(phi);\n    dir[1] = -Math.cos(theta);\n    dir[2] = r * Math.sin(phi);\n\n    return dir;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (helper);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Node__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math_Frustum__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_Ray__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__glmatrix_vec3__ = __webpack_require__(3);\n\n\n\n\n\n\n\n\n\n/**\n * @constructor clay.Camera\n * @extends clay.Node\n */\nvar Camera = __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Camera# */ {\n        /**\n         * Camera projection matrix\n         * @type {clay.Matrix4}\n         */\n        projectionMatrix: new __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */](),\n\n        /**\n         * Inverse of camera projection matrix\n         * @type {clay.Matrix4}\n         */\n        invProjectionMatrix: new __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */](),\n\n        /**\n         * View matrix, equal to inverse of camera's world matrix\n         * @type {clay.Matrix4}\n         */\n        viewMatrix: new __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */](),\n\n        /**\n         * Camera frustum in view space\n         * @type {clay.Frustum}\n         */\n        frustum: new __WEBPACK_IMPORTED_MODULE_2__math_Frustum__[\"a\" /* default */]()\n    };\n}, function () {\n    this.update(true);\n},\n/** @lends clay.Camera.prototype */\n{\n\n    update: function (force) {\n        __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].prototype.update.call(this, force);\n        __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */].invert(this.viewMatrix, this.worldTransform);\n\n        this.updateProjectionMatrix();\n        __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */].invert(this.invProjectionMatrix, this.projectionMatrix);\n\n        this.frustum.setFromProjection(this.projectionMatrix);\n    },\n\n    /**\n     * Set camera view matrix\n     */\n    setViewMatrix: function (viewMatrix) {\n        __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */].copy(this.viewMatrix, viewMatrix);\n        __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */].invert(this.worldTransform, viewMatrix);\n        this.decomposeWorldTransform();\n    },\n\n    /**\n     * Decompose camera projection matrix\n     */\n    decomposeProjectionMatrix: function () {},\n\n    /**\n     * Set camera projection matrix\n     * @param {clay.Matrix4} projectionMatrix\n     */\n    setProjectionMatrix: function (projectionMatrix) {\n        __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */].copy(this.projectionMatrix, projectionMatrix);\n        __WEBPACK_IMPORTED_MODULE_1__math_Matrix4__[\"a\" /* default */].invert(this.invProjectionMatrix, projectionMatrix);\n        this.decomposeProjectionMatrix();\n    },\n    /**\n     * Update projection matrix, called after update\n     */\n    updateProjectionMatrix: function () {},\n\n    /**\n     * Cast a picking ray from camera near plane to far plane\n     * @function\n     * @param {clay.Vector2} ndc\n     * @param {clay.Ray} [out]\n     * @return {clay.Ray}\n     */\n    castRay: (function () {\n        var v4 = __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__[\"a\" /* default */].create();\n        return function (ndc, out) {\n            var ray = out !== undefined ? out : new __WEBPACK_IMPORTED_MODULE_3__math_Ray__[\"a\" /* default */]();\n            var x = ndc.array[0];\n            var y = ndc.array[1];\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__[\"a\" /* default */].set(v4, x, y, -1, 1);\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__[\"a\" /* default */].transformMat4(v4, v4, this.invProjectionMatrix.array);\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__[\"a\" /* default */].transformMat4(v4, v4, this.worldTransform.array);\n            __WEBPACK_IMPORTED_MODULE_5__glmatrix_vec3__[\"a\" /* default */].scale(ray.origin.array, v4, 1 / v4[3]);\n\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__[\"a\" /* default */].set(v4, x, y, 1, 1);\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__[\"a\" /* default */].transformMat4(v4, v4, this.invProjectionMatrix.array);\n            __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec4__[\"a\" /* default */].transformMat4(v4, v4, this.worldTransform.array);\n            __WEBPACK_IMPORTED_MODULE_5__glmatrix_vec3__[\"a\" /* default */].scale(v4, v4, 1 / v4[3]);\n            __WEBPACK_IMPORTED_MODULE_5__glmatrix_vec3__[\"a\" /* default */].sub(ray.direction.array, v4, ray.origin.array);\n\n            __WEBPACK_IMPORTED_MODULE_5__glmatrix_vec3__[\"a\" /* default */].normalize(ray.direction.array, ray.direction.array);\n            ray.direction._dirty = true;\n            ray.origin._dirty = true;\n\n            return ray;\n        };\n    })(),\n\n    /**\n     * @function\n     * @name clone\n     * @return {clay.Camera}\n     * @memberOf clay.Camera.prototype\n     */\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvQ2FtZXJhLmpzPzI0NTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcbmltcG9ydCBNYXRyaXg0IGZyb20gJy4vbWF0aC9NYXRyaXg0JztcbmltcG9ydCBGcnVzdHVtIGZyb20gJy4vbWF0aC9GcnVzdHVtJztcbmltcG9ydCBSYXkgZnJvbSAnLi9tYXRoL1JheSc7XG5cbmltcG9ydCB2ZWM0IGZyb20gJy4vZ2xtYXRyaXgvdmVjNCc7XG5pbXBvcnQgdmVjMyBmcm9tICcuL2dsbWF0cml4L3ZlYzMnO1xuXG5cbi8qKlxuICogQGNvbnN0cnVjdG9yIGNsYXkuQ2FtZXJhXG4gKiBAZXh0ZW5kcyBjbGF5Lk5vZGVcbiAqL1xudmFyIENhbWVyYSA9IE5vZGUuZXh0ZW5kKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gLyoqIEBsZW5kcyBjbGF5LkNhbWVyYSMgKi8ge1xuICAgICAgICAvKipcbiAgICAgICAgICogQ2FtZXJhIHByb2plY3Rpb24gbWF0cml4XG4gICAgICAgICAqIEB0eXBlIHtjbGF5Lk1hdHJpeDR9XG4gICAgICAgICAqL1xuICAgICAgICBwcm9qZWN0aW9uTWF0cml4OiBuZXcgTWF0cml4NCgpLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbnZlcnNlIG9mIGNhbWVyYSBwcm9qZWN0aW9uIG1hdHJpeFxuICAgICAgICAgKiBAdHlwZSB7Y2xheS5NYXRyaXg0fVxuICAgICAgICAgKi9cbiAgICAgICAgaW52UHJvamVjdGlvbk1hdHJpeDogbmV3IE1hdHJpeDQoKSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVmlldyBtYXRyaXgsIGVxdWFsIHRvIGludmVyc2Ugb2YgY2FtZXJhJ3Mgd29ybGQgbWF0cml4XG4gICAgICAgICAqIEB0eXBlIHtjbGF5Lk1hdHJpeDR9XG4gICAgICAgICAqL1xuICAgICAgICB2aWV3TWF0cml4OiBuZXcgTWF0cml4NCgpLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDYW1lcmEgZnJ1c3R1bSBpbiB2aWV3IHNwYWNlXG4gICAgICAgICAqIEB0eXBlIHtjbGF5LkZydXN0dW19XG4gICAgICAgICAqL1xuICAgICAgICBmcnVzdHVtOiBuZXcgRnJ1c3R1bSgpXG4gICAgfTtcbn0sIGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnVwZGF0ZSh0cnVlKTtcbn0sXG4vKiogQGxlbmRzIGNsYXkuQ2FtZXJhLnByb3RvdHlwZSAqL1xue1xuXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoZm9yY2UpIHtcbiAgICAgICAgTm9kZS5wcm90b3R5cGUudXBkYXRlLmNhbGwodGhpcywgZm9yY2UpO1xuICAgICAgICBNYXRyaXg0LmludmVydCh0aGlzLnZpZXdNYXRyaXgsIHRoaXMud29ybGRUcmFuc2Zvcm0pO1xuXG4gICAgICAgIHRoaXMudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpO1xuICAgICAgICBNYXRyaXg0LmludmVydCh0aGlzLmludlByb2plY3Rpb25NYXRyaXgsIHRoaXMucHJvamVjdGlvbk1hdHJpeCk7XG5cbiAgICAgICAgdGhpcy5mcnVzdHVtLnNldEZyb21Qcm9qZWN0aW9uKHRoaXMucHJvamVjdGlvbk1hdHJpeCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFNldCBjYW1lcmEgdmlldyBtYXRyaXhcbiAgICAgKi9cbiAgICBzZXRWaWV3TWF0cml4OiBmdW5jdGlvbiAodmlld01hdHJpeCkge1xuICAgICAgICBNYXRyaXg0LmNvcHkodGhpcy52aWV3TWF0cml4LCB2aWV3TWF0cml4KTtcbiAgICAgICAgTWF0cml4NC5pbnZlcnQodGhpcy53b3JsZFRyYW5zZm9ybSwgdmlld01hdHJpeCk7XG4gICAgICAgIHRoaXMuZGVjb21wb3NlV29ybGRUcmFuc2Zvcm0oKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogRGVjb21wb3NlIGNhbWVyYSBwcm9qZWN0aW9uIG1hdHJpeFxuICAgICAqL1xuICAgIGRlY29tcG9zZVByb2plY3Rpb25NYXRyaXg6IGZ1bmN0aW9uICgpIHt9LFxuXG4gICAgLyoqXG4gICAgICogU2V0IGNhbWVyYSBwcm9qZWN0aW9uIG1hdHJpeFxuICAgICAqIEBwYXJhbSB7Y2xheS5NYXRyaXg0fSBwcm9qZWN0aW9uTWF0cml4XG4gICAgICovXG4gICAgc2V0UHJvamVjdGlvbk1hdHJpeDogZnVuY3Rpb24gKHByb2plY3Rpb25NYXRyaXgpIHtcbiAgICAgICAgTWF0cml4NC5jb3B5KHRoaXMucHJvamVjdGlvbk1hdHJpeCwgcHJvamVjdGlvbk1hdHJpeCk7XG4gICAgICAgIE1hdHJpeDQuaW52ZXJ0KHRoaXMuaW52UHJvamVjdGlvbk1hdHJpeCwgcHJvamVjdGlvbk1hdHJpeCk7XG4gICAgICAgIHRoaXMuZGVjb21wb3NlUHJvamVjdGlvbk1hdHJpeCgpO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHByb2plY3Rpb24gbWF0cml4LCBjYWxsZWQgYWZ0ZXIgdXBkYXRlXG4gICAgICovXG4gICAgdXBkYXRlUHJvamVjdGlvbk1hdHJpeDogZnVuY3Rpb24gKCkge30sXG5cbiAgICAvKipcbiAgICAgKiBDYXN0IGEgcGlja2luZyByYXkgZnJvbSBjYW1lcmEgbmVhciBwbGFuZSB0byBmYXIgcGxhbmVcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcGFyYW0ge2NsYXkuVmVjdG9yMn0gbmRjXG4gICAgICogQHBhcmFtIHtjbGF5LlJheX0gW291dF1cbiAgICAgKiBAcmV0dXJuIHtjbGF5LlJheX1cbiAgICAgKi9cbiAgICBjYXN0UmF5OiAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdjQgPSB2ZWM0LmNyZWF0ZSgpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKG5kYywgb3V0KSB7XG4gICAgICAgICAgICB2YXIgcmF5ID0gb3V0ICE9PSB1bmRlZmluZWQgPyBvdXQgOiBuZXcgUmF5KCk7XG4gICAgICAgICAgICB2YXIgeCA9IG5kYy5hcnJheVswXTtcbiAgICAgICAgICAgIHZhciB5ID0gbmRjLmFycmF5WzFdO1xuICAgICAgICAgICAgdmVjNC5zZXQodjQsIHgsIHksIC0xLCAxKTtcbiAgICAgICAgICAgIHZlYzQudHJhbnNmb3JtTWF0NCh2NCwgdjQsIHRoaXMuaW52UHJvamVjdGlvbk1hdHJpeC5hcnJheSk7XG4gICAgICAgICAgICB2ZWM0LnRyYW5zZm9ybU1hdDQodjQsIHY0LCB0aGlzLndvcmxkVHJhbnNmb3JtLmFycmF5KTtcbiAgICAgICAgICAgIHZlYzMuc2NhbGUocmF5Lm9yaWdpbi5hcnJheSwgdjQsIDEgLyB2NFszXSk7XG5cbiAgICAgICAgICAgIHZlYzQuc2V0KHY0LCB4LCB5LCAxLCAxKTtcbiAgICAgICAgICAgIHZlYzQudHJhbnNmb3JtTWF0NCh2NCwgdjQsIHRoaXMuaW52UHJvamVjdGlvbk1hdHJpeC5hcnJheSk7XG4gICAgICAgICAgICB2ZWM0LnRyYW5zZm9ybU1hdDQodjQsIHY0LCB0aGlzLndvcmxkVHJhbnNmb3JtLmFycmF5KTtcbiAgICAgICAgICAgIHZlYzMuc2NhbGUodjQsIHY0LCAxIC8gdjRbM10pO1xuICAgICAgICAgICAgdmVjMy5zdWIocmF5LmRpcmVjdGlvbi5hcnJheSwgdjQsIHJheS5vcmlnaW4uYXJyYXkpO1xuXG4gICAgICAgICAgICB2ZWMzLm5vcm1hbGl6ZShyYXkuZGlyZWN0aW9uLmFycmF5LCByYXkuZGlyZWN0aW9uLmFycmF5KTtcbiAgICAgICAgICAgIHJheS5kaXJlY3Rpb24uX2RpcnR5ID0gdHJ1ZTtcbiAgICAgICAgICAgIHJheS5vcmlnaW4uX2RpcnR5ID0gdHJ1ZTtcblxuICAgICAgICAgICAgcmV0dXJuIHJheTtcbiAgICAgICAgfTtcbiAgICB9KSgpLFxuXG4gICAgLyoqXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQG5hbWUgY2xvbmVcbiAgICAgKiBAcmV0dXJuIHtjbGF5LkNhbWVyYX1cbiAgICAgKiBAbWVtYmVyT2YgY2xheS5DYW1lcmEucHJvdG90eXBlXG4gICAgICovXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FtZXJhO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvQ2FtZXJhLmpzXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var DIRTY_PREFIX = '__dt__';\n\nvar Cache = function () {\n\n    this._contextId = 0;\n\n    this._caches = [];\n\n    this._context = {};\n};\n\nCache.prototype = {\n\n    use: function (contextId, documentSchema) {\n        var caches = this._caches;\n        if (!caches[contextId]) {\n            caches[contextId] = {};\n\n            if (documentSchema) {\n                caches[contextId] = documentSchema();\n            }\n        }\n        this._contextId = contextId;\n\n        this._context = caches[contextId];\n    },\n\n    put: function (key, value) {\n        this._context[key] = value;\n    },\n\n    get: function (key) {\n        return this._context[key];\n    },\n\n    dirty: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        this.put(key, true);\n    },\n\n    dirtyAll: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var caches = this._caches;\n        for (var i = 0; i < caches.length; i++) {\n            if (caches[i]) {\n                caches[i][key] = true;\n            }\n        }\n    },\n\n    fresh: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        this.put(key, false);\n    },\n\n    freshAll: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var caches = this._caches;\n        for (var i = 0; i < caches.length; i++) {\n            if (caches[i]) {\n                caches[i][key] = false;\n            }\n        }\n    },\n\n    isDirty: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var context = this._context;\n        return  !context.hasOwnProperty(key)\n            || context[key] === true;\n    },\n\n    deleteContext: function (contextId) {\n        delete this._caches[contextId];\n        this._context = {};\n    },\n\n    delete: function (key) {\n        delete this._context[key];\n    },\n\n    clearAll: function () {\n        this._caches = {};\n    },\n\n    getContext: function () {\n        return this._context;\n    },\n\n    eachContext : function (cb, context) {\n        var keys = Object.keys(this._caches);\n        keys.forEach(function (key) {\n            cb && cb.call(context, key);\n        });\n    },\n\n    miss: function (key) {\n        return ! this._context.hasOwnProperty(key);\n    }\n};\n\nCache.prototype.constructor = Cache;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Cache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9DYWNoZS5qcz9hYjVlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBESVJUWV9QUkVGSVggPSAnX19kdF9fJztcblxudmFyIENhY2hlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgdGhpcy5fY29udGV4dElkID0gMDtcblxuICAgIHRoaXMuX2NhY2hlcyA9IFtdO1xuXG4gICAgdGhpcy5fY29udGV4dCA9IHt9O1xufTtcblxuQ2FjaGUucHJvdG90eXBlID0ge1xuXG4gICAgdXNlOiBmdW5jdGlvbiAoY29udGV4dElkLCBkb2N1bWVudFNjaGVtYSkge1xuICAgICAgICB2YXIgY2FjaGVzID0gdGhpcy5fY2FjaGVzO1xuICAgICAgICBpZiAoIWNhY2hlc1tjb250ZXh0SWRdKSB7XG4gICAgICAgICAgICBjYWNoZXNbY29udGV4dElkXSA9IHt9O1xuXG4gICAgICAgICAgICBpZiAoZG9jdW1lbnRTY2hlbWEpIHtcbiAgICAgICAgICAgICAgICBjYWNoZXNbY29udGV4dElkXSA9IGRvY3VtZW50U2NoZW1hKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY29udGV4dElkID0gY29udGV4dElkO1xuXG4gICAgICAgIHRoaXMuX2NvbnRleHQgPSBjYWNoZXNbY29udGV4dElkXTtcbiAgICB9LFxuXG4gICAgcHV0OiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLl9jb250ZXh0W2tleV0gPSB2YWx1ZTtcbiAgICB9LFxuXG4gICAgZ2V0OiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb250ZXh0W2tleV07XG4gICAgfSxcblxuICAgIGRpcnR5OiBmdW5jdGlvbiAoZmllbGQpIHtcbiAgICAgICAgZmllbGQgPSBmaWVsZCB8fCAnJztcbiAgICAgICAgdmFyIGtleSA9IERJUlRZX1BSRUZJWCArIGZpZWxkO1xuICAgICAgICB0aGlzLnB1dChrZXksIHRydWUpO1xuICAgIH0sXG5cbiAgICBkaXJ0eUFsbDogZnVuY3Rpb24gKGZpZWxkKSB7XG4gICAgICAgIGZpZWxkID0gZmllbGQgfHwgJyc7XG4gICAgICAgIHZhciBrZXkgPSBESVJUWV9QUkVGSVggKyBmaWVsZDtcbiAgICAgICAgdmFyIGNhY2hlcyA9IHRoaXMuX2NhY2hlcztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYWNoZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChjYWNoZXNbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZXNbaV1ba2V5XSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZnJlc2g6IGZ1bmN0aW9uIChmaWVsZCkge1xuICAgICAgICBmaWVsZCA9IGZpZWxkIHx8ICcnO1xuICAgICAgICB2YXIga2V5ID0gRElSVFlfUFJFRklYICsgZmllbGQ7XG4gICAgICAgIHRoaXMucHV0KGtleSwgZmFsc2UpO1xuICAgIH0sXG5cbiAgICBmcmVzaEFsbDogZnVuY3Rpb24gKGZpZWxkKSB7XG4gICAgICAgIGZpZWxkID0gZmllbGQgfHwgJyc7XG4gICAgICAgIHZhciBrZXkgPSBESVJUWV9QUkVGSVggKyBmaWVsZDtcbiAgICAgICAgdmFyIGNhY2hlcyA9IHRoaXMuX2NhY2hlcztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYWNoZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChjYWNoZXNbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZXNbaV1ba2V5XSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGlzRGlydHk6IGZ1bmN0aW9uIChmaWVsZCkge1xuICAgICAgICBmaWVsZCA9IGZpZWxkIHx8ICcnO1xuICAgICAgICB2YXIga2V5ID0gRElSVFlfUFJFRklYICsgZmllbGQ7XG4gICAgICAgIHZhciBjb250ZXh0ID0gdGhpcy5fY29udGV4dDtcbiAgICAgICAgcmV0dXJuICAhY29udGV4dC5oYXNPd25Qcm9wZXJ0eShrZXkpXG4gICAgICAgICAgICB8fCBjb250ZXh0W2tleV0gPT09IHRydWU7XG4gICAgfSxcblxuICAgIGRlbGV0ZUNvbnRleHQ6IGZ1bmN0aW9uIChjb250ZXh0SWQpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMuX2NhY2hlc1tjb250ZXh0SWRdO1xuICAgICAgICB0aGlzLl9jb250ZXh0ID0ge307XG4gICAgfSxcblxuICAgIGRlbGV0ZTogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBkZWxldGUgdGhpcy5fY29udGV4dFtrZXldO1xuICAgIH0sXG5cbiAgICBjbGVhckFsbDogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9jYWNoZXMgPSB7fTtcbiAgICB9LFxuXG4gICAgZ2V0Q29udGV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29udGV4dDtcbiAgICB9LFxuXG4gICAgZWFjaENvbnRleHQgOiBmdW5jdGlvbiAoY2IsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLl9jYWNoZXMpO1xuICAgICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgY2IgJiYgY2IuY2FsbChjb250ZXh0LCBrZXkpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgbWlzczogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICByZXR1cm4gISB0aGlzLl9jb250ZXh0Lmhhc093blByb3BlcnR5KGtleSk7XG4gICAgfVxufTtcblxuQ2FjaGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ2FjaGU7XG5cbmV4cG9ydCBkZWZhdWx0IENhY2hlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9DYWNoZS5qc1xuLy8gbW9kdWxlIGlkID0gMzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Geometry__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math_BoundingBox__ = __webpack_require__(10);\n\n\n\n/**\n * @constructor clay.geometry.Plane\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n */\nvar Plane = __WEBPACK_IMPORTED_MODULE_0__Geometry__[\"a\" /* default */].extend(\n/** @lends clay.geometry.Plane# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Plane.prototype */\n{\n    /**\n     * Build plane geometry\n     */\n    build: function() {\n        var heightSegments = this.heightSegments;\n        var widthSegments = this.widthSegments;\n        var attributes = this.attributes;\n        var positions = [];\n        var texcoords = [];\n        var normals = [];\n        var faces = [];\n\n        for (var y = 0; y <= heightSegments; y++) {\n            var t = y / heightSegments;\n            for (var x = 0; x <= widthSegments; x++) {\n                var s = x / widthSegments;\n\n                positions.push([2 * s - 1, 2 * t - 1, 0]);\n                if (texcoords) {\n                    texcoords.push([s, t]);\n                }\n                if (normals) {\n                    normals.push([0, 0, 1]);\n                }\n                if (x < widthSegments && y < heightSegments) {\n                    var i = x + y * (widthSegments + 1);\n                    faces.push([i, i + 1, i + widthSegments + 1]);\n                    faces.push([i + widthSegments + 1, i + 1, i + widthSegments + 2]);\n                }\n            }\n        }\n\n        attributes.position.fromArray(positions);\n        attributes.texcoord0.fromArray(texcoords);\n        attributes.normal.fromArray(normals);\n\n        this.initIndicesFromArray(faces);\n\n        this.boundingBox = new __WEBPACK_IMPORTED_MODULE_1__math_BoundingBox__[\"a\" /* default */]();\n        this.boundingBox.min.set(-1, -1, 0);\n        this.boundingBox.max.set(1, 1, 0);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Plane);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvZ2VvbWV0cnkvUGxhbmUuanM/Mjk3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2VvbWV0cnkgZnJvbSAnLi4vR2VvbWV0cnknO1xuaW1wb3J0IEJvdW5kaW5nQm94IGZyb20gJy4uL21hdGgvQm91bmRpbmdCb3gnO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvciBjbGF5Lmdlb21ldHJ5LlBsYW5lXG4gKiBAZXh0ZW5kcyBjbGF5Lkdlb21ldHJ5XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdF1cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0LndpZHRoU2VnbWVudHNdXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdC5oZWlnaHRTZWdtZW50c11cbiAqL1xudmFyIFBsYW5lID0gR2VvbWV0cnkuZXh0ZW5kKFxuLyoqIEBsZW5kcyBjbGF5Lmdlb21ldHJ5LlBsYW5lIyAqL1xue1xuICAgIGR5bmFtaWM6IGZhbHNlLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgd2lkdGhTZWdtZW50czogMSxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGhlaWdodFNlZ21lbnRzOiAxXG59LCBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmJ1aWxkKCk7XG59LFxuLyoqIEBsZW5kcyBjbGF5Lmdlb21ldHJ5LlBsYW5lLnByb3RvdHlwZSAqL1xue1xuICAgIC8qKlxuICAgICAqIEJ1aWxkIHBsYW5lIGdlb21ldHJ5XG4gICAgICovXG4gICAgYnVpbGQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaGVpZ2h0U2VnbWVudHMgPSB0aGlzLmhlaWdodFNlZ21lbnRzO1xuICAgICAgICB2YXIgd2lkdGhTZWdtZW50cyA9IHRoaXMud2lkdGhTZWdtZW50cztcbiAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSB0aGlzLmF0dHJpYnV0ZXM7XG4gICAgICAgIHZhciBwb3NpdGlvbnMgPSBbXTtcbiAgICAgICAgdmFyIHRleGNvb3JkcyA9IFtdO1xuICAgICAgICB2YXIgbm9ybWFscyA9IFtdO1xuICAgICAgICB2YXIgZmFjZXMgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciB5ID0gMDsgeSA8PSBoZWlnaHRTZWdtZW50czsgeSsrKSB7XG4gICAgICAgICAgICB2YXIgdCA9IHkgLyBoZWlnaHRTZWdtZW50cztcbiAgICAgICAgICAgIGZvciAodmFyIHggPSAwOyB4IDw9IHdpZHRoU2VnbWVudHM7IHgrKykge1xuICAgICAgICAgICAgICAgIHZhciBzID0geCAvIHdpZHRoU2VnbWVudHM7XG5cbiAgICAgICAgICAgICAgICBwb3NpdGlvbnMucHVzaChbMiAqIHMgLSAxLCAyICogdCAtIDEsIDBdKTtcbiAgICAgICAgICAgICAgICBpZiAodGV4Y29vcmRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRleGNvb3Jkcy5wdXNoKFtzLCB0XSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChub3JtYWxzKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vcm1hbHMucHVzaChbMCwgMCwgMV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoeCA8IHdpZHRoU2VnbWVudHMgJiYgeSA8IGhlaWdodFNlZ21lbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpID0geCArIHkgKiAod2lkdGhTZWdtZW50cyArIDEpO1xuICAgICAgICAgICAgICAgICAgICBmYWNlcy5wdXNoKFtpLCBpICsgMSwgaSArIHdpZHRoU2VnbWVudHMgKyAxXSk7XG4gICAgICAgICAgICAgICAgICAgIGZhY2VzLnB1c2goW2kgKyB3aWR0aFNlZ21lbnRzICsgMSwgaSArIDEsIGkgKyB3aWR0aFNlZ21lbnRzICsgMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGF0dHJpYnV0ZXMucG9zaXRpb24uZnJvbUFycmF5KHBvc2l0aW9ucyk7XG4gICAgICAgIGF0dHJpYnV0ZXMudGV4Y29vcmQwLmZyb21BcnJheSh0ZXhjb29yZHMpO1xuICAgICAgICBhdHRyaWJ1dGVzLm5vcm1hbC5mcm9tQXJyYXkobm9ybWFscyk7XG5cbiAgICAgICAgdGhpcy5pbml0SW5kaWNlc0Zyb21BcnJheShmYWNlcyk7XG5cbiAgICAgICAgdGhpcy5ib3VuZGluZ0JveCA9IG5ldyBCb3VuZGluZ0JveCgpO1xuICAgICAgICB0aGlzLmJvdW5kaW5nQm94Lm1pbi5zZXQoLTEsIC0xLCAwKTtcbiAgICAgICAgdGhpcy5ib3VuZGluZ0JveC5tYXguc2V0KDEsIDEsIDApO1xuICAgIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBQbGFuZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2dlb21ldHJ5L1BsYW5lLmpzXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TextureCube__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__prePass_EnvironmentMap__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__plugin_Skydome__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Scene__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dds__ = __webpack_require__(100);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__hdr__ = __webpack_require__(101);\n\n\n\n\n\n\n\n\n\n\n/**\n * @alias clay.util.texture\n */\nvar textureUtil = {\n    /**\n     * @param  {string|object} path\n     * @param  {object} [option]\n     * @param  {Function} [onsuccess]\n     * @param  {Function} [onerror]\n     * @return {clay.Texture}\n     */\n    loadTexture: function (path, option, onsuccess, onerror) {\n        var texture;\n        if (typeof(option) === 'function') {\n            onsuccess = option;\n            onerror = onsuccess;\n            option = {};\n        }\n        else {\n            option = option || {};\n        }\n        if (typeof(path) === 'string') {\n            if (path.match(/.hdr$/) || option.fileType === 'hdr') {\n                texture = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]({\n                    width: 0,\n                    height: 0,\n                    sRGB: false\n                });\n                textureUtil._fetchTexture(\n                    path,\n                    function (data) {\n                        __WEBPACK_IMPORTED_MODULE_7__hdr__[\"a\" /* default */].parseRGBE(data, texture, option.exposure);\n                        texture.dirty();\n                        onsuccess && onsuccess(texture);\n                    },\n                    onerror\n                );\n                return texture;\n            }\n            else if (path.match(/.dds$/) || option.fileType === 'dds') {\n                texture = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]({\n                    width: 0,\n                    height: 0\n                });\n                textureUtil._fetchTexture(\n                    path,\n                    function (data) {\n                        __WEBPACK_IMPORTED_MODULE_6__dds__[\"a\" /* default */].parse(data, texture);\n                        texture.dirty();\n                        onsuccess && onsuccess(texture);\n                    },\n                    onerror\n                );\n            }\n            else {\n                texture = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]();\n                texture.load(path);\n                texture.success(onsuccess);\n                texture.error(onerror);\n            }\n        }\n        else if (typeof path === 'object' && typeof(path.px) !== 'undefined') {\n            texture = new __WEBPACK_IMPORTED_MODULE_1__TextureCube__[\"a\" /* default */]();\n            texture.load(path);\n            texture.success(onsuccess);\n            texture.error(onerror);\n        }\n        return texture;\n    },\n\n    /**\n     * Load a panorama texture and render it to a cube map\n     * @param  {clay.Renderer} renderer\n     * @param  {string} path\n     * @param  {clay.TextureCube} cubeMap\n     * @param  {object} [option]\n     * @param  {boolean} [option.encodeRGBM]\n     * @param  {number} [option.exposure]\n     * @param  {Function} [onsuccess]\n     * @param  {Function} [onerror]\n     */\n    loadPanorama: function (renderer, path, cubeMap, option, onsuccess, onerror) {\n        var self = this;\n\n        if (typeof(option) === 'function') {\n            onsuccess = option;\n            onerror = onsuccess;\n            option = {};\n        }\n        else {\n            option = option || {};\n        }\n\n        textureUtil.loadTexture(path, option, function (texture) {\n            // PENDING\n            texture.flipY = option.flipY || false;\n            self.panoramaToCubeMap(renderer, texture, cubeMap, option);\n            texture.dispose(renderer);\n            onsuccess && onsuccess(cubeMap);\n        }, onerror);\n    },\n\n    /**\n     * Render a panorama texture to a cube map\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.Texture2D} panoramaMap\n     * @param  {clay.TextureCube} cubeMap\n     * @param  {Object} option\n     * @param  {boolean} [option.encodeRGBM]\n     */\n    panoramaToCubeMap: function (renderer, panoramaMap, cubeMap, option) {\n        var environmentMapPass = new __WEBPACK_IMPORTED_MODULE_3__prePass_EnvironmentMap__[\"a\" /* default */]();\n        var skydome = new __WEBPACK_IMPORTED_MODULE_4__plugin_Skydome__[\"a\" /* default */]({\n            scene: new __WEBPACK_IMPORTED_MODULE_5__Scene__[\"a\" /* default */]()\n        });\n        skydome.setEnvironmentMap(panoramaMap);\n\n        option = option || {};\n        if (option.encodeRGBM) {\n            skydome.material.define('fragment', 'RGBM_ENCODE');\n        }\n\n        // Share sRGB\n        cubeMap.sRGB = panoramaMap.sRGB;\n\n        environmentMapPass.texture = cubeMap;\n        environmentMapPass.render(renderer, skydome.scene);\n        environmentMapPass.texture = null;\n        environmentMapPass.dispose(renderer);\n        return cubeMap;\n    },\n\n    /**\n     * Convert height map to normal map\n     * @param {HTMLImageElement|HTMLCanvasElement} image\n     * @param {boolean} [checkBump=false]\n     * @return {HTMLCanvasElement}\n     */\n    heightToNormal: function (image, checkBump) {\n        var canvas = document.createElement('canvas');\n        var width = canvas.width = image.width;\n        var height = canvas.height = image.height;\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(image, 0, 0, width, height);\n        checkBump = checkBump || false;\n        var srcData = ctx.getImageData(0, 0, width, height);\n        var dstData = ctx.createImageData(width, height);\n        for (var i = 0; i < srcData.data.length; i += 4) {\n            if (checkBump) {\n                var r = srcData.data[i];\n                var g = srcData.data[i + 1];\n                var b = srcData.data[i + 2];\n                var diff = Math.abs(r - g) + Math.abs(g - b);\n                if (diff > 20) {\n                    console.warn('Given image is not a height map');\n                    return image;\n                }\n            }\n            // Modified from http://mrdoob.com/lab/javascript/height2normal/\n            var x1, y1, x2, y2;\n            if (i % (width * 4) === 0) {\n                // left edge\n                x1 = srcData.data[i];\n                x2 = srcData.data[i + 4];\n            }\n            else if (i % (width * 4) === (width - 1) * 4) {\n                // right edge\n                x1 = srcData.data[i - 4];\n                x2 = srcData.data[i];\n            }\n            else {\n                x1 = srcData.data[i - 4];\n                x2 = srcData.data[i + 4];\n            }\n\n            if (i < width * 4) {\n                // top edge\n                y1 = srcData.data[i];\n                y2 = srcData.data[i + width * 4];\n            }\n            else if (i > width * (height - 1) * 4) {\n                // bottom edge\n                y1 = srcData.data[i - width * 4];\n                y2 = srcData.data[i];\n            }\n            else {\n                y1 = srcData.data[i - width * 4];\n                y2 = srcData.data[i + width * 4];\n            }\n\n            dstData.data[i] = (x1 - x2) + 127;\n            dstData.data[i + 1] = (y1 - y2) + 127;\n            dstData.data[i + 2] = 255;\n            dstData.data[i + 3] = 255;\n        }\n        ctx.putImageData(dstData, 0, 0);\n        return canvas;\n    },\n\n    /**\n     * Convert height map to normal map\n     * @param {HTMLImageElement|HTMLCanvasElement} image\n     * @param {boolean} [checkBump=false]\n     * @param {number} [threshold=20]\n     * @return {HTMLCanvasElement}\n     */\n    isHeightImage: function (img, downScaleSize, threshold) {\n        if (!img || !img.width || !img.height) {\n            return false;\n        }\n\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var size = downScaleSize || 32;\n        threshold = threshold || 20;\n        canvas.width = canvas.height = size;\n        ctx.drawImage(img, 0, 0, size, size);\n        var srcData = ctx.getImageData(0, 0, size, size);\n        for (var i = 0; i < srcData.data.length; i += 4) {\n            var r = srcData.data[i];\n            var g = srcData.data[i + 1];\n            var b = srcData.data[i + 2];\n            var diff = Math.abs(r - g) + Math.abs(g - b);\n            if (diff > threshold) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    _fetchTexture: function (path, onsuccess, onerror) {\n        __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].request.get({\n            url: path,\n            responseType: 'arraybuffer',\n            onload: onsuccess,\n            onerror: onerror\n        });\n    },\n\n    /**\n     * Create a chessboard texture\n     * @param  {number} [size]\n     * @param  {number} [unitSize]\n     * @param  {string} [color1]\n     * @param  {string} [color2]\n     * @return {clay.Texture2D}\n     */\n    createChessboard: function (size, unitSize, color1, color2) {\n        size = size || 512;\n        unitSize = unitSize || 64;\n        color1 = color1 || 'black';\n        color2 = color2 || 'white';\n\n        var repeat = Math.ceil(size / unitSize);\n\n        var canvas = document.createElement('canvas');\n        canvas.width = size;\n        canvas.height = size;\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = color2;\n        ctx.fillRect(0, 0, size, size);\n\n        ctx.fillStyle = color1;\n        for (var i = 0; i < repeat; i++) {\n            for (var j = 0; j < repeat; j++) {\n                var isFill = j % 2 ? (i % 2) : (i % 2 - 1);\n                if (isFill) {\n                    ctx.fillRect(i * unitSize, j * unitSize, unitSize, unitSize);\n                }\n            }\n        }\n\n        var texture = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]({\n            image: canvas,\n            anisotropic: 8\n        });\n\n        return texture;\n    },\n\n    /**\n     * Create a blank pure color 1x1 texture\n     * @param  {string} color\n     * @return {clay.Texture2D}\n     */\n    createBlank: function (color) {\n        var canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = 1;\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = color;\n        ctx.fillRect(0, 0, 1, 1);\n\n        var texture = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]({\n            image: canvas\n        });\n\n        return texture;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (textureUtil);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///36\n");

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__camera_Perspective__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__FrameBuffer__ = __webpack_require__(11);\n\n\n\n\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n/**\n * Pass rendering scene to a environment cube map\n *\n * @constructor clay.prePass.EnvironmentMap\n * @extends clay.core.Base\n * @example\n *     // Example of car reflection\n *     var envMap = new clay.TextureCube({\n *         width: 256,\n *         height: 256\n *     });\n *     var envPass = new clay.prePass.EnvironmentMap({\n *         position: car.position,\n *         texture: envMap\n *     });\n *     var carBody = car.getChildByName('body');\n *     carBody.material.enableTexture('environmentMap');\n *     carBody.material.set('environmentMap', envMap);\n *     ...\n *     animation.on('frame', function(frameTime) {\n *         envPass.render(renderer, scene);\n *         renderer.render(scene, camera);\n *     });\n */\nvar EnvironmentMapPass = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function() {\n    var ret = /** @lends clay.prePass.EnvironmentMap# */ {\n        /**\n         * Camera position\n         * @type {clay.Vector3}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        position: new __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */](),\n        /**\n         * Camera far plane\n         * @type {number}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        far: 1000,\n        /**\n         * Camera near plane\n         * @type {number}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        near: 0.1,\n        /**\n         * Environment cube map\n         * @type {clay.TextureCube}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        texture: null,\n\n        /**\n         * Used if you wan't have shadow in environment map\n         * @type {clay.prePass.ShadowMap}\n         */\n        shadowMapPass: null,\n    };\n    var cameras = ret._cameras = {\n        px: new __WEBPACK_IMPORTED_MODULE_2__camera_Perspective__[\"a\" /* default */]({ fov: 90 }),\n        nx: new __WEBPACK_IMPORTED_MODULE_2__camera_Perspective__[\"a\" /* default */]({ fov: 90 }),\n        py: new __WEBPACK_IMPORTED_MODULE_2__camera_Perspective__[\"a\" /* default */]({ fov: 90 }),\n        ny: new __WEBPACK_IMPORTED_MODULE_2__camera_Perspective__[\"a\" /* default */]({ fov: 90 }),\n        pz: new __WEBPACK_IMPORTED_MODULE_2__camera_Perspective__[\"a\" /* default */]({ fov: 90 }),\n        nz: new __WEBPACK_IMPORTED_MODULE_2__camera_Perspective__[\"a\" /* default */]({ fov: 90 })\n    };\n    cameras.px.lookAt(__WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].POSITIVE_X, __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n    cameras.nx.lookAt(__WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_X, __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n    cameras.py.lookAt(__WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].POSITIVE_Y, __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].POSITIVE_Z);\n    cameras.ny.lookAt(__WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_Y, __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_Z);\n    cameras.pz.lookAt(__WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].POSITIVE_Z, __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n    cameras.nz.lookAt(__WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_Z, __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n\n    // FIXME In windows, use one framebuffer only renders one side of cubemap\n    ret._frameBuffer = new __WEBPACK_IMPORTED_MODULE_3__FrameBuffer__[\"a\" /* default */]();\n\n    return ret;\n},  /** @lends clay.prePass.EnvironmentMap# */ {\n    /**\n     * @param  {string} target\n     * @return  {clay.Camera}\n     */\n    getCamera: function (target) {\n        return this._cameras[target];\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.Scene} scene\n     * @param  {boolean} [notUpdateScene=false]\n     */\n    render: function(renderer, scene, notUpdateScene) {\n        var _gl = renderer.gl;\n        if (!notUpdateScene) {\n            scene.update();\n        }\n        // Tweak fov\n        // http://the-witness.net/news/2012/02/seamless-cube-map-filtering/\n        var n = this.texture.width;\n        var fov = 2 * Math.atan(n / (n - 0.5)) / Math.PI * 180;\n\n        for (var i = 0; i < 6; i++) {\n            var target = targets[i];\n            var camera = this._cameras[target];\n            __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */].copy(camera.position, this.position);\n\n            camera.far = this.far;\n            camera.near = this.near;\n            camera.fov = fov;\n\n            if (this.shadowMapPass) {\n                camera.update();\n\n                // update boundingBoxLastFrame\n                var bbox = scene.getBoundingBox();\n                bbox.applyTransform(camera.viewMatrix);\n                scene.viewBoundingBoxLastFrame.copy(bbox);\n\n                this.shadowMapPass.render(renderer, scene, camera, true);\n            }\n            this._frameBuffer.attach(\n                this.texture, _gl.COLOR_ATTACHMENT0,\n                _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i\n            );\n            this._frameBuffer.bind(renderer);\n            renderer.render(scene, camera, true);\n            this._frameBuffer.unbind(renderer);\n        }\n    },\n    /**\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this._frameBuffer.dispose(renderer);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (EnvironmentMapPass);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvcHJlUGFzcy9FbnZpcm9ubWVudE1hcC5qcz9iM2M2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlIGZyb20gJy4uL2NvcmUvQmFzZSc7XG5pbXBvcnQgVmVjdG9yMyBmcm9tICcuLi9tYXRoL1ZlY3RvcjMnO1xuaW1wb3J0IFBlcnNwZWN0aXZlQ2FtZXJhIGZyb20gJy4uL2NhbWVyYS9QZXJzcGVjdGl2ZSc7XG5pbXBvcnQgRnJhbWVCdWZmZXIgZnJvbSAnLi4vRnJhbWVCdWZmZXInO1xuXG52YXIgdGFyZ2V0cyA9IFsncHgnLCAnbngnLCAncHknLCAnbnknLCAncHonLCAnbnonXTtcblxuLyoqXG4gKiBQYXNzIHJlbmRlcmluZyBzY2VuZSB0byBhIGVudmlyb25tZW50IGN1YmUgbWFwXG4gKlxuICogQGNvbnN0cnVjdG9yIGNsYXkucHJlUGFzcy5FbnZpcm9ubWVudE1hcFxuICogQGV4dGVuZHMgY2xheS5jb3JlLkJhc2VcbiAqIEBleGFtcGxlXG4gKiAgICAgLy8gRXhhbXBsZSBvZiBjYXIgcmVmbGVjdGlvblxuICogICAgIHZhciBlbnZNYXAgPSBuZXcgY2xheS5UZXh0dXJlQ3ViZSh7XG4gKiAgICAgICAgIHdpZHRoOiAyNTYsXG4gKiAgICAgICAgIGhlaWdodDogMjU2XG4gKiAgICAgfSk7XG4gKiAgICAgdmFyIGVudlBhc3MgPSBuZXcgY2xheS5wcmVQYXNzLkVudmlyb25tZW50TWFwKHtcbiAqICAgICAgICAgcG9zaXRpb246IGNhci5wb3NpdGlvbixcbiAqICAgICAgICAgdGV4dHVyZTogZW52TWFwXG4gKiAgICAgfSk7XG4gKiAgICAgdmFyIGNhckJvZHkgPSBjYXIuZ2V0Q2hpbGRCeU5hbWUoJ2JvZHknKTtcbiAqICAgICBjYXJCb2R5Lm1hdGVyaWFsLmVuYWJsZVRleHR1cmUoJ2Vudmlyb25tZW50TWFwJyk7XG4gKiAgICAgY2FyQm9keS5tYXRlcmlhbC5zZXQoJ2Vudmlyb25tZW50TWFwJywgZW52TWFwKTtcbiAqICAgICAuLi5cbiAqICAgICBhbmltYXRpb24ub24oJ2ZyYW1lJywgZnVuY3Rpb24oZnJhbWVUaW1lKSB7XG4gKiAgICAgICAgIGVudlBhc3MucmVuZGVyKHJlbmRlcmVyLCBzY2VuZSk7XG4gKiAgICAgICAgIHJlbmRlcmVyLnJlbmRlcihzY2VuZSwgY2FtZXJhKTtcbiAqICAgICB9KTtcbiAqL1xudmFyIEVudmlyb25tZW50TWFwUGFzcyA9IEJhc2UuZXh0ZW5kKGZ1bmN0aW9uKCkge1xuICAgIHZhciByZXQgPSAvKiogQGxlbmRzIGNsYXkucHJlUGFzcy5FbnZpcm9ubWVudE1hcCMgKi8ge1xuICAgICAgICAvKipcbiAgICAgICAgICogQ2FtZXJhIHBvc2l0aW9uXG4gICAgICAgICAqIEB0eXBlIHtjbGF5LlZlY3RvcjN9XG4gICAgICAgICAqIEBtZW1iZXJPZiBjbGF5LnByZVBhc3MuRW52aXJvbm1lbnRNYXAjXG4gICAgICAgICAqL1xuICAgICAgICBwb3NpdGlvbjogbmV3IFZlY3RvcjMoKSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbWVyYSBmYXIgcGxhbmVcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICogQG1lbWJlck9mIGNsYXkucHJlUGFzcy5FbnZpcm9ubWVudE1hcCNcbiAgICAgICAgICovXG4gICAgICAgIGZhcjogMTAwMCxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbWVyYSBuZWFyIHBsYW5lXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgICAqIEBtZW1iZXJPZiBjbGF5LnByZVBhc3MuRW52aXJvbm1lbnRNYXAjXG4gICAgICAgICAqL1xuICAgICAgICBuZWFyOiAwLjEsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBFbnZpcm9ubWVudCBjdWJlIG1hcFxuICAgICAgICAgKiBAdHlwZSB7Y2xheS5UZXh0dXJlQ3ViZX1cbiAgICAgICAgICogQG1lbWJlck9mIGNsYXkucHJlUGFzcy5FbnZpcm9ubWVudE1hcCNcbiAgICAgICAgICovXG4gICAgICAgIHRleHR1cmU6IG51bGwsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFVzZWQgaWYgeW91IHdhbid0IGhhdmUgc2hhZG93IGluIGVudmlyb25tZW50IG1hcFxuICAgICAgICAgKiBAdHlwZSB7Y2xheS5wcmVQYXNzLlNoYWRvd01hcH1cbiAgICAgICAgICovXG4gICAgICAgIHNoYWRvd01hcFBhc3M6IG51bGwsXG4gICAgfTtcbiAgICB2YXIgY2FtZXJhcyA9IHJldC5fY2FtZXJhcyA9IHtcbiAgICAgICAgcHg6IG5ldyBQZXJzcGVjdGl2ZUNhbWVyYSh7IGZvdjogOTAgfSksXG4gICAgICAgIG54OiBuZXcgUGVyc3BlY3RpdmVDYW1lcmEoeyBmb3Y6IDkwIH0pLFxuICAgICAgICBweTogbmV3IFBlcnNwZWN0aXZlQ2FtZXJhKHsgZm92OiA5MCB9KSxcbiAgICAgICAgbnk6IG5ldyBQZXJzcGVjdGl2ZUNhbWVyYSh7IGZvdjogOTAgfSksXG4gICAgICAgIHB6OiBuZXcgUGVyc3BlY3RpdmVDYW1lcmEoeyBmb3Y6IDkwIH0pLFxuICAgICAgICBuejogbmV3IFBlcnNwZWN0aXZlQ2FtZXJhKHsgZm92OiA5MCB9KVxuICAgIH07XG4gICAgY2FtZXJhcy5weC5sb29rQXQoVmVjdG9yMy5QT1NJVElWRV9YLCBWZWN0b3IzLk5FR0FUSVZFX1kpO1xuICAgIGNhbWVyYXMubngubG9va0F0KFZlY3RvcjMuTkVHQVRJVkVfWCwgVmVjdG9yMy5ORUdBVElWRV9ZKTtcbiAgICBjYW1lcmFzLnB5Lmxvb2tBdChWZWN0b3IzLlBPU0lUSVZFX1ksIFZlY3RvcjMuUE9TSVRJVkVfWik7XG4gICAgY2FtZXJhcy5ueS5sb29rQXQoVmVjdG9yMy5ORUdBVElWRV9ZLCBWZWN0b3IzLk5FR0FUSVZFX1opO1xuICAgIGNhbWVyYXMucHoubG9va0F0KFZlY3RvcjMuUE9TSVRJVkVfWiwgVmVjdG9yMy5ORUdBVElWRV9ZKTtcbiAgICBjYW1lcmFzLm56Lmxvb2tBdChWZWN0b3IzLk5FR0FUSVZFX1osIFZlY3RvcjMuTkVHQVRJVkVfWSk7XG5cbiAgICAvLyBGSVhNRSBJbiB3aW5kb3dzLCB1c2Ugb25lIGZyYW1lYnVmZmVyIG9ubHkgcmVuZGVycyBvbmUgc2lkZSBvZiBjdWJlbWFwXG4gICAgcmV0Ll9mcmFtZUJ1ZmZlciA9IG5ldyBGcmFtZUJ1ZmZlcigpO1xuXG4gICAgcmV0dXJuIHJldDtcbn0sICAvKiogQGxlbmRzIGNsYXkucHJlUGFzcy5FbnZpcm9ubWVudE1hcCMgKi8ge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSAge3N0cmluZ30gdGFyZ2V0XG4gICAgICogQHJldHVybiAge2NsYXkuQ2FtZXJhfVxuICAgICAqL1xuICAgIGdldENhbWVyYTogZnVuY3Rpb24gKHRhcmdldCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2FtZXJhc1t0YXJnZXRdO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogQHBhcmFtICB7Y2xheS5SZW5kZXJlcn0gcmVuZGVyZXJcbiAgICAgKiBAcGFyYW0gIHtjbGF5LlNjZW5lfSBzY2VuZVxuICAgICAqIEBwYXJhbSAge2Jvb2xlYW59IFtub3RVcGRhdGVTY2VuZT1mYWxzZV1cbiAgICAgKi9cbiAgICByZW5kZXI6IGZ1bmN0aW9uKHJlbmRlcmVyLCBzY2VuZSwgbm90VXBkYXRlU2NlbmUpIHtcbiAgICAgICAgdmFyIF9nbCA9IHJlbmRlcmVyLmdsO1xuICAgICAgICBpZiAoIW5vdFVwZGF0ZVNjZW5lKSB7XG4gICAgICAgICAgICBzY2VuZS51cGRhdGUoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBUd2VhayBmb3ZcbiAgICAgICAgLy8gaHR0cDovL3RoZS13aXRuZXNzLm5ldC9uZXdzLzIwMTIvMDIvc2VhbWxlc3MtY3ViZS1tYXAtZmlsdGVyaW5nL1xuICAgICAgICB2YXIgbiA9IHRoaXMudGV4dHVyZS53aWR0aDtcbiAgICAgICAgdmFyIGZvdiA9IDIgKiBNYXRoLmF0YW4obiAvIChuIC0gMC41KSkgLyBNYXRoLlBJICogMTgwO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNjsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gdGFyZ2V0c1tpXTtcbiAgICAgICAgICAgIHZhciBjYW1lcmEgPSB0aGlzLl9jYW1lcmFzW3RhcmdldF07XG4gICAgICAgICAgICBWZWN0b3IzLmNvcHkoY2FtZXJhLnBvc2l0aW9uLCB0aGlzLnBvc2l0aW9uKTtcblxuICAgICAgICAgICAgY2FtZXJhLmZhciA9IHRoaXMuZmFyO1xuICAgICAgICAgICAgY2FtZXJhLm5lYXIgPSB0aGlzLm5lYXI7XG4gICAgICAgICAgICBjYW1lcmEuZm92ID0gZm92O1xuXG4gICAgICAgICAgICBpZiAodGhpcy5zaGFkb3dNYXBQYXNzKSB7XG4gICAgICAgICAgICAgICAgY2FtZXJhLnVwZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgLy8gdXBkYXRlIGJvdW5kaW5nQm94TGFzdEZyYW1lXG4gICAgICAgICAgICAgICAgdmFyIGJib3ggPSBzY2VuZS5nZXRCb3VuZGluZ0JveCgpO1xuICAgICAgICAgICAgICAgIGJib3guYXBwbHlUcmFuc2Zvcm0oY2FtZXJhLnZpZXdNYXRyaXgpO1xuICAgICAgICAgICAgICAgIHNjZW5lLnZpZXdCb3VuZGluZ0JveExhc3RGcmFtZS5jb3B5KGJib3gpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5zaGFkb3dNYXBQYXNzLnJlbmRlcihyZW5kZXJlciwgc2NlbmUsIGNhbWVyYSwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9mcmFtZUJ1ZmZlci5hdHRhY2goXG4gICAgICAgICAgICAgICAgdGhpcy50ZXh0dXJlLCBfZ2wuQ09MT1JfQVRUQUNITUVOVDAsXG4gICAgICAgICAgICAgICAgX2dsLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCArIGlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICB0aGlzLl9mcmFtZUJ1ZmZlci5iaW5kKHJlbmRlcmVyKTtcbiAgICAgICAgICAgIHJlbmRlcmVyLnJlbmRlcihzY2VuZSwgY2FtZXJhLCB0cnVlKTtcbiAgICAgICAgICAgIHRoaXMuX2ZyYW1lQnVmZmVyLnVuYmluZChyZW5kZXJlcik7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7Y2xheS5SZW5kZXJlcn0gcmVuZGVyZXJcbiAgICAgKi9cbiAgICBkaXNwb3NlOiBmdW5jdGlvbiAocmVuZGVyZXIpIHtcbiAgICAgICAgdGhpcy5fZnJhbWVCdWZmZXIuZGlzcG9zZShyZW5kZXJlcik7XG4gICAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEVudmlyb25tZW50TWFwUGFzcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3ByZVBhc3MvRW52aXJvbm1lbnRNYXAuanNcbi8vIG1vZHVsZSBpZCA9IDM3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Skybox__ = __webpack_require__(29);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__Skybox__[\"a\" /* default */]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvcGx1Z2luL1NreWRvbWUuanM/MThiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2t5Ym94IGZyb20gJy4vU2t5Ym94JztcblxuZXhwb3J0IGRlZmF1bHQgU2t5Ym94O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3BsdWdpbi9Ta3lkb21lLmpzXG4vLyBtb2R1bGUgaWQgPSAzOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    ENV_TEXTURE_ROOT: './asset/texture/',\n\n    SUPPORTED_MODEL_FILES: ['fbx', 'obj', 'mtl', 'dae', 'dxf'],\n\n    AUTO_SAVE: true\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZW52LmpzP2M5OWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIEVOVl9URVhUVVJFX1JPT1Q6ICcuL2Fzc2V0L3RleHR1cmUvJyxcblxuICAgIFNVUFBPUlRFRF9NT0RFTF9GSUxFUzogWydmYngnLCAnb2JqJywgJ210bCcsICdkYWUnLCAnZHhmJ10sXG5cbiAgICBBVVRPX1NBVkU6IHRydWVcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvZW52LmpzXG4vLyBtb2R1bGUgaWQgPSAzOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_GLInfo__ = __webpack_require__(73);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__math_Vector2__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__gpu_ProgramManager__ = __webpack_require__(78);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shader_source_prez_glsl_js__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__glmatrix_vec3__ = __webpack_require__(3);\n// TODO Resources like shader, texture, geometry reference management\n// Trace and find out which shader, texture, geometry can be destroyed\n\n\n\n\n\n\n\n\n\n// Light header\n\n\n\n__WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_8__shader_source_prez_glsl_js__[\"a\" /* default */]);\n\n\n\n\nvar mat4Create = __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].create;\n\nvar errorShader = {};\n\nfunction defaultGetMaterial(renderable) {\n    return renderable.material;\n}\nfunction defaultGetUniform(renderable, material, symbol) {\n    return material.uniforms[symbol].value;\n}\nfunction defaultIsMaterialChanged(renderabled, prevRenderable, material, prevMaterial) {\n    return material !== prevMaterial;\n}\nfunction defaultIfRender(renderable) {\n    return true;\n}\n\nfunction noop() {}\n\nvar attributeBufferTypeMap = {\n    float: __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].FLOAT,\n    byte: __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].BYTE,\n    ubyte: __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].UNSIGNED_BYTE,\n    short: __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].SHORT,\n    ushort: __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].UNSIGNED_SHORT\n};\n\nfunction VertexArrayObject(availableAttributes, availableAttributeSymbols, indicesBuffer) {\n    this.availableAttributes = availableAttributes;\n    this.availableAttributeSymbols = availableAttributeSymbols;\n    this.indicesBuffer = indicesBuffer;\n\n    this.vao = null;\n}\n\nfunction PlaceHolderTexture(renderer) {\n    var blankCanvas;\n    var webglTexture;\n    this.bind = function (renderer) {\n        if (!blankCanvas) {\n            // TODO Environment not support createCanvas.\n            blankCanvas = __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].createCanvas();\n            blankCanvas.width = blankCanvas.height = 1;\n            blankCanvas.getContext('2d');\n        }\n\n        var gl = renderer.gl;\n        var firstBind = !webglTexture;\n        if (firstBind) {\n            webglTexture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, webglTexture);\n        if (firstBind) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, blankCanvas);\n        }\n    };\n    this.unbind = function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, null);\n    };\n    this.isRenderable = function () {\n        return true;\n    };\n}\n/**\n * @constructor clay.Renderer\n * @extends clay.core.Base\n */\nvar Renderer = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Renderer# */ {\n\n        /**\n         * @type {HTMLCanvasElement}\n         * @readonly\n         */\n        canvas: null,\n\n        /**\n         * Canvas width, set by resize method\n         * @type {number}\n         * @private\n         */\n        _width: 100,\n\n        /**\n         * Canvas width, set by resize method\n         * @type {number}\n         * @private\n         */\n        _height: 100,\n\n        /**\n         * Device pixel ratio, set by setDevicePixelRatio method\n         * Specially for high defination display\n         * @see http://www.khronos.org/webgl/wiki/HandlingHighDPI\n         * @type {number}\n         * @private\n         */\n        devicePixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1.0,\n\n        /**\n         * Clear color\n         * @type {number[]}\n         */\n        clearColor: [0.0, 0.0, 0.0, 0.0],\n\n        /**\n         * Default:\n         *     _gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT | _gl.STENCIL_BUFFER_BIT\n         * @type {number}\n         */\n        clearBit: 17664,\n\n        // Settings when getting context\n        // http://www.khronos.org/registry/webgl/specs/latest/#2.4\n\n        /**\n         * If enable alpha, default true\n         * @type {boolean}\n         */\n        alpha: true,\n        /**\n         * If enable depth buffer, default true\n         * @type {boolean}\n         */\n        depth: true,\n        /**\n         * If enable stencil buffer, default false\n         * @type {boolean}\n         */\n        stencil: false,\n        /**\n         * If enable antialias, default true\n         * @type {boolean}\n         */\n        antialias: true,\n        /**\n         * If enable premultiplied alpha, default true\n         * @type {boolean}\n         */\n        premultipliedAlpha: true,\n        /**\n         * If preserve drawing buffer, default false\n         * @type {boolean}\n         */\n        preserveDrawingBuffer: false,\n        /**\n         * If throw context error, usually turned on in debug mode\n         * @type {boolean}\n         */\n        throwError: true,\n        /**\n         * WebGL Context created from given canvas\n         * @type {WebGLRenderingContext}\n         */\n        gl: null,\n        /**\n         * Renderer viewport, read-only, can be set by setViewport method\n         * @type {Object}\n         */\n        viewport: {},\n\n        /**\n         * Max joint number\n         * @type {number}\n         */\n        maxJointNumber: 20,\n\n        // Set by FrameBuffer#bind\n        __currentFrameBuffer: null,\n\n        _viewportStack: [],\n        _clearStack: [],\n\n        _sceneRendering: null\n    };\n}, function () {\n\n    if (!this.canvas) {\n        this.canvas = __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].createCanvas();\n    }\n    var canvas = this.canvas;\n    try {\n        var opts = {\n            alpha: this.alpha,\n            depth: this.depth,\n            stencil: this.stencil,\n            antialias: this.antialias,\n            premultipliedAlpha: this.premultipliedAlpha,\n            preserveDrawingBuffer: this.preserveDrawingBuffer\n        };\n\n        this.gl = canvas.getContext('webgl', opts)\n            || canvas.getContext('experimental-webgl', opts);\n\n        if (!this.gl) {\n            throw new Error();\n        }\n\n        this._glinfo = new __WEBPACK_IMPORTED_MODULE_1__core_GLInfo__[\"a\" /* default */](this.gl);\n\n        if (this.gl.targetRenderer) {\n            console.error('Already created a renderer');\n        }\n        this.gl.targetRenderer = this;\n\n        this.resize();\n    }\n    catch (e) {\n        throw 'Error creating WebGL Context ' + e;\n    }\n\n    // Init managers\n    this._programMgr = new __WEBPACK_IMPORTED_MODULE_6__gpu_ProgramManager__[\"a\" /* default */](this);\n\n    this._placeholderTexture = new PlaceHolderTexture(this);\n},\n/** @lends clay.Renderer.prototype. **/\n{\n    /**\n     * Resize the canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    resize: function(width, height) {\n        var canvas = this.canvas;\n        // http://www.khronos.org/webgl/wiki/HandlingHighDPI\n        // set the display size of the canvas.\n        var dpr = this.devicePixelRatio;\n        if (width != null) {\n            if (canvas.style) {\n                canvas.style.width = width + 'px';\n                canvas.style.height = height + 'px';\n            }\n            // set the size of the drawingBuffer\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            this._width = width;\n            this._height = height;\n        }\n        else {\n            this._width = canvas.width / dpr;\n            this._height = canvas.height / dpr;\n        }\n\n        this.setViewport(0, 0, this._width, this._height);\n    },\n\n    /**\n     * Get renderer width\n     * @return {number}\n     */\n    getWidth: function () {\n        return this._width;\n    },\n\n    /**\n     * Get renderer height\n     * @return {number}\n     */\n    getHeight: function () {\n        return this._height;\n    },\n\n    /**\n     * Get viewport aspect,\n     * @return {number}\n     */\n    getViewportAspect: function () {\n        var viewport = this.viewport;\n        return viewport.width / viewport.height;\n    },\n\n    /**\n     * Set devicePixelRatio\n     * @param {number} devicePixelRatio\n     */\n    setDevicePixelRatio: function(devicePixelRatio) {\n        this.devicePixelRatio = devicePixelRatio;\n        this.resize(this._width, this._height);\n    },\n\n    /**\n     * Get devicePixelRatio\n     * @param {number} devicePixelRatio\n     */\n    getDevicePixelRatio: function () {\n        return this.devicePixelRatio;\n    },\n\n    /**\n     * Get WebGL extension\n     * @param {string} name\n     * @return {object}\n     */\n    getGLExtension: function (name) {\n        return this._glinfo.getExtension(name);\n    },\n\n    /**\n     * Get WebGL parameter\n     * @param {string} name\n     * @return {*}\n     */\n    getGLParameter: function (name) {\n        return this._glinfo.getParameter(name);\n    },\n\n    /**\n     * Set rendering viewport\n     * @param {number|Object} x\n     * @param {number} [y]\n     * @param {number} [width]\n     * @param {number} [height]\n     * @param {number} [devicePixelRatio]\n     *        Defaultly use the renderere devicePixelRatio\n     *        It needs to be 1 when setViewport is called by frameBuffer\n     *\n     * @example\n     *  setViewport(0,0,width,height,1)\n     *  setViewport({\n     *      x: 0,\n     *      y: 0,\n     *      width: width,\n     *      height: height,\n     *      devicePixelRatio: 1\n     *  })\n     */\n    setViewport: function (x, y, width, height, dpr) {\n\n        if (typeof x === 'object') {\n            var obj = x;\n\n            x = obj.x;\n            y = obj.y;\n            width = obj.width;\n            height = obj.height;\n            dpr = obj.devicePixelRatio;\n        }\n        dpr = dpr || this.devicePixelRatio;\n\n        this.gl.viewport(\n            x * dpr, y * dpr, width * dpr, height * dpr\n        );\n        // Use a fresh new object, not write property.\n        this.viewport = {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            devicePixelRatio: dpr\n        };\n    },\n\n    /**\n     * Push current viewport into a stack\n     */\n    saveViewport: function () {\n        this._viewportStack.push(this.viewport);\n    },\n\n    /**\n     * Pop viewport from stack, restore in the renderer\n     */\n    restoreViewport: function () {\n        if (this._viewportStack.length > 0) {\n            this.setViewport(this._viewportStack.pop());\n        }\n    },\n\n    /**\n     * Push current clear into a stack\n     */\n    saveClear: function () {\n        this._clearStack.push({\n            clearBit: this.clearBit,\n            clearColor: this.clearColor\n        });\n    },\n\n    /**\n     * Pop clear from stack, restore in the renderer\n     */\n    restoreClear: function () {\n        if (this._clearStack.length > 0) {\n            var opt = this._clearStack.pop();\n            this.clearColor = opt.clearColor;\n            this.clearBit = opt.clearBit;\n        }\n    },\n\n    bindSceneRendering: function (scene) {\n        this._sceneRendering = scene;\n    },\n\n    /**\n     * Render the scene in camera to the screen or binded offline framebuffer\n     * @param  {clay.Scene}       scene\n     * @param  {clay.Camera}      camera\n     * @param  {boolean}     [notUpdateScene] If not call the scene.update methods in the rendering, default true\n     * @param  {boolean}     [preZ]           If use preZ optimization, default false\n     * @return {IRenderInfo}\n     */\n    render: function(scene, camera, notUpdateScene, preZ) {\n        var _gl = this.gl;\n\n        var clearColor = this.clearColor;\n\n        if (this.clearBit) {\n\n            // Must set depth and color mask true before clear\n            _gl.colorMask(true, true, true, true);\n            _gl.depthMask(true);\n            var viewport = this.viewport;\n            var needsScissor = false;\n            var viewportDpr = viewport.devicePixelRatio;\n            if (viewport.width !== this._width || viewport.height !== this._height\n                || (viewportDpr && viewportDpr !== this.devicePixelRatio)\n                || viewport.x || viewport.y\n            ) {\n                needsScissor = true;\n                // http://stackoverflow.com/questions/11544608/how-to-clear-a-rectangle-area-in-webgl\n                // Only clear the viewport\n                _gl.enable(_gl.SCISSOR_TEST);\n                _gl.scissor(viewport.x * viewportDpr, viewport.y * viewportDpr, viewport.width * viewportDpr, viewport.height * viewportDpr);\n            }\n            _gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n            _gl.clear(this.clearBit);\n            if (needsScissor) {\n                _gl.disable(_gl.SCISSOR_TEST);\n            }\n        }\n\n        // If the scene have been updated in the prepass like shadow map\n        // There is no need to update it again\n        if (!notUpdateScene) {\n            scene.update(false);\n        }\n        scene.updateLights();\n\n        camera = camera || scene.getMainCamera();\n        if (!camera) {\n            console.error('Can\\'t find camera in the scene.');\n            return;\n        }\n        camera.update();\n        var renderList = scene.updateRenderList(camera, true);\n\n        this._sceneRendering = scene;\n\n        var opaqueList = renderList.opaque;\n        var transparentList = renderList.transparent;\n        var sceneMaterial = scene.material;\n\n        scene.trigger('beforerender', this, scene, camera, renderList);\n\n        // Render pre z\n        if (preZ) {\n            this.renderPreZ(opaqueList, scene, camera);\n            _gl.depthFunc(_gl.LEQUAL);\n        }\n        else {\n            _gl.depthFunc(_gl.LESS);\n        }\n\n        // Update the depth of transparent list.\n        var worldViewMat = mat4Create();\n        var posViewSpace = __WEBPACK_IMPORTED_MODULE_10__glmatrix_vec3__[\"a\" /* default */].create();\n        for (var i = 0; i < transparentList.length; i++) {\n            var renderable = transparentList[i];\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].multiplyAffine(worldViewMat, camera.viewMatrix.array, renderable.worldTransform.array);\n            __WEBPACK_IMPORTED_MODULE_10__glmatrix_vec3__[\"a\" /* default */].transformMat4(posViewSpace, renderable.position.array, worldViewMat);\n            renderable.__depth = posViewSpace[2];\n        }\n\n        // Render opaque list\n        this.renderPass(opaqueList, camera, {\n            getMaterial: function (renderable) {\n                return sceneMaterial || renderable.material;\n            },\n            sortCompare: this.opaqueSortCompare\n        });\n\n        this.renderPass(transparentList, camera, {\n            getMaterial: function (renderable) {\n                return sceneMaterial || renderable.material;\n            },\n            sortCompare: this.transparentSortCompare\n        });\n\n        scene.trigger('afterrender', this, scene, camera, renderList);\n\n        // Cleanup\n        this._sceneRendering = null;\n    },\n\n    getProgram: function (renderable, renderMaterial, scene) {\n        renderMaterial = renderMaterial || renderable.material;\n        return this._programMgr.getProgram(renderable, renderMaterial, scene);\n    },\n\n    validateProgram: function (program) {\n        if (program.__error) {\n            var errorMsg = program.__error;\n            if (errorShader[program.__uid__]) {\n                return;\n            }\n            errorShader[program.__uid__] = true;\n\n            if (this.throwError) {\n                throw new Error(errorMsg);\n            }\n            else {\n                this.trigger('error', errorMsg);\n            }\n\n        }\n\n    },\n\n    updatePrograms: function (list, scene, passConfig) {\n        var getMaterial = (passConfig && passConfig.getMaterial) || defaultGetMaterial;\n        scene = scene || null;\n        for (var i = 0; i < list.length; i++) {\n            var renderable = list[i];\n            var renderMaterial = getMaterial.call(this, renderable);\n            if (i > 0) {\n                var prevRenderable = list[i - 1];\n                var prevJointsLen = prevRenderable.joints ? prevRenderable.joints.length : 0;\n                var jointsLen = renderable.joints ? renderable.joints.length : 0;\n                // Keep program not change if joints, material, lightGroup are same of two renderables.\n                if (jointsLen === prevJointsLen\n                    && renderable.material === prevRenderable.material\n                    && renderable.lightGroup === prevRenderable.lightGroup\n                ) {\n                    renderable.__program = prevRenderable.__program;\n                    continue;\n                }\n            }\n\n            var program = this._programMgr.getProgram(renderable, renderMaterial, scene);\n\n            this.validateProgram(program);\n\n            renderable.__program = program;\n        }\n    },\n\n    /**\n     * Render a single renderable list in camera in sequence\n     * @param {clay.Renderable[]} list List of all renderables.\n     * @param {clay.Camera} [camera] Camera provide view matrix and porjection matrix. It can be null.\n     * @param {Object} [passConfig]\n     * @param {Function} [passConfig.getMaterial] Get renderable material.\n     * @param {Function} [passConfig.getUniform] Get material uniform value.\n     * @param {Function} [passConfig.isMaterialChanged] If material changed.\n     * @param {Function} [passConfig.beforeRender] Before render each renderable.\n     * @param {Function} [passConfig.afterRender] After render each renderable\n     * @param {Function} [passConfig.ifRender] If render the renderable.\n     * @param {Function} [passConfig.sortCompare] Sort compare function.\n     * @return {IRenderInfo}\n     */\n    renderPass: function(list, camera, passConfig) {\n        this.trigger('beforerenderpass', this, list, camera, passConfig);\n\n        passConfig = passConfig || {};\n        passConfig.getMaterial = passConfig.getMaterial || defaultGetMaterial;\n        passConfig.getUniform = passConfig.getUniform || defaultGetUniform;\n        // PENDING Better solution?\n        passConfig.isMaterialChanged = passConfig.isMaterialChanged || defaultIsMaterialChanged;\n        passConfig.beforeRender = passConfig.beforeRender || noop;\n        passConfig.afterRender = passConfig.afterRender || noop;\n\n        var ifRenderObject = passConfig.ifRender || defaultIfRender;\n\n        this.updatePrograms(list, this._sceneRendering, passConfig);\n        if (passConfig.sortCompare) {\n            list.sort(passConfig.sortCompare);\n        }\n\n        // Some common builtin uniforms\n        var viewport = this.viewport;\n        var vDpr = viewport.devicePixelRatio;\n        var viewportUniform = [\n            viewport.x * vDpr, viewport.y * vDpr,\n            viewport.width * vDpr, viewport.height * vDpr\n        ];\n        var windowDpr = this.devicePixelRatio;\n        var windowSizeUniform = this.__currentFrameBuffer\n            ? [this.__currentFrameBuffer.getTextureWidth(), this.__currentFrameBuffer.getTextureHeight()]\n            : [this._width * windowDpr, this._height * windowDpr];\n        // DEPRECATED\n        var viewportSizeUniform = [\n            viewportUniform[2], viewportUniform[3]\n        ];\n        var time = Date.now();\n\n        // Calculate view and projection matrix\n        if (camera) {\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].copy(matrices.VIEW, camera.viewMatrix.array);\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].copy(matrices.PROJECTION, camera.projectionMatrix.array);\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].copy(matrices.VIEWINVERSE, camera.worldTransform.array);\n        }\n        else {\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].identity(matrices.VIEW);\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].identity(matrices.PROJECTION);\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].identity(matrices.VIEWINVERSE);\n        }\n        __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].multiply(matrices.VIEWPROJECTION, matrices.PROJECTION, matrices.VIEW);\n        __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].invert(matrices.PROJECTIONINVERSE, matrices.PROJECTION);\n        __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].invert(matrices.VIEWPROJECTIONINVERSE, matrices.VIEWPROJECTION);\n\n        var _gl = this.gl;\n        var scene = this._sceneRendering;\n\n        var prevMaterial;\n        var prevProgram;\n        var prevRenderable;\n\n        // Status\n        var depthTest, depthMask;\n        var culling, cullFace, frontFace;\n        var transparent;\n        var drawID;\n        var currentVAO;\n        var materialTakesTextureSlot;\n\n        // var vaoExt = this.getGLExtension('OES_vertex_array_object');\n        // not use vaoExt, some platforms may mess it up.\n        var vaoExt = null;\n\n        for (var i = 0; i < list.length; i++) {\n            var renderable = list[i];\n            var isSceneNode = renderable.worldTransform != null;\n            var worldM;\n\n            if (!ifRenderObject(renderable)) {\n                continue;\n            }\n\n            // Skinned mesh will transformed to joint space. Ignore the mesh transform\n            if (isSceneNode) {\n                worldM = (renderable.isSkinnedMesh && renderable.isSkinnedMesh())\n                    // TODO\n                    ? (renderable.offsetMatrix ? renderable.offsetMatrix.array :matrices.IDENTITY)\n                    : renderable.worldTransform.array;\n            }\n            var geometry = renderable.geometry;\n            var material = passConfig.getMaterial.call(this, renderable);\n\n            var program = renderable.__program;\n            var shader = material.shader;\n\n            var currentDrawID = geometry.__uid__ + '-' + program.__uid__;\n            var drawIDChanged = currentDrawID !== drawID;\n            drawID = currentDrawID;\n            if (drawIDChanged && vaoExt) {\n                // TODO Seems need to be bound to null immediately (or before bind another program?) if vao is changed\n                vaoExt.bindVertexArrayOES(null);\n            }\n            if (isSceneNode) {\n                __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].copy(matrices.WORLD, worldM);\n                __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].multiply(matrices.WORLDVIEWPROJECTION, matrices.VIEWPROJECTION, worldM);\n                __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].multiplyAffine(matrices.WORLDVIEW, matrices.VIEW, worldM);\n                if (shader.matrixSemantics.WORLDINVERSE ||\n                    shader.matrixSemantics.WORLDINVERSETRANSPOSE) {\n                    __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].invert(matrices.WORLDINVERSE, worldM);\n                }\n                if (shader.matrixSemantics.WORLDVIEWINVERSE ||\n                    shader.matrixSemantics.WORLDVIEWINVERSETRANSPOSE) {\n                    __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].invert(matrices.WORLDVIEWINVERSE, matrices.WORLDVIEW);\n                }\n                if (shader.matrixSemantics.WORLDVIEWPROJECTIONINVERSE ||\n                    shader.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE) {\n                    __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].invert(matrices.WORLDVIEWPROJECTIONINVERSE, matrices.WORLDVIEWPROJECTION);\n                }\n            }\n\n            // Before render hook\n            renderable.beforeRender && renderable.beforeRender(this);\n            passConfig.beforeRender.call(this, renderable, material, prevMaterial);\n\n            var programChanged = program !== prevProgram;\n            if (programChanged) {\n                // Set lights number\n                program.bind(this);\n                // Set some common uniforms\n                program.setUniformOfSemantic(_gl, 'VIEWPORT', viewportUniform);\n                program.setUniformOfSemantic(_gl, 'WINDOW_SIZE', windowSizeUniform);\n                if (camera) {\n                    program.setUniformOfSemantic(_gl, 'NEAR', camera.near);\n                    program.setUniformOfSemantic(_gl, 'FAR', camera.far);\n                }\n                program.setUniformOfSemantic(_gl, 'DEVICEPIXELRATIO', vDpr);\n                program.setUniformOfSemantic(_gl, 'TIME', time);\n                // DEPRECATED\n                program.setUniformOfSemantic(_gl, 'VIEWPORT_SIZE', viewportSizeUniform);\n\n                // Set lights uniforms\n                // TODO needs optimized\n                if (scene) {\n                    scene.setLightUniforms(program, renderable.lightGroup, this);\n                }\n            }\n            else {\n                program = prevProgram;\n            }\n\n            // Program changes also needs reset the materials.\n            if (programChanged || passConfig.isMaterialChanged(\n                renderable, prevRenderable, material, prevMaterial\n            )) {\n                if (material.depthTest !== depthTest) {\n                    material.depthTest ? _gl.enable(_gl.DEPTH_TEST) : _gl.disable(_gl.DEPTH_TEST);\n                    depthTest = material.depthTest;\n                }\n                if (material.depthMask !== depthMask) {\n                    _gl.depthMask(material.depthMask);\n                    depthMask = material.depthMask;\n                }\n                if (material.transparent !== transparent) {\n                    material.transparent ? _gl.enable(_gl.BLEND) : _gl.disable(_gl.BLEND);\n                    transparent = material.transparent;\n                }\n                // TODO cache blending\n                if (material.transparent) {\n                    if (material.blend) {\n                        material.blend(_gl);\n                    }\n                    else {\n                        // Default blend function\n                        _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n                        _gl.blendFuncSeparate(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n                    }\n                }\n\n                materialTakesTextureSlot = this._bindMaterial(\n                    renderable, material, program,\n                    prevRenderable || null, prevMaterial || null, prevProgram || null,\n                    passConfig.getUniform\n                );\n                prevMaterial = material;\n            }\n\n            var matrixSemanticKeys = shader.matrixSemanticKeys;\n\n            if (isSceneNode) {\n                for (var k = 0; k < matrixSemanticKeys.length; k++) {\n                    var semantic = matrixSemanticKeys[k];\n                    var semanticInfo = shader.matrixSemantics[semantic];\n                    var matrix = matrices[semantic];\n                    if (semanticInfo.isTranspose) {\n                        var matrixNoTranspose = matrices[semanticInfo.semanticNoTranspose];\n                        __WEBPACK_IMPORTED_MODULE_9__glmatrix_mat4__[\"a\" /* default */].transpose(matrix, matrixNoTranspose);\n                    }\n                    program.setUniform(_gl, semanticInfo.type, semanticInfo.symbol, matrix);\n                }\n            }\n\n            if (renderable.cullFace !== cullFace) {\n                cullFace = renderable.cullFace;\n                _gl.cullFace(cullFace);\n            }\n            if (renderable.frontFace !== frontFace) {\n                frontFace = renderable.frontFace;\n                _gl.frontFace(frontFace);\n            }\n            if (renderable.culling !== culling) {\n                culling = renderable.culling;\n                culling ? _gl.enable(_gl.CULL_FACE) : _gl.disable(_gl.CULL_FACE);\n            }\n            // TODO Not update skeleton in each renderable.\n            this._updateSkeleton(renderable, program, materialTakesTextureSlot);\n            if (drawIDChanged) {\n                currentVAO = this._bindVAO(vaoExt, shader, geometry, program);\n            }\n            this._renderObject(renderable, currentVAO, program);\n\n            // After render hook\n            passConfig.afterRender(this, renderable);\n            renderable.afterRender && renderable.afterRender(this);\n\n            prevProgram = program;\n            prevRenderable = renderable;\n        }\n\n        // TODO Seems need to be bound to null immediately if vao is changed?\n        if (vaoExt) {\n            vaoExt.bindVertexArrayOES(null);\n        }\n\n        this.trigger('afterrenderpass', this, list, camera, passConfig);\n    },\n\n    getMaxJointNumber: function () {\n        return this.maxJointNumber;\n    },\n\n    _updateSkeleton: function (object, program, slot) {\n        var _gl = this.gl;\n        var skeleton = object.skeleton;\n        // Set pose matrices of skinned mesh\n        if (skeleton) {\n            // TODO Update before culling.\n            skeleton.update();\n            if (object.joints.length > this.getMaxJointNumber()) {\n                var skinMatricesTexture = skeleton.getSubSkinMatricesTexture(object.__uid__, object.joints);\n                program.useTextureSlot(this, skinMatricesTexture, slot);\n                program.setUniform(_gl, '1i', 'skinMatricesTexture', slot);\n                program.setUniform(_gl, '1f', 'skinMatricesTextureSize', skinMatricesTexture.width);\n            }\n            else {\n                var skinMatricesArray = skeleton.getSubSkinMatrices(object.__uid__, object.joints);\n                program.setUniformOfSemantic(_gl, 'SKIN_MATRIX', skinMatricesArray);\n            }\n        }\n    },\n\n    _renderObject: function (renderable, vao, program) {\n        var _gl = this.gl;\n        var geometry = renderable.geometry;\n\n        var glDrawMode = renderable.mode;\n        if (glDrawMode == null) {\n            glDrawMode = 0x0004;\n        }\n\n        var ext = null;\n        var isInstanced = renderable.isInstancedMesh && renderable.isInstancedMesh();\n        if (isInstanced) {\n            ext = this.getGLExtension('ANGLE_instanced_arrays');\n            if (!ext) {\n                console.warn('Device not support ANGLE_instanced_arrays extension');\n                return;\n            }\n        }\n\n        var instancedAttrLocations;\n        if (isInstanced) {\n            instancedAttrLocations = this._bindInstancedAttributes(renderable, program, ext);\n        }\n\n        if (vao.indicesBuffer) {\n            var uintExt = this.getGLExtension('OES_element_index_uint');\n            var useUintExt = uintExt && (geometry.indices instanceof Uint32Array);\n            var indicesType = useUintExt ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\n\n            if (isInstanced) {\n                ext.drawElementsInstancedANGLE(\n                    glDrawMode, vao.indicesBuffer.count, indicesType, 0, renderable.getInstanceCount()\n                );\n            }\n            else {\n                _gl.drawElements(glDrawMode, vao.indicesBuffer.count, indicesType, 0);\n            }\n        }\n        else {\n            if (isInstanced) {\n                ext.drawArraysInstancedANGLE(glDrawMode, 0, geometry.vertexCount, renderable.getInstanceCount());\n            }\n            else {\n                // FIXME Use vertex number in buffer\n                // vertexCount may get the wrong value when geometry forget to mark dirty after update\n                _gl.drawArrays(glDrawMode, 0, geometry.vertexCount);\n            }\n        }\n\n        if (isInstanced) {\n            for (var i = 0; i < instancedAttrLocations.length; i++) {\n                _gl.disableVertexAttribArray(instancedAttrLocations[i]);\n            }\n        }\n    },\n\n    _bindInstancedAttributes: function (renderable, program, ext) {\n        var _gl = this.gl;\n        var instancedBuffers = renderable.getInstancedAttributesBuffers(this);\n        var locations = [];\n\n        for (var i = 0; i < instancedBuffers.length; i++) {\n            var bufferObj = instancedBuffers[i];\n            var location = program.getAttribLocation(_gl, bufferObj.symbol);\n            if (location < 0) {\n                continue;\n            }\n\n            var glType = attributeBufferTypeMap[bufferObj.type] || _gl.FLOAT;;\n            _gl.enableVertexAttribArray(location);  // TODO\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, bufferObj.buffer);\n            _gl.vertexAttribPointer(location, bufferObj.size, glType, false, 0, 0);\n            ext.vertexAttribDivisorANGLE(location, bufferObj.divisor);\n\n            locations.push(location);\n        }\n\n        return locations;\n    },\n\n    _bindMaterial: function (renderable, material, program, prevRenderable, prevMaterial, prevProgram, getUniformValue) {\n        var _gl = this.gl;\n        // PENDING Same texture in different material take different slot?\n\n        // May use shader of other material if shader code are same\n        var sameProgram = prevProgram === program;\n\n        var currentTextureSlot = program.currentTextureSlot();\n        var enabledUniforms = material.getEnabledUniforms();\n        var textureUniforms = material.getTextureUniforms();\n        var placeholderTexture = this._placeholderTexture;\n\n        for (var u = 0; u < textureUniforms.length; u++) {\n            var symbol = textureUniforms[u];\n            var uniformValue = getUniformValue(renderable, material, symbol);\n            var uniformType = material.uniforms[symbol].type;\n            // Not use `instanceof` to determine if a value is texture in Material#bind.\n            // Use type instead, in some case texture may be in different namespaces.\n            // TODO Duck type validate.\n            if (uniformType === 't' && uniformValue) {\n                // Reset slot\n                uniformValue.__slot = -1;\n            }\n            else if (uniformType === 'tv') {\n                for (var i = 0; i < uniformValue.length; i++) {\n                    if (uniformValue[i]) {\n                        uniformValue[i].__slot = -1;\n                    }\n                }\n            }\n        }\n\n        placeholderTexture.__slot = -1;\n\n        // Set uniforms\n        for (var u = 0; u < enabledUniforms.length; u++) {\n            var symbol = enabledUniforms[u];\n            var uniform = material.uniforms[symbol];\n            var uniformValue = getUniformValue(renderable, material, symbol);\n            var uniformType = uniform.type;\n            var isTexture = uniformType === 't';\n\n            if (isTexture) {\n                if (!uniformValue || !uniformValue.isRenderable()) {\n                    uniformValue = placeholderTexture;\n                }\n            }\n            // PENDING\n            // When binding two materials with the same shader\n            // Many uniforms will be be set twice even if they have the same value\n            // So add a evaluation to see if the uniform is really needed to be set\n            if (prevMaterial && sameProgram) {\n                var prevUniformValue = getUniformValue(prevRenderable, prevMaterial, symbol);\n                if (isTexture) {\n                    if (!prevUniformValue || !prevUniformValue.isRenderable()) {\n                        prevUniformValue = placeholderTexture;\n                    }\n                }\n\n                if (prevUniformValue === uniformValue) {\n                    if (isTexture) {\n                        // Still take the slot to make sure same texture in different materials have same slot.\n                        program.takeCurrentTextureSlot(this, null);\n                    }\n                    else if (uniformType === 'tv' && uniformValue) {\n                        for (var i = 0; i < uniformValue.length; i++) {\n                            program.takeCurrentTextureSlot(this, null);\n                        }\n                    }\n                    continue;\n                }\n            }\n\n            if (uniformValue == null) {\n                continue;\n            }\n            else if (isTexture) {\n                if (uniformValue.__slot < 0) {\n                    var slot = program.currentTextureSlot();\n                    var res = program.setUniform(_gl, '1i', symbol, slot);\n                    if (res) { // Texture uniform is enabled\n                        program.takeCurrentTextureSlot(this, uniformValue);\n                        uniformValue.__slot = slot;\n                    }\n                }\n                // Multiple uniform use same texture..\n                else {\n                    program.setUniform(_gl, '1i', symbol, uniformValue.__slot);\n                }\n            }\n            else if (Array.isArray(uniformValue)) {\n                if (uniformValue.length === 0) {\n                    continue;\n                }\n                // Texture Array\n                if (uniformType === 'tv') {\n                    if (!program.hasUniform(symbol)) {\n                        continue;\n                    }\n\n                    var arr = [];\n                    for (var i = 0; i < uniformValue.length; i++) {\n                        var texture = uniformValue[i];\n\n                        if (texture.__slot < 0) {\n                            var slot = program.currentTextureSlot();\n                            arr.push(slot);\n                            program.takeCurrentTextureSlot(this, texture);\n                            texture.__slot = slot;\n                        }\n                        else {\n                            arr.push(texture.__slot);\n                        }\n                    }\n\n                    program.setUniform(_gl, '1iv', symbol, arr);\n                }\n                else {\n                    program.setUniform(_gl, uniform.type, symbol, uniformValue);\n                }\n            }\n            else{\n                program.setUniform(_gl, uniform.type, symbol, uniformValue);\n            }\n        }\n        var newSlot = program.currentTextureSlot();\n        // Texture slot maybe used out of material.\n        program.resetTextureSlot(currentTextureSlot);\n        return newSlot;\n    },\n\n    _bindVAO: function (vaoExt, shader, geometry, program) {\n        var isStatic = !geometry.dynamic;\n        var _gl = this.gl;\n\n        var vaoId = this.__uid__ + '-' + program.__uid__;\n        var vao = geometry.__vaoCache[vaoId];\n        if (!vao) {\n            var chunks = geometry.getBufferChunks(this);\n            if (!chunks || !chunks.length) {  // Empty mesh\n                return;\n            }\n            var chunk = chunks[0];\n            var attributeBuffers = chunk.attributeBuffers;\n            var indicesBuffer = chunk.indicesBuffer;\n\n            var availableAttributes = [];\n            var availableAttributeSymbols = [];\n            for (var a = 0; a < attributeBuffers.length; a++) {\n                var attributeBufferInfo = attributeBuffers[a];\n                var name = attributeBufferInfo.name;\n                var semantic = attributeBufferInfo.semantic;\n                var symbol;\n                if (semantic) {\n                    var semanticInfo = shader.attributeSemantics[semantic];\n                    symbol = semanticInfo && semanticInfo.symbol;\n                }\n                else {\n                    symbol = name;\n                }\n                if (symbol && program.attributes[symbol]) {\n                    availableAttributes.push(attributeBufferInfo);\n                    availableAttributeSymbols.push(symbol);\n                }\n            }\n\n            vao = new VertexArrayObject(\n                availableAttributes,\n                availableAttributeSymbols,\n                indicesBuffer\n            );\n\n            if (isStatic) {\n                geometry.__vaoCache[vaoId] = vao;\n            }\n        }\n\n        var needsBindAttributes = true;\n\n        // Create vertex object array cost a lot\n        // So we don't use it on the dynamic object\n        if (vaoExt && isStatic) {\n            // Use vertex array object\n            // http://blog.tojicode.com/2012/10/oesvertexarrayobject-extension.html\n            if (vao.vao == null) {\n                vao.vao = vaoExt.createVertexArrayOES();\n            }\n            else {\n                needsBindAttributes = false;\n            }\n            vaoExt.bindVertexArrayOES(vao.vao);\n        }\n\n        var availableAttributes = vao.availableAttributes;\n        var indicesBuffer = vao.indicesBuffer;\n\n        if (needsBindAttributes) {\n            var locationList = program.enableAttributes(this, vao.availableAttributeSymbols, (vaoExt && isStatic && vao));\n            // Setting attributes;\n            for (var a = 0; a < availableAttributes.length; a++) {\n                var location = locationList[a];\n                if (location === -1) {\n                    continue;\n                }\n                var attributeBufferInfo = availableAttributes[a];\n                var buffer = attributeBufferInfo.buffer;\n                var size = attributeBufferInfo.size;\n                var glType = attributeBufferTypeMap[attributeBufferInfo.type] || _gl.FLOAT;\n\n                _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n                _gl.vertexAttribPointer(location, size, glType, false, 0, 0);\n            }\n\n            if (geometry.isUseIndices()) {\n                _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, indicesBuffer.buffer);\n            }\n        }\n\n        return vao;\n    },\n\n    renderPreZ: function (list, scene, camera) {\n        var _gl = this.gl;\n        var preZPassMaterial = this._prezMaterial || new __WEBPACK_IMPORTED_MODULE_4__Material__[\"a\" /* default */]({\n            shader: new __WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */].source('clay.prez.vertex'), __WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */].source('clay.prez.fragment'))\n        });\n        this._prezMaterial = preZPassMaterial;\n\n        _gl.colorMask(false, false, false, false);\n        _gl.depthMask(true);\n\n        // Status\n        this.renderPass(list, camera, {\n            ifRender: function (renderable) {\n                return !renderable.ignorePreZ;\n            },\n            isMaterialChanged: function (renderable, prevRenderable) {\n                var matA = renderable.material;\n                var matB = prevRenderable.material;\n                return matA.get('diffuseMap') !== matB.get('diffuseMap')\n                    || (matA.get('alphaCutoff') || 0) !== (matB.get('alphaCutoff') || 0);\n            },\n            getUniform: function (renderable, depthMaterial, symbol) {\n                if (symbol === 'alphaMap') {\n                    return renderable.material.get('diffuseMap');\n                }\n                else if (symbol === 'alphaCutoff') {\n                    if (renderable.material.isDefined('fragment', 'ALPHA_TEST')\n                        && renderable.material.get('diffuseMap')\n                    ) {\n                        var alphaCutoff = renderable.material.get('alphaCutoff');\n                        return alphaCutoff || 0;\n                    }\n                    return 0;\n                }\n                else if (symbol === 'uvRepeat') {\n                    return renderable.material.get('uvRepeat');\n                }\n                else if (symbol === 'uvOffset') {\n                    return renderable.material.get('uvOffset');\n                }\n                else {\n                    return depthMaterial.get(symbol);\n                }\n            },\n            getMaterial: function () {\n                return preZPassMaterial;\n            },\n            sort: this.opaqueSortCompare\n        });\n\n        _gl.colorMask(true, true, true, true);\n        _gl.depthMask(true);\n    },\n\n    /**\n     * Dispose given scene, including all geometris, textures and shaders in the scene\n     * @param {clay.Scene} scene\n     */\n    disposeScene: function(scene) {\n        this.disposeNode(scene, true, true);\n        scene.dispose();\n    },\n\n    /**\n     * Dispose given node, including all geometries, textures and shaders attached on it or its descendant\n     * @param {clay.Node} node\n     * @param {boolean} [disposeGeometry=false] If dispose the geometries used in the descendant mesh\n     * @param {boolean} [disposeTexture=false] If dispose the textures used in the descendant mesh\n     */\n    disposeNode: function(root, disposeGeometry, disposeTexture) {\n        // Dettached from parent\n        if (root.getParent()) {\n            root.getParent().remove(root);\n        }\n        var disposedMap = {};\n        root.traverse(function(node) {\n            var material = node.material;\n            if (node.geometry && disposeGeometry) {\n                node.geometry.dispose(this);\n            }\n            if (disposeTexture && material && !disposedMap[material.__uid__]) {\n                var textureUniforms = material.getTextureUniforms();\n                for (var u = 0; u < textureUniforms.length; u++) {\n                    var uniformName = textureUniforms[u];\n                    var val = material.uniforms[uniformName].value;\n                    var uniformType = material.uniforms[uniformName].type;\n                    if (!val) {\n                        continue;\n                    }\n                    if (uniformType === 't') {\n                        val.dispose && val.dispose(this);\n                    }\n                    else if (uniformType === 'tv') {\n                        for (var k = 0; k < val.length; k++) {\n                            if (val[k]) {\n                                val[k].dispose && val[k].dispose(this);\n                            }\n                        }\n                    }\n                }\n                disposedMap[material.__uid__] = true;\n            }\n            // Particle system and AmbientCubemap light need to dispose\n            if (node.dispose) {\n                node.dispose(this);\n            }\n        }, this);\n    },\n\n    /**\n     * Dispose given geometry\n     * @param {clay.Geometry} geometry\n     */\n    disposeGeometry: function(geometry) {\n        geometry.dispose(this);\n    },\n\n    /**\n     * Dispose given texture\n     * @param {clay.Texture} texture\n     */\n    disposeTexture: function(texture) {\n        texture.dispose(this);\n    },\n\n    /**\n     * Dispose given frame buffer\n     * @param {clay.FrameBuffer} frameBuffer\n     */\n    disposeFrameBuffer: function(frameBuffer) {\n        frameBuffer.dispose(this);\n    },\n\n    /**\n     * Dispose renderer\n     */\n    dispose: function () {},\n\n    /**\n     * Convert screen coords to normalized device coordinates(NDC)\n     * Screen coords can get from mouse event, it is positioned relative to canvas element\n     * NDC can be used in ray casting with Camera.prototype.castRay methods\n     *\n     * @param  {number}       x\n     * @param  {number}       y\n     * @param  {clay.Vector2} [out]\n     * @return {clay.Vector2}\n     */\n    screenToNDC: function(x, y, out) {\n        if (!out) {\n            out = new __WEBPACK_IMPORTED_MODULE_5__math_Vector2__[\"a\" /* default */]();\n        }\n        // Invert y;\n        y = this._height - y;\n\n        var viewport = this.viewport;\n        var arr = out.array;\n        arr[0] = (x - viewport.x) / viewport.width;\n        arr[0] = arr[0] * 2 - 1;\n        arr[1] = (y - viewport.y) / viewport.height;\n        arr[1] = arr[1] * 2 - 1;\n\n        return out;\n    }\n});\n\n/**\n * Opaque renderables compare function\n * @param  {clay.Renderable} x\n * @param  {clay.Renderable} y\n * @return {boolean}\n * @static\n */\nRenderer.opaqueSortCompare = Renderer.prototype.opaqueSortCompare = function(x, y) {\n    // Priority renderOrder -> program -> material -> geometry\n    if (x.renderOrder === y.renderOrder) {\n        if (x.__program === y.__program) {\n            if (x.material === y.material) {\n                return x.geometry.__uid__ - y.geometry.__uid__;\n            }\n            return x.material.__uid__ - y.material.__uid__;\n        }\n        if (x.__program && y.__program) {\n            return x.__program.__uid__ - y.__program.__uid__;\n        }\n        return 0;\n    }\n    return x.renderOrder - y.renderOrder;\n};\n\n/**\n * Transparent renderables compare function\n * @param  {clay.Renderable} a\n * @param  {clay.Renderable} b\n * @return {boolean}\n * @static\n */\nRenderer.transparentSortCompare = Renderer.prototype.transparentSortCompare = function(x, y) {\n    // Priority renderOrder -> depth -> program -> material -> geometry\n\n    if (x.renderOrder === y.renderOrder) {\n        if (x.__depth === y.__depth) {\n            if (x.__program === y.__program) {\n                if (x.material === y.material) {\n                    return x.geometry.__uid__ - y.geometry.__uid__;\n                }\n                return x.material.__uid__ - y.material.__uid__;\n            }\n            if (x.__program  && y.__program) {\n                return x.__program.__uid__ - y.__program.__uid__;\n            }\n            return 0;\n        }\n        // Depth is negative\n        // So farther object has smaller depth value\n        return x.__depth - y.__depth;\n    }\n    return x.renderOrder - y.renderOrder;\n};\n\n// Temporary variables\nvar matrices = {\n    IDENTITY: mat4Create(),\n\n    WORLD: mat4Create(),\n    VIEW: mat4Create(),\n    PROJECTION: mat4Create(),\n    WORLDVIEW: mat4Create(),\n    VIEWPROJECTION: mat4Create(),\n    WORLDVIEWPROJECTION: mat4Create(),\n\n    WORLDINVERSE: mat4Create(),\n    VIEWINVERSE: mat4Create(),\n    PROJECTIONINVERSE: mat4Create(),\n    WORLDVIEWINVERSE: mat4Create(),\n    VIEWPROJECTIONINVERSE: mat4Create(),\n    WORLDVIEWPROJECTIONINVERSE: mat4Create(),\n\n    WORLDTRANSPOSE: mat4Create(),\n    VIEWTRANSPOSE: mat4Create(),\n    PROJECTIONTRANSPOSE: mat4Create(),\n    WORLDVIEWTRANSPOSE: mat4Create(),\n    VIEWPROJECTIONTRANSPOSE: mat4Create(),\n    WORLDVIEWPROJECTIONTRANSPOSE: mat4Create(),\n    WORLDINVERSETRANSPOSE: mat4Create(),\n    VIEWINVERSETRANSPOSE: mat4Create(),\n    PROJECTIONINVERSETRANSPOSE: mat4Create(),\n    WORLDVIEWINVERSETRANSPOSE: mat4Create(),\n    VIEWPROJECTIONINVERSETRANSPOSE: mat4Create(),\n    WORLDVIEWPROJECTIONINVERSETRANSPOSE: mat4Create()\n};\n\n/**\n * @name clay.Renderer.COLOR_BUFFER_BIT\n * @type {number}\n */\nRenderer.COLOR_BUFFER_BIT = __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].COLOR_BUFFER_BIT;\n/**\n * @name clay.Renderer.DEPTH_BUFFER_BIT\n * @type {number}\n */\nRenderer.DEPTH_BUFFER_BIT = __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].DEPTH_BUFFER_BIT;\n/**\n * @name clay.Renderer.STENCIL_BUFFER_BIT\n * @type {number}\n */\nRenderer.STENCIL_BUFFER_BIT = __WEBPACK_IMPORTED_MODULE_2__core_glenum__[\"a\" /* default */].STENCIL_BUFFER_BIT;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvUmVuZGVyZXIuanM/NWRmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPIFJlc291cmNlcyBsaWtlIHNoYWRlciwgdGV4dHVyZSwgZ2VvbWV0cnkgcmVmZXJlbmNlIG1hbmFnZW1lbnRcbi8vIFRyYWNlIGFuZCBmaW5kIG91dCB3aGljaCBzaGFkZXIsIHRleHR1cmUsIGdlb21ldHJ5IGNhbiBiZSBkZXN0cm95ZWRcbmltcG9ydCBCYXNlIGZyb20gJy4vY29yZS9CYXNlJztcbmltcG9ydCBHTEluZm8gZnJvbSAnLi9jb3JlL0dMSW5mbyc7XG5pbXBvcnQgZ2xlbnVtIGZyb20gJy4vY29yZS9nbGVudW0nO1xuaW1wb3J0IHZlbmRvciBmcm9tICcuL2NvcmUvdmVuZG9yJztcblxuaW1wb3J0IE1hdGVyaWFsIGZyb20gJy4vTWF0ZXJpYWwnO1xuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi9tYXRoL1ZlY3RvcjInO1xuaW1wb3J0IFByb2dyYW1NYW5hZ2VyIGZyb20gJy4vZ3B1L1Byb2dyYW1NYW5hZ2VyJztcblxuLy8gTGlnaHQgaGVhZGVyXG5pbXBvcnQgU2hhZGVyIGZyb20gJy4vU2hhZGVyJztcblxuaW1wb3J0IHByZXpFc3NsIGZyb20gJy4vc2hhZGVyL3NvdXJjZS9wcmV6Lmdsc2wuanMnO1xuU2hhZGVyWydpbXBvcnQnXShwcmV6RXNzbCk7XG5cbmltcG9ydCBtYXQ0IGZyb20gJy4vZ2xtYXRyaXgvbWF0NCc7XG5pbXBvcnQgdmVjMyBmcm9tICcuL2dsbWF0cml4L3ZlYzMnO1xuXG52YXIgbWF0NENyZWF0ZSA9IG1hdDQuY3JlYXRlO1xuXG52YXIgZXJyb3JTaGFkZXIgPSB7fTtcblxuZnVuY3Rpb24gZGVmYXVsdEdldE1hdGVyaWFsKHJlbmRlcmFibGUpIHtcbiAgICByZXR1cm4gcmVuZGVyYWJsZS5tYXRlcmlhbDtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRHZXRVbmlmb3JtKHJlbmRlcmFibGUsIG1hdGVyaWFsLCBzeW1ib2wpIHtcbiAgICByZXR1cm4gbWF0ZXJpYWwudW5pZm9ybXNbc3ltYm9sXS52YWx1ZTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRJc01hdGVyaWFsQ2hhbmdlZChyZW5kZXJhYmxlZCwgcHJldlJlbmRlcmFibGUsIG1hdGVyaWFsLCBwcmV2TWF0ZXJpYWwpIHtcbiAgICByZXR1cm4gbWF0ZXJpYWwgIT09IHByZXZNYXRlcmlhbDtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRJZlJlbmRlcihyZW5kZXJhYmxlKSB7XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG52YXIgYXR0cmlidXRlQnVmZmVyVHlwZU1hcCA9IHtcbiAgICBmbG9hdDogZ2xlbnVtLkZMT0FULFxuICAgIGJ5dGU6IGdsZW51bS5CWVRFLFxuICAgIHVieXRlOiBnbGVudW0uVU5TSUdORURfQllURSxcbiAgICBzaG9ydDogZ2xlbnVtLlNIT1JULFxuICAgIHVzaG9ydDogZ2xlbnVtLlVOU0lHTkVEX1NIT1JUXG59O1xuXG5mdW5jdGlvbiBWZXJ0ZXhBcnJheU9iamVjdChhdmFpbGFibGVBdHRyaWJ1dGVzLCBhdmFpbGFibGVBdHRyaWJ1dGVTeW1ib2xzLCBpbmRpY2VzQnVmZmVyKSB7XG4gICAgdGhpcy5hdmFpbGFibGVBdHRyaWJ1dGVzID0gYXZhaWxhYmxlQXR0cmlidXRlcztcbiAgICB0aGlzLmF2YWlsYWJsZUF0dHJpYnV0ZVN5bWJvbHMgPSBhdmFpbGFibGVBdHRyaWJ1dGVTeW1ib2xzO1xuICAgIHRoaXMuaW5kaWNlc0J1ZmZlciA9IGluZGljZXNCdWZmZXI7XG5cbiAgICB0aGlzLnZhbyA9IG51bGw7XG59XG5cbmZ1bmN0aW9uIFBsYWNlSG9sZGVyVGV4dHVyZShyZW5kZXJlcikge1xuICAgIHZhciBibGFua0NhbnZhcztcbiAgICB2YXIgd2ViZ2xUZXh0dXJlO1xuICAgIHRoaXMuYmluZCA9IGZ1bmN0aW9uIChyZW5kZXJlcikge1xuICAgICAgICBpZiAoIWJsYW5rQ2FudmFzKSB7XG4gICAgICAgICAgICAvLyBUT0RPIEVudmlyb25tZW50IG5vdCBzdXBwb3J0IGNyZWF0ZUNhbnZhcy5cbiAgICAgICAgICAgIGJsYW5rQ2FudmFzID0gdmVuZG9yLmNyZWF0ZUNhbnZhcygpO1xuICAgICAgICAgICAgYmxhbmtDYW52YXMud2lkdGggPSBibGFua0NhbnZhcy5oZWlnaHQgPSAxO1xuICAgICAgICAgICAgYmxhbmtDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBnbCA9IHJlbmRlcmVyLmdsO1xuICAgICAgICB2YXIgZmlyc3RCaW5kID0gIXdlYmdsVGV4dHVyZTtcbiAgICAgICAgaWYgKGZpcnN0QmluZCkge1xuICAgICAgICAgICAgd2ViZ2xUZXh0dXJlID0gZ2wuY3JlYXRlVGV4dHVyZSgpO1xuICAgICAgICB9XG4gICAgICAgIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIHdlYmdsVGV4dHVyZSk7XG4gICAgICAgIGlmIChmaXJzdEJpbmQpIHtcbiAgICAgICAgICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgYmxhbmtDYW52YXMpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aGlzLnVuYmluZCA9IGZ1bmN0aW9uIChyZW5kZXJlcikge1xuICAgICAgICByZW5kZXJlci5nbC5iaW5kVGV4dHVyZShyZW5kZXJlci5nbC5URVhUVVJFXzJELCBudWxsKTtcbiAgICB9O1xuICAgIHRoaXMuaXNSZW5kZXJhYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xufVxuLyoqXG4gKiBAY29uc3RydWN0b3IgY2xheS5SZW5kZXJlclxuICogQGV4dGVuZHMgY2xheS5jb3JlLkJhc2VcbiAqL1xudmFyIFJlbmRlcmVyID0gQmFzZS5leHRlbmQoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAvKiogQGxlbmRzIGNsYXkuUmVuZGVyZXIjICovIHtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHR5cGUge0hUTUxDYW52YXNFbGVtZW50fVxuICAgICAgICAgKiBAcmVhZG9ubHlcbiAgICAgICAgICovXG4gICAgICAgIGNhbnZhczogbnVsbCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQ2FudmFzIHdpZHRoLCBzZXQgYnkgcmVzaXplIG1ldGhvZFxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgX3dpZHRoOiAxMDAsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbnZhcyB3aWR0aCwgc2V0IGJ5IHJlc2l6ZSBtZXRob2RcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICovXG4gICAgICAgIF9oZWlnaHQ6IDEwMCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogRGV2aWNlIHBpeGVsIHJhdGlvLCBzZXQgYnkgc2V0RGV2aWNlUGl4ZWxSYXRpbyBtZXRob2RcbiAgICAgICAgICogU3BlY2lhbGx5IGZvciBoaWdoIGRlZmluYXRpb24gZGlzcGxheVxuICAgICAgICAgKiBAc2VlIGh0dHA6Ly93d3cua2hyb25vcy5vcmcvd2ViZ2wvd2lraS9IYW5kbGluZ0hpZ2hEUElcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICovXG4gICAgICAgIGRldmljZVBpeGVsUmF0aW86ICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbykgfHwgMS4wLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDbGVhciBjb2xvclxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyW119XG4gICAgICAgICAqL1xuICAgICAgICBjbGVhckNvbG9yOiBbMC4wLCAwLjAsIDAuMCwgMC4wXSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogRGVmYXVsdDpcbiAgICAgICAgICogICAgIF9nbC5DT0xPUl9CVUZGRVJfQklUIHwgX2dsLkRFUFRIX0JVRkZFUl9CSVQgfCBfZ2wuU1RFTkNJTF9CVUZGRVJfQklUXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgICAqL1xuICAgICAgICBjbGVhckJpdDogMTc2NjQsXG5cbiAgICAgICAgLy8gU2V0dGluZ3Mgd2hlbiBnZXR0aW5nIGNvbnRleHRcbiAgICAgICAgLy8gaHR0cDovL3d3dy5raHJvbm9zLm9yZy9yZWdpc3RyeS93ZWJnbC9zcGVjcy9sYXRlc3QvIzIuNFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiBlbmFibGUgYWxwaGEsIGRlZmF1bHQgdHJ1ZVxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIGFscGhhOiB0cnVlLFxuICAgICAgICAvKipcbiAgICAgICAgICogSWYgZW5hYmxlIGRlcHRoIGJ1ZmZlciwgZGVmYXVsdCB0cnVlXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgZGVwdGg6IHRydWUsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiBlbmFibGUgc3RlbmNpbCBidWZmZXIsIGRlZmF1bHQgZmFsc2VcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICAgICAqL1xuICAgICAgICBzdGVuY2lsOiBmYWxzZSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGVuYWJsZSBhbnRpYWxpYXMsIGRlZmF1bHQgdHJ1ZVxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIGFudGlhbGlhczogdHJ1ZSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIGVuYWJsZSBwcmVtdWx0aXBsaWVkIGFscGhhLCBkZWZhdWx0IHRydWVcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICAgICAqL1xuICAgICAgICBwcmVtdWx0aXBsaWVkQWxwaGE6IHRydWUsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiBwcmVzZXJ2ZSBkcmF3aW5nIGJ1ZmZlciwgZGVmYXVsdCBmYWxzZVxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIHByZXNlcnZlRHJhd2luZ0J1ZmZlcjogZmFsc2UsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiB0aHJvdyBjb250ZXh0IGVycm9yLCB1c3VhbGx5IHR1cm5lZCBvbiBpbiBkZWJ1ZyBtb2RlXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdGhyb3dFcnJvcjogdHJ1ZSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdlYkdMIENvbnRleHQgY3JlYXRlZCBmcm9tIGdpdmVuIGNhbnZhc1xuICAgICAgICAgKiBAdHlwZSB7V2ViR0xSZW5kZXJpbmdDb250ZXh0fVxuICAgICAgICAgKi9cbiAgICAgICAgZ2w6IG51bGwsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZW5kZXJlciB2aWV3cG9ydCwgcmVhZC1vbmx5LCBjYW4gYmUgc2V0IGJ5IHNldFZpZXdwb3J0IG1ldGhvZFxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICAgKi9cbiAgICAgICAgdmlld3BvcnQ6IHt9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBNYXggam9pbnQgbnVtYmVyXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgICAqL1xuICAgICAgICBtYXhKb2ludE51bWJlcjogMjAsXG5cbiAgICAgICAgLy8gU2V0IGJ5IEZyYW1lQnVmZmVyI2JpbmRcbiAgICAgICAgX19jdXJyZW50RnJhbWVCdWZmZXI6IG51bGwsXG5cbiAgICAgICAgX3ZpZXdwb3J0U3RhY2s6IFtdLFxuICAgICAgICBfY2xlYXJTdGFjazogW10sXG5cbiAgICAgICAgX3NjZW5lUmVuZGVyaW5nOiBudWxsXG4gICAgfTtcbn0sIGZ1bmN0aW9uICgpIHtcblxuICAgIGlmICghdGhpcy5jYW52YXMpIHtcbiAgICAgICAgdGhpcy5jYW52YXMgPSB2ZW5kb3IuY3JlYXRlQ2FudmFzKCk7XG4gICAgfVxuICAgIHZhciBjYW52YXMgPSB0aGlzLmNhbnZhcztcbiAgICB0cnkge1xuICAgICAgICB2YXIgb3B0cyA9IHtcbiAgICAgICAgICAgIGFscGhhOiB0aGlzLmFscGhhLFxuICAgICAgICAgICAgZGVwdGg6IHRoaXMuZGVwdGgsXG4gICAgICAgICAgICBzdGVuY2lsOiB0aGlzLnN0ZW5jaWwsXG4gICAgICAgICAgICBhbnRpYWxpYXM6IHRoaXMuYW50aWFsaWFzLFxuICAgICAgICAgICAgcHJlbXVsdGlwbGllZEFscGhhOiB0aGlzLnByZW11bHRpcGxpZWRBbHBoYSxcbiAgICAgICAgICAgIHByZXNlcnZlRHJhd2luZ0J1ZmZlcjogdGhpcy5wcmVzZXJ2ZURyYXdpbmdCdWZmZXJcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLmdsID0gY2FudmFzLmdldENvbnRleHQoJ3dlYmdsJywgb3B0cylcbiAgICAgICAgICAgIHx8IGNhbnZhcy5nZXRDb250ZXh0KCdleHBlcmltZW50YWwtd2ViZ2wnLCBvcHRzKTtcblxuICAgICAgICBpZiAoIXRoaXMuZ2wpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fZ2xpbmZvID0gbmV3IEdMSW5mbyh0aGlzLmdsKTtcblxuICAgICAgICBpZiAodGhpcy5nbC50YXJnZXRSZW5kZXJlcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignQWxyZWFkeSBjcmVhdGVkIGEgcmVuZGVyZXInKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdsLnRhcmdldFJlbmRlcmVyID0gdGhpcztcblxuICAgICAgICB0aGlzLnJlc2l6ZSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyAnRXJyb3IgY3JlYXRpbmcgV2ViR0wgQ29udGV4dCAnICsgZTtcbiAgICB9XG5cbiAgICAvLyBJbml0IG1hbmFnZXJzXG4gICAgdGhpcy5fcHJvZ3JhbU1nciA9IG5ldyBQcm9ncmFtTWFuYWdlcih0aGlzKTtcblxuICAgIHRoaXMuX3BsYWNlaG9sZGVyVGV4dHVyZSA9IG5ldyBQbGFjZUhvbGRlclRleHR1cmUodGhpcyk7XG59LFxuLyoqIEBsZW5kcyBjbGF5LlJlbmRlcmVyLnByb3RvdHlwZS4gKiovXG57XG4gICAgLyoqXG4gICAgICogUmVzaXplIHRoZSBjYW52YXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gd2lkdGhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0XG4gICAgICovXG4gICAgcmVzaXplOiBmdW5jdGlvbih3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICAgIHZhciBjYW52YXMgPSB0aGlzLmNhbnZhcztcbiAgICAgICAgLy8gaHR0cDovL3d3dy5raHJvbm9zLm9yZy93ZWJnbC93aWtpL0hhbmRsaW5nSGlnaERQSVxuICAgICAgICAvLyBzZXQgdGhlIGRpc3BsYXkgc2l6ZSBvZiB0aGUgY2FudmFzLlxuICAgICAgICB2YXIgZHByID0gdGhpcy5kZXZpY2VQaXhlbFJhdGlvO1xuICAgICAgICBpZiAod2lkdGggIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKGNhbnZhcy5zdHlsZSkge1xuICAgICAgICAgICAgICAgIGNhbnZhcy5zdHlsZS53aWR0aCA9IHdpZHRoICsgJ3B4JztcbiAgICAgICAgICAgICAgICBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHNldCB0aGUgc2l6ZSBvZiB0aGUgZHJhd2luZ0J1ZmZlclxuICAgICAgICAgICAgY2FudmFzLndpZHRoID0gd2lkdGggKiBkcHI7XG4gICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0ICogZHByO1xuXG4gICAgICAgICAgICB0aGlzLl93aWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgdGhpcy5faGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fd2lkdGggPSBjYW52YXMud2lkdGggLyBkcHI7XG4gICAgICAgICAgICB0aGlzLl9oZWlnaHQgPSBjYW52YXMuaGVpZ2h0IC8gZHByO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRWaWV3cG9ydCgwLCAwLCB0aGlzLl93aWR0aCwgdGhpcy5faGVpZ2h0KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IHJlbmRlcmVyIHdpZHRoXG4gICAgICogQHJldHVybiB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldFdpZHRoOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl93aWR0aDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IHJlbmRlcmVyIGhlaWdodFxuICAgICAqIEByZXR1cm4ge251bWJlcn1cbiAgICAgKi9cbiAgICBnZXRIZWlnaHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hlaWdodDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IHZpZXdwb3J0IGFzcGVjdCxcbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAgICovXG4gICAgZ2V0Vmlld3BvcnRBc3BlY3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHZpZXdwb3J0ID0gdGhpcy52aWV3cG9ydDtcbiAgICAgICAgcmV0dXJuIHZpZXdwb3J0LndpZHRoIC8gdmlld3BvcnQuaGVpZ2h0O1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZXQgZGV2aWNlUGl4ZWxSYXRpb1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkZXZpY2VQaXhlbFJhdGlvXG4gICAgICovXG4gICAgc2V0RGV2aWNlUGl4ZWxSYXRpbzogZnVuY3Rpb24oZGV2aWNlUGl4ZWxSYXRpbykge1xuICAgICAgICB0aGlzLmRldmljZVBpeGVsUmF0aW8gPSBkZXZpY2VQaXhlbFJhdGlvO1xuICAgICAgICB0aGlzLnJlc2l6ZSh0aGlzLl93aWR0aCwgdGhpcy5faGVpZ2h0KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IGRldmljZVBpeGVsUmF0aW9cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZGV2aWNlUGl4ZWxSYXRpb1xuICAgICAqL1xuICAgIGdldERldmljZVBpeGVsUmF0aW86IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGV2aWNlUGl4ZWxSYXRpbztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IFdlYkdMIGV4dGVuc2lvblxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICogQHJldHVybiB7b2JqZWN0fVxuICAgICAqL1xuICAgIGdldEdMRXh0ZW5zaW9uOiBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2xpbmZvLmdldEV4dGVuc2lvbihuYW1lKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IFdlYkdMIHBhcmFtZXRlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICogQHJldHVybiB7Kn1cbiAgICAgKi9cbiAgICBnZXRHTFBhcmFtZXRlcjogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dsaW5mby5nZXRQYXJhbWV0ZXIobmFtZSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFNldCByZW5kZXJpbmcgdmlld3BvcnRcbiAgICAgKiBAcGFyYW0ge251bWJlcnxPYmplY3R9IHhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW3ldXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFt3aWR0aF1cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW2hlaWdodF1cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW2RldmljZVBpeGVsUmF0aW9dXG4gICAgICogICAgICAgIERlZmF1bHRseSB1c2UgdGhlIHJlbmRlcmVyZSBkZXZpY2VQaXhlbFJhdGlvXG4gICAgICogICAgICAgIEl0IG5lZWRzIHRvIGJlIDEgd2hlbiBzZXRWaWV3cG9ydCBpcyBjYWxsZWQgYnkgZnJhbWVCdWZmZXJcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogIHNldFZpZXdwb3J0KDAsMCx3aWR0aCxoZWlnaHQsMSlcbiAgICAgKiAgc2V0Vmlld3BvcnQoe1xuICAgICAqICAgICAgeDogMCxcbiAgICAgKiAgICAgIHk6IDAsXG4gICAgICogICAgICB3aWR0aDogd2lkdGgsXG4gICAgICogICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgKiAgICAgIGRldmljZVBpeGVsUmF0aW86IDFcbiAgICAgKiAgfSlcbiAgICAgKi9cbiAgICBzZXRWaWV3cG9ydDogZnVuY3Rpb24gKHgsIHksIHdpZHRoLCBoZWlnaHQsIGRwcikge1xuXG4gICAgICAgIGlmICh0eXBlb2YgeCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHZhciBvYmogPSB4O1xuXG4gICAgICAgICAgICB4ID0gb2JqLng7XG4gICAgICAgICAgICB5ID0gb2JqLnk7XG4gICAgICAgICAgICB3aWR0aCA9IG9iai53aWR0aDtcbiAgICAgICAgICAgIGhlaWdodCA9IG9iai5oZWlnaHQ7XG4gICAgICAgICAgICBkcHIgPSBvYmouZGV2aWNlUGl4ZWxSYXRpbztcbiAgICAgICAgfVxuICAgICAgICBkcHIgPSBkcHIgfHwgdGhpcy5kZXZpY2VQaXhlbFJhdGlvO1xuXG4gICAgICAgIHRoaXMuZ2wudmlld3BvcnQoXG4gICAgICAgICAgICB4ICogZHByLCB5ICogZHByLCB3aWR0aCAqIGRwciwgaGVpZ2h0ICogZHByXG4gICAgICAgICk7XG4gICAgICAgIC8vIFVzZSBhIGZyZXNoIG5ldyBvYmplY3QsIG5vdCB3cml0ZSBwcm9wZXJ0eS5cbiAgICAgICAgdGhpcy52aWV3cG9ydCA9IHtcbiAgICAgICAgICAgIHg6IHgsXG4gICAgICAgICAgICB5OiB5LFxuICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgICAgICBkZXZpY2VQaXhlbFJhdGlvOiBkcHJcbiAgICAgICAgfTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUHVzaCBjdXJyZW50IHZpZXdwb3J0IGludG8gYSBzdGFja1xuICAgICAqL1xuICAgIHNhdmVWaWV3cG9ydDogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl92aWV3cG9ydFN0YWNrLnB1c2godGhpcy52aWV3cG9ydCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFBvcCB2aWV3cG9ydCBmcm9tIHN0YWNrLCByZXN0b3JlIGluIHRoZSByZW5kZXJlclxuICAgICAqL1xuICAgIHJlc3RvcmVWaWV3cG9ydDogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fdmlld3BvcnRTdGFjay5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnNldFZpZXdwb3J0KHRoaXMuX3ZpZXdwb3J0U3RhY2sucG9wKCkpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFB1c2ggY3VycmVudCBjbGVhciBpbnRvIGEgc3RhY2tcbiAgICAgKi9cbiAgICBzYXZlQ2xlYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fY2xlYXJTdGFjay5wdXNoKHtcbiAgICAgICAgICAgIGNsZWFyQml0OiB0aGlzLmNsZWFyQml0LFxuICAgICAgICAgICAgY2xlYXJDb2xvcjogdGhpcy5jbGVhckNvbG9yXG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBQb3AgY2xlYXIgZnJvbSBzdGFjaywgcmVzdG9yZSBpbiB0aGUgcmVuZGVyZXJcbiAgICAgKi9cbiAgICByZXN0b3JlQ2xlYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2NsZWFyU3RhY2subGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdmFyIG9wdCA9IHRoaXMuX2NsZWFyU3RhY2sucG9wKCk7XG4gICAgICAgICAgICB0aGlzLmNsZWFyQ29sb3IgPSBvcHQuY2xlYXJDb2xvcjtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJCaXQgPSBvcHQuY2xlYXJCaXQ7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYmluZFNjZW5lUmVuZGVyaW5nOiBmdW5jdGlvbiAoc2NlbmUpIHtcbiAgICAgICAgdGhpcy5fc2NlbmVSZW5kZXJpbmcgPSBzY2VuZTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUmVuZGVyIHRoZSBzY2VuZSBpbiBjYW1lcmEgdG8gdGhlIHNjcmVlbiBvciBiaW5kZWQgb2ZmbGluZSBmcmFtZWJ1ZmZlclxuICAgICAqIEBwYXJhbSAge2NsYXkuU2NlbmV9ICAgICAgIHNjZW5lXG4gICAgICogQHBhcmFtICB7Y2xheS5DYW1lcmF9ICAgICAgY2FtZXJhXG4gICAgICogQHBhcmFtICB7Ym9vbGVhbn0gICAgIFtub3RVcGRhdGVTY2VuZV0gSWYgbm90IGNhbGwgdGhlIHNjZW5lLnVwZGF0ZSBtZXRob2RzIGluIHRoZSByZW5kZXJpbmcsIGRlZmF1bHQgdHJ1ZVxuICAgICAqIEBwYXJhbSAge2Jvb2xlYW59ICAgICBbcHJlWl0gICAgICAgICAgIElmIHVzZSBwcmVaIG9wdGltaXphdGlvbiwgZGVmYXVsdCBmYWxzZVxuICAgICAqIEByZXR1cm4ge0lSZW5kZXJJbmZvfVxuICAgICAqL1xuICAgIHJlbmRlcjogZnVuY3Rpb24oc2NlbmUsIGNhbWVyYSwgbm90VXBkYXRlU2NlbmUsIHByZVopIHtcbiAgICAgICAgdmFyIF9nbCA9IHRoaXMuZ2w7XG5cbiAgICAgICAgdmFyIGNsZWFyQ29sb3IgPSB0aGlzLmNsZWFyQ29sb3I7XG5cbiAgICAgICAgaWYgKHRoaXMuY2xlYXJCaXQpIHtcblxuICAgICAgICAgICAgLy8gTXVzdCBzZXQgZGVwdGggYW5kIGNvbG9yIG1hc2sgdHJ1ZSBiZWZvcmUgY2xlYXJcbiAgICAgICAgICAgIF9nbC5jb2xvck1hc2sodHJ1ZSwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgICAgICBfZ2wuZGVwdGhNYXNrKHRydWUpO1xuICAgICAgICAgICAgdmFyIHZpZXdwb3J0ID0gdGhpcy52aWV3cG9ydDtcbiAgICAgICAgICAgIHZhciBuZWVkc1NjaXNzb3IgPSBmYWxzZTtcbiAgICAgICAgICAgIHZhciB2aWV3cG9ydERwciA9IHZpZXdwb3J0LmRldmljZVBpeGVsUmF0aW87XG4gICAgICAgICAgICBpZiAodmlld3BvcnQud2lkdGggIT09IHRoaXMuX3dpZHRoIHx8IHZpZXdwb3J0LmhlaWdodCAhPT0gdGhpcy5faGVpZ2h0XG4gICAgICAgICAgICAgICAgfHwgKHZpZXdwb3J0RHByICYmIHZpZXdwb3J0RHByICE9PSB0aGlzLmRldmljZVBpeGVsUmF0aW8pXG4gICAgICAgICAgICAgICAgfHwgdmlld3BvcnQueCB8fCB2aWV3cG9ydC55XG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBuZWVkc1NjaXNzb3IgPSB0cnVlO1xuICAgICAgICAgICAgICAgIC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTE1NDQ2MDgvaG93LXRvLWNsZWFyLWEtcmVjdGFuZ2xlLWFyZWEtaW4td2ViZ2xcbiAgICAgICAgICAgICAgICAvLyBPbmx5IGNsZWFyIHRoZSB2aWV3cG9ydFxuICAgICAgICAgICAgICAgIF9nbC5lbmFibGUoX2dsLlNDSVNTT1JfVEVTVCk7XG4gICAgICAgICAgICAgICAgX2dsLnNjaXNzb3Iodmlld3BvcnQueCAqIHZpZXdwb3J0RHByLCB2aWV3cG9ydC55ICogdmlld3BvcnREcHIsIHZpZXdwb3J0LndpZHRoICogdmlld3BvcnREcHIsIHZpZXdwb3J0LmhlaWdodCAqIHZpZXdwb3J0RHByKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9nbC5jbGVhckNvbG9yKGNsZWFyQ29sb3JbMF0sIGNsZWFyQ29sb3JbMV0sIGNsZWFyQ29sb3JbMl0sIGNsZWFyQ29sb3JbM10pO1xuICAgICAgICAgICAgX2dsLmNsZWFyKHRoaXMuY2xlYXJCaXQpO1xuICAgICAgICAgICAgaWYgKG5lZWRzU2Npc3Nvcikge1xuICAgICAgICAgICAgICAgIF9nbC5kaXNhYmxlKF9nbC5TQ0lTU09SX1RFU1QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWYgdGhlIHNjZW5lIGhhdmUgYmVlbiB1cGRhdGVkIGluIHRoZSBwcmVwYXNzIGxpa2Ugc2hhZG93IG1hcFxuICAgICAgICAvLyBUaGVyZSBpcyBubyBuZWVkIHRvIHVwZGF0ZSBpdCBhZ2FpblxuICAgICAgICBpZiAoIW5vdFVwZGF0ZVNjZW5lKSB7XG4gICAgICAgICAgICBzY2VuZS51cGRhdGUoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHNjZW5lLnVwZGF0ZUxpZ2h0cygpO1xuXG4gICAgICAgIGNhbWVyYSA9IGNhbWVyYSB8fCBzY2VuZS5nZXRNYWluQ2FtZXJhKCk7XG4gICAgICAgIGlmICghY2FtZXJhKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdDYW5cXCd0IGZpbmQgY2FtZXJhIGluIHRoZSBzY2VuZS4nKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjYW1lcmEudXBkYXRlKCk7XG4gICAgICAgIHZhciByZW5kZXJMaXN0ID0gc2NlbmUudXBkYXRlUmVuZGVyTGlzdChjYW1lcmEsIHRydWUpO1xuXG4gICAgICAgIHRoaXMuX3NjZW5lUmVuZGVyaW5nID0gc2NlbmU7XG5cbiAgICAgICAgdmFyIG9wYXF1ZUxpc3QgPSByZW5kZXJMaXN0Lm9wYXF1ZTtcbiAgICAgICAgdmFyIHRyYW5zcGFyZW50TGlzdCA9IHJlbmRlckxpc3QudHJhbnNwYXJlbnQ7XG4gICAgICAgIHZhciBzY2VuZU1hdGVyaWFsID0gc2NlbmUubWF0ZXJpYWw7XG5cbiAgICAgICAgc2NlbmUudHJpZ2dlcignYmVmb3JlcmVuZGVyJywgdGhpcywgc2NlbmUsIGNhbWVyYSwgcmVuZGVyTGlzdCk7XG5cbiAgICAgICAgLy8gUmVuZGVyIHByZSB6XG4gICAgICAgIGlmIChwcmVaKSB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlclByZVoob3BhcXVlTGlzdCwgc2NlbmUsIGNhbWVyYSk7XG4gICAgICAgICAgICBfZ2wuZGVwdGhGdW5jKF9nbC5MRVFVQUwpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX2dsLmRlcHRoRnVuYyhfZ2wuTEVTUyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBVcGRhdGUgdGhlIGRlcHRoIG9mIHRyYW5zcGFyZW50IGxpc3QuXG4gICAgICAgIHZhciB3b3JsZFZpZXdNYXQgPSBtYXQ0Q3JlYXRlKCk7XG4gICAgICAgIHZhciBwb3NWaWV3U3BhY2UgPSB2ZWMzLmNyZWF0ZSgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRyYW5zcGFyZW50TGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHJlbmRlcmFibGUgPSB0cmFuc3BhcmVudExpc3RbaV07XG4gICAgICAgICAgICBtYXQ0Lm11bHRpcGx5QWZmaW5lKHdvcmxkVmlld01hdCwgY2FtZXJhLnZpZXdNYXRyaXguYXJyYXksIHJlbmRlcmFibGUud29ybGRUcmFuc2Zvcm0uYXJyYXkpO1xuICAgICAgICAgICAgdmVjMy50cmFuc2Zvcm1NYXQ0KHBvc1ZpZXdTcGFjZSwgcmVuZGVyYWJsZS5wb3NpdGlvbi5hcnJheSwgd29ybGRWaWV3TWF0KTtcbiAgICAgICAgICAgIHJlbmRlcmFibGUuX19kZXB0aCA9IHBvc1ZpZXdTcGFjZVsyXTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlbmRlciBvcGFxdWUgbGlzdFxuICAgICAgICB0aGlzLnJlbmRlclBhc3Mob3BhcXVlTGlzdCwgY2FtZXJhLCB7XG4gICAgICAgICAgICBnZXRNYXRlcmlhbDogZnVuY3Rpb24gKHJlbmRlcmFibGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2NlbmVNYXRlcmlhbCB8fCByZW5kZXJhYmxlLm1hdGVyaWFsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNvcnRDb21wYXJlOiB0aGlzLm9wYXF1ZVNvcnRDb21wYXJlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMucmVuZGVyUGFzcyh0cmFuc3BhcmVudExpc3QsIGNhbWVyYSwge1xuICAgICAgICAgICAgZ2V0TWF0ZXJpYWw6IGZ1bmN0aW9uIChyZW5kZXJhYmxlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNjZW5lTWF0ZXJpYWwgfHwgcmVuZGVyYWJsZS5tYXRlcmlhbDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzb3J0Q29tcGFyZTogdGhpcy50cmFuc3BhcmVudFNvcnRDb21wYXJlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNjZW5lLnRyaWdnZXIoJ2FmdGVycmVuZGVyJywgdGhpcywgc2NlbmUsIGNhbWVyYSwgcmVuZGVyTGlzdCk7XG5cbiAgICAgICAgLy8gQ2xlYW51cFxuICAgICAgICB0aGlzLl9zY2VuZVJlbmRlcmluZyA9IG51bGw7XG4gICAgfSxcblxuICAgIGdldFByb2dyYW06IGZ1bmN0aW9uIChyZW5kZXJhYmxlLCByZW5kZXJNYXRlcmlhbCwgc2NlbmUpIHtcbiAgICAgICAgcmVuZGVyTWF0ZXJpYWwgPSByZW5kZXJNYXRlcmlhbCB8fCByZW5kZXJhYmxlLm1hdGVyaWFsO1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvZ3JhbU1nci5nZXRQcm9ncmFtKHJlbmRlcmFibGUsIHJlbmRlck1hdGVyaWFsLCBzY2VuZSk7XG4gICAgfSxcblxuICAgIHZhbGlkYXRlUHJvZ3JhbTogZnVuY3Rpb24gKHByb2dyYW0pIHtcbiAgICAgICAgaWYgKHByb2dyYW0uX19lcnJvcikge1xuICAgICAgICAgICAgdmFyIGVycm9yTXNnID0gcHJvZ3JhbS5fX2Vycm9yO1xuICAgICAgICAgICAgaWYgKGVycm9yU2hhZGVyW3Byb2dyYW0uX191aWRfX10pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlcnJvclNoYWRlcltwcm9ncmFtLl9fdWlkX19dID0gdHJ1ZTtcblxuICAgICAgICAgICAgaWYgKHRoaXMudGhyb3dFcnJvcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1zZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ2Vycm9yJywgZXJyb3JNc2cpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH0sXG5cbiAgICB1cGRhdGVQcm9ncmFtczogZnVuY3Rpb24gKGxpc3QsIHNjZW5lLCBwYXNzQ29uZmlnKSB7XG4gICAgICAgIHZhciBnZXRNYXRlcmlhbCA9IChwYXNzQ29uZmlnICYmIHBhc3NDb25maWcuZ2V0TWF0ZXJpYWwpIHx8IGRlZmF1bHRHZXRNYXRlcmlhbDtcbiAgICAgICAgc2NlbmUgPSBzY2VuZSB8fCBudWxsO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciByZW5kZXJhYmxlID0gbGlzdFtpXTtcbiAgICAgICAgICAgIHZhciByZW5kZXJNYXRlcmlhbCA9IGdldE1hdGVyaWFsLmNhbGwodGhpcywgcmVuZGVyYWJsZSk7XG4gICAgICAgICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgICAgICAgICB2YXIgcHJldlJlbmRlcmFibGUgPSBsaXN0W2kgLSAxXTtcbiAgICAgICAgICAgICAgICB2YXIgcHJldkpvaW50c0xlbiA9IHByZXZSZW5kZXJhYmxlLmpvaW50cyA/IHByZXZSZW5kZXJhYmxlLmpvaW50cy5sZW5ndGggOiAwO1xuICAgICAgICAgICAgICAgIHZhciBqb2ludHNMZW4gPSByZW5kZXJhYmxlLmpvaW50cyA/IHJlbmRlcmFibGUuam9pbnRzLmxlbmd0aCA6IDA7XG4gICAgICAgICAgICAgICAgLy8gS2VlcCBwcm9ncmFtIG5vdCBjaGFuZ2UgaWYgam9pbnRzLCBtYXRlcmlhbCwgbGlnaHRHcm91cCBhcmUgc2FtZSBvZiB0d28gcmVuZGVyYWJsZXMuXG4gICAgICAgICAgICAgICAgaWYgKGpvaW50c0xlbiA9PT0gcHJldkpvaW50c0xlblxuICAgICAgICAgICAgICAgICAgICAmJiByZW5kZXJhYmxlLm1hdGVyaWFsID09PSBwcmV2UmVuZGVyYWJsZS5tYXRlcmlhbFxuICAgICAgICAgICAgICAgICAgICAmJiByZW5kZXJhYmxlLmxpZ2h0R3JvdXAgPT09IHByZXZSZW5kZXJhYmxlLmxpZ2h0R3JvdXBcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyYWJsZS5fX3Byb2dyYW0gPSBwcmV2UmVuZGVyYWJsZS5fX3Byb2dyYW07XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHByb2dyYW0gPSB0aGlzLl9wcm9ncmFtTWdyLmdldFByb2dyYW0ocmVuZGVyYWJsZSwgcmVuZGVyTWF0ZXJpYWwsIHNjZW5lKTtcblxuICAgICAgICAgICAgdGhpcy52YWxpZGF0ZVByb2dyYW0ocHJvZ3JhbSk7XG5cbiAgICAgICAgICAgIHJlbmRlcmFibGUuX19wcm9ncmFtID0gcHJvZ3JhbTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBSZW5kZXIgYSBzaW5nbGUgcmVuZGVyYWJsZSBsaXN0IGluIGNhbWVyYSBpbiBzZXF1ZW5jZVxuICAgICAqIEBwYXJhbSB7Y2xheS5SZW5kZXJhYmxlW119IGxpc3QgTGlzdCBvZiBhbGwgcmVuZGVyYWJsZXMuXG4gICAgICogQHBhcmFtIHtjbGF5LkNhbWVyYX0gW2NhbWVyYV0gQ2FtZXJhIHByb3ZpZGUgdmlldyBtYXRyaXggYW5kIHBvcmplY3Rpb24gbWF0cml4LiBJdCBjYW4gYmUgbnVsbC5cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gW3Bhc3NDb25maWddXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW3Bhc3NDb25maWcuZ2V0TWF0ZXJpYWxdIEdldCByZW5kZXJhYmxlIG1hdGVyaWFsLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtwYXNzQ29uZmlnLmdldFVuaWZvcm1dIEdldCBtYXRlcmlhbCB1bmlmb3JtIHZhbHVlLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtwYXNzQ29uZmlnLmlzTWF0ZXJpYWxDaGFuZ2VkXSBJZiBtYXRlcmlhbCBjaGFuZ2VkLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtwYXNzQ29uZmlnLmJlZm9yZVJlbmRlcl0gQmVmb3JlIHJlbmRlciBlYWNoIHJlbmRlcmFibGUuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW3Bhc3NDb25maWcuYWZ0ZXJSZW5kZXJdIEFmdGVyIHJlbmRlciBlYWNoIHJlbmRlcmFibGVcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcGFzc0NvbmZpZy5pZlJlbmRlcl0gSWYgcmVuZGVyIHRoZSByZW5kZXJhYmxlLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtwYXNzQ29uZmlnLnNvcnRDb21wYXJlXSBTb3J0IGNvbXBhcmUgZnVuY3Rpb24uXG4gICAgICogQHJldHVybiB7SVJlbmRlckluZm99XG4gICAgICovXG4gICAgcmVuZGVyUGFzczogZnVuY3Rpb24obGlzdCwgY2FtZXJhLCBwYXNzQ29uZmlnKSB7XG4gICAgICAgIHRoaXMudHJpZ2dlcignYmVmb3JlcmVuZGVycGFzcycsIHRoaXMsIGxpc3QsIGNhbWVyYSwgcGFzc0NvbmZpZyk7XG5cbiAgICAgICAgcGFzc0NvbmZpZyA9IHBhc3NDb25maWcgfHwge307XG4gICAgICAgIHBhc3NDb25maWcuZ2V0TWF0ZXJpYWwgPSBwYXNzQ29uZmlnLmdldE1hdGVyaWFsIHx8IGRlZmF1bHRHZXRNYXRlcmlhbDtcbiAgICAgICAgcGFzc0NvbmZpZy5nZXRVbmlmb3JtID0gcGFzc0NvbmZpZy5nZXRVbmlmb3JtIHx8IGRlZmF1bHRHZXRVbmlmb3JtO1xuICAgICAgICAvLyBQRU5ESU5HIEJldHRlciBzb2x1dGlvbj9cbiAgICAgICAgcGFzc0NvbmZpZy5pc01hdGVyaWFsQ2hhbmdlZCA9IHBhc3NDb25maWcuaXNNYXRlcmlhbENoYW5nZWQgfHwgZGVmYXVsdElzTWF0ZXJpYWxDaGFuZ2VkO1xuICAgICAgICBwYXNzQ29uZmlnLmJlZm9yZVJlbmRlciA9IHBhc3NDb25maWcuYmVmb3JlUmVuZGVyIHx8IG5vb3A7XG4gICAgICAgIHBhc3NDb25maWcuYWZ0ZXJSZW5kZXIgPSBwYXNzQ29uZmlnLmFmdGVyUmVuZGVyIHx8IG5vb3A7XG5cbiAgICAgICAgdmFyIGlmUmVuZGVyT2JqZWN0ID0gcGFzc0NvbmZpZy5pZlJlbmRlciB8fCBkZWZhdWx0SWZSZW5kZXI7XG5cbiAgICAgICAgdGhpcy51cGRhdGVQcm9ncmFtcyhsaXN0LCB0aGlzLl9zY2VuZVJlbmRlcmluZywgcGFzc0NvbmZpZyk7XG4gICAgICAgIGlmIChwYXNzQ29uZmlnLnNvcnRDb21wYXJlKSB7XG4gICAgICAgICAgICBsaXN0LnNvcnQocGFzc0NvbmZpZy5zb3J0Q29tcGFyZSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTb21lIGNvbW1vbiBidWlsdGluIHVuaWZvcm1zXG4gICAgICAgIHZhciB2aWV3cG9ydCA9IHRoaXMudmlld3BvcnQ7XG4gICAgICAgIHZhciB2RHByID0gdmlld3BvcnQuZGV2aWNlUGl4ZWxSYXRpbztcbiAgICAgICAgdmFyIHZpZXdwb3J0VW5pZm9ybSA9IFtcbiAgICAgICAgICAgIHZpZXdwb3J0LnggKiB2RHByLCB2aWV3cG9ydC55ICogdkRwcixcbiAgICAgICAgICAgIHZpZXdwb3J0LndpZHRoICogdkRwciwgdmlld3BvcnQuaGVpZ2h0ICogdkRwclxuICAgICAgICBdO1xuICAgICAgICB2YXIgd2luZG93RHByID0gdGhpcy5kZXZpY2VQaXhlbFJhdGlvO1xuICAgICAgICB2YXIgd2luZG93U2l6ZVVuaWZvcm0gPSB0aGlzLl9fY3VycmVudEZyYW1lQnVmZmVyXG4gICAgICAgICAgICA/IFt0aGlzLl9fY3VycmVudEZyYW1lQnVmZmVyLmdldFRleHR1cmVXaWR0aCgpLCB0aGlzLl9fY3VycmVudEZyYW1lQnVmZmVyLmdldFRleHR1cmVIZWlnaHQoKV1cbiAgICAgICAgICAgIDogW3RoaXMuX3dpZHRoICogd2luZG93RHByLCB0aGlzLl9oZWlnaHQgKiB3aW5kb3dEcHJdO1xuICAgICAgICAvLyBERVBSRUNBVEVEXG4gICAgICAgIHZhciB2aWV3cG9ydFNpemVVbmlmb3JtID0gW1xuICAgICAgICAgICAgdmlld3BvcnRVbmlmb3JtWzJdLCB2aWV3cG9ydFVuaWZvcm1bM11cbiAgICAgICAgXTtcbiAgICAgICAgdmFyIHRpbWUgPSBEYXRlLm5vdygpO1xuXG4gICAgICAgIC8vIENhbGN1bGF0ZSB2aWV3IGFuZCBwcm9qZWN0aW9uIG1hdHJpeFxuICAgICAgICBpZiAoY2FtZXJhKSB7XG4gICAgICAgICAgICBtYXQ0LmNvcHkobWF0cmljZXMuVklFVywgY2FtZXJhLnZpZXdNYXRyaXguYXJyYXkpO1xuICAgICAgICAgICAgbWF0NC5jb3B5KG1hdHJpY2VzLlBST0pFQ1RJT04sIGNhbWVyYS5wcm9qZWN0aW9uTWF0cml4LmFycmF5KTtcbiAgICAgICAgICAgIG1hdDQuY29weShtYXRyaWNlcy5WSUVXSU5WRVJTRSwgY2FtZXJhLndvcmxkVHJhbnNmb3JtLmFycmF5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1hdDQuaWRlbnRpdHkobWF0cmljZXMuVklFVyk7XG4gICAgICAgICAgICBtYXQ0LmlkZW50aXR5KG1hdHJpY2VzLlBST0pFQ1RJT04pO1xuICAgICAgICAgICAgbWF0NC5pZGVudGl0eShtYXRyaWNlcy5WSUVXSU5WRVJTRSk7XG4gICAgICAgIH1cbiAgICAgICAgbWF0NC5tdWx0aXBseShtYXRyaWNlcy5WSUVXUFJPSkVDVElPTiwgbWF0cmljZXMuUFJPSkVDVElPTiwgbWF0cmljZXMuVklFVyk7XG4gICAgICAgIG1hdDQuaW52ZXJ0KG1hdHJpY2VzLlBST0pFQ1RJT05JTlZFUlNFLCBtYXRyaWNlcy5QUk9KRUNUSU9OKTtcbiAgICAgICAgbWF0NC5pbnZlcnQobWF0cmljZXMuVklFV1BST0pFQ1RJT05JTlZFUlNFLCBtYXRyaWNlcy5WSUVXUFJPSkVDVElPTik7XG5cbiAgICAgICAgdmFyIF9nbCA9IHRoaXMuZ2w7XG4gICAgICAgIHZhciBzY2VuZSA9IHRoaXMuX3NjZW5lUmVuZGVyaW5nO1xuXG4gICAgICAgIHZhciBwcmV2TWF0ZXJpYWw7XG4gICAgICAgIHZhciBwcmV2UHJvZ3JhbTtcbiAgICAgICAgdmFyIHByZXZSZW5kZXJhYmxlO1xuXG4gICAgICAgIC8vIFN0YXR1c1xuICAgICAgICB2YXIgZGVwdGhUZXN0LCBkZXB0aE1hc2s7XG4gICAgICAgIHZhciBjdWxsaW5nLCBjdWxsRmFjZSwgZnJvbnRGYWNlO1xuICAgICAgICB2YXIgdHJhbnNwYXJlbnQ7XG4gICAgICAgIHZhciBkcmF3SUQ7XG4gICAgICAgIHZhciBjdXJyZW50VkFPO1xuICAgICAgICB2YXIgbWF0ZXJpYWxUYWtlc1RleHR1cmVTbG90O1xuXG4gICAgICAgIC8vIHZhciB2YW9FeHQgPSB0aGlzLmdldEdMRXh0ZW5zaW9uKCdPRVNfdmVydGV4X2FycmF5X29iamVjdCcpO1xuICAgICAgICAvLyBub3QgdXNlIHZhb0V4dCwgc29tZSBwbGF0Zm9ybXMgbWF5IG1lc3MgaXQgdXAuXG4gICAgICAgIHZhciB2YW9FeHQgPSBudWxsO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHJlbmRlcmFibGUgPSBsaXN0W2ldO1xuICAgICAgICAgICAgdmFyIGlzU2NlbmVOb2RlID0gcmVuZGVyYWJsZS53b3JsZFRyYW5zZm9ybSAhPSBudWxsO1xuICAgICAgICAgICAgdmFyIHdvcmxkTTtcblxuICAgICAgICAgICAgaWYgKCFpZlJlbmRlck9iamVjdChyZW5kZXJhYmxlKSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBTa2lubmVkIG1lc2ggd2lsbCB0cmFuc2Zvcm1lZCB0byBqb2ludCBzcGFjZS4gSWdub3JlIHRoZSBtZXNoIHRyYW5zZm9ybVxuICAgICAgICAgICAgaWYgKGlzU2NlbmVOb2RlKSB7XG4gICAgICAgICAgICAgICAgd29ybGRNID0gKHJlbmRlcmFibGUuaXNTa2lubmVkTWVzaCAmJiByZW5kZXJhYmxlLmlzU2tpbm5lZE1lc2goKSlcbiAgICAgICAgICAgICAgICAgICAgLy8gVE9ET1xuICAgICAgICAgICAgICAgICAgICA/IChyZW5kZXJhYmxlLm9mZnNldE1hdHJpeCA/IHJlbmRlcmFibGUub2Zmc2V0TWF0cml4LmFycmF5IDptYXRyaWNlcy5JREVOVElUWSlcbiAgICAgICAgICAgICAgICAgICAgOiByZW5kZXJhYmxlLndvcmxkVHJhbnNmb3JtLmFycmF5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGdlb21ldHJ5ID0gcmVuZGVyYWJsZS5nZW9tZXRyeTtcbiAgICAgICAgICAgIHZhciBtYXRlcmlhbCA9IHBhc3NDb25maWcuZ2V0TWF0ZXJpYWwuY2FsbCh0aGlzLCByZW5kZXJhYmxlKTtcblxuICAgICAgICAgICAgdmFyIHByb2dyYW0gPSByZW5kZXJhYmxlLl9fcHJvZ3JhbTtcbiAgICAgICAgICAgIHZhciBzaGFkZXIgPSBtYXRlcmlhbC5zaGFkZXI7XG5cbiAgICAgICAgICAgIHZhciBjdXJyZW50RHJhd0lEID0gZ2VvbWV0cnkuX191aWRfXyArICctJyArIHByb2dyYW0uX191aWRfXztcbiAgICAgICAgICAgIHZhciBkcmF3SURDaGFuZ2VkID0gY3VycmVudERyYXdJRCAhPT0gZHJhd0lEO1xuICAgICAgICAgICAgZHJhd0lEID0gY3VycmVudERyYXdJRDtcbiAgICAgICAgICAgIGlmIChkcmF3SURDaGFuZ2VkICYmIHZhb0V4dCkge1xuICAgICAgICAgICAgICAgIC8vIFRPRE8gU2VlbXMgbmVlZCB0byBiZSBib3VuZCB0byBudWxsIGltbWVkaWF0ZWx5IChvciBiZWZvcmUgYmluZCBhbm90aGVyIHByb2dyYW0/KSBpZiB2YW8gaXMgY2hhbmdlZFxuICAgICAgICAgICAgICAgIHZhb0V4dC5iaW5kVmVydGV4QXJyYXlPRVMobnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNTY2VuZU5vZGUpIHtcbiAgICAgICAgICAgICAgICBtYXQ0LmNvcHkobWF0cmljZXMuV09STEQsIHdvcmxkTSk7XG4gICAgICAgICAgICAgICAgbWF0NC5tdWx0aXBseShtYXRyaWNlcy5XT1JMRFZJRVdQUk9KRUNUSU9OLCBtYXRyaWNlcy5WSUVXUFJPSkVDVElPTiwgd29ybGRNKTtcbiAgICAgICAgICAgICAgICBtYXQ0Lm11bHRpcGx5QWZmaW5lKG1hdHJpY2VzLldPUkxEVklFVywgbWF0cmljZXMuVklFVywgd29ybGRNKTtcbiAgICAgICAgICAgICAgICBpZiAoc2hhZGVyLm1hdHJpeFNlbWFudGljcy5XT1JMRElOVkVSU0UgfHxcbiAgICAgICAgICAgICAgICAgICAgc2hhZGVyLm1hdHJpeFNlbWFudGljcy5XT1JMRElOVkVSU0VUUkFOU1BPU0UpIHtcbiAgICAgICAgICAgICAgICAgICAgbWF0NC5pbnZlcnQobWF0cmljZXMuV09STERJTlZFUlNFLCB3b3JsZE0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2hhZGVyLm1hdHJpeFNlbWFudGljcy5XT1JMRFZJRVdJTlZFUlNFIHx8XG4gICAgICAgICAgICAgICAgICAgIHNoYWRlci5tYXRyaXhTZW1hbnRpY3MuV09STERWSUVXSU5WRVJTRVRSQU5TUE9TRSkge1xuICAgICAgICAgICAgICAgICAgICBtYXQ0LmludmVydChtYXRyaWNlcy5XT1JMRFZJRVdJTlZFUlNFLCBtYXRyaWNlcy5XT1JMRFZJRVcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2hhZGVyLm1hdHJpeFNlbWFudGljcy5XT1JMRFZJRVdQUk9KRUNUSU9OSU5WRVJTRSB8fFxuICAgICAgICAgICAgICAgICAgICBzaGFkZXIubWF0cml4U2VtYW50aWNzLldPUkxEVklFV1BST0pFQ1RJT05JTlZFUlNFVFJBTlNQT1NFKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hdDQuaW52ZXJ0KG1hdHJpY2VzLldPUkxEVklFV1BST0pFQ1RJT05JTlZFUlNFLCBtYXRyaWNlcy5XT1JMRFZJRVdQUk9KRUNUSU9OKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEJlZm9yZSByZW5kZXIgaG9va1xuICAgICAgICAgICAgcmVuZGVyYWJsZS5iZWZvcmVSZW5kZXIgJiYgcmVuZGVyYWJsZS5iZWZvcmVSZW5kZXIodGhpcyk7XG4gICAgICAgICAgICBwYXNzQ29uZmlnLmJlZm9yZVJlbmRlci5jYWxsKHRoaXMsIHJlbmRlcmFibGUsIG1hdGVyaWFsLCBwcmV2TWF0ZXJpYWwpO1xuXG4gICAgICAgICAgICB2YXIgcHJvZ3JhbUNoYW5nZWQgPSBwcm9ncmFtICE9PSBwcmV2UHJvZ3JhbTtcbiAgICAgICAgICAgIGlmIChwcm9ncmFtQ2hhbmdlZCkge1xuICAgICAgICAgICAgICAgIC8vIFNldCBsaWdodHMgbnVtYmVyXG4gICAgICAgICAgICAgICAgcHJvZ3JhbS5iaW5kKHRoaXMpO1xuICAgICAgICAgICAgICAgIC8vIFNldCBzb21lIGNvbW1vbiB1bmlmb3Jtc1xuICAgICAgICAgICAgICAgIHByb2dyYW0uc2V0VW5pZm9ybU9mU2VtYW50aWMoX2dsLCAnVklFV1BPUlQnLCB2aWV3cG9ydFVuaWZvcm0pO1xuICAgICAgICAgICAgICAgIHByb2dyYW0uc2V0VW5pZm9ybU9mU2VtYW50aWMoX2dsLCAnV0lORE9XX1NJWkUnLCB3aW5kb3dTaXplVW5pZm9ybSk7XG4gICAgICAgICAgICAgICAgaWYgKGNhbWVyYSkge1xuICAgICAgICAgICAgICAgICAgICBwcm9ncmFtLnNldFVuaWZvcm1PZlNlbWFudGljKF9nbCwgJ05FQVInLCBjYW1lcmEubmVhcik7XG4gICAgICAgICAgICAgICAgICAgIHByb2dyYW0uc2V0VW5pZm9ybU9mU2VtYW50aWMoX2dsLCAnRkFSJywgY2FtZXJhLmZhcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByb2dyYW0uc2V0VW5pZm9ybU9mU2VtYW50aWMoX2dsLCAnREVWSUNFUElYRUxSQVRJTycsIHZEcHIpO1xuICAgICAgICAgICAgICAgIHByb2dyYW0uc2V0VW5pZm9ybU9mU2VtYW50aWMoX2dsLCAnVElNRScsIHRpbWUpO1xuICAgICAgICAgICAgICAgIC8vIERFUFJFQ0FURURcbiAgICAgICAgICAgICAgICBwcm9ncmFtLnNldFVuaWZvcm1PZlNlbWFudGljKF9nbCwgJ1ZJRVdQT1JUX1NJWkUnLCB2aWV3cG9ydFNpemVVbmlmb3JtKTtcblxuICAgICAgICAgICAgICAgIC8vIFNldCBsaWdodHMgdW5pZm9ybXNcbiAgICAgICAgICAgICAgICAvLyBUT0RPIG5lZWRzIG9wdGltaXplZFxuICAgICAgICAgICAgICAgIGlmIChzY2VuZSkge1xuICAgICAgICAgICAgICAgICAgICBzY2VuZS5zZXRMaWdodFVuaWZvcm1zKHByb2dyYW0sIHJlbmRlcmFibGUubGlnaHRHcm91cCwgdGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcHJvZ3JhbSA9IHByZXZQcm9ncmFtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBQcm9ncmFtIGNoYW5nZXMgYWxzbyBuZWVkcyByZXNldCB0aGUgbWF0ZXJpYWxzLlxuICAgICAgICAgICAgaWYgKHByb2dyYW1DaGFuZ2VkIHx8IHBhc3NDb25maWcuaXNNYXRlcmlhbENoYW5nZWQoXG4gICAgICAgICAgICAgICAgcmVuZGVyYWJsZSwgcHJldlJlbmRlcmFibGUsIG1hdGVyaWFsLCBwcmV2TWF0ZXJpYWxcbiAgICAgICAgICAgICkpIHtcbiAgICAgICAgICAgICAgICBpZiAobWF0ZXJpYWwuZGVwdGhUZXN0ICE9PSBkZXB0aFRlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgbWF0ZXJpYWwuZGVwdGhUZXN0ID8gX2dsLmVuYWJsZShfZ2wuREVQVEhfVEVTVCkgOiBfZ2wuZGlzYWJsZShfZ2wuREVQVEhfVEVTVCk7XG4gICAgICAgICAgICAgICAgICAgIGRlcHRoVGVzdCA9IG1hdGVyaWFsLmRlcHRoVGVzdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG1hdGVyaWFsLmRlcHRoTWFzayAhPT0gZGVwdGhNYXNrKSB7XG4gICAgICAgICAgICAgICAgICAgIF9nbC5kZXB0aE1hc2sobWF0ZXJpYWwuZGVwdGhNYXNrKTtcbiAgICAgICAgICAgICAgICAgICAgZGVwdGhNYXNrID0gbWF0ZXJpYWwuZGVwdGhNYXNrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobWF0ZXJpYWwudHJhbnNwYXJlbnQgIT09IHRyYW5zcGFyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIG1hdGVyaWFsLnRyYW5zcGFyZW50ID8gX2dsLmVuYWJsZShfZ2wuQkxFTkQpIDogX2dsLmRpc2FibGUoX2dsLkJMRU5EKTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNwYXJlbnQgPSBtYXRlcmlhbC50cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gVE9ETyBjYWNoZSBibGVuZGluZ1xuICAgICAgICAgICAgICAgIGlmIChtYXRlcmlhbC50cmFuc3BhcmVudCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWF0ZXJpYWwuYmxlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdGVyaWFsLmJsZW5kKF9nbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBEZWZhdWx0IGJsZW5kIGZ1bmN0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICBfZ2wuYmxlbmRFcXVhdGlvblNlcGFyYXRlKF9nbC5GVU5DX0FERCwgX2dsLkZVTkNfQUREKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9nbC5ibGVuZEZ1bmNTZXBhcmF0ZShfZ2wuU1JDX0FMUEhBLCBfZ2wuT05FX01JTlVTX1NSQ19BTFBIQSwgX2dsLk9ORSwgX2dsLk9ORV9NSU5VU19TUkNfQUxQSEEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbWF0ZXJpYWxUYWtlc1RleHR1cmVTbG90ID0gdGhpcy5fYmluZE1hdGVyaWFsKFxuICAgICAgICAgICAgICAgICAgICByZW5kZXJhYmxlLCBtYXRlcmlhbCwgcHJvZ3JhbSxcbiAgICAgICAgICAgICAgICAgICAgcHJldlJlbmRlcmFibGUgfHwgbnVsbCwgcHJldk1hdGVyaWFsIHx8IG51bGwsIHByZXZQcm9ncmFtIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHBhc3NDb25maWcuZ2V0VW5pZm9ybVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgcHJldk1hdGVyaWFsID0gbWF0ZXJpYWw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBtYXRyaXhTZW1hbnRpY0tleXMgPSBzaGFkZXIubWF0cml4U2VtYW50aWNLZXlzO1xuXG4gICAgICAgICAgICBpZiAoaXNTY2VuZU5vZGUpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IG1hdHJpeFNlbWFudGljS2V5cy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VtYW50aWMgPSBtYXRyaXhTZW1hbnRpY0tleXNba107XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZW1hbnRpY0luZm8gPSBzaGFkZXIubWF0cml4U2VtYW50aWNzW3NlbWFudGljXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1hdHJpeCA9IG1hdHJpY2VzW3NlbWFudGljXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbWFudGljSW5mby5pc1RyYW5zcG9zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hdHJpeE5vVHJhbnNwb3NlID0gbWF0cmljZXNbc2VtYW50aWNJbmZvLnNlbWFudGljTm9UcmFuc3Bvc2VdO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWF0NC50cmFuc3Bvc2UobWF0cml4LCBtYXRyaXhOb1RyYW5zcG9zZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbS5zZXRVbmlmb3JtKF9nbCwgc2VtYW50aWNJbmZvLnR5cGUsIHNlbWFudGljSW5mby5zeW1ib2wsIG1hdHJpeCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocmVuZGVyYWJsZS5jdWxsRmFjZSAhPT0gY3VsbEZhY2UpIHtcbiAgICAgICAgICAgICAgICBjdWxsRmFjZSA9IHJlbmRlcmFibGUuY3VsbEZhY2U7XG4gICAgICAgICAgICAgICAgX2dsLmN1bGxGYWNlKGN1bGxGYWNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZW5kZXJhYmxlLmZyb250RmFjZSAhPT0gZnJvbnRGYWNlKSB7XG4gICAgICAgICAgICAgICAgZnJvbnRGYWNlID0gcmVuZGVyYWJsZS5mcm9udEZhY2U7XG4gICAgICAgICAgICAgICAgX2dsLmZyb250RmFjZShmcm9udEZhY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlbmRlcmFibGUuY3VsbGluZyAhPT0gY3VsbGluZykge1xuICAgICAgICAgICAgICAgIGN1bGxpbmcgPSByZW5kZXJhYmxlLmN1bGxpbmc7XG4gICAgICAgICAgICAgICAgY3VsbGluZyA/IF9nbC5lbmFibGUoX2dsLkNVTExfRkFDRSkgOiBfZ2wuZGlzYWJsZShfZ2wuQ1VMTF9GQUNFKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFRPRE8gTm90IHVwZGF0ZSBza2VsZXRvbiBpbiBlYWNoIHJlbmRlcmFibGUuXG4gICAgICAgICAgICB0aGlzLl91cGRhdGVTa2VsZXRvbihyZW5kZXJhYmxlLCBwcm9ncmFtLCBtYXRlcmlhbFRha2VzVGV4dHVyZVNsb3QpO1xuICAgICAgICAgICAgaWYgKGRyYXdJRENoYW5nZWQpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50VkFPID0gdGhpcy5fYmluZFZBTyh2YW9FeHQsIHNoYWRlciwgZ2VvbWV0cnksIHByb2dyYW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fcmVuZGVyT2JqZWN0KHJlbmRlcmFibGUsIGN1cnJlbnRWQU8sIHByb2dyYW0pO1xuXG4gICAgICAgICAgICAvLyBBZnRlciByZW5kZXIgaG9va1xuICAgICAgICAgICAgcGFzc0NvbmZpZy5hZnRlclJlbmRlcih0aGlzLCByZW5kZXJhYmxlKTtcbiAgICAgICAgICAgIHJlbmRlcmFibGUuYWZ0ZXJSZW5kZXIgJiYgcmVuZGVyYWJsZS5hZnRlclJlbmRlcih0aGlzKTtcblxuICAgICAgICAgICAgcHJldlByb2dyYW0gPSBwcm9ncmFtO1xuICAgICAgICAgICAgcHJldlJlbmRlcmFibGUgPSByZW5kZXJhYmxlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVE9ETyBTZWVtcyBuZWVkIHRvIGJlIGJvdW5kIHRvIG51bGwgaW1tZWRpYXRlbHkgaWYgdmFvIGlzIGNoYW5nZWQ/XG4gICAgICAgIGlmICh2YW9FeHQpIHtcbiAgICAgICAgICAgIHZhb0V4dC5iaW5kVmVydGV4QXJyYXlPRVMobnVsbCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnRyaWdnZXIoJ2FmdGVycmVuZGVycGFzcycsIHRoaXMsIGxpc3QsIGNhbWVyYSwgcGFzc0NvbmZpZyk7XG4gICAgfSxcblxuICAgIGdldE1heEpvaW50TnVtYmVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1heEpvaW50TnVtYmVyO1xuICAgIH0sXG5cbiAgICBfdXBkYXRlU2tlbGV0b246IGZ1bmN0aW9uIChvYmplY3QsIHByb2dyYW0sIHNsb3QpIHtcbiAgICAgICAgdmFyIF9nbCA9IHRoaXMuZ2w7XG4gICAgICAgIHZhciBza2VsZXRvbiA9IG9iamVjdC5za2VsZXRvbjtcbiAgICAgICAgLy8gU2V0IHBvc2UgbWF0cmljZXMgb2Ygc2tpbm5lZCBtZXNoXG4gICAgICAgIGlmIChza2VsZXRvbikge1xuICAgICAgICAgICAgLy8gVE9ETyBVcGRhdGUgYmVmb3JlIGN1bGxpbmcuXG4gICAgICAgICAgICBza2VsZXRvbi51cGRhdGUoKTtcbiAgICAgICAgICAgIGlmIChvYmplY3Quam9pbnRzLmxlbmd0aCA+IHRoaXMuZ2V0TWF4Sm9pbnROdW1iZXIoKSkge1xuICAgICAgICAgICAgICAgIHZhciBza2luTWF0cmljZXNUZXh0dXJlID0gc2tlbGV0b24uZ2V0U3ViU2tpbk1hdHJpY2VzVGV4dHVyZShvYmplY3QuX191aWRfXywgb2JqZWN0LmpvaW50cyk7XG4gICAgICAgICAgICAgICAgcHJvZ3JhbS51c2VUZXh0dXJlU2xvdCh0aGlzLCBza2luTWF0cmljZXNUZXh0dXJlLCBzbG90KTtcbiAgICAgICAgICAgICAgICBwcm9ncmFtLnNldFVuaWZvcm0oX2dsLCAnMWknLCAnc2tpbk1hdHJpY2VzVGV4dHVyZScsIHNsb3QpO1xuICAgICAgICAgICAgICAgIHByb2dyYW0uc2V0VW5pZm9ybShfZ2wsICcxZicsICdza2luTWF0cmljZXNUZXh0dXJlU2l6ZScsIHNraW5NYXRyaWNlc1RleHR1cmUud2lkdGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIHNraW5NYXRyaWNlc0FycmF5ID0gc2tlbGV0b24uZ2V0U3ViU2tpbk1hdHJpY2VzKG9iamVjdC5fX3VpZF9fLCBvYmplY3Quam9pbnRzKTtcbiAgICAgICAgICAgICAgICBwcm9ncmFtLnNldFVuaWZvcm1PZlNlbWFudGljKF9nbCwgJ1NLSU5fTUFUUklYJywgc2tpbk1hdHJpY2VzQXJyYXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIF9yZW5kZXJPYmplY3Q6IGZ1bmN0aW9uIChyZW5kZXJhYmxlLCB2YW8sIHByb2dyYW0pIHtcbiAgICAgICAgdmFyIF9nbCA9IHRoaXMuZ2w7XG4gICAgICAgIHZhciBnZW9tZXRyeSA9IHJlbmRlcmFibGUuZ2VvbWV0cnk7XG5cbiAgICAgICAgdmFyIGdsRHJhd01vZGUgPSByZW5kZXJhYmxlLm1vZGU7XG4gICAgICAgIGlmIChnbERyYXdNb2RlID09IG51bGwpIHtcbiAgICAgICAgICAgIGdsRHJhd01vZGUgPSAweDAwMDQ7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZXh0ID0gbnVsbDtcbiAgICAgICAgdmFyIGlzSW5zdGFuY2VkID0gcmVuZGVyYWJsZS5pc0luc3RhbmNlZE1lc2ggJiYgcmVuZGVyYWJsZS5pc0luc3RhbmNlZE1lc2goKTtcbiAgICAgICAgaWYgKGlzSW5zdGFuY2VkKSB7XG4gICAgICAgICAgICBleHQgPSB0aGlzLmdldEdMRXh0ZW5zaW9uKCdBTkdMRV9pbnN0YW5jZWRfYXJyYXlzJyk7XG4gICAgICAgICAgICBpZiAoIWV4dCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignRGV2aWNlIG5vdCBzdXBwb3J0IEFOR0xFX2luc3RhbmNlZF9hcnJheXMgZXh0ZW5zaW9uJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGluc3RhbmNlZEF0dHJMb2NhdGlvbnM7XG4gICAgICAgIGlmIChpc0luc3RhbmNlZCkge1xuICAgICAgICAgICAgaW5zdGFuY2VkQXR0ckxvY2F0aW9ucyA9IHRoaXMuX2JpbmRJbnN0YW5jZWRBdHRyaWJ1dGVzKHJlbmRlcmFibGUsIHByb2dyYW0sIGV4dCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFvLmluZGljZXNCdWZmZXIpIHtcbiAgICAgICAgICAgIHZhciB1aW50RXh0ID0gdGhpcy5nZXRHTEV4dGVuc2lvbignT0VTX2VsZW1lbnRfaW5kZXhfdWludCcpO1xuICAgICAgICAgICAgdmFyIHVzZVVpbnRFeHQgPSB1aW50RXh0ICYmIChnZW9tZXRyeS5pbmRpY2VzIGluc3RhbmNlb2YgVWludDMyQXJyYXkpO1xuICAgICAgICAgICAgdmFyIGluZGljZXNUeXBlID0gdXNlVWludEV4dCA/IF9nbC5VTlNJR05FRF9JTlQgOiBfZ2wuVU5TSUdORURfU0hPUlQ7XG5cbiAgICAgICAgICAgIGlmIChpc0luc3RhbmNlZCkge1xuICAgICAgICAgICAgICAgIGV4dC5kcmF3RWxlbWVudHNJbnN0YW5jZWRBTkdMRShcbiAgICAgICAgICAgICAgICAgICAgZ2xEcmF3TW9kZSwgdmFvLmluZGljZXNCdWZmZXIuY291bnQsIGluZGljZXNUeXBlLCAwLCByZW5kZXJhYmxlLmdldEluc3RhbmNlQ291bnQoKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfZ2wuZHJhd0VsZW1lbnRzKGdsRHJhd01vZGUsIHZhby5pbmRpY2VzQnVmZmVyLmNvdW50LCBpbmRpY2VzVHlwZSwgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoaXNJbnN0YW5jZWQpIHtcbiAgICAgICAgICAgICAgICBleHQuZHJhd0FycmF5c0luc3RhbmNlZEFOR0xFKGdsRHJhd01vZGUsIDAsIGdlb21ldHJ5LnZlcnRleENvdW50LCByZW5kZXJhYmxlLmdldEluc3RhbmNlQ291bnQoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBGSVhNRSBVc2UgdmVydGV4IG51bWJlciBpbiBidWZmZXJcbiAgICAgICAgICAgICAgICAvLyB2ZXJ0ZXhDb3VudCBtYXkgZ2V0IHRoZSB3cm9uZyB2YWx1ZSB3aGVuIGdlb21ldHJ5IGZvcmdldCB0byBtYXJrIGRpcnR5IGFmdGVyIHVwZGF0ZVxuICAgICAgICAgICAgICAgIF9nbC5kcmF3QXJyYXlzKGdsRHJhd01vZGUsIDAsIGdlb21ldHJ5LnZlcnRleENvdW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc0luc3RhbmNlZCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbnN0YW5jZWRBdHRyTG9jYXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgX2dsLmRpc2FibGVWZXJ0ZXhBdHRyaWJBcnJheShpbnN0YW5jZWRBdHRyTG9jYXRpb25zW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBfYmluZEluc3RhbmNlZEF0dHJpYnV0ZXM6IGZ1bmN0aW9uIChyZW5kZXJhYmxlLCBwcm9ncmFtLCBleHQpIHtcbiAgICAgICAgdmFyIF9nbCA9IHRoaXMuZ2w7XG4gICAgICAgIHZhciBpbnN0YW5jZWRCdWZmZXJzID0gcmVuZGVyYWJsZS5nZXRJbnN0YW5jZWRBdHRyaWJ1dGVzQnVmZmVycyh0aGlzKTtcbiAgICAgICAgdmFyIGxvY2F0aW9ucyA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW5zdGFuY2VkQnVmZmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJ1ZmZlck9iaiA9IGluc3RhbmNlZEJ1ZmZlcnNbaV07XG4gICAgICAgICAgICB2YXIgbG9jYXRpb24gPSBwcm9ncmFtLmdldEF0dHJpYkxvY2F0aW9uKF9nbCwgYnVmZmVyT2JqLnN5bWJvbCk7XG4gICAgICAgICAgICBpZiAobG9jYXRpb24gPCAwKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBnbFR5cGUgPSBhdHRyaWJ1dGVCdWZmZXJUeXBlTWFwW2J1ZmZlck9iai50eXBlXSB8fCBfZ2wuRkxPQVQ7O1xuICAgICAgICAgICAgX2dsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGxvY2F0aW9uKTsgIC8vIFRPRE9cbiAgICAgICAgICAgIF9nbC5iaW5kQnVmZmVyKF9nbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlck9iai5idWZmZXIpO1xuICAgICAgICAgICAgX2dsLnZlcnRleEF0dHJpYlBvaW50ZXIobG9jYXRpb24sIGJ1ZmZlck9iai5zaXplLCBnbFR5cGUsIGZhbHNlLCAwLCAwKTtcbiAgICAgICAgICAgIGV4dC52ZXJ0ZXhBdHRyaWJEaXZpc29yQU5HTEUobG9jYXRpb24sIGJ1ZmZlck9iai5kaXZpc29yKTtcblxuICAgICAgICAgICAgbG9jYXRpb25zLnB1c2gobG9jYXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGxvY2F0aW9ucztcbiAgICB9LFxuXG4gICAgX2JpbmRNYXRlcmlhbDogZnVuY3Rpb24gKHJlbmRlcmFibGUsIG1hdGVyaWFsLCBwcm9ncmFtLCBwcmV2UmVuZGVyYWJsZSwgcHJldk1hdGVyaWFsLCBwcmV2UHJvZ3JhbSwgZ2V0VW5pZm9ybVZhbHVlKSB7XG4gICAgICAgIHZhciBfZ2wgPSB0aGlzLmdsO1xuICAgICAgICAvLyBQRU5ESU5HIFNhbWUgdGV4dHVyZSBpbiBkaWZmZXJlbnQgbWF0ZXJpYWwgdGFrZSBkaWZmZXJlbnQgc2xvdD9cblxuICAgICAgICAvLyBNYXkgdXNlIHNoYWRlciBvZiBvdGhlciBtYXRlcmlhbCBpZiBzaGFkZXIgY29kZSBhcmUgc2FtZVxuICAgICAgICB2YXIgc2FtZVByb2dyYW0gPSBwcmV2UHJvZ3JhbSA9PT0gcHJvZ3JhbTtcblxuICAgICAgICB2YXIgY3VycmVudFRleHR1cmVTbG90ID0gcHJvZ3JhbS5jdXJyZW50VGV4dHVyZVNsb3QoKTtcbiAgICAgICAgdmFyIGVuYWJsZWRVbmlmb3JtcyA9IG1hdGVyaWFsLmdldEVuYWJsZWRVbmlmb3JtcygpO1xuICAgICAgICB2YXIgdGV4dHVyZVVuaWZvcm1zID0gbWF0ZXJpYWwuZ2V0VGV4dHVyZVVuaWZvcm1zKCk7XG4gICAgICAgIHZhciBwbGFjZWhvbGRlclRleHR1cmUgPSB0aGlzLl9wbGFjZWhvbGRlclRleHR1cmU7XG5cbiAgICAgICAgZm9yICh2YXIgdSA9IDA7IHUgPCB0ZXh0dXJlVW5pZm9ybXMubGVuZ3RoOyB1KyspIHtcbiAgICAgICAgICAgIHZhciBzeW1ib2wgPSB0ZXh0dXJlVW5pZm9ybXNbdV07XG4gICAgICAgICAgICB2YXIgdW5pZm9ybVZhbHVlID0gZ2V0VW5pZm9ybVZhbHVlKHJlbmRlcmFibGUsIG1hdGVyaWFsLCBzeW1ib2wpO1xuICAgICAgICAgICAgdmFyIHVuaWZvcm1UeXBlID0gbWF0ZXJpYWwudW5pZm9ybXNbc3ltYm9sXS50eXBlO1xuICAgICAgICAgICAgLy8gTm90IHVzZSBgaW5zdGFuY2VvZmAgdG8gZGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgdGV4dHVyZSBpbiBNYXRlcmlhbCNiaW5kLlxuICAgICAgICAgICAgLy8gVXNlIHR5cGUgaW5zdGVhZCwgaW4gc29tZSBjYXNlIHRleHR1cmUgbWF5IGJlIGluIGRpZmZlcmVudCBuYW1lc3BhY2VzLlxuICAgICAgICAgICAgLy8gVE9ETyBEdWNrIHR5cGUgdmFsaWRhdGUuXG4gICAgICAgICAgICBpZiAodW5pZm9ybVR5cGUgPT09ICd0JyAmJiB1bmlmb3JtVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAvLyBSZXNldCBzbG90XG4gICAgICAgICAgICAgICAgdW5pZm9ybVZhbHVlLl9fc2xvdCA9IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodW5pZm9ybVR5cGUgPT09ICd0dicpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVuaWZvcm1WYWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodW5pZm9ybVZhbHVlW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bmlmb3JtVmFsdWVbaV0uX19zbG90ID0gLTE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwbGFjZWhvbGRlclRleHR1cmUuX19zbG90ID0gLTE7XG5cbiAgICAgICAgLy8gU2V0IHVuaWZvcm1zXG4gICAgICAgIGZvciAodmFyIHUgPSAwOyB1IDwgZW5hYmxlZFVuaWZvcm1zLmxlbmd0aDsgdSsrKSB7XG4gICAgICAgICAgICB2YXIgc3ltYm9sID0gZW5hYmxlZFVuaWZvcm1zW3VdO1xuICAgICAgICAgICAgdmFyIHVuaWZvcm0gPSBtYXRlcmlhbC51bmlmb3Jtc1tzeW1ib2xdO1xuICAgICAgICAgICAgdmFyIHVuaWZvcm1WYWx1ZSA9IGdldFVuaWZvcm1WYWx1ZShyZW5kZXJhYmxlLCBtYXRlcmlhbCwgc3ltYm9sKTtcbiAgICAgICAgICAgIHZhciB1bmlmb3JtVHlwZSA9IHVuaWZvcm0udHlwZTtcbiAgICAgICAgICAgIHZhciBpc1RleHR1cmUgPSB1bmlmb3JtVHlwZSA9PT0gJ3QnO1xuXG4gICAgICAgICAgICBpZiAoaXNUZXh0dXJlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF1bmlmb3JtVmFsdWUgfHwgIXVuaWZvcm1WYWx1ZS5pc1JlbmRlcmFibGUoKSkge1xuICAgICAgICAgICAgICAgICAgICB1bmlmb3JtVmFsdWUgPSBwbGFjZWhvbGRlclRleHR1cmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gUEVORElOR1xuICAgICAgICAgICAgLy8gV2hlbiBiaW5kaW5nIHR3byBtYXRlcmlhbHMgd2l0aCB0aGUgc2FtZSBzaGFkZXJcbiAgICAgICAgICAgIC8vIE1hbnkgdW5pZm9ybXMgd2lsbCBiZSBiZSBzZXQgdHdpY2UgZXZlbiBpZiB0aGV5IGhhdmUgdGhlIHNhbWUgdmFsdWVcbiAgICAgICAgICAgIC8vIFNvIGFkZCBhIGV2YWx1YXRpb24gdG8gc2VlIGlmIHRoZSB1bmlmb3JtIGlzIHJlYWxseSBuZWVkZWQgdG8gYmUgc2V0XG4gICAgICAgICAgICBpZiAocHJldk1hdGVyaWFsICYmIHNhbWVQcm9ncmFtKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByZXZVbmlmb3JtVmFsdWUgPSBnZXRVbmlmb3JtVmFsdWUocHJldlJlbmRlcmFibGUsIHByZXZNYXRlcmlhbCwgc3ltYm9sKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNUZXh0dXJlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghcHJldlVuaWZvcm1WYWx1ZSB8fCAhcHJldlVuaWZvcm1WYWx1ZS5pc1JlbmRlcmFibGUoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJldlVuaWZvcm1WYWx1ZSA9IHBsYWNlaG9sZGVyVGV4dHVyZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChwcmV2VW5pZm9ybVZhbHVlID09PSB1bmlmb3JtVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzVGV4dHVyZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3RpbGwgdGFrZSB0aGUgc2xvdCB0byBtYWtlIHN1cmUgc2FtZSB0ZXh0dXJlIGluIGRpZmZlcmVudCBtYXRlcmlhbHMgaGF2ZSBzYW1lIHNsb3QuXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9ncmFtLnRha2VDdXJyZW50VGV4dHVyZVNsb3QodGhpcywgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodW5pZm9ybVR5cGUgPT09ICd0dicgJiYgdW5pZm9ybVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVuaWZvcm1WYWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyYW0udGFrZUN1cnJlbnRUZXh0dXJlU2xvdCh0aGlzLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh1bmlmb3JtVmFsdWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNUZXh0dXJlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHVuaWZvcm1WYWx1ZS5fX3Nsb3QgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzbG90ID0gcHJvZ3JhbS5jdXJyZW50VGV4dHVyZVNsb3QoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlcyA9IHByb2dyYW0uc2V0VW5pZm9ybShfZ2wsICcxaScsIHN5bWJvbCwgc2xvdCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMpIHsgLy8gVGV4dHVyZSB1bmlmb3JtIGlzIGVuYWJsZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyYW0udGFrZUN1cnJlbnRUZXh0dXJlU2xvdCh0aGlzLCB1bmlmb3JtVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdW5pZm9ybVZhbHVlLl9fc2xvdCA9IHNsb3Q7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gTXVsdGlwbGUgdW5pZm9ybSB1c2Ugc2FtZSB0ZXh0dXJlLi5cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbS5zZXRVbmlmb3JtKF9nbCwgJzFpJywgc3ltYm9sLCB1bmlmb3JtVmFsdWUuX19zbG90KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHVuaWZvcm1WYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAodW5pZm9ybVZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gVGV4dHVyZSBBcnJheVxuICAgICAgICAgICAgICAgIGlmICh1bmlmb3JtVHlwZSA9PT0gJ3R2Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXByb2dyYW0uaGFzVW5pZm9ybShzeW1ib2wpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhcnIgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1bmlmb3JtVmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ZXh0dXJlID0gdW5pZm9ybVZhbHVlW2ldO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGV4dHVyZS5fX3Nsb3QgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsb3QgPSBwcm9ncmFtLmN1cnJlbnRUZXh0dXJlU2xvdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHNsb3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyYW0udGFrZUN1cnJlbnRUZXh0dXJlU2xvdCh0aGlzLCB0ZXh0dXJlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0dXJlLl9fc2xvdCA9IHNsb3Q7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcnIucHVzaCh0ZXh0dXJlLl9fc2xvdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm9ncmFtLnNldFVuaWZvcm0oX2dsLCAnMWl2Jywgc3ltYm9sLCBhcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbS5zZXRVbmlmb3JtKF9nbCwgdW5pZm9ybS50eXBlLCBzeW1ib2wsIHVuaWZvcm1WYWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICBwcm9ncmFtLnNldFVuaWZvcm0oX2dsLCB1bmlmb3JtLnR5cGUsIHN5bWJvbCwgdW5pZm9ybVZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgbmV3U2xvdCA9IHByb2dyYW0uY3VycmVudFRleHR1cmVTbG90KCk7XG4gICAgICAgIC8vIFRleHR1cmUgc2xvdCBtYXliZSB1c2VkIG91dCBvZiBtYXRlcmlhbC5cbiAgICAgICAgcHJvZ3JhbS5yZXNldFRleHR1cmVTbG90KGN1cnJlbnRUZXh0dXJlU2xvdCk7XG4gICAgICAgIHJldHVybiBuZXdTbG90O1xuICAgIH0sXG5cbiAgICBfYmluZFZBTzogZnVuY3Rpb24gKHZhb0V4dCwgc2hhZGVyLCBnZW9tZXRyeSwgcHJvZ3JhbSkge1xuICAgICAgICB2YXIgaXNTdGF0aWMgPSAhZ2VvbWV0cnkuZHluYW1pYztcbiAgICAgICAgdmFyIF9nbCA9IHRoaXMuZ2w7XG5cbiAgICAgICAgdmFyIHZhb0lkID0gdGhpcy5fX3VpZF9fICsgJy0nICsgcHJvZ3JhbS5fX3VpZF9fO1xuICAgICAgICB2YXIgdmFvID0gZ2VvbWV0cnkuX192YW9DYWNoZVt2YW9JZF07XG4gICAgICAgIGlmICghdmFvKSB7XG4gICAgICAgICAgICB2YXIgY2h1bmtzID0gZ2VvbWV0cnkuZ2V0QnVmZmVyQ2h1bmtzKHRoaXMpO1xuICAgICAgICAgICAgaWYgKCFjaHVua3MgfHwgIWNodW5rcy5sZW5ndGgpIHsgIC8vIEVtcHR5IG1lc2hcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgY2h1bmsgPSBjaHVua3NbMF07XG4gICAgICAgICAgICB2YXIgYXR0cmlidXRlQnVmZmVycyA9IGNodW5rLmF0dHJpYnV0ZUJ1ZmZlcnM7XG4gICAgICAgICAgICB2YXIgaW5kaWNlc0J1ZmZlciA9IGNodW5rLmluZGljZXNCdWZmZXI7XG5cbiAgICAgICAgICAgIHZhciBhdmFpbGFibGVBdHRyaWJ1dGVzID0gW107XG4gICAgICAgICAgICB2YXIgYXZhaWxhYmxlQXR0cmlidXRlU3ltYm9scyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgYSA9IDA7IGEgPCBhdHRyaWJ1dGVCdWZmZXJzLmxlbmd0aDsgYSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZUJ1ZmZlckluZm8gPSBhdHRyaWJ1dGVCdWZmZXJzW2FdO1xuICAgICAgICAgICAgICAgIHZhciBuYW1lID0gYXR0cmlidXRlQnVmZmVySW5mby5uYW1lO1xuICAgICAgICAgICAgICAgIHZhciBzZW1hbnRpYyA9IGF0dHJpYnV0ZUJ1ZmZlckluZm8uc2VtYW50aWM7XG4gICAgICAgICAgICAgICAgdmFyIHN5bWJvbDtcbiAgICAgICAgICAgICAgICBpZiAoc2VtYW50aWMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbWFudGljSW5mbyA9IHNoYWRlci5hdHRyaWJ1dGVTZW1hbnRpY3Nbc2VtYW50aWNdO1xuICAgICAgICAgICAgICAgICAgICBzeW1ib2wgPSBzZW1hbnRpY0luZm8gJiYgc2VtYW50aWNJbmZvLnN5bWJvbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHN5bWJvbCA9IG5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzeW1ib2wgJiYgcHJvZ3JhbS5hdHRyaWJ1dGVzW3N5bWJvbF0pIHtcbiAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQXR0cmlidXRlcy5wdXNoKGF0dHJpYnV0ZUJ1ZmZlckluZm8pO1xuICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVBdHRyaWJ1dGVTeW1ib2xzLnB1c2goc3ltYm9sKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhbyA9IG5ldyBWZXJ0ZXhBcnJheU9iamVjdChcbiAgICAgICAgICAgICAgICBhdmFpbGFibGVBdHRyaWJ1dGVzLFxuICAgICAgICAgICAgICAgIGF2YWlsYWJsZUF0dHJpYnV0ZVN5bWJvbHMsXG4gICAgICAgICAgICAgICAgaW5kaWNlc0J1ZmZlclxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgaWYgKGlzU3RhdGljKSB7XG4gICAgICAgICAgICAgICAgZ2VvbWV0cnkuX192YW9DYWNoZVt2YW9JZF0gPSB2YW87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbmVlZHNCaW5kQXR0cmlidXRlcyA9IHRydWU7XG5cbiAgICAgICAgLy8gQ3JlYXRlIHZlcnRleCBvYmplY3QgYXJyYXkgY29zdCBhIGxvdFxuICAgICAgICAvLyBTbyB3ZSBkb24ndCB1c2UgaXQgb24gdGhlIGR5bmFtaWMgb2JqZWN0XG4gICAgICAgIGlmICh2YW9FeHQgJiYgaXNTdGF0aWMpIHtcbiAgICAgICAgICAgIC8vIFVzZSB2ZXJ0ZXggYXJyYXkgb2JqZWN0XG4gICAgICAgICAgICAvLyBodHRwOi8vYmxvZy50b2ppY29kZS5jb20vMjAxMi8xMC9vZXN2ZXJ0ZXhhcnJheW9iamVjdC1leHRlbnNpb24uaHRtbFxuICAgICAgICAgICAgaWYgKHZhby52YW8gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHZhby52YW8gPSB2YW9FeHQuY3JlYXRlVmVydGV4QXJyYXlPRVMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5lZWRzQmluZEF0dHJpYnV0ZXMgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhb0V4dC5iaW5kVmVydGV4QXJyYXlPRVModmFvLnZhbyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYXZhaWxhYmxlQXR0cmlidXRlcyA9IHZhby5hdmFpbGFibGVBdHRyaWJ1dGVzO1xuICAgICAgICB2YXIgaW5kaWNlc0J1ZmZlciA9IHZhby5pbmRpY2VzQnVmZmVyO1xuXG4gICAgICAgIGlmIChuZWVkc0JpbmRBdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICB2YXIgbG9jYXRpb25MaXN0ID0gcHJvZ3JhbS5lbmFibGVBdHRyaWJ1dGVzKHRoaXMsIHZhby5hdmFpbGFibGVBdHRyaWJ1dGVTeW1ib2xzLCAodmFvRXh0ICYmIGlzU3RhdGljICYmIHZhbykpO1xuICAgICAgICAgICAgLy8gU2V0dGluZyBhdHRyaWJ1dGVzO1xuICAgICAgICAgICAgZm9yICh2YXIgYSA9IDA7IGEgPCBhdmFpbGFibGVBdHRyaWJ1dGVzLmxlbmd0aDsgYSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxvY2F0aW9uID0gbG9jYXRpb25MaXN0W2FdO1xuICAgICAgICAgICAgICAgIGlmIChsb2NhdGlvbiA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVCdWZmZXJJbmZvID0gYXZhaWxhYmxlQXR0cmlidXRlc1thXTtcbiAgICAgICAgICAgICAgICB2YXIgYnVmZmVyID0gYXR0cmlidXRlQnVmZmVySW5mby5idWZmZXI7XG4gICAgICAgICAgICAgICAgdmFyIHNpemUgPSBhdHRyaWJ1dGVCdWZmZXJJbmZvLnNpemU7XG4gICAgICAgICAgICAgICAgdmFyIGdsVHlwZSA9IGF0dHJpYnV0ZUJ1ZmZlclR5cGVNYXBbYXR0cmlidXRlQnVmZmVySW5mby50eXBlXSB8fCBfZ2wuRkxPQVQ7XG5cbiAgICAgICAgICAgICAgICBfZ2wuYmluZEJ1ZmZlcihfZ2wuQVJSQVlfQlVGRkVSLCBidWZmZXIpO1xuICAgICAgICAgICAgICAgIF9nbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGxvY2F0aW9uLCBzaXplLCBnbFR5cGUsIGZhbHNlLCAwLCAwKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGdlb21ldHJ5LmlzVXNlSW5kaWNlcygpKSB7XG4gICAgICAgICAgICAgICAgX2dsLmJpbmRCdWZmZXIoX2dsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLCBpbmRpY2VzQnVmZmVyLmJ1ZmZlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdmFvO1xuICAgIH0sXG5cbiAgICByZW5kZXJQcmVaOiBmdW5jdGlvbiAobGlzdCwgc2NlbmUsIGNhbWVyYSkge1xuICAgICAgICB2YXIgX2dsID0gdGhpcy5nbDtcbiAgICAgICAgdmFyIHByZVpQYXNzTWF0ZXJpYWwgPSB0aGlzLl9wcmV6TWF0ZXJpYWwgfHwgbmV3IE1hdGVyaWFsKHtcbiAgICAgICAgICAgIHNoYWRlcjogbmV3IFNoYWRlcihTaGFkZXIuc291cmNlKCdjbGF5LnByZXoudmVydGV4JyksIFNoYWRlci5zb3VyY2UoJ2NsYXkucHJlei5mcmFnbWVudCcpKVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fcHJlek1hdGVyaWFsID0gcHJlWlBhc3NNYXRlcmlhbDtcblxuICAgICAgICBfZ2wuY29sb3JNYXNrKGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlKTtcbiAgICAgICAgX2dsLmRlcHRoTWFzayh0cnVlKTtcblxuICAgICAgICAvLyBTdGF0dXNcbiAgICAgICAgdGhpcy5yZW5kZXJQYXNzKGxpc3QsIGNhbWVyYSwge1xuICAgICAgICAgICAgaWZSZW5kZXI6IGZ1bmN0aW9uIChyZW5kZXJhYmxlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICFyZW5kZXJhYmxlLmlnbm9yZVByZVo7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNNYXRlcmlhbENoYW5nZWQ6IGZ1bmN0aW9uIChyZW5kZXJhYmxlLCBwcmV2UmVuZGVyYWJsZSkge1xuICAgICAgICAgICAgICAgIHZhciBtYXRBID0gcmVuZGVyYWJsZS5tYXRlcmlhbDtcbiAgICAgICAgICAgICAgICB2YXIgbWF0QiA9IHByZXZSZW5kZXJhYmxlLm1hdGVyaWFsO1xuICAgICAgICAgICAgICAgIHJldHVybiBtYXRBLmdldCgnZGlmZnVzZU1hcCcpICE9PSBtYXRCLmdldCgnZGlmZnVzZU1hcCcpXG4gICAgICAgICAgICAgICAgICAgIHx8IChtYXRBLmdldCgnYWxwaGFDdXRvZmYnKSB8fCAwKSAhPT0gKG1hdEIuZ2V0KCdhbHBoYUN1dG9mZicpIHx8IDApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFVuaWZvcm06IGZ1bmN0aW9uIChyZW5kZXJhYmxlLCBkZXB0aE1hdGVyaWFsLCBzeW1ib2wpIHtcbiAgICAgICAgICAgICAgICBpZiAoc3ltYm9sID09PSAnYWxwaGFNYXAnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXJhYmxlLm1hdGVyaWFsLmdldCgnZGlmZnVzZU1hcCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzeW1ib2wgPT09ICdhbHBoYUN1dG9mZicpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlbmRlcmFibGUubWF0ZXJpYWwuaXNEZWZpbmVkKCdmcmFnbWVudCcsICdBTFBIQV9URVNUJylcbiAgICAgICAgICAgICAgICAgICAgICAgICYmIHJlbmRlcmFibGUubWF0ZXJpYWwuZ2V0KCdkaWZmdXNlTWFwJylcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWxwaGFDdXRvZmYgPSByZW5kZXJhYmxlLm1hdGVyaWFsLmdldCgnYWxwaGFDdXRvZmYnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhbHBoYUN1dG9mZiB8fCAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzeW1ib2wgPT09ICd1dlJlcGVhdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlcmFibGUubWF0ZXJpYWwuZ2V0KCd1dlJlcGVhdCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzeW1ib2wgPT09ICd1dk9mZnNldCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlcmFibGUubWF0ZXJpYWwuZ2V0KCd1dk9mZnNldCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlcHRoTWF0ZXJpYWwuZ2V0KHN5bWJvbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldE1hdGVyaWFsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByZVpQYXNzTWF0ZXJpYWw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc29ydDogdGhpcy5vcGFxdWVTb3J0Q29tcGFyZVxuICAgICAgICB9KTtcblxuICAgICAgICBfZ2wuY29sb3JNYXNrKHRydWUsIHRydWUsIHRydWUsIHRydWUpO1xuICAgICAgICBfZ2wuZGVwdGhNYXNrKHRydWUpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBEaXNwb3NlIGdpdmVuIHNjZW5lLCBpbmNsdWRpbmcgYWxsIGdlb21ldHJpcywgdGV4dHVyZXMgYW5kIHNoYWRlcnMgaW4gdGhlIHNjZW5lXG4gICAgICogQHBhcmFtIHtjbGF5LlNjZW5lfSBzY2VuZVxuICAgICAqL1xuICAgIGRpc3Bvc2VTY2VuZTogZnVuY3Rpb24oc2NlbmUpIHtcbiAgICAgICAgdGhpcy5kaXNwb3NlTm9kZShzY2VuZSwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIHNjZW5lLmRpc3Bvc2UoKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogRGlzcG9zZSBnaXZlbiBub2RlLCBpbmNsdWRpbmcgYWxsIGdlb21ldHJpZXMsIHRleHR1cmVzIGFuZCBzaGFkZXJzIGF0dGFjaGVkIG9uIGl0IG9yIGl0cyBkZXNjZW5kYW50XG4gICAgICogQHBhcmFtIHtjbGF5Lk5vZGV9IG5vZGVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtkaXNwb3NlR2VvbWV0cnk9ZmFsc2VdIElmIGRpc3Bvc2UgdGhlIGdlb21ldHJpZXMgdXNlZCBpbiB0aGUgZGVzY2VuZGFudCBtZXNoXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbZGlzcG9zZVRleHR1cmU9ZmFsc2VdIElmIGRpc3Bvc2UgdGhlIHRleHR1cmVzIHVzZWQgaW4gdGhlIGRlc2NlbmRhbnQgbWVzaFxuICAgICAqL1xuICAgIGRpc3Bvc2VOb2RlOiBmdW5jdGlvbihyb290LCBkaXNwb3NlR2VvbWV0cnksIGRpc3Bvc2VUZXh0dXJlKSB7XG4gICAgICAgIC8vIERldHRhY2hlZCBmcm9tIHBhcmVudFxuICAgICAgICBpZiAocm9vdC5nZXRQYXJlbnQoKSkge1xuICAgICAgICAgICAgcm9vdC5nZXRQYXJlbnQoKS5yZW1vdmUocm9vdCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRpc3Bvc2VkTWFwID0ge307XG4gICAgICAgIHJvb3QudHJhdmVyc2UoZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgdmFyIG1hdGVyaWFsID0gbm9kZS5tYXRlcmlhbDtcbiAgICAgICAgICAgIGlmIChub2RlLmdlb21ldHJ5ICYmIGRpc3Bvc2VHZW9tZXRyeSkge1xuICAgICAgICAgICAgICAgIG5vZGUuZ2VvbWV0cnkuZGlzcG9zZSh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkaXNwb3NlVGV4dHVyZSAmJiBtYXRlcmlhbCAmJiAhZGlzcG9zZWRNYXBbbWF0ZXJpYWwuX191aWRfX10pIHtcbiAgICAgICAgICAgICAgICB2YXIgdGV4dHVyZVVuaWZvcm1zID0gbWF0ZXJpYWwuZ2V0VGV4dHVyZVVuaWZvcm1zKCk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgdSA9IDA7IHUgPCB0ZXh0dXJlVW5pZm9ybXMubGVuZ3RoOyB1KyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVuaWZvcm1OYW1lID0gdGV4dHVyZVVuaWZvcm1zW3VdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsID0gbWF0ZXJpYWwudW5pZm9ybXNbdW5pZm9ybU5hbWVdLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdW5pZm9ybVR5cGUgPSBtYXRlcmlhbC51bmlmb3Jtc1t1bmlmb3JtTmFtZV0udHlwZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh1bmlmb3JtVHlwZSA9PT0gJ3QnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWwuZGlzcG9zZSAmJiB2YWwuZGlzcG9zZSh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh1bmlmb3JtVHlwZSA9PT0gJ3R2Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB2YWwubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsW2tdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbFtrXS5kaXNwb3NlICYmIHZhbFtrXS5kaXNwb3NlKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkaXNwb3NlZE1hcFttYXRlcmlhbC5fX3VpZF9fXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBQYXJ0aWNsZSBzeXN0ZW0gYW5kIEFtYmllbnRDdWJlbWFwIGxpZ2h0IG5lZWQgdG8gZGlzcG9zZVxuICAgICAgICAgICAgaWYgKG5vZGUuZGlzcG9zZSkge1xuICAgICAgICAgICAgICAgIG5vZGUuZGlzcG9zZSh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgdGhpcyk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIERpc3Bvc2UgZ2l2ZW4gZ2VvbWV0cnlcbiAgICAgKiBAcGFyYW0ge2NsYXkuR2VvbWV0cnl9IGdlb21ldHJ5XG4gICAgICovXG4gICAgZGlzcG9zZUdlb21ldHJ5OiBmdW5jdGlvbihnZW9tZXRyeSkge1xuICAgICAgICBnZW9tZXRyeS5kaXNwb3NlKHRoaXMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBEaXNwb3NlIGdpdmVuIHRleHR1cmVcbiAgICAgKiBAcGFyYW0ge2NsYXkuVGV4dHVyZX0gdGV4dHVyZVxuICAgICAqL1xuICAgIGRpc3Bvc2VUZXh0dXJlOiBmdW5jdGlvbih0ZXh0dXJlKSB7XG4gICAgICAgIHRleHR1cmUuZGlzcG9zZSh0aGlzKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogRGlzcG9zZSBnaXZlbiBmcmFtZSBidWZmZXJcbiAgICAgKiBAcGFyYW0ge2NsYXkuRnJhbWVCdWZmZXJ9IGZyYW1lQnVmZmVyXG4gICAgICovXG4gICAgZGlzcG9zZUZyYW1lQnVmZmVyOiBmdW5jdGlvbihmcmFtZUJ1ZmZlcikge1xuICAgICAgICBmcmFtZUJ1ZmZlci5kaXNwb3NlKHRoaXMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBEaXNwb3NlIHJlbmRlcmVyXG4gICAgICovXG4gICAgZGlzcG9zZTogZnVuY3Rpb24gKCkge30sXG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IHNjcmVlbiBjb29yZHMgdG8gbm9ybWFsaXplZCBkZXZpY2UgY29vcmRpbmF0ZXMoTkRDKVxuICAgICAqIFNjcmVlbiBjb29yZHMgY2FuIGdldCBmcm9tIG1vdXNlIGV2ZW50LCBpdCBpcyBwb3NpdGlvbmVkIHJlbGF0aXZlIHRvIGNhbnZhcyBlbGVtZW50XG4gICAgICogTkRDIGNhbiBiZSB1c2VkIGluIHJheSBjYXN0aW5nIHdpdGggQ2FtZXJhLnByb3RvdHlwZS5jYXN0UmF5IG1ldGhvZHNcbiAgICAgKlxuICAgICAqIEBwYXJhbSAge251bWJlcn0gICAgICAgeFxuICAgICAqIEBwYXJhbSAge251bWJlcn0gICAgICAgeVxuICAgICAqIEBwYXJhbSAge2NsYXkuVmVjdG9yMn0gW291dF1cbiAgICAgKiBAcmV0dXJuIHtjbGF5LlZlY3RvcjJ9XG4gICAgICovXG4gICAgc2NyZWVuVG9OREM6IGZ1bmN0aW9uKHgsIHksIG91dCkge1xuICAgICAgICBpZiAoIW91dCkge1xuICAgICAgICAgICAgb3V0ID0gbmV3IFZlY3RvcjIoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJbnZlcnQgeTtcbiAgICAgICAgeSA9IHRoaXMuX2hlaWdodCAtIHk7XG5cbiAgICAgICAgdmFyIHZpZXdwb3J0ID0gdGhpcy52aWV3cG9ydDtcbiAgICAgICAgdmFyIGFyciA9IG91dC5hcnJheTtcbiAgICAgICAgYXJyWzBdID0gKHggLSB2aWV3cG9ydC54KSAvIHZpZXdwb3J0LndpZHRoO1xuICAgICAgICBhcnJbMF0gPSBhcnJbMF0gKiAyIC0gMTtcbiAgICAgICAgYXJyWzFdID0gKHkgLSB2aWV3cG9ydC55KSAvIHZpZXdwb3J0LmhlaWdodDtcbiAgICAgICAgYXJyWzFdID0gYXJyWzFdICogMiAtIDE7XG5cbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBPcGFxdWUgcmVuZGVyYWJsZXMgY29tcGFyZSBmdW5jdGlvblxuICogQHBhcmFtICB7Y2xheS5SZW5kZXJhYmxlfSB4XG4gKiBAcGFyYW0gIHtjbGF5LlJlbmRlcmFibGV9IHlcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKiBAc3RhdGljXG4gKi9cblJlbmRlcmVyLm9wYXF1ZVNvcnRDb21wYXJlID0gUmVuZGVyZXIucHJvdG90eXBlLm9wYXF1ZVNvcnRDb21wYXJlID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIC8vIFByaW9yaXR5IHJlbmRlck9yZGVyIC0+IHByb2dyYW0gLT4gbWF0ZXJpYWwgLT4gZ2VvbWV0cnlcbiAgICBpZiAoeC5yZW5kZXJPcmRlciA9PT0geS5yZW5kZXJPcmRlcikge1xuICAgICAgICBpZiAoeC5fX3Byb2dyYW0gPT09IHkuX19wcm9ncmFtKSB7XG4gICAgICAgICAgICBpZiAoeC5tYXRlcmlhbCA9PT0geS5tYXRlcmlhbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB4Lmdlb21ldHJ5Ll9fdWlkX18gLSB5Lmdlb21ldHJ5Ll9fdWlkX187XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geC5tYXRlcmlhbC5fX3VpZF9fIC0geS5tYXRlcmlhbC5fX3VpZF9fO1xuICAgICAgICB9XG4gICAgICAgIGlmICh4Ll9fcHJvZ3JhbSAmJiB5Ll9fcHJvZ3JhbSkge1xuICAgICAgICAgICAgcmV0dXJuIHguX19wcm9ncmFtLl9fdWlkX18gLSB5Ll9fcHJvZ3JhbS5fX3VpZF9fO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICByZXR1cm4geC5yZW5kZXJPcmRlciAtIHkucmVuZGVyT3JkZXI7XG59O1xuXG4vKipcbiAqIFRyYW5zcGFyZW50IHJlbmRlcmFibGVzIGNvbXBhcmUgZnVuY3Rpb25cbiAqIEBwYXJhbSAge2NsYXkuUmVuZGVyYWJsZX0gYVxuICogQHBhcmFtICB7Y2xheS5SZW5kZXJhYmxlfSBiXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICogQHN0YXRpY1xuICovXG5SZW5kZXJlci50cmFuc3BhcmVudFNvcnRDb21wYXJlID0gUmVuZGVyZXIucHJvdG90eXBlLnRyYW5zcGFyZW50U29ydENvbXBhcmUgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgLy8gUHJpb3JpdHkgcmVuZGVyT3JkZXIgLT4gZGVwdGggLT4gcHJvZ3JhbSAtPiBtYXRlcmlhbCAtPiBnZW9tZXRyeVxuXG4gICAgaWYgKHgucmVuZGVyT3JkZXIgPT09IHkucmVuZGVyT3JkZXIpIHtcbiAgICAgICAgaWYgKHguX19kZXB0aCA9PT0geS5fX2RlcHRoKSB7XG4gICAgICAgICAgICBpZiAoeC5fX3Byb2dyYW0gPT09IHkuX19wcm9ncmFtKSB7XG4gICAgICAgICAgICAgICAgaWYgKHgubWF0ZXJpYWwgPT09IHkubWF0ZXJpYWwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHguZ2VvbWV0cnkuX191aWRfXyAtIHkuZ2VvbWV0cnkuX191aWRfXztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHgubWF0ZXJpYWwuX191aWRfXyAtIHkubWF0ZXJpYWwuX191aWRfXztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh4Ll9fcHJvZ3JhbSAgJiYgeS5fX3Byb2dyYW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geC5fX3Byb2dyYW0uX191aWRfXyAtIHkuX19wcm9ncmFtLl9fdWlkX187XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgICAgICAvLyBEZXB0aCBpcyBuZWdhdGl2ZVxuICAgICAgICAvLyBTbyBmYXJ0aGVyIG9iamVjdCBoYXMgc21hbGxlciBkZXB0aCB2YWx1ZVxuICAgICAgICByZXR1cm4geC5fX2RlcHRoIC0geS5fX2RlcHRoO1xuICAgIH1cbiAgICByZXR1cm4geC5yZW5kZXJPcmRlciAtIHkucmVuZGVyT3JkZXI7XG59O1xuXG4vLyBUZW1wb3JhcnkgdmFyaWFibGVzXG52YXIgbWF0cmljZXMgPSB7XG4gICAgSURFTlRJVFk6IG1hdDRDcmVhdGUoKSxcblxuICAgIFdPUkxEOiBtYXQ0Q3JlYXRlKCksXG4gICAgVklFVzogbWF0NENyZWF0ZSgpLFxuICAgIFBST0pFQ1RJT046IG1hdDRDcmVhdGUoKSxcbiAgICBXT1JMRFZJRVc6IG1hdDRDcmVhdGUoKSxcbiAgICBWSUVXUFJPSkVDVElPTjogbWF0NENyZWF0ZSgpLFxuICAgIFdPUkxEVklFV1BST0pFQ1RJT046IG1hdDRDcmVhdGUoKSxcblxuICAgIFdPUkxESU5WRVJTRTogbWF0NENyZWF0ZSgpLFxuICAgIFZJRVdJTlZFUlNFOiBtYXQ0Q3JlYXRlKCksXG4gICAgUFJPSkVDVElPTklOVkVSU0U6IG1hdDRDcmVhdGUoKSxcbiAgICBXT1JMRFZJRVdJTlZFUlNFOiBtYXQ0Q3JlYXRlKCksXG4gICAgVklFV1BST0pFQ1RJT05JTlZFUlNFOiBtYXQ0Q3JlYXRlKCksXG4gICAgV09STERWSUVXUFJPSkVDVElPTklOVkVSU0U6IG1hdDRDcmVhdGUoKSxcblxuICAgIFdPUkxEVFJBTlNQT1NFOiBtYXQ0Q3JlYXRlKCksXG4gICAgVklFV1RSQU5TUE9TRTogbWF0NENyZWF0ZSgpLFxuICAgIFBST0pFQ1RJT05UUkFOU1BPU0U6IG1hdDRDcmVhdGUoKSxcbiAgICBXT1JMRFZJRVdUUkFOU1BPU0U6IG1hdDRDcmVhdGUoKSxcbiAgICBWSUVXUFJPSkVDVElPTlRSQU5TUE9TRTogbWF0NENyZWF0ZSgpLFxuICAgIFdPUkxEVklFV1BST0pFQ1RJT05UUkFOU1BPU0U6IG1hdDRDcmVhdGUoKSxcbiAgICBXT1JMRElOVkVSU0VUUkFOU1BPU0U6IG1hdDRDcmVhdGUoKSxcbiAgICBWSUVXSU5WRVJTRVRSQU5TUE9TRTogbWF0NENyZWF0ZSgpLFxuICAgIFBST0pFQ1RJT05JTlZFUlNFVFJBTlNQT1NFOiBtYXQ0Q3JlYXRlKCksXG4gICAgV09STERWSUVXSU5WRVJTRVRSQU5TUE9TRTogbWF0NENyZWF0ZSgpLFxuICAgIFZJRVdQUk9KRUNUSU9OSU5WRVJTRVRSQU5TUE9TRTogbWF0NENyZWF0ZSgpLFxuICAgIFdPUkxEVklFV1BST0pFQ1RJT05JTlZFUlNFVFJBTlNQT1NFOiBtYXQ0Q3JlYXRlKClcbn07XG5cbi8qKlxuICogQG5hbWUgY2xheS5SZW5kZXJlci5DT0xPUl9CVUZGRVJfQklUXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJlci5DT0xPUl9CVUZGRVJfQklUID0gZ2xlbnVtLkNPTE9SX0JVRkZFUl9CSVQ7XG4vKipcbiAqIEBuYW1lIGNsYXkuUmVuZGVyZXIuREVQVEhfQlVGRkVSX0JJVFxuICogQHR5cGUge251bWJlcn1cbiAqL1xuUmVuZGVyZXIuREVQVEhfQlVGRkVSX0JJVCA9IGdsZW51bS5ERVBUSF9CVUZGRVJfQklUO1xuLyoqXG4gKiBAbmFtZSBjbGF5LlJlbmRlcmVyLlNURU5DSUxfQlVGRkVSX0JJVFxuICogQHR5cGUge251bWJlcn1cbiAqL1xuUmVuZGVyZXIuU1RFTkNJTF9CVUZGRVJfQklUID0gZ2xlbnVtLlNURU5DSUxfQlVGRkVSX0JJVDtcblxuZXhwb3J0IGRlZmF1bHQgUmVuZGVyZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9SZW5kZXJlci5qc1xuLy8gbW9kdWxlIGlkID0gNDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__LinkedList__ = __webpack_require__(77);\n\n\n/**\n * LRU Cache\n * @constructor\n * @alias clay.core.LRU\n */\nvar LRU = function (maxSize) {\n\n    this._list = new __WEBPACK_IMPORTED_MODULE_0__LinkedList__[\"a\" /* default */]();\n\n    this._map = {};\n\n    this._maxSize = maxSize || 10;\n};\n\n/**\n * Set cache max size\n * @param {number} size\n */\nLRU.prototype.setMaxSize = function (size) {\n    this._maxSize = size;\n};\n\n/**\n * @param  {string} key\n * @param  {} value\n */\nLRU.prototype.put = function (key, value) {\n    if (!this._map.hasOwnProperty(key)) {\n        var len = this._list.length();\n        if (len >= this._maxSize && len > 0) {\n            // Remove the least recently used\n            var leastUsedEntry = this._list.head;\n            this._list.remove(leastUsedEntry);\n            delete this._map[leastUsedEntry.key];\n        }\n\n        var entry = this._list.insert(value);\n        entry.key = key;\n        this._map[key] = entry;\n    }\n};\n\n/**\n * @param  {string} key\n * @return {}\n */\nLRU.prototype.get = function (key) {\n    var entry = this._map[key];\n    if (this._map.hasOwnProperty(key)) {\n        // Put the latest used entry in the tail\n        if (entry !== this._list.tail) {\n            this._list.remove(entry);\n            this._list.insertEntry(entry);\n        }\n\n        return entry.value;\n    }\n};\n\n/**\n * @param {string} key\n */\nLRU.prototype.remove = function (key) {\n    var entry = this._map[key];\n    if (typeof(entry) !== 'undefined') {\n        delete this._map[key];\n        this._list.remove(entry);\n    }\n};\n\n/**\n * Clear the cache\n */\nLRU.prototype.clear = function () {\n    this._list.clear();\n    this._map = {};\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (LRU);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9MUlUuanM/MGIzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGlua2VkTGlzdCBmcm9tICcuL0xpbmtlZExpc3QnO1xuXG4vKipcbiAqIExSVSBDYWNoZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAYWxpYXMgY2xheS5jb3JlLkxSVVxuICovXG52YXIgTFJVID0gZnVuY3Rpb24gKG1heFNpemUpIHtcblxuICAgIHRoaXMuX2xpc3QgPSBuZXcgTGlua2VkTGlzdCgpO1xuXG4gICAgdGhpcy5fbWFwID0ge307XG5cbiAgICB0aGlzLl9tYXhTaXplID0gbWF4U2l6ZSB8fCAxMDtcbn07XG5cbi8qKlxuICogU2V0IGNhY2hlIG1heCBzaXplXG4gKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICovXG5MUlUucHJvdG90eXBlLnNldE1heFNpemUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICAgIHRoaXMuX21heFNpemUgPSBzaXplO1xufTtcblxuLyoqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGtleVxuICogQHBhcmFtICB7fSB2YWx1ZVxuICovXG5MUlUucHJvdG90eXBlLnB1dCA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgaWYgKCF0aGlzLl9tYXAuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICB2YXIgbGVuID0gdGhpcy5fbGlzdC5sZW5ndGgoKTtcbiAgICAgICAgaWYgKGxlbiA+PSB0aGlzLl9tYXhTaXplICYmIGxlbiA+IDApIHtcbiAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgbGVhc3QgcmVjZW50bHkgdXNlZFxuICAgICAgICAgICAgdmFyIGxlYXN0VXNlZEVudHJ5ID0gdGhpcy5fbGlzdC5oZWFkO1xuICAgICAgICAgICAgdGhpcy5fbGlzdC5yZW1vdmUobGVhc3RVc2VkRW50cnkpO1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMuX21hcFtsZWFzdFVzZWRFbnRyeS5rZXldO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy5fbGlzdC5pbnNlcnQodmFsdWUpO1xuICAgICAgICBlbnRyeS5rZXkgPSBrZXk7XG4gICAgICAgIHRoaXMuX21hcFtrZXldID0gZW50cnk7XG4gICAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGtleVxuICogQHJldHVybiB7fVxuICovXG5MUlUucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgZW50cnkgPSB0aGlzLl9tYXBba2V5XTtcbiAgICBpZiAodGhpcy5fbWFwLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgLy8gUHV0IHRoZSBsYXRlc3QgdXNlZCBlbnRyeSBpbiB0aGUgdGFpbFxuICAgICAgICBpZiAoZW50cnkgIT09IHRoaXMuX2xpc3QudGFpbCkge1xuICAgICAgICAgICAgdGhpcy5fbGlzdC5yZW1vdmUoZW50cnkpO1xuICAgICAgICAgICAgdGhpcy5fbGlzdC5pbnNlcnRFbnRyeShlbnRyeSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZW50cnkudmFsdWU7XG4gICAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gKi9cbkxSVS5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBlbnRyeSA9IHRoaXMuX21hcFtrZXldO1xuICAgIGlmICh0eXBlb2YoZW50cnkpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBkZWxldGUgdGhpcy5fbWFwW2tleV07XG4gICAgICAgIHRoaXMuX2xpc3QucmVtb3ZlKGVudHJ5KTtcbiAgICB9XG59O1xuXG4vKipcbiAqIENsZWFyIHRoZSBjYWNoZVxuICovXG5MUlUucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuX2xpc3QuY2xlYXIoKTtcbiAgICB0aGlzLl9tYXAgPSB7fTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IExSVTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvcmUvTFJVLmpzXG4vLyBtb2R1bGUgaWQgPSA0MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\n\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = GLMAT_RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n\n        return a;\n    };\n})();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (vec2);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.prez.vertex\\nuniform mat4 WVP : WORLDVIEWPROJECTION;\\nattribute vec3 pos : POSITION;\\nattribute vec2 uv : TEXCOORD_0;\\nuniform vec2 uvRepeat : [1.0, 1.0];\\nuniform vec2 uvOffset : [0.0, 0.0];\\n@import clay.chunk.skinning_header\\n@import clay.chunk.instancing_header\\nvarying vec2 v_Texcoord;\\nvoid main()\\n{\\n vec4 P = vec4(pos, 1.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n P = skinMatrixWS * P;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n P = instanceMat * P;\\n#endif\\n gl_Position = WVP * P;\\n v_Texcoord = uv * uvRepeat + uvOffset;\\n}\\n@end\\n@export clay.prez.fragment\\nuniform sampler2D alphaMap;\\nuniform float alphaCutoff: 0.0;\\nvarying vec2 v_Texcoord;\\nvoid main()\\n{\\n if (alphaCutoff > 0.0) {\\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\\n discard;\\n }\\n }\\n gl_FragColor = vec4(0.0,0.0,0.0,1.0);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9wcmV6Lmdsc2wuanM/ODAxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIkBleHBvcnQgY2xheS5wcmV6LnZlcnRleFxcbnVuaWZvcm0gbWF0NCBXVlAgOiBXT1JMRFZJRVdQUk9KRUNUSU9OO1xcbmF0dHJpYnV0ZSB2ZWMzIHBvcyA6IFBPU0lUSU9OO1xcbmF0dHJpYnV0ZSB2ZWMyIHV2IDogVEVYQ09PUkRfMDtcXG51bmlmb3JtIHZlYzIgdXZSZXBlYXQgOiBbMS4wLCAxLjBdO1xcbnVuaWZvcm0gdmVjMiB1dk9mZnNldCA6IFswLjAsIDAuMF07XFxuQGltcG9ydCBjbGF5LmNodW5rLnNraW5uaW5nX2hlYWRlclxcbkBpbXBvcnQgY2xheS5jaHVuay5pbnN0YW5jaW5nX2hlYWRlclxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWM0IFAgPSB2ZWM0KHBvcywgMS4wKTtcXG4jaWZkZWYgU0tJTk5JTkdcXG4gQGltcG9ydCBjbGF5LmNodW5rLnNraW5fbWF0cml4XFxuIFAgPSBza2luTWF0cml4V1MgKiBQO1xcbiNlbmRpZlxcbiNpZmRlZiBJTlNUQU5DSU5HXFxuIEBpbXBvcnQgY2xheS5jaHVuay5pbnN0YW5jaW5nX21hdHJpeFxcbiBQID0gaW5zdGFuY2VNYXQgKiBQO1xcbiNlbmRpZlxcbiBnbF9Qb3NpdGlvbiA9IFdWUCAqIFA7XFxuIHZfVGV4Y29vcmQgPSB1diAqIHV2UmVwZWF0ICsgdXZPZmZzZXQ7XFxufVxcbkBlbmRcXG5AZXhwb3J0IGNsYXkucHJlei5mcmFnbWVudFxcbnVuaWZvcm0gc2FtcGxlcjJEIGFscGhhTWFwO1xcbnVuaWZvcm0gZmxvYXQgYWxwaGFDdXRvZmY6IDAuMDtcXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG52b2lkIG1haW4oKVxcbntcXG4gaWYgKGFscGhhQ3V0b2ZmID4gMC4wKSB7XFxuIGlmICh0ZXh0dXJlMkQoYWxwaGFNYXAsIHZfVGV4Y29vcmQpLmEgPD0gYWxwaGFDdXRvZmYpIHtcXG4gZGlzY2FyZDtcXG4gfVxcbiB9XFxuIGdsX0ZyYWdDb2xvciA9IHZlYzQoMC4wLDAuMCwwLjAsMS4wKTtcXG59XFxuQGVuZFwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9wcmV6Lmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDQzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///43\n");

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Scene__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__StandardMaterial__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Mesh__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Node__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shader_library__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__Skeleton__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__Joint__ = __webpack_require__(52);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__camera_Orthographic__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__animation_TrackClip__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__animation_SamplerTrack__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__Geometry__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__shader_builtin__ = __webpack_require__(88);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__Shader__ = __webpack_require__(2);\n/**\n * glTF Loader\n * Specification https://github.com/KhronosGroup/glTF/blob/master/specification/README.md\n *\n * TODO Morph targets\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Import builtin shader\n\n\n\nvar semanticAttributeMap = {\n    'NORMAL': 'normal',\n    'POSITION': 'position',\n    'TEXCOORD_0': 'texcoord0',\n    'TEXCOORD_1': 'texcoord1',\n    'WEIGHTS_0': 'weight',\n    'JOINTS_0': 'joint',\n    'COLOR_0': 'color'\n};\n\nvar ARRAY_CTOR_MAP = {\n    5120: __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Int8Array,\n    5121: __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint8Array,\n    5122: __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Int16Array,\n    5123: __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint16Array,\n    5125: __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint32Array,\n    5126: __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Float32Array\n};\nvar SIZE_MAP = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n};\n\nfunction getAccessorData(json, lib, accessorIdx, isIndices) {\n    var accessorInfo = json.accessors[accessorIdx];\n\n    var buffer = lib.bufferViews[accessorInfo.bufferView];\n    var byteOffset = accessorInfo.byteOffset || 0;\n    var ArrayCtor = ARRAY_CTOR_MAP[accessorInfo.componentType] || __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Float32Array;\n\n    var size = SIZE_MAP[accessorInfo.type];\n    if (size == null && isIndices) {\n        size = 1;\n    }\n    var arr = new ArrayCtor(buffer, byteOffset, size * accessorInfo.count);\n\n    var quantizeExtension = accessorInfo.extensions && accessorInfo.extensions['WEB3D_quantized_attributes'];\n    if (quantizeExtension) {\n        var decodedArr = new __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Float32Array(size * accessorInfo.count);\n        var decodeMatrix = quantizeExtension.decodeMatrix;\n        var decodeOffset;\n        var decodeScale;\n        var decodeOffset = new Array(size);\n        var decodeScale = new Array(size);\n        for (var k = 0; k < size; k++) {\n            decodeOffset[k] = decodeMatrix[size * (size + 1) + k];\n            decodeScale[k] = decodeMatrix[k * (size + 1) + k];\n        }\n        for (var i = 0; i < accessorInfo.count; i++) {\n            for (var k = 0; k < size; k++) {\n                decodedArr[i * size + k] = arr[i * size + k] * decodeScale[k] + decodeOffset[k];\n            }\n        }\n\n        arr = decodedArr;\n    }\n    return arr;\n}\n\nfunction base64ToBinary(input, charStart) {\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var lookup = new Uint8Array(130);\n    for (var i = 0; i < chars.length; i++) {\n        lookup[chars.charCodeAt(i)] = i;\n    }\n    // Ignore\n    var len = input.length - charStart;\n    if (input.charAt(len - 1) === '=') { len--; }\n    if (input.charAt(len - 1) === '=') { len--; }\n\n    var uarray = new Uint8Array((len / 4) * 3);\n\n    for (var i = 0, j = charStart; i < uarray.length;) {\n        var c1 = lookup[input.charCodeAt(j++)];\n        var c2 = lookup[input.charCodeAt(j++)];\n        var c3 = lookup[input.charCodeAt(j++)];\n        var c4 = lookup[input.charCodeAt(j++)];\n\n        uarray[i++] = (c1 << 2) | (c2 >> 4);\n        uarray[i++] = ((c2 & 15) << 4) | (c3 >> 2);\n        uarray[i++] = ((c3 & 3) << 6) | c4;\n    }\n\n    return uarray.buffer;\n}\n\n\n/**\n * @typedef {Object} clay.loader.GLTF.Result\n * @property {Object} json\n * @property {clay.Scene} scene\n * @property {clay.Node} rootNode\n * @property {clay.Camera[]} cameras\n * @property {clay.Texture[]} textures\n * @property {clay.Material[]} materials\n * @property {clay.Skeleton[]} skeletons\n * @property {clay.Mesh[]} meshes\n * @property {clay.animation.TrackClip[]} clips\n * @property {clay.Node[]} nodes\n */\n\n/**\n * @constructor clay.loader.GLTF\n * @extends clay.core.Base\n */\nvar GLTFLoader = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(/** @lends clay.loader.GLTF# */ {\n    /**\n     *\n     * @type {clay.Node}\n     */\n    rootNode: null,\n    /**\n     * Root path for uri parsing.\n     * @type {string}\n     */\n    rootPath: null,\n\n    /**\n     * Root path for texture uri parsing. Defaultly use the rootPath\n     * @type {string}\n     */\n    textureRootPath: null,\n\n    /**\n     * Root path for buffer uri parsing. Defaultly use the rootPath\n     * @type {string}\n     */\n    bufferRootPath: null,\n\n    /**\n     * Shader used when creating the materials.\n     * @type {string|clay.Shader}\n     * @default 'clay.standard'\n     */\n    shader: 'clay.standard',\n\n    /**\n     * If use {@link clay.StandardMaterial}\n     * @type {string}\n     */\n    useStandardMaterial: false,\n\n    /**\n     * If loading the cameras.\n     * @type {boolean}\n     */\n    includeCamera: true,\n\n    /**\n     * If loading the animations.\n     * @type {boolean}\n     */\n    includeAnimation: true,\n    /**\n     * If loading the meshes\n     * @type {boolean}\n     */\n    includeMesh: true,\n    /**\n     * If loading the textures.\n     * @type {boolean}\n     */\n    includeTexture: true,\n\n    /**\n     * @type {string}\n     */\n    crossOrigin: '',\n    /**\n     * @type {boolean}\n     * @see https://github.com/KhronosGroup/glTF/issues/674\n     */\n    textureFlipY: false,\n\n    /**\n     * If convert texture to power-of-two\n     * @type {boolean}\n     */\n    textureConvertToPOT: false,\n\n    shaderLibrary: null\n},\nfunction () {\n    if (!this.shaderLibrary) {\n        this.shaderLibrary = __WEBPACK_IMPORTED_MODULE_10__shader_library__[\"a\" /* default */].createLibrary();\n    }\n},\n/** @lends clay.loader.GLTF.prototype */\n{\n    /**\n     * @param {string} url\n     */\n    load: function (url) {\n        var self = this;\n        var isBinary = url.endsWith('.glb');\n\n        if (this.rootPath == null) {\n            this.rootPath = url.slice(0, url.lastIndexOf('/'));\n        }\n\n        __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].request.get({\n            url: url,\n            onprogress: function (percent, loaded, total) {\n                self.trigger('progress', percent, loaded, total);\n            },\n            onerror: function (e) {\n                self.trigger('error', e);\n            },\n            responseType: isBinary ? 'arraybuffer' : 'text',\n            onload: function (data) {\n                if (isBinary) {\n                    self.parseBinary(data);\n                }\n                else {\n                    if (typeof data === 'string') {\n                        data = JSON.parse(data);\n                    }\n                    self.parse(data);\n                }\n            }\n        });\n    },\n\n    /**\n     * Parse glTF binary\n     * @param {ArrayBuffer} buffer\n     * @return {clay.loader.GLTF.Result}\n     */\n    parseBinary: function (buffer) {\n        var header = new Uint32Array(buffer, 0, 4);\n        if (header[0] !== 0x46546C67) {\n            this.trigger('error', 'Invalid glTF binary format: Invalid header');\n            return;\n        }\n        if (header[0] < 2) {\n            this.trigger('error', 'Only glTF2.0 is supported.');\n            return;\n        }\n\n        var dataView = new DataView(buffer, 12);\n\n        var json;\n        var buffers = [];\n        // Read chunks\n        for (var i = 0; i < dataView.byteLength;) {\n            var chunkLength = dataView.getUint32(i, true);\n            i += 4;\n            var chunkType = dataView.getUint32(i, true);\n            i += 4;\n\n            // json\n            if (chunkType === 0x4E4F534A) {\n                var arr = new Uint8Array(buffer, i + 12, chunkLength);\n                // TODO, for the browser not support TextDecoder.\n                var decoder = new TextDecoder();\n                var str = decoder.decode(arr);\n                try {\n                    json = JSON.parse(str);\n                }\n                catch (e) {\n                    this.trigger('error', 'JSON Parse error:' + e.toString());\n                    return;\n                }\n            }\n            else if (chunkType === 0x004E4942) {\n                buffers.push(buffer.slice(i + 12, i + 12 + chunkLength));\n            }\n\n            i += chunkLength;\n        }\n        if (!json) {\n            this.trigger('error', 'Invalid glTF binary format: Can\\'t find JSON.');\n            return;\n        }\n\n        return this.parse(json, buffers);\n    },\n\n    /**\n     * @param {Object} json\n     * @param {ArrayBuffer[]} [buffer]\n     * @return {clay.loader.GLTF.Result}\n     */\n    parse: function (json, buffers) {\n        var self = this;\n\n        var lib = {\n            json: json,\n            buffers: [],\n            bufferViews: [],\n            materials: [],\n            textures: [],\n            meshes: [],\n            joints: [],\n            skeletons: [],\n            cameras: [],\n            nodes: [],\n            clips: []\n        };\n        // Mount on the root node if given\n        var rootNode = this.rootNode || new __WEBPACK_IMPORTED_MODULE_3__Scene__[\"a\" /* default */]();\n\n        var loading = 0;\n        function checkLoad() {\n            loading--;\n            if (loading === 0) {\n                afterLoadBuffer();\n            }\n        }\n        // If already load buffers\n        if (buffers) {\n            lib.buffers = buffers.slice();\n            afterLoadBuffer(true);\n        }\n        else {\n            // Load buffers\n            __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.buffers, function (bufferInfo, idx) {\n                loading++;\n                var path = bufferInfo.uri;\n\n                self._loadBuffers(path, function (buffer) {\n                    lib.buffers[idx] = buffer;\n                    checkLoad();\n                }, checkLoad);\n            });\n        }\n\n        function getResult() {\n            return {\n                json: json,\n                scene: self.rootNode ? null : rootNode,\n                rootNode: self.rootNode ? rootNode : null,\n                cameras: lib.cameras,\n                textures: lib.textures,\n                materials: lib.materials,\n                skeletons: lib.skeletons,\n                meshes: lib.instancedMeshes,\n                clips: lib.clips,\n                nodes: lib.nodes\n            };\n        }\n\n        function afterLoadBuffer(immediately) {\n            // Buffer not load complete.\n            if (lib.buffers.length !== json.buffers.length) {\n                setTimeout(function () {\n                    self.trigger('error', 'Buffer not load complete.');\n                });\n                return;\n            }\n\n            json.bufferViews.forEach(function (bufferViewInfo, idx) {\n                // PENDING Performance\n                lib.bufferViews[idx] = lib.buffers[bufferViewInfo.buffer]\n                    .slice(bufferViewInfo.byteOffset || 0, (bufferViewInfo.byteOffset || 0) + (bufferViewInfo.byteLength || 0));\n            });\n            lib.buffers = null;\n            if (self.includeMesh) {\n                if (self.includeTexture) {\n                    self._parseTextures(json, lib);\n                }\n                self._parseMaterials(json, lib);\n                self._parseMeshes(json, lib);\n            }\n            self._parseNodes(json, lib);\n\n            // Only support one scene.\n            if (json.scenes) {\n                var sceneInfo = json.scenes[json.scene || 0]; // Default use the first scene.\n                if (sceneInfo) {\n                    for (var i = 0; i < sceneInfo.nodes.length; i++) {\n                        var node = lib.nodes[sceneInfo.nodes[i]];\n                        node.update();\n                        rootNode.add(node);\n                    }\n                }\n            }\n\n            if (self.includeMesh) {\n                self._parseSkins(json, lib);\n            }\n\n            if (self.includeAnimation) {\n                self._parseAnimations(json, lib);\n            }\n            if (immediately) {\n                setTimeout(function () {\n                    self.trigger('success', getResult());\n                });\n            }\n            else {\n                self.trigger('success', getResult());\n            }\n        }\n\n        return getResult();\n    },\n\n    /**\n     * Binary file path resolver. User can override it\n     * @param {string} path\n     */\n    resolveBufferPath: function (path) {\n        if (path && path.match(/^data:(.*?)base64,/)) {\n            return path;\n        }\n\n        var rootPath = this.bufferRootPath;\n        if (rootPath == null) {\n            rootPath = this.rootPath;\n        }\n        return __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].relative2absolute(path, rootPath);\n    },\n\n    /**\n     * Texture file path resolver. User can override it\n     * @param {string} path\n     */\n    resolveTexturePath: function (path) {\n        if (path && path.match(/^data:(.*?)base64,/)) {\n            return path;\n        }\n\n        var rootPath = this.textureRootPath;\n        if (rootPath == null) {\n            rootPath = this.rootPath;\n        }\n        return __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].relative2absolute(path, rootPath);\n    },\n\n    /**\n     * Buffer loader\n     * @param {string}\n     * @param {Function} onsuccess\n     * @param {Function} onerror\n     */\n    loadBuffer: function (path, onsuccess, onerror) {\n        __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].request.get({\n            url: path,\n            responseType: 'arraybuffer',\n            onload: function (buffer) {\n                onsuccess && onsuccess(buffer);\n            },\n            onerror: function (buffer) {\n                onerror && onerror(buffer);\n            }\n        });\n    },\n\n    _getShader: function () {\n        if (typeof this.shader === 'string') {\n            return this.shaderLibrary.get(this.shader);\n        }\n        else if (this.shader instanceof __WEBPACK_IMPORTED_MODULE_21__Shader__[\"a\" /* default */]) {\n            return this.shader;\n        }\n    },\n\n    _loadBuffers: function (path, onsuccess, onerror) {\n        var base64Prefix = 'data:application/octet-stream;base64,';\n        var strStart = path.substr(0, base64Prefix.length);\n        if (strStart === base64Prefix) {\n            onsuccess(\n                base64ToBinary(path, base64Prefix.length)\n            );\n        }\n        else {\n            this.loadBuffer(\n                this.resolveBufferPath(path),\n                onsuccess,\n                onerror\n            );\n        }\n    },\n\n    // https://github.com/KhronosGroup/glTF/issues/100\n    // https://github.com/KhronosGroup/glTF/issues/193\n    _parseSkins: function (json, lib) {\n\n        // Create skeletons and joints\n        var haveInvBindMatrices = false;\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.skins, function (skinInfo, idx) {\n            var skeleton = new __WEBPACK_IMPORTED_MODULE_11__Skeleton__[\"a\" /* default */]({\n                name: skinInfo.name\n            });\n            for (var i = 0; i < skinInfo.joints.length; i++) {\n                var nodeIdx = skinInfo.joints[i];\n                var node = lib.nodes[nodeIdx];\n                var joint = new __WEBPACK_IMPORTED_MODULE_12__Joint__[\"a\" /* default */]({\n                    name: node.name,\n                    node: node,\n                    index: skeleton.joints.length\n                });\n                skeleton.joints.push(joint);\n            }\n            skeleton.relativeRootNode = lib.nodes[skinInfo.skeleton] || this.rootNode;\n            if (skinInfo.inverseBindMatrices) {\n                haveInvBindMatrices = true;\n                var IBMInfo = json.accessors[skinInfo.inverseBindMatrices];\n                var buffer = lib.bufferViews[IBMInfo.bufferView];\n\n                var offset = IBMInfo.byteOffset || 0;\n                var size = IBMInfo.count * 16;\n\n                var array = new __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Float32Array(buffer, offset, size);\n\n                skeleton.setJointMatricesArray(array);\n            }\n            else {\n                skeleton.updateJointMatrices();\n            }\n            lib.skeletons[idx] = skeleton;\n        }, this);\n\n        function enableSkinningForMesh(mesh, skeleton, jointIndices) {\n            mesh.skeleton = skeleton;\n            mesh.joints = jointIndices;\n\n            if (!skeleton.boundingBox) {\n                skeleton.updateJointsBoundingBoxes(mesh.geometry);\n            }\n        }\n\n        function getJointIndex(joint) {\n            return joint.index;\n        }\n\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.nodes, function (nodeInfo, nodeIdx) {\n            if (nodeInfo.skin != null) {\n                var skinIdx = nodeInfo.skin;\n                var skeleton = lib.skeletons[skinIdx];\n\n                var node = lib.nodes[nodeIdx];\n                var jointIndices = skeleton.joints.map(getJointIndex);\n                if (node instanceof __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */]) {\n                    enableSkinningForMesh(node, skeleton, jointIndices);\n                }\n                else {\n                    // Mesh have multiple primitives\n                    var children = node.children();\n                    for (var i = 0; i < children.length; i++) {\n                        enableSkinningForMesh(children[i], skeleton, jointIndices);\n                    }\n                }\n            }\n        }, this);\n    },\n\n    _parseTextures: function (json, lib) {\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.textures, function (textureInfo, idx){\n            // samplers is optional\n            var samplerInfo = (json.samplers && json.samplers[textureInfo.sampler]) || {};\n            var parameters = {};\n            ['wrapS', 'wrapT', 'magFilter', 'minFilter'].forEach(function (name) {\n                var value = samplerInfo[name];\n                if (value != null) {\n                    parameters[name] = value;\n                }\n            });\n            __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].defaults(parameters, {\n                wrapS: __WEBPACK_IMPORTED_MODULE_8__Texture__[\"a\" /* default */].REPEAT,\n                wrapT: __WEBPACK_IMPORTED_MODULE_8__Texture__[\"a\" /* default */].REPEAT,\n                flipY: this.textureFlipY,\n                convertToPOT: this.textureConvertToPOT\n            });\n\n            var target = textureInfo.target || __WEBPACK_IMPORTED_MODULE_15__core_glenum__[\"a\" /* default */].TEXTURE_2D;\n            var format = textureInfo.format;\n            if (format != null) {\n                parameters.format = format;\n            }\n\n            if (target === __WEBPACK_IMPORTED_MODULE_15__core_glenum__[\"a\" /* default */].TEXTURE_2D) {\n                var texture = new __WEBPACK_IMPORTED_MODULE_9__Texture2D__[\"a\" /* default */](parameters);\n                var imageInfo = json.images[textureInfo.source];\n                var uri;\n                if (imageInfo.uri) {\n                    uri = this.resolveTexturePath(imageInfo.uri);\n                }\n                else if (imageInfo.bufferView != null) {\n                    uri = URL.createObjectURL(new Blob([lib.bufferViews[imageInfo.bufferView]], {\n                        type: imageInfo.mimeType\n                    }));\n                }\n                if (uri) {\n                    texture.load(uri, this.crossOrigin);\n                    lib.textures[idx] = texture;\n                }\n            }\n        }, this);\n    },\n\n    _KHRCommonMaterialToStandard: function (materialInfo, lib) {\n        var uniforms = {};\n        var commonMaterialInfo = materialInfo.extensions['KHR_materials_common'];\n        uniforms = commonMaterialInfo.values || {};\n\n        if (typeof uniforms.diffuse === 'number') {\n            uniforms.diffuse = lib.textures[uniforms.diffuse] || null;\n        }\n        if (typeof uniforms.emission === 'number') {\n            uniforms.emission = lib.textures[uniforms.emission] || null;\n        }\n\n        var enabledTextures = [];\n        if (uniforms['diffuse'] instanceof __WEBPACK_IMPORTED_MODULE_9__Texture2D__[\"a\" /* default */]) {\n            enabledTextures.push('diffuseMap');\n        }\n        if (materialInfo.normalTexture) {\n            enabledTextures.push('normalMap');\n        }\n        if (uniforms['emission'] instanceof __WEBPACK_IMPORTED_MODULE_9__Texture2D__[\"a\" /* default */]) {\n            enabledTextures.push('emissiveMap');\n        }\n        var material;\n        var isStandardMaterial = this.useStandardMaterial;\n        if (isStandardMaterial) {\n            material = new __WEBPACK_IMPORTED_MODULE_5__StandardMaterial__[\"a\" /* default */]({\n                name: materialInfo.name,\n                doubleSided: materialInfo.doubleSided\n            });\n        }\n        else {\n            material = new __WEBPACK_IMPORTED_MODULE_4__Material__[\"a\" /* default */]({\n                name: materialInfo.name,\n                shader: this._getShader()\n            });\n\n            material.define('fragment', 'USE_ROUGHNESS');\n            material.define('fragment', 'USE_METALNESS');\n\n            if (materialInfo.doubleSided) {\n                material.define('fragment', 'DOUBLE_SIDED');\n            }\n        }\n\n        if (uniforms.transparent) {\n            material.depthMask = false;\n            material.depthTest = true;\n            material.transparent = true;\n        }\n\n        var diffuseProp = uniforms['diffuse'];\n        if (diffuseProp) {\n            // Color\n            if (Array.isArray(diffuseProp)) {\n                diffuseProp = diffuseProp.slice(0, 3);\n                isStandardMaterial ? (material.color = diffuseProp)\n                    : material.set('color', diffuseProp);\n            }\n            else { // Texture\n                isStandardMaterial ? (material.diffuseMap = diffuseProp)\n                    : material.set('diffuseMap', diffuseProp);\n            }\n        }\n        var emissionProp = uniforms['emission'];\n        if (emissionProp != null) {\n            // Color\n            if (Array.isArray(emissionProp)) {\n                emissionProp = emissionProp.slice(0, 3);\n                isStandardMaterial ? (material.emission = emissionProp)\n                    : material.set('emission', emissionProp);\n            }\n            else { // Texture\n                isStandardMaterial ? (material.emissiveMap = emissionProp)\n                    : material.set('emissiveMap', emissionProp);\n            }\n        }\n        if (materialInfo.normalTexture != null) {\n            // TODO texCoord\n            var normalTextureIndex = materialInfo.normalTexture.index;\n            if (isStandardMaterial) {\n                material.normalMap = lib.textures[normalTextureIndex] || null;\n            }\n            else {\n                material.set('normalMap', lib.textures[normalTextureIndex] || null);\n            }\n        }\n        if (uniforms['shininess'] != null) {\n            var glossiness = Math.log(uniforms['shininess']) / Math.log(8192);\n            // Uniform glossiness\n            material.set('glossiness', glossiness);\n            material.set('roughness', 1 - glossiness);\n        }\n        else {\n            material.set('glossiness', 0.3);\n            material.set('roughness', 0.3);\n        }\n        if (uniforms['specular'] != null) {\n            material.set('specularColor', uniforms['specular'].slice(0, 3));\n        }\n        if (uniforms['transparency'] != null) {\n            material.set('alpha', uniforms['transparency']);\n        }\n\n        return material;\n    },\n\n    _pbrMetallicRoughnessToStandard: function (materialInfo, metallicRoughnessMatInfo, lib) {\n        var alphaTest = materialInfo.alphaMode === 'MASK';\n\n        var isStandardMaterial = this.useStandardMaterial;\n        var material;\n        var diffuseMap, roughnessMap, metalnessMap, normalMap, emissiveMap, occlusionMap;\n        var enabledTextures = [];\n\n        /**\n         * The scalar multiplier applied to each normal vector of the normal texture.\n         *\n         * @type {number}\n         *\n         * XXX This value is ignored if `materialInfo.normalTexture` is not specified.\n         */\n        var normalScale = 1.0;\n\n        // TODO texCoord\n        if (metallicRoughnessMatInfo.baseColorTexture) {\n            diffuseMap = lib.textures[metallicRoughnessMatInfo.baseColorTexture.index] || null;\n            diffuseMap && enabledTextures.push('diffuseMap');\n        }\n        if (metallicRoughnessMatInfo.metallicRoughnessTexture) {\n            roughnessMap = metalnessMap = lib.textures[metallicRoughnessMatInfo.metallicRoughnessTexture.index] || null;\n            roughnessMap && enabledTextures.push('metalnessMap', 'roughnessMap');\n        }\n        if (materialInfo.normalTexture) {\n\n            normalMap = lib.textures[materialInfo.normalTexture.index] || null;\n            normalMap && enabledTextures.push('normalMap');\n\n            if (typeof materialInfo.normalTexture.scale === 'number') {\n                normalScale = materialInfo.normalTexture.scale;\n            }\n\n        }\n        if (materialInfo.emissiveTexture) {\n            emissiveMap = lib.textures[materialInfo.emissiveTexture.index] || null;\n            emissiveMap && enabledTextures.push('emissiveMap');\n        }\n        if (materialInfo.occlusionTexture) {\n            occlusionMap = lib.textures[materialInfo.occlusionTexture.index] || null;\n            occlusionMap && enabledTextures.push('occlusionMap');\n        }\n        var baseColor = metallicRoughnessMatInfo.baseColorFactor || [1, 1, 1, 1];\n\n        var commonProperties = {\n            diffuseMap: diffuseMap || null,\n            roughnessMap: roughnessMap || null,\n            metalnessMap: metalnessMap || null,\n            normalMap: normalMap || null,\n            occlusionMap: occlusionMap || null,\n            emissiveMap: emissiveMap || null,\n            color: baseColor.slice(0, 3),\n            alpha: baseColor[3],\n            metalness: metallicRoughnessMatInfo.metallicFactor || 0,\n            roughness: metallicRoughnessMatInfo.roughnessFactor || 0,\n            emission: materialInfo.emissiveFactor || [0, 0, 0],\n            emissionIntensity: 1,\n            alphaCutoff: materialInfo.alphaCutoff || 0,\n            normalScale: normalScale\n        };\n        if (commonProperties.roughnessMap) {\n            // In glTF metallicFactor will do multiply, which is different from StandardMaterial.\n            // So simply ignore it\n            commonProperties.metalness = 0.5;\n            commonProperties.roughness = 0.5;\n        }\n        if (isStandardMaterial) {\n            material = new __WEBPACK_IMPORTED_MODULE_5__StandardMaterial__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].extend({\n                name: materialInfo.name,\n                alphaTest: alphaTest,\n                doubleSided: materialInfo.doubleSided,\n                // G channel\n                roughnessChannel: 1,\n                // B Channel\n                metalnessChannel: 2\n            }, commonProperties));\n        }\n        else {\n\n            material = new __WEBPACK_IMPORTED_MODULE_4__Material__[\"a\" /* default */]({\n                name: materialInfo.name,\n                shader: this._getShader()\n            });\n\n            material.define('fragment', 'USE_ROUGHNESS');\n            material.define('fragment', 'USE_METALNESS');\n            material.define('fragment', 'ROUGHNESS_CHANNEL', 1);\n            material.define('fragment', 'METALNESS_CHANNEL', 2);\n\n            material.define('fragment', 'DIFFUSEMAP_ALPHA_ALPHA');\n\n            if (alphaTest) {\n                material.define('fragment', 'ALPHA_TEST');\n            }\n            if (materialInfo.doubleSided) {\n                material.define('fragment', 'DOUBLE_SIDED');\n            }\n\n            material.set(commonProperties);\n        }\n\n        if (materialInfo.alphaMode === 'BLEND') {\n            material.depthMask = false;\n            material.depthTest = true;\n            material.transparent = true;\n        }\n\n        return material;\n    },\n\n    _pbrSpecularGlossinessToStandard: function (materialInfo, specularGlossinessMatInfo, lib) {\n        var alphaTest = materialInfo.alphaMode === 'MASK';\n\n        if (this.useStandardMaterial) {\n            console.error('StandardMaterial doesn\\'t support specular glossiness workflow yet');\n        }\n\n        var material;\n        var diffuseMap, glossinessMap, specularMap, normalMap, emissiveMap, occlusionMap;\n        var enabledTextures = [];\n        // TODO texCoord\n        if (specularGlossinessMatInfo.diffuseTexture) {\n            diffuseMap = lib.textures[specularGlossinessMatInfo.diffuseTexture.index] || null;\n            diffuseMap && enabledTextures.push('diffuseMap');\n        }\n        if (specularGlossinessMatInfo.specularGlossinessTexture) {\n            glossinessMap = specularMap = lib.textures[specularGlossinessMatInfo.specularGlossinessTexture.index] || null;\n            glossinessMap && enabledTextures.push('specularMap', 'glossinessMap');\n        }\n        if (materialInfo.normalTexture) {\n            normalMap = lib.textures[materialInfo.normalTexture.index] || null;\n            normalMap && enabledTextures.push('normalMap');\n        }\n        if (materialInfo.emissiveTexture) {\n            emissiveMap = lib.textures[materialInfo.emissiveTexture.index] || null;\n            emissiveMap && enabledTextures.push('emissiveMap');\n        }\n        if (materialInfo.occlusionTexture) {\n            occlusionMap = lib.textures[materialInfo.occlusionTexture.index] || null;\n            occlusionMap && enabledTextures.push('occlusionMap');\n        }\n        var diffuseColor = specularGlossinessMatInfo.diffuseFactor || [1, 1, 1, 1];\n\n        var commonProperties = {\n            diffuseMap: diffuseMap || null,\n            glossinessMap: glossinessMap || null,\n            specularMap: specularMap || null,\n            normalMap: normalMap || null,\n            emissiveMap: emissiveMap || null,\n            occlusionMap: occlusionMap || null,\n            color: diffuseColor.slice(0, 3),\n            alpha: diffuseColor[3],\n            specularColor: specularGlossinessMatInfo.specularFactor || [1, 1, 1],\n            glossiness: specularGlossinessMatInfo.glossinessFactor || 0,\n            emission: materialInfo.emissiveFactor || [0, 0, 0],\n            emissionIntensity: 1,\n            alphaCutoff: materialInfo.alphaCutoff == null ? 0.9 : materialInfo.alphaCutoff\n        };\n        if (commonProperties.glossinessMap) {\n            // Ignore specularFactor\n            commonProperties.glossiness = 0.5;\n        }\n        if (commonProperties.specularMap) {\n            // Ignore specularFactor\n            commonProperties.specularColor = [1, 1, 1];\n        }\n\n        material = new __WEBPACK_IMPORTED_MODULE_4__Material__[\"a\" /* default */]({\n            name: materialInfo.name,\n            shader: this._getShader()\n        });\n\n        material.define('fragment', 'GLOSSINESS_CHANNEL', 3);\n        material.define('fragment', 'DIFFUSEMAP_ALPHA_ALPHA');\n\n        if (alphaTest) {\n            material.define('fragment', 'ALPHA_TEST');\n        }\n        if (materialInfo.doubleSided) {\n            material.define('fragment', 'DOUBLE_SIDED');\n        }\n\n        material.set(commonProperties);\n\n        if (materialInfo.alphaMode === 'BLEND') {\n            material.depthMask = false;\n            material.depthTest = true;\n            material.transparent = true;\n        }\n\n        return material;\n    },\n\n    _parseMaterials: function (json, lib) {\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.materials, function (materialInfo, idx) {\n            if (materialInfo.extensions && materialInfo.extensions['KHR_materials_common']) {\n                lib.materials[idx] = this._KHRCommonMaterialToStandard(materialInfo, lib);\n            }\n            else if (materialInfo.extensions && materialInfo.extensions['KHR_materials_pbrSpecularGlossiness']) {\n                lib.materials[idx] = this._pbrSpecularGlossinessToStandard(materialInfo, materialInfo.extensions['KHR_materials_pbrSpecularGlossiness'], lib);\n            }\n            else {\n                lib.materials[idx] = this._pbrMetallicRoughnessToStandard(materialInfo, materialInfo.pbrMetallicRoughness || {}, lib);\n            }\n        }, this);\n    },\n\n    _parseMeshes: function (json, lib) {\n        var self = this;\n\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.meshes, function (meshInfo, idx) {\n            lib.meshes[idx] = [];\n            // Geometry\n            for (var pp = 0; pp < meshInfo.primitives.length; pp++) {\n                var primitiveInfo = meshInfo.primitives[pp];\n                var geometry = new __WEBPACK_IMPORTED_MODULE_19__Geometry__[\"a\" /* default */]({\n                    dynamic: false,\n                    // PENDIGN\n                    name: meshInfo.name,\n                    boundingBox: new __WEBPACK_IMPORTED_MODULE_16__math_BoundingBox__[\"a\" /* default */]()\n                });\n                // Parse attributes\n                var semantics = Object.keys(primitiveInfo.attributes);\n                for (var ss = 0; ss < semantics.length; ss++) {\n                    var semantic = semantics[ss];\n                    var accessorIdx = primitiveInfo.attributes[semantic];\n                    var attributeInfo = json.accessors[accessorIdx];\n                    var attributeName = semanticAttributeMap[semantic];\n                    if (!attributeName) {\n                        continue;\n                    }\n                    var size = SIZE_MAP[attributeInfo.type];\n                    var attributeArray = getAccessorData(json, lib, accessorIdx);\n                    // WebGL attribute buffer not support uint32.\n                    // Direct use Float32Array may also have issue.\n                    if (attributeArray instanceof __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint32Array) {\n                        attributeArray = new Float32Array(attributeArray);\n                    }\n                    if (semantic === 'WEIGHTS_0' && size === 4) {\n                        // Weight data in QTEK has only 3 component, the last component can be evaluated since it is normalized\n                        var weightArray = new attributeArray.constructor(attributeInfo.count * 3);\n                        for (var i = 0; i < attributeInfo.count; i++) {\n                            var i4 = i * 4, i3 = i * 3;\n                            var w1 = attributeArray[i4], w2 = attributeArray[i4 + 1], w3 = attributeArray[i4 + 2], w4 = attributeArray[i4 + 3];\n                            var wSum = w1 + w2 + w3 + w4;\n                            weightArray[i3] = w1 / wSum;\n                            weightArray[i3 + 1] = w2 / wSum;\n                            weightArray[i3 + 2] = w3 / wSum;\n                        }\n                        geometry.attributes[attributeName].value = weightArray;\n                    }\n                    else if (semantic === 'COLOR_0' && size === 3) {\n                        var colorArray = new attributeArray.constructor(attributeInfo.count * 4);\n                        for (var i = 0; i < attributeInfo.count; i++) {\n                            var i4 = i * 4, i3 = i * 3;\n                            colorArray[i4] = attributeArray[i3];\n                            colorArray[i4 + 1] = attributeArray[i3 + 1];\n                            colorArray[i4 + 2] = attributeArray[i3 + 2];\n                            colorArray[i4 + 3] = 1;\n                        }\n                        geometry.attributes[attributeName].value = colorArray;\n                    }\n                    else {\n                        geometry.attributes[attributeName].value = attributeArray;\n                    }\n\n                    var attributeType = 'float';\n                    if (attributeArray instanceof __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint16Array) {\n                        attributeType = 'ushort';\n                    }\n                    else if (attributeArray instanceof __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Int16Array) {\n                        attributeType = 'short';\n                    }\n                    else if (attributeArray instanceof __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint8Array) {\n                        attributeType = 'ubyte';\n                    }\n                    else if (attributeArray instanceof __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Int8Array) {\n                        attributeType = 'byte';\n                    }\n                    geometry.attributes[attributeName].type = attributeType;\n\n                    if (semantic === 'POSITION') {\n                        // Bounding Box\n                        var min = attributeInfo.min;\n                        var max = attributeInfo.max;\n                        if (min) {\n                            geometry.boundingBox.min.set(min[0], min[1], min[2]);\n                        }\n                        if (max) {\n                            geometry.boundingBox.max.set(max[0], max[1], max[2]);\n                        }\n                    }\n                }\n\n                // Parse indices\n                if (primitiveInfo.indices != null) {\n                    geometry.indices = getAccessorData(json, lib, primitiveInfo.indices, true);\n                    if (geometry.vertexCount <= 0xffff && geometry.indices instanceof __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint32Array) {\n                        geometry.indices = new __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint16Array(geometry.indices);\n                    }\n                    if(geometry.indices instanceof __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint8Array) {\n                        geometry.indices = new __WEBPACK_IMPORTED_MODULE_2__core_vendor__[\"a\" /* default */].Uint16Array(geometry.indices);\n                    }\n                }\n\n                var material = lib.materials[primitiveInfo.material];\n                var materialInfo = (json.materials || [])[primitiveInfo.material];\n                // Use default material\n                if (!material) {\n                    material = new __WEBPACK_IMPORTED_MODULE_4__Material__[\"a\" /* default */]({\n                        shader: self._getShader()\n                    });\n                }\n                var mesh = new __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */]({\n                    geometry: geometry,\n                    material: material,\n                    mode: [__WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].POINTS, __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].LINES, __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].LINE_LOOP, __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].LINE_STRIP, __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].TRIANGLES, __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].TRIANGLE_STRIP, __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].TRIANGLE_FAN][primitiveInfo.mode] || __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */].TRIANGLES,\n                    ignoreGBuffer: material.transparent\n                });\n                if (materialInfo != null) {\n                    mesh.culling = !materialInfo.doubleSided;\n                }\n                if (!mesh.geometry.attributes.normal.value) {\n                    mesh.geometry.generateVertexNormals();\n                }\n                if (((material instanceof __WEBPACK_IMPORTED_MODULE_5__StandardMaterial__[\"a\" /* default */]) && material.normalMap)\n                    || (material.isTextureEnabled('normalMap'))\n                ) {\n                    if (!mesh.geometry.attributes.tangent.value) {\n                        mesh.geometry.generateTangents();\n                    }\n                }\n                if (mesh.geometry.attributes.color.value) {\n                    mesh.material.define('VERTEX_COLOR');\n                }\n\n                mesh.name = GLTFLoader.generateMeshName(json.meshes, idx, pp);\n\n                lib.meshes[idx].push(mesh);\n            }\n        }, this);\n    },\n\n    _instanceCamera: function (json, nodeInfo) {\n        var cameraInfo = json.cameras[nodeInfo.camera];\n\n        if (cameraInfo.type === 'perspective') {\n            var perspectiveInfo = cameraInfo.perspective || {};\n            return new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */]({\n                name: nodeInfo.name,\n                aspect: perspectiveInfo.aspectRatio,\n                fov: perspectiveInfo.yfov / Math.PI * 180,\n                far: perspectiveInfo.zfar,\n                near: perspectiveInfo.znear\n            });\n        }\n        else {\n            var orthographicInfo = cameraInfo.orthographic || {};\n            return new __WEBPACK_IMPORTED_MODULE_14__camera_Orthographic__[\"a\" /* default */]({\n                name: nodeInfo.name,\n                top: orthographicInfo.ymag,\n                right: orthographicInfo.xmag,\n                left: -orthographicInfo.xmag,\n                bottom: -orthographicInfo.ymag,\n                near: orthographicInfo.znear,\n                far: orthographicInfo.zfar\n            });\n        }\n    },\n\n    _parseNodes: function (json, lib) {\n\n        function instanceMesh(mesh) {\n            return new __WEBPACK_IMPORTED_MODULE_6__Mesh__[\"a\" /* default */]({\n                name: mesh.name,\n                geometry: mesh.geometry,\n                material: mesh.material,\n                culling: mesh.culling,\n                mode: mesh.mode\n            });\n        }\n\n        lib.instancedMeshes = [];\n\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.nodes, function (nodeInfo, idx) {\n            var node;\n            if (nodeInfo.camera != null && this.includeCamera) {\n                node = this._instanceCamera(json, nodeInfo);\n                lib.cameras.push(node);\n            }\n            else if (nodeInfo.mesh != null && this.includeMesh) {\n                var primitives = lib.meshes[nodeInfo.mesh];\n                if (primitives) {\n                    if (primitives.length === 1) {\n                        // Replace the node with mesh directly\n                        node = instanceMesh(primitives[0]);\n                        node.setName(nodeInfo.name);\n                        lib.instancedMeshes.push(node);\n                    }\n                    else {\n                        node = new __WEBPACK_IMPORTED_MODULE_7__Node__[\"a\" /* default */]();\n                        node.setName(nodeInfo.name);\n                        for (var j = 0; j < primitives.length; j++) {\n                            var newMesh = instanceMesh(primitives[j]);\n                            node.add(newMesh);\n                            lib.instancedMeshes.push(newMesh);\n                        }\n                    }\n                }\n            }\n            else {\n                node = new __WEBPACK_IMPORTED_MODULE_7__Node__[\"a\" /* default */]();\n                // PENDING Dulplicate name.\n                node.setName(nodeInfo.name);\n            }\n            if (nodeInfo.matrix) {\n                node.localTransform.setArray(nodeInfo.matrix);\n                node.decomposeLocalTransform();\n            }\n            else {\n                if (nodeInfo.translation) {\n                    node.position.setArray(nodeInfo.translation);\n                }\n                if (nodeInfo.rotation) {\n                    node.rotation.setArray(nodeInfo.rotation);\n                }\n                if (nodeInfo.scale) {\n                    node.scale.setArray(nodeInfo.scale);\n                }\n            }\n\n            lib.nodes[idx] = node;\n        }, this);\n\n        // Build hierarchy\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.nodes, function (nodeInfo, idx) {\n            var node = lib.nodes[idx];\n            if (nodeInfo.children) {\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    var childIdx = nodeInfo.children[i];\n                    var child = lib.nodes[childIdx];\n                    node.add(child);\n                }\n            }\n        });\n        },\n\n    _parseAnimations: function (json, lib) {\n        function checkChannelPath(channelInfo) {\n            if (channelInfo.path === 'weights') {\n                console.warn('GLTFLoader not support morph targets yet.');\n                return false;\n            }\n            return true;\n        }\n\n        function getChannelHash(channelInfo, animationInfo) {\n            return channelInfo.target.node + '_' + animationInfo.samplers[channelInfo.sampler].input;\n        }\n\n        var timeAccessorMultiplied = {};\n        __WEBPACK_IMPORTED_MODULE_1__core_util__[\"a\" /* default */].each(json.animations, function (animationInfo, idx) {\n            var channels = animationInfo.channels.filter(checkChannelPath);\n\n            if (!channels.length) {\n                return;\n            }\n            var tracks = {};\n            for (var i = 0; i < channels.length; i++) {\n                var channelInfo = channels[i];\n                var channelHash = getChannelHash(channelInfo, animationInfo);\n\n                var targetNode = lib.nodes[channelInfo.target.node];\n                var track = tracks[channelHash];\n                var samplerInfo = animationInfo.samplers[channelInfo.sampler];\n\n                if (!track) {\n                    track = tracks[channelHash] = new __WEBPACK_IMPORTED_MODULE_18__animation_SamplerTrack__[\"a\" /* default */]({\n                        name: targetNode ? targetNode.name : '',\n                        target: targetNode\n                    });\n                    track.targetNodeIndex = channelInfo.target.node;\n                    track.channels.time = getAccessorData(json, lib, samplerInfo.input);\n                    var frameLen = track.channels.time.length;\n                    if (!timeAccessorMultiplied[samplerInfo.input]) {\n                        for (var k = 0; k < frameLen; k++) {\n                            track.channels.time[k] *= 1000;\n                        }\n                        timeAccessorMultiplied[samplerInfo.input] = true;\n                    }\n                }\n\n                var interpolation = samplerInfo.interpolation || 'LINEAR';\n                if (interpolation !== 'LINEAR') {\n                    console.warn('GLTFLoader only support LINEAR interpolation.');\n                }\n\n                var path = channelInfo.target.path;\n                if (path === 'translation') {\n                    path = 'position';\n                }\n\n                track.channels[path] = getAccessorData(json, lib, samplerInfo.output);\n            }\n            var tracksList = [];\n            for (var hash in tracks) {\n                tracksList.push(tracks[hash]);\n            }\n            var clip = new __WEBPACK_IMPORTED_MODULE_17__animation_TrackClip__[\"a\" /* default */]({\n                name: animationInfo.name,\n                loop: true,\n                tracks: tracksList\n            });\n            lib.clips.push(clip);\n        }, this);\n\n\n        // PENDING\n        var maxLife = lib.clips.reduce(function (maxTime, clip) {\n            return Math.max(maxTime, clip.life);\n        }, 0);\n        lib.clips.forEach(function (clip) {\n            clip.life = maxLife;\n        });\n\n        return lib.clips;\n    }\n});\n\nGLTFLoader.generateMeshName = function (meshes, idx, primitiveIdx) {\n    var meshInfo = meshes[idx];\n    var meshName = meshInfo.name || ('mesh_' + idx);\n    return primitiveIdx === 0 ? meshName : (meshName + '$' + primitiveIdx);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GLTFLoader);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///44\n");

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__calcAmbientSHLight_glsl_js__ = __webpack_require__(81);\n\n\nvar uniformVec3Prefix = 'uniform vec3 ';\nvar uniformFloatPrefix = 'uniform float ';\nvar exportHeaderPrefix = '@export clay.header.';\nvar exportEnd = '@end';\nvar unconfigurable = ':unconfigurable;';\n/* harmony default export */ __webpack_exports__[\"a\"] = ([\n    exportHeaderPrefix + 'directional_light',\n    uniformVec3Prefix + 'directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'directionalLightColor[DIRECTIONAL_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'ambient_light',\n    uniformVec3Prefix + 'ambientLightColor[AMBIENT_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'ambient_sh_light',\n    uniformVec3Prefix + 'ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]' + unconfigurable,\n    __WEBPACK_IMPORTED_MODULE_0__calcAmbientSHLight_glsl_js__[\"a\" /* default */],\n    exportEnd,\n\n    exportHeaderPrefix + 'ambient_cubemap_light',\n    uniformVec3Prefix + 'ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]' + unconfigurable,\n    'uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]' + unconfigurable,\n    'uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'point_light',\n    uniformVec3Prefix + 'pointLightPosition[POINT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'pointLightRange[POINT_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'pointLightColor[POINT_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'spot_light',\n    uniformVec3Prefix + 'spotLightPosition[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'spotLightDirection[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightRange[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightFalloffFactor[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'spotLightColor[SPOT_LIGHT_COUNT]' + unconfigurable,\n    exportEnd\n].join('\\n'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9oZWFkZXIvbGlnaHQuanM/ZWIyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2FsY0FtYmllbnRTSExpZ2h0RXNzbCBmcm9tICcuL2NhbGNBbWJpZW50U0hMaWdodC5nbHNsLmpzJztcblxudmFyIHVuaWZvcm1WZWMzUHJlZml4ID0gJ3VuaWZvcm0gdmVjMyAnO1xudmFyIHVuaWZvcm1GbG9hdFByZWZpeCA9ICd1bmlmb3JtIGZsb2F0ICc7XG52YXIgZXhwb3J0SGVhZGVyUHJlZml4ID0gJ0BleHBvcnQgY2xheS5oZWFkZXIuJztcbnZhciBleHBvcnRFbmQgPSAnQGVuZCc7XG52YXIgdW5jb25maWd1cmFibGUgPSAnOnVuY29uZmlndXJhYmxlOyc7XG5leHBvcnQgZGVmYXVsdCBbXG4gICAgZXhwb3J0SGVhZGVyUHJlZml4ICsgJ2RpcmVjdGlvbmFsX2xpZ2h0JyxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdkaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9uW0RJUkVDVElPTkFMX0xJR0hUX0NPVU5UXScgKyB1bmNvbmZpZ3VyYWJsZSxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdkaXJlY3Rpb25hbExpZ2h0Q29sb3JbRElSRUNUSU9OQUxfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIGV4cG9ydEVuZCxcblxuICAgIGV4cG9ydEhlYWRlclByZWZpeCArICdhbWJpZW50X2xpZ2h0JyxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdhbWJpZW50TGlnaHRDb2xvcltBTUJJRU5UX0xJR0hUX0NPVU5UXScgKyB1bmNvbmZpZ3VyYWJsZSxcbiAgICBleHBvcnRFbmQsXG5cbiAgICBleHBvcnRIZWFkZXJQcmVmaXggKyAnYW1iaWVudF9zaF9saWdodCcsXG4gICAgdW5pZm9ybVZlYzNQcmVmaXggKyAnYW1iaWVudFNITGlnaHRDb2xvcltBTUJJRU5UX1NIX0xJR0hUX0NPVU5UXScgKyB1bmNvbmZpZ3VyYWJsZSxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdhbWJpZW50U0hMaWdodENvZWZmaWNpZW50c1tBTUJJRU5UX1NIX0xJR0hUX0NPVU5UICogOV0nICsgdW5jb25maWd1cmFibGUsXG4gICAgY2FsY0FtYmllbnRTSExpZ2h0RXNzbCxcbiAgICBleHBvcnRFbmQsXG5cbiAgICBleHBvcnRIZWFkZXJQcmVmaXggKyAnYW1iaWVudF9jdWJlbWFwX2xpZ2h0JyxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdhbWJpZW50Q3ViZW1hcExpZ2h0Q29sb3JbQU1CSUVOVF9DVUJFTUFQX0xJR0hUX0NPVU5UXScgKyB1bmNvbmZpZ3VyYWJsZSxcbiAgICAndW5pZm9ybSBzYW1wbGVyQ3ViZSBhbWJpZW50Q3ViZW1hcExpZ2h0Q3ViZW1hcFtBTUJJRU5UX0NVQkVNQVBfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgICd1bmlmb3JtIHNhbXBsZXIyRCBhbWJpZW50Q3ViZW1hcExpZ2h0QlJERkxvb2t1cFtBTUJJRU5UX0NVQkVNQVBfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIGV4cG9ydEVuZCxcblxuICAgIGV4cG9ydEhlYWRlclByZWZpeCArICdwb2ludF9saWdodCcsXG4gICAgdW5pZm9ybVZlYzNQcmVmaXggKyAncG9pbnRMaWdodFBvc2l0aW9uW1BPSU5UX0xJR0hUX0NPVU5UXScgKyB1bmNvbmZpZ3VyYWJsZSxcbiAgICB1bmlmb3JtRmxvYXRQcmVmaXggKyAncG9pbnRMaWdodFJhbmdlW1BPSU5UX0xJR0hUX0NPVU5UXScgKyB1bmNvbmZpZ3VyYWJsZSxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdwb2ludExpZ2h0Q29sb3JbUE9JTlRfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIGV4cG9ydEVuZCxcblxuICAgIGV4cG9ydEhlYWRlclByZWZpeCArICdzcG90X2xpZ2h0JyxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdzcG90TGlnaHRQb3NpdGlvbltTUE9UX0xJR0hUX0NPVU5UXScgKyB1bmNvbmZpZ3VyYWJsZSxcbiAgICB1bmlmb3JtVmVjM1ByZWZpeCArICdzcG90TGlnaHREaXJlY3Rpb25bU1BPVF9MSUdIVF9DT1VOVF0nICsgdW5jb25maWd1cmFibGUsXG4gICAgdW5pZm9ybUZsb2F0UHJlZml4ICsgJ3Nwb3RMaWdodFJhbmdlW1NQT1RfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIHVuaWZvcm1GbG9hdFByZWZpeCArICdzcG90TGlnaHRVbWJyYUFuZ2xlQ29zaW5lW1NQT1RfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIHVuaWZvcm1GbG9hdFByZWZpeCArICdzcG90TGlnaHRQZW51bWJyYUFuZ2xlQ29zaW5lW1NQT1RfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIHVuaWZvcm1GbG9hdFByZWZpeCArICdzcG90TGlnaHRGYWxsb2ZmRmFjdG9yW1NQT1RfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIHVuaWZvcm1WZWMzUHJlZml4ICsgJ3Nwb3RMaWdodENvbG9yW1NQT1RfTElHSFRfQ09VTlRdJyArIHVuY29uZmlndXJhYmxlLFxuICAgIGV4cG9ydEVuZFxuXS5qb2luKCdcXG4nKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvaGVhZGVyL2xpZ2h0LmpzXG4vLyBtb2R1bGUgaWQgPSA0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45\n");

/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Plane__ = __webpack_require__(82);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__ = __webpack_require__(3);\n\n\n\n\n\nvar vec3Set = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].set;\nvar vec3Copy = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].copy;\nvar vec3TranformMat4 = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].transformMat4;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @constructor\n * @alias clay.Frustum\n */\nvar Frustum = function() {\n\n    /**\n     * Eight planes to enclose the frustum\n     * @type {clay.Plane[]}\n     */\n    this.planes = [];\n\n    for (var i = 0; i < 6; i++) {\n        this.planes.push(new __WEBPACK_IMPORTED_MODULE_1__Plane__[\"a\" /* default */]());\n    }\n\n    /**\n     * Bounding box of frustum\n     * @type {clay.BoundingBox}\n     */\n    this.boundingBox = new __WEBPACK_IMPORTED_MODULE_0__BoundingBox__[\"a\" /* default */]();\n\n    /**\n     * Eight vertices of frustum\n     * @type {Float32Array[]}\n     */\n    this.vertices = [];\n    for (var i = 0; i < 8; i++) {\n        this.vertices[i] = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].fromValues(0, 0, 0);\n    }\n};\n\nFrustum.prototype = {\n\n    // http://web.archive.org/web/20120531231005/http://crazyjoke.free.fr/doc/3D/plane%20extraction.pdf\n    /**\n     * Set frustum from a projection matrix\n     * @param {clay.Matrix4} projectionMatrix\n     */\n    setFromProjection: function(projectionMatrix) {\n\n        var planes = this.planes;\n        var m = projectionMatrix.array;\n        var m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3];\n        var m4 = m[4], m5 = m[5], m6 = m[6], m7 = m[7];\n        var m8 = m[8], m9 = m[9], m10 = m[10], m11 = m[11];\n        var m12 = m[12], m13 = m[13], m14 = m[14], m15 = m[15];\n\n        // Update planes\n        vec3Set(planes[0].normal.array, m3 - m0, m7 - m4, m11 - m8);\n        planes[0].distance = -(m15 - m12);\n        planes[0].normalize();\n\n        vec3Set(planes[1].normal.array, m3 + m0, m7 + m4, m11 + m8);\n        planes[1].distance = -(m15 + m12);\n        planes[1].normalize();\n\n        vec3Set(planes[2].normal.array, m3 + m1, m7 + m5, m11 + m9);\n        planes[2].distance = -(m15 + m13);\n        planes[2].normalize();\n\n        vec3Set(planes[3].normal.array, m3 - m1, m7 - m5, m11 - m9);\n        planes[3].distance = -(m15 - m13);\n        planes[3].normalize();\n\n        vec3Set(planes[4].normal.array, m3 - m2, m7 - m6, m11 - m10);\n        planes[4].distance = -(m15 - m14);\n        planes[4].normalize();\n\n        vec3Set(planes[5].normal.array, m3 + m2, m7 + m6, m11 + m10);\n        planes[5].distance = -(m15 + m14);\n        planes[5].normalize();\n\n        // Perspective projection\n        var boundingBox = this.boundingBox;\n        var vertices = this.vertices;\n        if (m15 === 0)  {\n            var aspect = m5 / m0;\n            var zNear = -m14 / (m10 - 1);\n            var zFar = -m14 / (m10 + 1);\n            var farY = -zFar / m5;\n            var nearY = -zNear / m5;\n            // Update bounding box\n            boundingBox.min.set(-farY * aspect, -farY, zFar);\n            boundingBox.max.set(farY * aspect, farY, zNear);\n            // update vertices\n            //--- min z\n            // min x\n            vec3Set(vertices[0], -farY * aspect, -farY, zFar);\n            vec3Set(vertices[1], -farY * aspect, farY, zFar);\n            // max x\n            vec3Set(vertices[2], farY * aspect, -farY, zFar);\n            vec3Set(vertices[3], farY * aspect, farY, zFar);\n            //-- max z\n            vec3Set(vertices[4], -nearY * aspect, -nearY, zNear);\n            vec3Set(vertices[5], -nearY * aspect, nearY, zNear);\n            vec3Set(vertices[6], nearY * aspect, -nearY, zNear);\n            vec3Set(vertices[7], nearY * aspect, nearY, zNear);\n        }\n        else { // Orthographic projection\n            var left = (-1 - m12) / m0;\n            var right = (1 - m12) / m0;\n            var top = (1 - m13) / m5;\n            var bottom = (-1 - m13) / m5;\n            var near = (-1 - m14) / m10;\n            var far = (1 - m14) / m10;\n\n\n            boundingBox.min.set(Math.min(left, right), Math.min(bottom, top), Math.min(far, near));\n            boundingBox.max.set(Math.max(right, left), Math.max(top, bottom), Math.max(near, far));\n\n            var min = boundingBox.min.array;\n            var max = boundingBox.max.array;\n            //--- min z\n            // min x\n            vec3Set(vertices[0], min[0], min[1], min[2]);\n            vec3Set(vertices[1], min[0], max[1], min[2]);\n            // max x\n            vec3Set(vertices[2], max[0], min[1], min[2]);\n            vec3Set(vertices[3], max[0], max[1], min[2]);\n            //-- max z\n            vec3Set(vertices[4], min[0], min[1], max[2]);\n            vec3Set(vertices[5], min[0], max[1], max[2]);\n            vec3Set(vertices[6], max[0], min[1], max[2]);\n            vec3Set(vertices[7], max[0], max[1], max[2]);\n        }\n    },\n\n    /**\n     * Apply a affine transform matrix and set to the given bounding box\n     * @function\n     * @param {clay.BoundingBox}\n     * @param {clay.Matrix4}\n     * @return {clay.BoundingBox}\n     */\n    getTransformedBoundingBox: (function() {\n\n        var tmpVec3 = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].create();\n\n        return function(bbox, matrix) {\n            var vertices = this.vertices;\n\n            var m4 = matrix.array;\n            var min = bbox.min;\n            var max = bbox.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            var v = vertices[0];\n            vec3TranformMat4(tmpVec3, v, m4);\n            vec3Copy(minArr, tmpVec3);\n            vec3Copy(maxArr, tmpVec3);\n\n            for (var i = 1; i < 8; i++) {\n                v = vertices[i];\n                vec3TranformMat4(tmpVec3, v, m4);\n\n                minArr[0] = mathMin(tmpVec3[0], minArr[0]);\n                minArr[1] = mathMin(tmpVec3[1], minArr[1]);\n                minArr[2] = mathMin(tmpVec3[2], minArr[2]);\n\n                maxArr[0] = mathMax(tmpVec3[0], maxArr[0]);\n                maxArr[1] = mathMax(tmpVec3[1], maxArr[1]);\n                maxArr[2] = mathMax(tmpVec3[2], maxArr[2]);\n            }\n\n            min._dirty = true;\n            max._dirty = true;\n\n            return bbox;\n        };\n    }) ()\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (Frustum);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///46\n");

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__ = __webpack_require__(3);\n\n\n\nvar EPSILON = 1e-5;\n\n/**\n * @constructor\n * @alias clay.Ray\n * @param {clay.Vector3} [origin]\n * @param {clay.Vector3} [direction]\n */\nvar Ray = function (origin, direction) {\n    /**\n     * @type {clay.Vector3}\n     */\n    this.origin = origin || new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n    /**\n     * @type {clay.Vector3}\n     */\n    this.direction = direction || new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n};\n\nRay.prototype = {\n\n    constructor: Ray,\n\n    // http://www.siggraph.org/education/materials/HyperGraph/raytrace/rayplane_intersection.htm\n    /**\n     * Calculate intersection point between ray and a give plane\n     * @param  {clay.Plane} plane\n     * @param  {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    intersectPlane: function (plane, out) {\n        var pn = plane.normal.array;\n        var d = plane.distance;\n        var ro = this.origin.array;\n        var rd = this.direction.array;\n\n        var divider = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(pn, rd);\n        // ray is parallel to the plane\n        if (divider === 0) {\n            return null;\n        }\n        if (!out) {\n            out = new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n        }\n        var t = (__WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(pn, ro) - d) / divider;\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, ro, rd, -t);\n        out._dirty = true;\n        return out;\n    },\n\n    /**\n     * Mirror the ray against plane\n     * @param  {clay.Plane} plane\n     */\n    mirrorAgainstPlane: function (plane) {\n        // Distance to plane\n        var d = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(plane.normal.array, this.direction.array);\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(this.direction.array, this.direction.array, plane.normal.array, -d * 2);\n        this.direction._dirty = true;\n    },\n\n    distanceToPoint: (function () {\n        var v = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        return function (point) {\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(v, point, this.origin.array);\n            // Distance from projection point to origin\n            var b = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(v, this.direction.array);\n            if (b < 0) {\n                return __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].distance(this.origin.array, point);\n            }\n            // Squared distance from center to origin\n            var c2 = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].lenSquared(v);\n            // Squared distance from center to projection point\n            return Math.sqrt(c2 - b * b);\n        };\n    })(),\n\n    /**\n     * Calculate intersection point between ray and sphere\n     * @param  {clay.Vector3} center\n     * @param  {number} radius\n     * @param  {clay.Vector3} out\n     * @return {clay.Vector3}\n     */\n    intersectSphere: (function () {\n        var v = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        return function (center, radius, out) {\n            var origin = this.origin.array;\n            var direction = this.direction.array;\n            center = center.array;\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(v, center, origin);\n            // Distance from projection point to origin\n            var b = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(v, direction);\n            // Squared distance from center to origin\n            var c2 = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].squaredLength(v);\n            // Squared distance from center to projection point\n            var d2 = c2 - b * b;\n\n            var r2 = radius * radius;\n            // No intersection\n            if (d2 > r2) {\n                return;\n            }\n\n            var a = Math.sqrt(r2 - d2);\n            // First intersect point\n            var t0 = b - a;\n            // Second intersect point\n            var t1 = b + a;\n\n            if (!out) {\n                out = new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n            }\n            if (t0 < 0) {\n                if (t1 < 0) {\n                    return null;\n                }\n                else {\n                    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, origin, direction, t1);\n                    return out;\n                }\n            }\n            else {\n                __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, origin, direction, t0);\n                return out;\n            }\n        };\n    })(),\n\n    // http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\n    /**\n     * Calculate intersection point between ray and bounding box\n     * @param {clay.BoundingBox} bbox\n     * @param {clay.Vector3}\n     * @return {clay.Vector3}\n     */\n    intersectBoundingBox: function (bbox, out) {\n        var dir = this.direction.array;\n        var origin = this.origin.array;\n        var min = bbox.min.array;\n        var max = bbox.max.array;\n\n        var invdirx = 1 / dir[0];\n        var invdiry = 1 / dir[1];\n        var invdirz = 1 / dir[2];\n\n        var tmin, tmax, tymin, tymax, tzmin, tzmax;\n        if (invdirx >= 0) {\n            tmin = (min[0] - origin[0]) * invdirx;\n            tmax = (max[0] - origin[0]) * invdirx;\n        }\n        else {\n            tmax = (min[0] - origin[0]) * invdirx;\n            tmin = (max[0] - origin[0]) * invdirx;\n        }\n        if (invdiry >= 0) {\n            tymin = (min[1] - origin[1]) * invdiry;\n            tymax = (max[1] - origin[1]) * invdiry;\n        }\n        else {\n            tymax = (min[1] - origin[1]) * invdiry;\n            tymin = (max[1] - origin[1]) * invdiry;\n        }\n\n        if ((tmin > tymax) || (tymin > tmax)) {\n            return null;\n        }\n\n        if (tymin > tmin || tmin !== tmin) {\n            tmin = tymin;\n        }\n        if (tymax < tmax || tmax !== tmax) {\n            tmax = tymax;\n        }\n\n        if (invdirz >= 0) {\n            tzmin = (min[2] - origin[2]) * invdirz;\n            tzmax = (max[2] - origin[2]) * invdirz;\n        }\n        else {\n            tzmax = (min[2] - origin[2]) * invdirz;\n            tzmin = (max[2] - origin[2]) * invdirz;\n        }\n\n        if ((tmin > tzmax) || (tzmin > tmax)) {\n            return null;\n        }\n\n        if (tzmin > tmin || tmin !== tmin) {\n            tmin = tzmin;\n        }\n        if (tzmax < tmax || tmax !== tmax) {\n            tmax = tzmax;\n        }\n        if (tmax < 0) {\n            return null;\n        }\n\n        var t = tmin >= 0 ? tmin : tmax;\n\n        if (!out) {\n            out = new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n        }\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, origin, dir, t);\n        return out;\n    },\n\n    // http://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm\n    /**\n     * Calculate intersection point between ray and three triangle vertices\n     * @param {clay.Vector3} a\n     * @param {clay.Vector3} b\n     * @param {clay.Vector3} c\n     * @param {boolean}           singleSided, CW triangle will be ignored\n     * @param {clay.Vector3} [out]\n     * @param {clay.Vector3} [barycenteric] barycentric coords\n     * @return {clay.Vector3}\n     */\n    intersectTriangle: (function () {\n\n        var eBA = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var eCA = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var AO = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n        var vCross = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n\n        return function (a, b, c, singleSided, out, barycenteric) {\n            var dir = this.direction.array;\n            var origin = this.origin.array;\n            a = a.array;\n            b = b.array;\n            c = c.array;\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(eBA, b, a);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(eCA, c, a);\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].cross(vCross, eCA, dir);\n\n            var det = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(eBA, vCross);\n\n            if (singleSided) {\n                if (det > -EPSILON) {\n                    return null;\n                }\n            }\n            else {\n                if (det > -EPSILON && det < EPSILON) {\n                    return null;\n                }\n            }\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(AO, origin, a);\n            var u = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(vCross, AO) / det;\n            if (u < 0 || u > 1) {\n                return null;\n            }\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].cross(vCross, eBA, AO);\n            var v = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(dir, vCross) / det;\n\n            if (v < 0 || v > 1 || (u + v > 1)) {\n                return null;\n            }\n\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].cross(vCross, eBA, eCA);\n            var t = -__WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].dot(AO, vCross) / det;\n\n            if (t < 0) {\n                return null;\n            }\n\n            if (!out) {\n                out = new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n            }\n            if (barycenteric) {\n                __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].set(barycenteric, (1 - u - v), u, v);\n            }\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, origin, dir, t);\n\n            return out;\n        };\n    })(),\n\n    /**\n     * Apply an affine transform matrix to the ray\n     * @return {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n        __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].add(this.direction, this.direction, this.origin);\n        __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].transformMat4(this.origin, this.origin, matrix);\n        __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].transformMat4(this.direction, this.direction, matrix);\n\n        __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].sub(this.direction, this.direction, this.origin);\n        __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].normalize(this.direction, this.direction);\n    },\n\n    /**\n     * Copy values from another ray\n     * @param {clay.Ray} ray\n     */\n    copy: function (ray) {\n        __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].copy(this.origin, ray.origin);\n        __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */].copy(this.direction, ray.direction);\n    },\n\n    /**\n     * Clone a new ray\n     * @return {clay.Ray}\n     */\n    clone: function () {\n        var ray = new Ray();\n        ray.copy(this);\n        return ray;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Ray);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///47\n");

/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"\\n@export clay.standard.chunk.varying\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\nvarying vec3 v_Barycentric;\\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\n#endif\\n#if defined(AOMAP_ENABLED)\\nvarying vec2 v_Texcoord2;\\n#endif\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n@end\\n@export clay.standard.chunk.light_header\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\\n@import clay.header.ambient_cubemap_light\\n#endif\\n#ifdef POINT_LIGHT_COUNT\\n@import clay.header.point_light\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n#ifdef SPOT_LIGHT_COUNT\\n@import clay.header.spot_light\\n#endif\\n@end\\n@export clay.standard.vertex\\n#define SHADER_NAME standard\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\\nuniform mat4 world : WORLD;\\nuniform vec2 uvRepeat = vec2(1.0, 1.0);\\nuniform vec2 uvOffset = vec2(0.0, 0.0);\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\n#if defined(AOMAP_ENABLED)\\nattribute vec2 texcoord2 : TEXCOORD_1;\\n#endif\\nattribute vec3 normal : NORMAL;\\nattribute vec4 tangent : TANGENT;\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\n#endif\\nattribute vec3 barycentric;\\n@import clay.standard.chunk.varying\\n@import clay.chunk.skinning_header\\n@import clay.chunk.instancing_header\\nvoid main()\\n{\\n vec4 skinnedPosition = vec4(position, 1.0);\\n vec4 skinnedNormal = vec4(normal, 0.0);\\n vec4 skinnedTangent = vec4(tangent.xyz, 0.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n skinnedPosition = skinMatrixWS * skinnedPosition;\\n skinnedNormal = skinMatrixWS * skinnedNormal;\\n skinnedTangent = skinMatrixWS * skinnedTangent;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n skinnedPosition = instanceMat * skinnedPosition;\\n skinnedNormal = instanceMat * skinnedNormal;\\n skinnedTangent = instanceMat * skinnedTangent;\\n#endif\\n gl_Position = worldViewProjection * skinnedPosition;\\n v_Texcoord = texcoord * uvRepeat + uvOffset;\\n v_WorldPosition = (world * skinnedPosition).xyz;\\n v_Barycentric = barycentric;\\n v_Normal = normalize((worldInverseTranspose * skinnedNormal).xyz);\\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\\n v_Tangent = normalize((worldInverseTranspose * skinnedTangent).xyz);\\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\\n#endif\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n#if defined(AOMAP_ENABLED)\\n v_Texcoord2 = texcoord2;\\n#endif\\n}\\n@end\\n@export clay.standard.fragment\\n#define PI 3.14159265358979\\n#define GLOSSINESS_CHANNEL 0\\n#define ROUGHNESS_CHANNEL 0\\n#define METALNESS_CHANNEL 1\\n#define DIFFUSEMAP_ALPHA_ALPHA\\n@import clay.standard.chunk.varying\\nuniform mat4 viewInverse : VIEWINVERSE;\\n#ifdef NORMALMAP_ENABLED\\nuniform sampler2D normalMap;\\n#endif\\nuniform float normalScale: 1.0;\\n#ifdef DIFFUSEMAP_ENABLED\\nuniform sampler2D diffuseMap;\\n#endif\\n#ifdef SPECULARMAP_ENABLED\\nuniform sampler2D specularMap;\\n#endif\\n#ifdef USE_ROUGHNESS\\nuniform float roughness : 0.5;\\n #ifdef ROUGHNESSMAP_ENABLED\\nuniform sampler2D roughnessMap;\\n #endif\\n#else\\nuniform float glossiness: 0.5;\\n #ifdef GLOSSINESSMAP_ENABLED\\nuniform sampler2D glossinessMap;\\n #endif\\n#endif\\n#ifdef METALNESSMAP_ENABLED\\nuniform sampler2D metalnessMap;\\n#endif\\n#ifdef OCCLUSIONMAP_ENABLED\\nuniform sampler2D occlusionMap;\\n#endif\\n#ifdef ENVIRONMENTMAP_ENABLED\\nuniform samplerCube environmentMap;\\n #ifdef PARALLAX_CORRECTED\\nuniform vec3 environmentBoxMin;\\nuniform vec3 environmentBoxMax;\\n #endif\\n#endif\\n#ifdef BRDFLOOKUP_ENABLED\\nuniform sampler2D brdfLookup;\\n#endif\\n#ifdef EMISSIVEMAP_ENABLED\\nuniform sampler2D emissiveMap;\\n#endif\\n#ifdef SSAOMAP_ENABLED\\nuniform sampler2D ssaoMap;\\nuniform vec4 viewport : VIEWPORT;\\n#endif\\n#ifdef AOMAP_ENABLED\\nuniform sampler2D aoMap;\\nuniform float aoIntensity;\\n#endif\\nuniform vec3 color : [1.0, 1.0, 1.0];\\nuniform float alpha : 1.0;\\n#ifdef ALPHA_TEST\\nuniform float alphaCutoff: 0.9;\\n#endif\\n#ifdef USE_METALNESS\\nuniform float metalness : 0.0;\\n#else\\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\\n#endif\\nuniform vec3 emission : [0.0, 0.0, 0.0];\\nuniform float emissionIntensity: 1;\\nuniform float lineWidth : 0.0;\\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\\n#ifdef ENVIRONMENTMAP_PREFILTER\\nuniform float maxMipmapLevel: 5;\\n#endif\\n@import clay.standard.chunk.light_header\\n@import clay.util.calculate_attenuation\\n@import clay.util.edge_factor\\n@import clay.util.rgbm\\n@import clay.util.srgb\\n@import clay.plugin.compute_shadow_map\\n@import clay.util.parallax_correct\\n@import clay.util.ACES\\nfloat G_Smith(float g, float ndv, float ndl)\\n{\\n float roughness = 1.0 - g;\\n float k = roughness * roughness / 2.0;\\n float G1V = ndv / (ndv * (1.0 - k) + k);\\n float G1L = ndl / (ndl * (1.0 - k) + k);\\n return G1L * G1V;\\n}\\nvec3 F_Schlick(float ndv, vec3 spec) {\\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\\n}\\nfloat D_Phong(float g, float ndh) {\\n float a = pow(8192.0, g);\\n return (a + 2.0) / 8.0 * pow(ndh, a);\\n}\\nfloat D_GGX(float g, float ndh) {\\n float r = 1.0 - g;\\n float a = r * r;\\n float tmp = ndh * ndh * (a - 1.0) + 1.0;\\n return a / (PI * tmp * tmp);\\n}\\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\\nuniform float parallaxOcclusionScale : 0.02;\\nuniform float parallaxMaxLayers : 20;\\nuniform float parallaxMinLayers : 5;\\nuniform sampler2D parallaxOcclusionMap;\\nmat3 transpose(in mat3 inMat)\\n{\\n vec3 i0 = inMat[0];\\n vec3 i1 = inMat[1];\\n vec3 i2 = inMat[2];\\n return mat3(\\n vec3(i0.x, i1.x, i2.x),\\n vec3(i0.y, i1.y, i2.y),\\n vec3(i0.z, i1.z, i2.z)\\n );\\n}\\nvec2 parallaxUv(vec2 uv, vec3 viewDir)\\n{\\n float numLayers = mix(parallaxMaxLayers, parallaxMinLayers, abs(dot(vec3(0.0, 0.0, 1.0), viewDir)));\\n float layerHeight = 1.0 / numLayers;\\n float curLayerHeight = 0.0;\\n vec2 deltaUv = viewDir.xy * parallaxOcclusionScale / (viewDir.z * numLayers);\\n vec2 curUv = uv;\\n float height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\\n for (int i = 0; i < 30; i++) {\\n curLayerHeight += layerHeight;\\n curUv -= deltaUv;\\n height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\\n if (height < curLayerHeight) {\\n break;\\n }\\n }\\n vec2 prevUv = curUv + deltaUv;\\n float next = height - curLayerHeight;\\n float prev = 1.0 - texture2D(parallaxOcclusionMap, prevUv).r - curLayerHeight + layerHeight;\\n return mix(curUv, prevUv, next / (next - prev));\\n}\\n#endif\\nvoid main() {\\n vec4 albedoColor = vec4(color, alpha);\\n#ifdef VERTEX_COLOR\\n albedoColor *= v_Color;\\n#endif\\n#ifdef SRGB_DECODE\\n albedoColor = sRGBToLinear(albedoColor);\\n#endif\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n vec2 uv = v_Texcoord;\\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\\n#endif\\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\\n uv = parallaxUv(v_Texcoord, normalize(transpose(tbn) * -V));\\n#endif\\n#ifdef DIFFUSEMAP_ENABLED\\n vec4 texel = texture2D(diffuseMap, uv);\\n #ifdef SRGB_DECODE\\n texel = sRGBToLinear(texel);\\n #endif\\n albedoColor.rgb *= texel.rgb;\\n #ifdef DIFFUSEMAP_ALPHA_ALPHA\\n albedoColor.a *= texel.a;\\n #endif\\n#endif\\n#ifdef USE_METALNESS\\n float m = metalness;\\n #ifdef METALNESSMAP_ENABLED\\n float m2 = texture2D(metalnessMap, uv)[METALNESS_CHANNEL];\\n m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\\n #endif\\n vec3 baseColor = albedoColor.rgb;\\n albedoColor.rgb = baseColor * (1.0 - m);\\n vec3 spec = mix(vec3(0.04), baseColor, m);\\n#else\\n vec3 spec = specularColor;\\n#endif\\n#ifdef USE_ROUGHNESS\\n float g = clamp(1.0 - roughness, 0.0, 1.0);\\n #ifdef ROUGHNESSMAP_ENABLED\\n float g2 = 1.0 - texture2D(roughnessMap, uv)[ROUGHNESS_CHANNEL];\\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\\n #endif\\n#else\\n float g = glossiness;\\n #ifdef GLOSSINESSMAP_ENABLED\\n float g2 = texture2D(glossinessMap, uv)[GLOSSINESS_CHANNEL];\\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\\n #endif\\n#endif\\n#ifdef SPECULARMAP_ENABLED\\n spec *= sRGBToLinear(texture2D(specularMap, uv)).rgb;\\n#endif\\n vec3 N = v_Normal;\\n#ifdef DOUBLE_SIDED\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n#endif\\n#ifdef NORMALMAP_ENABLED\\n if (dot(v_Tangent, v_Tangent) > 0.0) {\\n vec3 normalTexel = texture2D(normalMap, uv).xyz;\\n if (dot(normalTexel, normalTexel) > 0.0) { N = (normalTexel * 2.0 - 1.0);\\n N = normalize(N * vec3(normalScale, normalScale, 1.0));\\n tbn[1] = -tbn[1];\\n N = normalize(tbn * N);\\n }\\n }\\n#endif\\n vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\\n vec3 specularTerm = vec3(0.0, 0.0, 0.0);\\n float ndv = clamp(dot(N, V), 0.0, 1.0);\\n vec3 fresnelTerm = F_Schlick(ndv, spec);\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseTerm += ambientLightColor[_idx_];\\n }}\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseTerm += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\\n }}\\n#endif\\n#ifdef POINT_LIGHT_COUNT\\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsPoint[POINT_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\\n }\\n#endif\\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_COUNT; _idx_++)\\n {{\\n vec3 lightPosition = pointLightPosition[_idx_];\\n vec3 lc = pointLightColor[_idx_];\\n float range = pointLightRange[_idx_];\\n vec3 L = lightPosition - v_WorldPosition;\\n float dist = length(L);\\n float attenuation = lightAttenuation(dist, range);\\n L /= dist;\\n vec3 H = normalize(L + V);\\n float ndl = clamp(dot(N, L), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n float shadowContrib = 1.0;\\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\\n if(shadowEnabled)\\n {\\n shadowContrib = shadowContribsPoint[_idx_];\\n }\\n#endif\\n vec3 li = lc * ndl * attenuation * shadowContrib;\\n diffuseTerm += li;\\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\\n }}\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\\n {{\\n vec3 L = -normalize(directionalLightDirection[_idx_]);\\n vec3 lc = directionalLightColor[_idx_];\\n vec3 H = normalize(L + V);\\n float ndl = clamp(dot(N, L), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if(shadowEnabled)\\n {\\n shadowContrib = shadowContribsDir[_idx_];\\n }\\n#endif\\n vec3 li = lc * ndl * shadowContrib;\\n diffuseTerm += li;\\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\\n }}\\n#endif\\n#ifdef SPOT_LIGHT_COUNT\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsSpot[SPOT_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\\n }\\n#endif\\n for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\\n {\\n vec3 lightPosition = spotLightPosition[i];\\n vec3 spotLightDirection = -normalize(spotLightDirection[i]);\\n vec3 lc = spotLightColor[i];\\n float range = spotLightRange[i];\\n float a = spotLightUmbraAngleCosine[i];\\n float b = spotLightPenumbraAngleCosine[i];\\n float falloffFactor = spotLightFalloffFactor[i];\\n vec3 L = lightPosition - v_WorldPosition;\\n float dist = length(L);\\n float attenuation = lightAttenuation(dist, range);\\n L /= dist;\\n float c = dot(spotLightDirection, L);\\n float falloff;\\n falloff = clamp((c - a) /(b - a), 0.0, 1.0);\\n falloff = pow(falloff, falloffFactor);\\n vec3 H = normalize(L + V);\\n float ndl = clamp(dot(N, L), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n float shadowContrib = 1.0;\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\\n if (shadowEnabled)\\n {\\n shadowContrib = shadowContribsSpot[i];\\n }\\n#endif\\n vec3 li = lc * attenuation * (1.0 - falloff) * shadowContrib * ndl;\\n diffuseTerm += li;\\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\\n }\\n#endif\\n vec4 outColor = albedoColor;\\n outColor.rgb *= max(diffuseTerm, vec3(0.0));\\n outColor.rgb += max(specularTerm, vec3(0.0));\\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\\n vec3 L = reflect(-V, N);\\n float rough2 = clamp(1.0 - g, 0.0, 1.0);\\n float bias2 = rough2 * 5.0;\\n vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\\n vec3 envWeight2 = spec * brdfParam2.x + brdfParam2.y;\\n vec3 envTexel2;\\n for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\\n {{\\n #ifdef SUPPORT_TEXTURE_LOD\\n envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 8.12);\\n #else\\n envTexel2 = RGBMDecode(textureCube(ambientCubemapLightCubemap[_idx_], L), 8.12);\\n #endif\\n outColor.rgb += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2;\\n }}\\n#endif\\n#ifdef ENVIRONMENTMAP_ENABLED\\n vec3 envWeight = g * fresnelTerm;\\n vec3 L = reflect(-V, N);\\n #ifdef PARALLAX_CORRECTED\\n L = parallaxCorrect(L, v_WorldPosition, environmentBoxMin, environmentBoxMax);\\n#endif\\n #ifdef ENVIRONMENTMAP_PREFILTER\\n float rough = clamp(1.0 - g, 0.0, 1.0);\\n float bias = rough * maxMipmapLevel;\\n #ifdef SUPPORT_TEXTURE_LOD\\n vec3 envTexel = decodeHDR(textureCubeLodEXT(environmentMap, L, bias)).rgb;\\n #else\\n vec3 envTexel = decodeHDR(textureCube(environmentMap, L)).rgb;\\n #endif\\n #ifdef BRDFLOOKUP_ENABLED\\n vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\\n envWeight = spec * brdfParam.x + brdfParam.y;\\n #endif\\n #else\\n vec3 envTexel = textureCube(environmentMap, L).xyz;\\n #endif\\n outColor.rgb += envTexel * envWeight;\\n#endif\\n float aoFactor = 1.0;\\n#ifdef SSAOMAP_ENABLED\\n aoFactor = min(texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r, aoFactor);\\n#endif\\n#ifdef AOMAP_ENABLED\\n aoFactor = min(1.0 - clamp((1.0 - texture2D(aoMap, v_Texcoord2).r) * aoIntensity, 0.0, 1.0), aoFactor);\\n#endif\\n#ifdef OCCLUSIONMAP_ENABLED\\n aoFactor = min(1.0 - clamp((1.0 - texture2D(occlusionMap, v_Texcoord).r), 0.0, 1.0), aoFactor);\\n#endif\\n outColor.rgb *= aoFactor;\\n vec3 lEmission = emission;\\n#ifdef EMISSIVEMAP_ENABLED\\n lEmission *= texture2D(emissiveMap, uv).rgb;\\n#endif\\n outColor.rgb += lEmission * emissionIntensity;\\n if(lineWidth > 0.)\\n {\\n outColor.rgb = mix(outColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\\n }\\n#ifdef ALPHA_TEST\\n if (outColor.a < alphaCutoff) {\\n discard;\\n }\\n#endif\\n#ifdef TONEMAPPING\\n outColor.rgb = ACESToneMapping(outColor.rgb);\\n#endif\\n#ifdef SRGB_ENCODE\\n outColor = linearTosRGB(outColor);\\n#endif\\n gl_FragColor = encodeHDR(outColor);\\n}\\n@end\\n@export clay.standardMR.vertex\\n@import clay.standard.vertex\\n@end\\n@export clay.standardMR.fragment\\n#define USE_METALNESS\\n#define USE_ROUGHNESS\\n@import clay.standard.fragment\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///48\n");

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Node__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n\n\n\n/**\n * @constructor\n * @alias clay.Renderable\n * @extends clay.Node\n */\nvar Renderable = __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].extend(/** @lends clay.Renderable# */ {\n    /**\n     * @type {clay.Material}\n     */\n    material: null,\n\n    /**\n     * @type {clay.Geometry}\n     */\n    geometry: null,\n\n    /**\n     * @type {number}\n     */\n    mode: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].TRIANGLES,\n\n    _renderInfo: null\n},\n/** @lends clay.Renderable.prototype */\n{\n\n    __program: null,\n\n    /**\n     * Group of received light.\n     */\n    lightGroup: 0,\n    /**\n     * Render order, Nodes with smaller value renders before nodes with larger values.\n     * @type {Number}\n     */\n    renderOrder: 0,\n\n    /**\n     * Used when mode is LINES, LINE_STRIP or LINE_LOOP\n     * @type {number}\n     */\n    // lineWidth: 1,\n\n    /**\n     * If enable culling\n     * @type {boolean}\n     */\n    culling: true,\n    /**\n     * Specify which side of polygon will be culled.\n     * Possible values:\n     *  + {@link clay.Renderable.BACK}\n     *  + {@link clay.Renderable.FRONT}\n     *  + {@link clay.Renderable.FRONT_AND_BACK}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace\n     * @type {number}\n     */\n    cullFace: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].BACK,\n    /**\n     * Specify which side is front face.\n     * Possible values:\n     *  + {@link clay.Renderable.CW}\n     *  + {@link clay.Renderable.CCW}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace\n     * @type {number}\n     */\n    frontFace: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CCW,\n\n    /**\n     * If enable software frustum culling\n     * @type {boolean}\n     */\n    frustumCulling: true,\n    /**\n     * @type {boolean}\n     */\n    receiveShadow: true,\n    /**\n     * @type {boolean}\n     */\n    castShadow: true,\n    /**\n     * @type {boolean}\n     */\n    ignorePicking: false,\n    /**\n     * @type {boolean}\n     */\n    ignorePreZ: false,\n\n    /**\n     * @type {boolean}\n     */\n    ignoreGBuffer: false,\n\n    /**\n     * @return {boolean}\n     */\n    isRenderable: function() {\n        // TODO Shader ?\n        return this.geometry && this.material && this.material.shader && !this.invisible\n            && this.geometry.vertexCount > 0;\n    },\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    beforeRender: function (_gl) {},\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    afterRender: function (_gl, renderStat) {},\n\n    getBoundingBox: function (filter, out) {\n        out = __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].prototype.getBoundingBox.call(this, filter, out);\n        if (this.geometry && this.geometry.boundingBox) {\n            out.union(this.geometry.boundingBox);\n        }\n\n        return out;\n    },\n\n    /**\n     * Clone a new renderable\n     * @function\n     * @return {clay.Renderable}\n     */\n    clone: (function() {\n        var properties = [\n            'castShadow', 'receiveShadow',\n            'mode', 'culling', 'cullFace', 'frontFace',\n            'frustumCulling',\n            'renderOrder', 'lineWidth',\n            'ignorePicking', 'ignorePreZ', 'ignoreGBuffer'\n        ];\n        return function() {\n            var renderable = __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* default */].prototype.clone.call(this);\n\n            renderable.geometry = this.geometry;\n            renderable.material = this.material;\n\n            for (var i = 0; i < properties.length; i++) {\n                var name = properties[i];\n                // Try not to overwrite the prototype property\n                if (renderable[name] !== this[name]) {\n                    renderable[name] = this[name];\n                }\n            }\n\n            return renderable;\n        };\n    })()\n});\n\n/**\n * @type {number}\n */\nRenderable.POINTS = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].POINTS;\n/**\n * @type {number}\n */\nRenderable.LINES = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINES;\n/**\n * @type {number}\n */\nRenderable.LINE_LOOP = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINE_LOOP;\n/**\n * @type {number}\n */\nRenderable.LINE_STRIP = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLES = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].TRIANGLES;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_STRIP = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].TRIANGLE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_FAN = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].TRIANGLE_FAN;\n/**\n * @type {number}\n */\nRenderable.BACK = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].BACK;\n/**\n * @type {number}\n */\nRenderable.FRONT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].FRONT;\n/**\n * @type {number}\n */\nRenderable.FRONT_AND_BACK = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].FRONT_AND_BACK;\n/**\n * @type {number}\n */\nRenderable.CW = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CW;\n/**\n * @type {number}\n */\nRenderable.CCW = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CCW;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvUmVuZGVyYWJsZS5qcz9lMzBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOb2RlIGZyb20gJy4vTm9kZSc7XG5pbXBvcnQgZ2xlbnVtIGZyb20gJy4vY29yZS9nbGVudW0nO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvclxuICogQGFsaWFzIGNsYXkuUmVuZGVyYWJsZVxuICogQGV4dGVuZHMgY2xheS5Ob2RlXG4gKi9cbnZhciBSZW5kZXJhYmxlID0gTm9kZS5leHRlbmQoLyoqIEBsZW5kcyBjbGF5LlJlbmRlcmFibGUjICovIHtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7Y2xheS5NYXRlcmlhbH1cbiAgICAgKi9cbiAgICBtYXRlcmlhbDogbnVsbCxcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtjbGF5Lkdlb21ldHJ5fVxuICAgICAqL1xuICAgIGdlb21ldHJ5OiBudWxsLFxuXG4gICAgLyoqXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBtb2RlOiBnbGVudW0uVFJJQU5HTEVTLFxuXG4gICAgX3JlbmRlckluZm86IG51bGxcbn0sXG4vKiogQGxlbmRzIGNsYXkuUmVuZGVyYWJsZS5wcm90b3R5cGUgKi9cbntcblxuICAgIF9fcHJvZ3JhbTogbnVsbCxcblxuICAgIC8qKlxuICAgICAqIEdyb3VwIG9mIHJlY2VpdmVkIGxpZ2h0LlxuICAgICAqL1xuICAgIGxpZ2h0R3JvdXA6IDAsXG4gICAgLyoqXG4gICAgICogUmVuZGVyIG9yZGVyLCBOb2RlcyB3aXRoIHNtYWxsZXIgdmFsdWUgcmVuZGVycyBiZWZvcmUgbm9kZXMgd2l0aCBsYXJnZXIgdmFsdWVzLlxuICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICovXG4gICAgcmVuZGVyT3JkZXI6IDAsXG5cbiAgICAvKipcbiAgICAgKiBVc2VkIHdoZW4gbW9kZSBpcyBMSU5FUywgTElORV9TVFJJUCBvciBMSU5FX0xPT1BcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIC8vIGxpbmVXaWR0aDogMSxcblxuICAgIC8qKlxuICAgICAqIElmIGVuYWJsZSBjdWxsaW5nXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgY3VsbGluZzogdHJ1ZSxcbiAgICAvKipcbiAgICAgKiBTcGVjaWZ5IHdoaWNoIHNpZGUgb2YgcG9seWdvbiB3aWxsIGJlIGN1bGxlZC5cbiAgICAgKiBQb3NzaWJsZSB2YWx1ZXM6XG4gICAgICogICsge0BsaW5rIGNsYXkuUmVuZGVyYWJsZS5CQUNLfVxuICAgICAqICArIHtAbGluayBjbGF5LlJlbmRlcmFibGUuRlJPTlR9XG4gICAgICogICsge0BsaW5rIGNsYXkuUmVuZGVyYWJsZS5GUk9OVF9BTkRfQkFDS31cbiAgICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XZWJHTFJlbmRlcmluZ0NvbnRleHQvY3VsbEZhY2VcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGN1bGxGYWNlOiBnbGVudW0uQkFDSyxcbiAgICAvKipcbiAgICAgKiBTcGVjaWZ5IHdoaWNoIHNpZGUgaXMgZnJvbnQgZmFjZS5cbiAgICAgKiBQb3NzaWJsZSB2YWx1ZXM6XG4gICAgICogICsge0BsaW5rIGNsYXkuUmVuZGVyYWJsZS5DV31cbiAgICAgKiAgKyB7QGxpbmsgY2xheS5SZW5kZXJhYmxlLkNDV31cbiAgICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XZWJHTFJlbmRlcmluZ0NvbnRleHQvZnJvbnRGYWNlXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBmcm9udEZhY2U6IGdsZW51bS5DQ1csXG5cbiAgICAvKipcbiAgICAgKiBJZiBlbmFibGUgc29mdHdhcmUgZnJ1c3R1bSBjdWxsaW5nXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgZnJ1c3R1bUN1bGxpbmc6IHRydWUsXG4gICAgLyoqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgcmVjZWl2ZVNoYWRvdzogdHJ1ZSxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBjYXN0U2hhZG93OiB0cnVlLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGlnbm9yZVBpY2tpbmc6IGZhbHNlLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGlnbm9yZVByZVo6IGZhbHNlLFxuXG4gICAgLyoqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgaWdub3JlR0J1ZmZlcjogZmFsc2UsXG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgICAqL1xuICAgIGlzUmVuZGVyYWJsZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIFRPRE8gU2hhZGVyID9cbiAgICAgICAgcmV0dXJuIHRoaXMuZ2VvbWV0cnkgJiYgdGhpcy5tYXRlcmlhbCAmJiB0aGlzLm1hdGVyaWFsLnNoYWRlciAmJiAhdGhpcy5pbnZpc2libGVcbiAgICAgICAgICAgICYmIHRoaXMuZ2VvbWV0cnkudmVydGV4Q291bnQgPiAwO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBCZWZvcmUgcmVuZGVyIGhvb2tcbiAgICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAgICovXG4gICAgYmVmb3JlUmVuZGVyOiBmdW5jdGlvbiAoX2dsKSB7fSxcblxuICAgIC8qKlxuICAgICAqIEJlZm9yZSByZW5kZXIgaG9va1xuICAgICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICAgKi9cbiAgICBhZnRlclJlbmRlcjogZnVuY3Rpb24gKF9nbCwgcmVuZGVyU3RhdCkge30sXG5cbiAgICBnZXRCb3VuZGluZ0JveDogZnVuY3Rpb24gKGZpbHRlciwgb3V0KSB7XG4gICAgICAgIG91dCA9IE5vZGUucHJvdG90eXBlLmdldEJvdW5kaW5nQm94LmNhbGwodGhpcywgZmlsdGVyLCBvdXQpO1xuICAgICAgICBpZiAodGhpcy5nZW9tZXRyeSAmJiB0aGlzLmdlb21ldHJ5LmJvdW5kaW5nQm94KSB7XG4gICAgICAgICAgICBvdXQudW5pb24odGhpcy5nZW9tZXRyeS5ib3VuZGluZ0JveCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDbG9uZSBhIG5ldyByZW5kZXJhYmxlXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHJldHVybiB7Y2xheS5SZW5kZXJhYmxlfVxuICAgICAqL1xuICAgIGNsb25lOiAoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBwcm9wZXJ0aWVzID0gW1xuICAgICAgICAgICAgJ2Nhc3RTaGFkb3cnLCAncmVjZWl2ZVNoYWRvdycsXG4gICAgICAgICAgICAnbW9kZScsICdjdWxsaW5nJywgJ2N1bGxGYWNlJywgJ2Zyb250RmFjZScsXG4gICAgICAgICAgICAnZnJ1c3R1bUN1bGxpbmcnLFxuICAgICAgICAgICAgJ3JlbmRlck9yZGVyJywgJ2xpbmVXaWR0aCcsXG4gICAgICAgICAgICAnaWdub3JlUGlja2luZycsICdpZ25vcmVQcmVaJywgJ2lnbm9yZUdCdWZmZXInXG4gICAgICAgIF07XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciByZW5kZXJhYmxlID0gTm9kZS5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzKTtcblxuICAgICAgICAgICAgcmVuZGVyYWJsZS5nZW9tZXRyeSA9IHRoaXMuZ2VvbWV0cnk7XG4gICAgICAgICAgICByZW5kZXJhYmxlLm1hdGVyaWFsID0gdGhpcy5tYXRlcmlhbDtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wZXJ0aWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5hbWUgPSBwcm9wZXJ0aWVzW2ldO1xuICAgICAgICAgICAgICAgIC8vIFRyeSBub3QgdG8gb3ZlcndyaXRlIHRoZSBwcm90b3R5cGUgcHJvcGVydHlcbiAgICAgICAgICAgICAgICBpZiAocmVuZGVyYWJsZVtuYW1lXSAhPT0gdGhpc1tuYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICByZW5kZXJhYmxlW25hbWVdID0gdGhpc1tuYW1lXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiByZW5kZXJhYmxlO1xuICAgICAgICB9O1xuICAgIH0pKClcbn0pO1xuXG4vKipcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKi9cblJlbmRlcmFibGUuUE9JTlRTID0gZ2xlbnVtLlBPSU5UUztcbi8qKlxuICogQHR5cGUge251bWJlcn1cbiAqL1xuUmVuZGVyYWJsZS5MSU5FUyA9IGdsZW51bS5MSU5FUztcbi8qKlxuICogQHR5cGUge251bWJlcn1cbiAqL1xuUmVuZGVyYWJsZS5MSU5FX0xPT1AgPSBnbGVudW0uTElORV9MT09QO1xuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJhYmxlLkxJTkVfU1RSSVAgPSBnbGVudW0uTElORV9TVFJJUDtcbi8qKlxuICogQHR5cGUge251bWJlcn1cbiAqL1xuUmVuZGVyYWJsZS5UUklBTkdMRVMgPSBnbGVudW0uVFJJQU5HTEVTO1xuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJhYmxlLlRSSUFOR0xFX1NUUklQID0gZ2xlbnVtLlRSSUFOR0xFX1NUUklQO1xuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJhYmxlLlRSSUFOR0xFX0ZBTiA9IGdsZW51bS5UUklBTkdMRV9GQU47XG4vKipcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKi9cblJlbmRlcmFibGUuQkFDSyA9IGdsZW51bS5CQUNLO1xuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJhYmxlLkZST05UID0gZ2xlbnVtLkZST05UO1xuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJhYmxlLkZST05UX0FORF9CQUNLID0gZ2xlbnVtLkZST05UX0FORF9CQUNLO1xuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJhYmxlLkNXID0gZ2xlbnVtLkNXO1xuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5SZW5kZXJhYmxlLkNDVyA9IGdsZW51bS5DQ1c7XG5cbmV4cG9ydCBkZWZhdWx0IFJlbmRlcmFibGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9SZW5kZXJhYmxlLmpzXG4vLyBtb2R1bGUgaWQgPSA0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var mathUtil = {};\n\nmathUtil.isPowerOfTwo = function (value) {\n    return (value & (value - 1)) === 0;\n};\n\nmathUtil.nextPowerOfTwo = function (value) {\n    value --;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value ++;\n\n    return value;\n};\n\nmathUtil.nearestPowerOfTwo = function (value) {\n    return Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (mathUtil);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvbWF0aC91dGlsLmpzPzU4YTQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1hdGhVdGlsID0ge307XG5cbm1hdGhVdGlsLmlzUG93ZXJPZlR3byA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiAodmFsdWUgJiAodmFsdWUgLSAxKSkgPT09IDA7XG59O1xuXG5tYXRoVXRpbC5uZXh0UG93ZXJPZlR3byA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHZhbHVlIC0tO1xuICAgIHZhbHVlIHw9IHZhbHVlID4+IDE7XG4gICAgdmFsdWUgfD0gdmFsdWUgPj4gMjtcbiAgICB2YWx1ZSB8PSB2YWx1ZSA+PiA0O1xuICAgIHZhbHVlIHw9IHZhbHVlID4+IDg7XG4gICAgdmFsdWUgfD0gdmFsdWUgPj4gMTY7XG4gICAgdmFsdWUgKys7XG5cbiAgICByZXR1cm4gdmFsdWU7XG59O1xuXG5tYXRoVXRpbC5uZWFyZXN0UG93ZXJPZlR3byA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiBNYXRoLnBvdyggMiwgTWF0aC5yb3VuZCggTWF0aC5sb2coIHZhbHVlICkgLyBNYXRoLkxOMiApICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYXRoVXRpbDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL21hdGgvdXRpbC5qc1xuLy8gbW9kdWxlIGlkID0gNTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50\n");

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Shader__ = __webpack_require__(2);\n\n\nvar _library = {};\n\nfunction ShaderLibrary () {\n    this._pool = {};\n}\n\nShaderLibrary.prototype.get = function(name) {\n    var key = name;\n\n    if (this._pool[key]) {\n        return this._pool[key];\n    }\n    else {\n        var source = _library[name];\n        if (!source) {\n            console.error('Shader \"' + name + '\"' + ' is not in the library');\n            return;\n        }\n        var shader = new __WEBPACK_IMPORTED_MODULE_0__Shader__[\"a\" /* default */](source.vertex, source.fragment);\n        this._pool[key] = shader;\n        return shader;\n    }\n};\n\nShaderLibrary.prototype.clear = function() {\n    this._pool = {};\n};\n\nfunction template(name, vertex, fragment) {\n    _library[name] = {\n        vertex: vertex,\n        fragment: fragment\n    };\n}\n\nvar defaultLibrary = new ShaderLibrary();\n\n/**\n * ### Builin shaders\n * + clay.standard\n * + clay.basic\n * + clay.lambert\n * + clay.wireframe\n *\n * @namespace clay.shader.library\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    /**\n     * Create a new shader library.\n     */\n    createLibrary: function () {\n        return new ShaderLibrary();\n    },\n    /**\n     * Get shader from default library.\n     * @param {string} name\n     * @return {clay.Shader}\n     * @memberOf clay.shader.library\n     * @example\n     *     clay.shader.library.get('clay.standard')\n     */\n    get: function () {\n        return defaultLibrary.get.apply(defaultLibrary, arguments);\n    },\n    /**\n     * @memberOf clay.shader.library\n     * @param  {string} name\n     * @param  {string} vertex - Vertex shader code\n     * @param  {string} fragment - Fragment shader code\n     */\n    template: template,\n    clear: function () {\n        return defaultLibrary.clear();\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL2xpYnJhcnkuanM/MzY4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hhZGVyIGZyb20gJy4uL1NoYWRlcic7XG5cbnZhciBfbGlicmFyeSA9IHt9O1xuXG5mdW5jdGlvbiBTaGFkZXJMaWJyYXJ5ICgpIHtcbiAgICB0aGlzLl9wb29sID0ge307XG59XG5cblNoYWRlckxpYnJhcnkucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIga2V5ID0gbmFtZTtcblxuICAgIGlmICh0aGlzLl9wb29sW2tleV0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Bvb2xba2V5XTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHZhciBzb3VyY2UgPSBfbGlicmFyeVtuYW1lXTtcbiAgICAgICAgaWYgKCFzb3VyY2UpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1NoYWRlciBcIicgKyBuYW1lICsgJ1wiJyArICcgaXMgbm90IGluIHRoZSBsaWJyYXJ5Jyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNoYWRlciA9IG5ldyBTaGFkZXIoc291cmNlLnZlcnRleCwgc291cmNlLmZyYWdtZW50KTtcbiAgICAgICAgdGhpcy5fcG9vbFtrZXldID0gc2hhZGVyO1xuICAgICAgICByZXR1cm4gc2hhZGVyO1xuICAgIH1cbn07XG5cblNoYWRlckxpYnJhcnkucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fcG9vbCA9IHt9O1xufTtcblxuZnVuY3Rpb24gdGVtcGxhdGUobmFtZSwgdmVydGV4LCBmcmFnbWVudCkge1xuICAgIF9saWJyYXJ5W25hbWVdID0ge1xuICAgICAgICB2ZXJ0ZXg6IHZlcnRleCxcbiAgICAgICAgZnJhZ21lbnQ6IGZyYWdtZW50XG4gICAgfTtcbn1cblxudmFyIGRlZmF1bHRMaWJyYXJ5ID0gbmV3IFNoYWRlckxpYnJhcnkoKTtcblxuLyoqXG4gKiAjIyMgQnVpbGluIHNoYWRlcnNcbiAqICsgY2xheS5zdGFuZGFyZFxuICogKyBjbGF5LmJhc2ljXG4gKiArIGNsYXkubGFtYmVydFxuICogKyBjbGF5LndpcmVmcmFtZVxuICpcbiAqIEBuYW1lc3BhY2UgY2xheS5zaGFkZXIubGlicmFyeVxuICovXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IHNoYWRlciBsaWJyYXJ5LlxuICAgICAqL1xuICAgIGNyZWF0ZUxpYnJhcnk6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTaGFkZXJMaWJyYXJ5KCk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBHZXQgc2hhZGVyIGZyb20gZGVmYXVsdCBsaWJyYXJ5LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICogQHJldHVybiB7Y2xheS5TaGFkZXJ9XG4gICAgICogQG1lbWJlck9mIGNsYXkuc2hhZGVyLmxpYnJhcnlcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICAgICBjbGF5LnNoYWRlci5saWJyYXJ5LmdldCgnY2xheS5zdGFuZGFyZCcpXG4gICAgICovXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0TGlicmFyeS5nZXQuYXBwbHkoZGVmYXVsdExpYnJhcnksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBAbWVtYmVyT2YgY2xheS5zaGFkZXIubGlicmFyeVxuICAgICAqIEBwYXJhbSAge3N0cmluZ30gbmFtZVxuICAgICAqIEBwYXJhbSAge3N0cmluZ30gdmVydGV4IC0gVmVydGV4IHNoYWRlciBjb2RlXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBmcmFnbWVudCAtIEZyYWdtZW50IHNoYWRlciBjb2RlXG4gICAgICovXG4gICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxuICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0TGlicmFyeS5jbGVhcigpO1xuICAgIH1cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvbGlicmFyeS5qc1xuLy8gbW9kdWxlIGlkID0gNTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n\n\n/**\n * @constructor clay.Joint\n * @extends clay.core.Base\n */\nvar Joint = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(\n/** @lends clay.Joint# */\n{\n    // https://github.com/KhronosGroup/glTF/issues/193#issuecomment-29216576\n    /**\n     * Joint name\n     * @type {string}\n     */\n    name: '',\n    /**\n     * Index of joint in the skeleton\n     * @type {number}\n     */\n    index: -1,\n\n    /**\n     * Scene node attached to\n     * @type {clay.Node}\n     */\n    node: null\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Joint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvSm9pbnQuanM/ZjY5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZSBmcm9tICcuL2NvcmUvQmFzZSc7XG5cbi8qKlxuICogQGNvbnN0cnVjdG9yIGNsYXkuSm9pbnRcbiAqIEBleHRlbmRzIGNsYXkuY29yZS5CYXNlXG4gKi9cbnZhciBKb2ludCA9IEJhc2UuZXh0ZW5kKFxuLyoqIEBsZW5kcyBjbGF5LkpvaW50IyAqL1xue1xuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9pc3N1ZXMvMTkzI2lzc3VlY29tbWVudC0yOTIxNjU3NlxuICAgIC8qKlxuICAgICAqIEpvaW50IG5hbWVcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIG5hbWU6ICcnLFxuICAgIC8qKlxuICAgICAqIEluZGV4IG9mIGpvaW50IGluIHRoZSBza2VsZXRvblxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgaW5kZXg6IC0xLFxuXG4gICAgLyoqXG4gICAgICogU2NlbmUgbm9kZSBhdHRhY2hlZCB0b1xuICAgICAqIEB0eXBlIHtjbGF5Lk5vZGV9XG4gICAgICovXG4gICAgbm9kZTogbnVsbFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEpvaW50O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvSm9pbnQuanNcbi8vIG1vZHVsZSBpZCA9IDUyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__easing__ = __webpack_require__(54);\n\n\nfunction noop () {}\n/**\n * @constructor\n * @alias clay.animation.Clip\n * @param {Object} [opts]\n * @param {Object} [opts.target]\n * @param {number} [opts.life]\n * @param {number} [opts.delay]\n * @param {number} [opts.gap]\n * @param {number} [opts.playbackRate]\n * @param {boolean|number} [opts.loop] If loop is a number, it indicate the loop count of animation\n * @param {string|Function} [opts.easing]\n * @param {Function} [opts.onframe]\n * @param {Function} [opts.onfinish]\n * @param {Function} [opts.onrestart]\n */\nvar Clip = function (opts) {\n\n    opts = opts || {};\n\n    /**\n     * @type {string}\n     */\n    this.name = opts.name || '';\n\n    /**\n     * @type {Object}\n     */\n    this.target = opts.target;\n\n    /**\n     * @type {number}\n     */\n    this.life = opts.life || 1000;\n\n    /**\n     * @type {number}\n     */\n    this.delay = opts.delay || 0;\n\n    /**\n     * @type {number}\n     */\n    this.gap = opts.gap || 0;\n\n    /**\n     * @type {number}\n     */\n    this.playbackRate = opts.playbackRate || 1;\n\n\n    this._initialized = false;\n\n    this._elapsedTime = 0;\n\n    this._loop = opts.loop == null ? false : opts.loop;\n    this.setLoop(this._loop);\n\n    if (opts.easing != null) {\n        this.setEasing(opts.easing);\n    }\n\n    /**\n     * @type {Function}\n     */\n    this.onframe = opts.onframe || noop;\n\n    /**\n     * @type {Function}\n     */\n    this.onfinish = opts.onfinish || noop;\n\n    /**\n     * @type {Function}\n     */\n    this.onrestart = opts.onrestart || noop;\n\n    this._paused = false;\n};\n\nClip.prototype = {\n\n    gap: 0,\n\n    life: 0,\n\n    delay: 0,\n\n    /**\n     * @param {number|boolean} loop\n     */\n    setLoop: function (loop) {\n        this._loop = loop;\n        if (loop) {\n            if (typeof loop === 'number') {\n                this._loopRemained = loop;\n            }\n            else {\n                this._loopRemained = Infinity;\n            }\n        }\n    },\n\n    /**\n     * @param {string|Function} easing\n     */\n    setEasing: function (easing) {\n        if (typeof(easing) === 'string') {\n            easing = __WEBPACK_IMPORTED_MODULE_0__easing__[\"a\" /* default */][easing];\n        }\n        this.easing = easing;\n    },\n\n    /**\n     * @param  {number} time\n     * @return {string}\n     */\n    step: function (time, deltaTime, silent) {\n        if (!this._initialized) {\n            this._startTime = time + this.delay;\n            this._initialized = true;\n        }\n        if (this._currentTime != null) {\n            deltaTime = time - this._currentTime;\n        }\n        this._currentTime = time;\n\n        if (this._paused) {\n            return 'paused';\n        }\n\n        if (time < this._startTime) {\n            return;\n        }\n\n        // PENDIGN Sync ?\n        this._elapse(time, deltaTime);\n\n        var percent = Math.min(this._elapsedTime / this.life, 1);\n\n        if (percent < 0) {\n            return;\n        }\n\n        var schedule;\n        if (this.easing) {\n            schedule = this.easing(percent);\n        }\n        else {\n            schedule = percent;\n        }\n\n        if (!silent) {\n            this.fire('frame', schedule);\n        }\n\n        if (percent === 1) {\n            if (this._loop && this._loopRemained > 0) {\n                this._restartInLoop(time);\n                this._loopRemained--;\n                return 'restart';\n            }\n            else {\n                // Mark this clip to be deleted\n                // In the animation.update\n                this._needsRemove = true;\n\n                return 'finish';\n            }\n        }\n        else {\n            return null;\n        }\n    },\n\n    /**\n     * @param  {number} time\n     * @return {string}\n     */\n    setTime: function (time) {\n        return this.step(time + this._startTime);\n    },\n\n    restart: function (time) {\n        // If user leave the page for a while, when he gets back\n        // All clips may be expired and all start from the beginning value(position)\n        // It is clearly wrong, so we use remainder to add a offset\n\n        var remainder = 0;\n        // Remainder ignored if restart is invoked manually\n        if (time) {\n            this._elapse(time);\n            remainder = this._elapsedTime % this.life;\n        }\n        time = time || Date.now();\n\n        this._startTime = time - remainder + this.delay;\n        this._elapsedTime = 0;\n\n        this._needsRemove = false;\n        this._paused = false;\n    },\n\n    getElapsedTime: function () {\n        return this._elapsedTime;\n    },\n\n    _restartInLoop: function (time) {\n        this._startTime = time + this.gap;\n        this._elapsedTime = 0;\n    },\n\n    _elapse: function (time, deltaTime) {\n        this._elapsedTime += deltaTime * this.playbackRate;\n    },\n\n    fire: function (eventType, arg) {\n        var eventName = 'on' + eventType;\n        if (this[eventName]) {\n            this[eventName](this.target, arg);\n        }\n    },\n\n    clone: function () {\n        var clip = new this.constructor();\n        clip.name = this.name;\n        clip._loop = this._loop;\n        clip._loopRemained = this._loopRemained;\n\n        clip.life = this.life;\n        clip.gap = this.gap;\n        clip.delay = this.delay;\n\n        return clip;\n    },\n    /**\n     * Pause the clip.\n     */\n    pause: function () {\n        this._paused = true;\n    },\n\n    /**\n     * Resume the clip.\n     */\n    resume: function () {\n        this._paused = false;\n    }\n};\nClip.prototype.constructor = Clip;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Clip);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// 缓动函数来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n\n/**\n * @namespace clay.animation.easing\n */\nvar easing = {\n    /**\n     * @alias clay.animation.easing.linear\n     * @param {number} k\n     * @return {number}\n     */\n    linear: function(k) {\n        return k;\n    },\n    /**\n     * @alias clay.animation.easing.quadraticIn\n     * @param {number} k\n     * @return {number}\n     */\n    quadraticIn: function(k) {\n        return k * k;\n    },\n    /**\n     * @alias clay.animation.easing.quadraticOut\n     * @param {number} k\n     * @return {number}\n     */\n    quadraticOut: function(k) {\n        return k * (2 - k);\n    },\n    /**\n     * @alias clay.animation.easing.quadraticInOut\n     * @param {number} k\n     * @return {number}\n     */\n    quadraticInOut: function(k) {\n        if ((k *= 2) < 1) {\n            return 0.5 * k * k;\n        }\n        return - 0.5 * (--k * (k - 2) - 1);\n    },\n    /**\n     * @alias clay.animation.easing.cubicIn\n     * @param {number} k\n     * @return {number}\n     */\n    cubicIn: function(k) {\n        return k * k * k;\n    },\n    /**\n     * @alias clay.animation.easing.cubicOut\n     * @param {number} k\n     * @return {number}\n     */\n    cubicOut: function(k) {\n        return --k * k * k + 1;\n    },\n    /**\n     * @alias clay.animation.easing.cubicInOut\n     * @param {number} k\n     * @return {number}\n     */\n    cubicInOut: function(k) {\n        if ((k *= 2) < 1) {\n            return 0.5 * k * k * k;\n        }\n        return 0.5 * ((k -= 2) * k * k + 2);\n    },\n    /**\n     * @alias clay.animation.easing.quarticIn\n     * @param {number} k\n     * @return {number}\n     */\n    quarticIn: function(k) {\n        return k * k * k * k;\n    },\n    /**\n     * @alias clay.animation.easing.quarticOut\n     * @param {number} k\n     * @return {number}\n     */\n    quarticOut: function(k) {\n        return 1 - (--k * k * k * k);\n    },\n    /**\n     * @alias clay.animation.easing.quarticInOut\n     * @param {number} k\n     * @return {number}\n     */\n    quarticInOut: function(k) {\n        if ((k *= 2) < 1) {\n            return 0.5 * k * k * k * k;\n        }\n        return - 0.5 * ((k -= 2) * k * k * k - 2);\n    },\n    /**\n     * @alias clay.animation.easing.quinticIn\n     * @param {number} k\n     * @return {number}\n     */\n    quinticIn: function(k) {\n        return k * k * k * k * k;\n    },\n    /**\n     * @alias clay.animation.easing.quinticOut\n     * @param {number} k\n     * @return {number}\n     */\n    quinticOut: function(k) {\n        return --k * k * k * k * k + 1;\n    },\n    /**\n     * @alias clay.animation.easing.quinticInOut\n     * @param {number} k\n     * @return {number}\n     */\n    quinticInOut: function(k) {\n        if ((k *= 2) < 1) {\n            return 0.5 * k * k * k * k * k;\n        }\n        return 0.5 * ((k -= 2) * k * k * k * k + 2);\n    },\n    /**\n     * @alias clay.animation.easing.sinusoidalIn\n     * @param {number} k\n     * @return {number}\n     */\n    sinusoidalIn: function(k) {\n        return 1 - Math.cos(k * Math.PI / 2);\n    },\n    /**\n     * @alias clay.animation.easing.sinusoidalOut\n     * @param {number} k\n     * @return {number}\n     */\n    sinusoidalOut: function(k) {\n        return Math.sin(k * Math.PI / 2);\n    },\n    /**\n     * @alias clay.animation.easing.sinusoidalInOut\n     * @param {number} k\n     * @return {number}\n     */\n    sinusoidalInOut: function(k) {\n        return 0.5 * (1 - Math.cos(Math.PI * k));\n    },\n    /**\n     * @alias clay.animation.easing.exponentialIn\n     * @param {number} k\n     * @return {number}\n     */\n    exponentialIn: function(k) {\n        return k === 0 ? 0 : Math.pow(1024, k - 1);\n    },\n    /**\n     * @alias clay.animation.easing.exponentialOut\n     * @param {number} k\n     * @return {number}\n     */\n    exponentialOut: function(k) {\n        return k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n    },\n    /**\n     * @alias clay.animation.easing.exponentialInOut\n     * @param {number} k\n     * @return {number}\n     */\n    exponentialInOut: function(k) {\n        if (k === 0) {\n            return 0;\n        }\n        if (k === 1) {\n            return 1;\n        }\n        if ((k *= 2) < 1) {\n            return 0.5 * Math.pow(1024, k - 1);\n        }\n        return 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n    },\n    /**\n     * @alias clay.animation.easing.circularIn\n     * @param {number} k\n     * @return {number}\n     */\n    circularIn: function(k) {\n        return 1 - Math.sqrt(1 - k * k);\n    },\n    /**\n     * @alias clay.animation.easing.circularOut\n     * @param {number} k\n     * @return {number}\n     */\n    circularOut: function(k) {\n        return Math.sqrt(1 - (--k * k));\n    },\n    /**\n     * @alias clay.animation.easing.circularInOut\n     * @param {number} k\n     * @return {number}\n     */\n    circularInOut: function(k) {\n        if ((k *= 2) < 1) {\n            return - 0.5 * (Math.sqrt(1 - k * k) - 1);\n        }\n        return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n    },\n    /**\n     * @alias clay.animation.easing.elasticIn\n     * @param {number} k\n     * @return {number}\n     */\n    elasticIn: function(k) {\n        var s, a = 0.1, p = 0.4;\n        if (k === 0) {\n            return 0;\n        }\n        if (k === 1) {\n            return 1;\n        }\n        if (!a || a < 1) {\n            a = 1; s = p / 4;\n        }else{\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\n        }\n        return - (a * Math.pow(2, 10 * (k -= 1)) *\n                    Math.sin((k - s) * (2 * Math.PI) / p));\n    },\n    /**\n     * @alias clay.animation.easing.elasticOut\n     * @param {number} k\n     * @return {number}\n     */\n    elasticOut: function(k) {\n        var s, a = 0.1, p = 0.4;\n        if (k === 0) {\n            return 0;\n        }\n        if (k === 1) {\n            return 1;\n        }\n        if (!a || a < 1) {\n            a = 1; s = p / 4;\n        }\n        else{\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\n        }\n        return (a * Math.pow(2, - 10 * k) *\n                Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n    },\n    /**\n     * @alias clay.animation.easing.elasticInOut\n     * @param {number} k\n     * @return {number}\n     */\n    elasticInOut: function(k) {\n        var s, a = 0.1, p = 0.4;\n        if (k === 0) {\n            return 0;\n        }\n        if (k === 1) {\n            return 1;\n        }\n        if (!a || a < 1) {\n            a = 1; s = p / 4;\n        }\n        else{\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\n        }\n        if ((k *= 2) < 1) {\n            return - 0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                * Math.sin((k - s) * (2 * Math.PI) / p));\n        }\n        return a * Math.pow(2, -10 * (k -= 1))\n                * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n    },\n    /**\n     * @alias clay.animation.easing.backIn\n     * @param {number} k\n     * @return {number}\n     */\n    backIn: function(k) {\n        var s = 1.70158;\n        return k * k * ((s + 1) * k - s);\n    },\n    /**\n     * @alias clay.animation.easing.backOut\n     * @param {number} k\n     * @return {number}\n     */\n    backOut: function(k) {\n        var s = 1.70158;\n        return --k * k * ((s + 1) * k + s) + 1;\n    },\n    /**\n     * @alias clay.animation.easing.backInOut\n     * @param {number} k\n     * @return {number}\n     */\n    backInOut: function(k) {\n        var s = 1.70158 * 1.525;\n        if ((k *= 2) < 1) {\n            return 0.5 * (k * k * ((s + 1) * k - s));\n        }\n        return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n    },\n    /**\n     * @alias clay.animation.easing.bounceIn\n     * @param {number} k\n     * @return {number}\n     */\n    bounceIn: function(k) {\n        return 1 - easing.bounceOut(1 - k);\n    },\n    /**\n     * @alias clay.animation.easing.bounceOut\n     * @param {number} k\n     * @return {number}\n     */\n    bounceOut: function(k) {\n        if (k < (1 / 2.75)) {\n            return 7.5625 * k * k;\n        }\n        else if (k < (2 / 2.75)) {\n            return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n        } else if (k < (2.5 / 2.75)) {\n            return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n        } else {\n            return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n        }\n    },\n    /**\n     * @alias clay.animation.easing.bounceInOut\n     * @param {number} k\n     * @return {number}\n     */\n    bounceInOut: function(k) {\n        if (k < 0.5) {\n            return easing.bounceIn(k * 2) * 0.5;\n        }\n        return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (easing);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///54\n");

/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.skybox.vertex\\n#define SHADER_NAME skybox\\nuniform mat4 world : WORLD;\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nattribute vec3 position : POSITION;\\nvarying vec3 v_WorldPosition;\\nvoid main()\\n{\\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n}\\n@end\\n@export clay.skybox.fragment\\n#define PI 3.1415926\\nuniform mat4 viewInverse : VIEWINVERSE;\\n#ifdef EQUIRECTANGULAR\\nuniform sampler2D environmentMap;\\n#else\\nuniform samplerCube environmentMap;\\n#endif\\nuniform float lod: 0.0;\\nvarying vec3 v_WorldPosition;\\n@import clay.util.rgbm\\n@import clay.util.srgb\\n@import clay.util.ACES\\nvoid main()\\n{\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(v_WorldPosition - eyePos);\\n#ifdef EQUIRECTANGULAR\\n float phi = acos(V.y);\\n float theta = atan(-V.x, V.z) + PI * 0.5;\\n vec2 uv = vec2(theta / 2.0 / PI, phi / PI);\\n vec4 texel = decodeHDR(texture2D(environmentMap, fract(uv)));\\n#else\\n #if defined(LOD) || defined(SUPPORT_TEXTURE_LOD)\\n vec4 texel = decodeHDR(textureCubeLodEXT(environmentMap, V, lod));\\n #else\\n vec4 texel = decodeHDR(textureCube(environmentMap, V));\\n #endif\\n#endif\\n#ifdef SRGB_DECODE\\n texel = sRGBToLinear(texel);\\n#endif\\n#ifdef TONEMAPPING\\n texel.rgb = ACESToneMapping(texel.rgb);\\n#endif\\n#ifdef SRGB_ENCODE\\n texel = linearTosRGB(texel);\\n#endif\\n gl_FragColor = encodeHDR(vec4(texel.rgb, 1.0));\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9za3lib3guZ2xzbC5qcz8yOTY1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LnNreWJveC52ZXJ0ZXhcXG4jZGVmaW5lIFNIQURFUl9OQU1FIHNreWJveFxcbnVuaWZvcm0gbWF0NCB3b3JsZCA6IFdPUkxEO1xcbnVuaWZvcm0gbWF0NCB3b3JsZFZpZXdQcm9qZWN0aW9uIDogV09STERWSUVXUFJPSkVDVElPTjtcXG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbiA6IFBPU0lUSU9OO1xcbnZhcnlpbmcgdmVjMyB2X1dvcmxkUG9zaXRpb247XFxudm9pZCBtYWluKClcXG57XFxuIHZfV29ybGRQb3NpdGlvbiA9ICh3b3JsZCAqIHZlYzQocG9zaXRpb24sIDEuMCkpLnh5ejtcXG4gZ2xfUG9zaXRpb24gPSB3b3JsZFZpZXdQcm9qZWN0aW9uICogdmVjNChwb3NpdGlvbiwgMS4wKTtcXG59XFxuQGVuZFxcbkBleHBvcnQgY2xheS5za3lib3guZnJhZ21lbnRcXG4jZGVmaW5lIFBJIDMuMTQxNTkyNlxcbnVuaWZvcm0gbWF0NCB2aWV3SW52ZXJzZSA6IFZJRVdJTlZFUlNFO1xcbiNpZmRlZiBFUVVJUkVDVEFOR1VMQVJcXG51bmlmb3JtIHNhbXBsZXIyRCBlbnZpcm9ubWVudE1hcDtcXG4jZWxzZVxcbnVuaWZvcm0gc2FtcGxlckN1YmUgZW52aXJvbm1lbnRNYXA7XFxuI2VuZGlmXFxudW5pZm9ybSBmbG9hdCBsb2Q6IDAuMDtcXG52YXJ5aW5nIHZlYzMgdl9Xb3JsZFBvc2l0aW9uO1xcbkBpbXBvcnQgY2xheS51dGlsLnJnYm1cXG5AaW1wb3J0IGNsYXkudXRpbC5zcmdiXFxuQGltcG9ydCBjbGF5LnV0aWwuQUNFU1xcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWMzIGV5ZVBvcyA9IHZpZXdJbnZlcnNlWzNdLnh5ejtcXG4gdmVjMyBWID0gbm9ybWFsaXplKHZfV29ybGRQb3NpdGlvbiAtIGV5ZVBvcyk7XFxuI2lmZGVmIEVRVUlSRUNUQU5HVUxBUlxcbiBmbG9hdCBwaGkgPSBhY29zKFYueSk7XFxuIGZsb2F0IHRoZXRhID0gYXRhbigtVi54LCBWLnopICsgUEkgKiAwLjU7XFxuIHZlYzIgdXYgPSB2ZWMyKHRoZXRhIC8gMi4wIC8gUEksIHBoaSAvIFBJKTtcXG4gdmVjNCB0ZXhlbCA9IGRlY29kZUhEUih0ZXh0dXJlMkQoZW52aXJvbm1lbnRNYXAsIGZyYWN0KHV2KSkpO1xcbiNlbHNlXFxuICNpZiBkZWZpbmVkKExPRCkgfHwgZGVmaW5lZChTVVBQT1JUX1RFWFRVUkVfTE9EKVxcbiB2ZWM0IHRleGVsID0gZGVjb2RlSERSKHRleHR1cmVDdWJlTG9kRVhUKGVudmlyb25tZW50TWFwLCBWLCBsb2QpKTtcXG4gI2Vsc2VcXG4gdmVjNCB0ZXhlbCA9IGRlY29kZUhEUih0ZXh0dXJlQ3ViZShlbnZpcm9ubWVudE1hcCwgVikpO1xcbiAjZW5kaWZcXG4jZW5kaWZcXG4jaWZkZWYgU1JHQl9ERUNPREVcXG4gdGV4ZWwgPSBzUkdCVG9MaW5lYXIodGV4ZWwpO1xcbiNlbmRpZlxcbiNpZmRlZiBUT05FTUFQUElOR1xcbiB0ZXhlbC5yZ2IgPSBBQ0VTVG9uZU1hcHBpbmcodGV4ZWwucmdiKTtcXG4jZW5kaWZcXG4jaWZkZWYgU1JHQl9FTkNPREVcXG4gdGV4ZWwgPSBsaW5lYXJUb3NSR0IodGV4ZWwpO1xcbiNlbmRpZlxcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIodmVjNCh0ZXhlbC5yZ2IsIDEuMCkpO1xcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL3NreWJveC5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSA1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///55\n");

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_mixin_notifier__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_util__ = __webpack_require__(9);\n\n\n\n\n/**\n * @constructor\n * @alias clay.async.Task\n * @mixes clay.core.mixin.notifier\n */\nfunction Task() {\n    this._fullfilled = false;\n    this._rejected = false;\n};\n/**\n * Task successed\n * @param {} data\n */\nTask.prototype.resolve = function(data) {\n    this._fullfilled = true;\n    this._rejected = false;\n    this.trigger('success', data);\n};\n/**\n * Task failed\n * @param {} err\n */\nTask.prototype.reject = function(err) {\n    this._rejected = true;\n    this._fullfilled = false;\n    this.trigger('error', err);\n};\n/**\n * If task successed\n * @return {boolean}\n */\nTask.prototype.isFullfilled = function() {\n    return this._fullfilled;\n};\n/**\n * If task failed\n * @return {boolean}\n */\nTask.prototype.isRejected = function() {\n    return this._rejected;\n};\n/**\n * If task finished, either successed or failed\n * @return {boolean}\n */\nTask.prototype.isSettled = function() {\n    return this._fullfilled || this._rejected;\n};\n\n__WEBPACK_IMPORTED_MODULE_2__core_util__[\"a\" /* default */].extend(Task.prototype, __WEBPACK_IMPORTED_MODULE_0__core_mixin_notifier__[\"a\" /* default */]);\n\nfunction makeRequestTask(url, responseType) {\n    var task = new Task();\n    __WEBPACK_IMPORTED_MODULE_1__core_vendor__[\"a\" /* default */].request.get({\n        url: url,\n        responseType: responseType,\n        onload: function(res) {\n            task.resolve(res);\n        },\n        onerror: function(error) {\n            task.reject(error);\n        }\n    });\n    return task;\n}\n/**\n * Make a vendor.request task\n * @param  {string|object|object[]|string[]} url\n * @param  {string} [responseType]\n * @example\n *     var task = Task.makeRequestTask('./a.json');\n *     var task = Task.makeRequestTask({\n *         url: 'b.bin',\n *         responseType: 'arraybuffer'\n *     });\n *     var tasks = Task.makeRequestTask(['./a.json', './b.json']);\n *     var tasks = Task.makeRequestTask([\n *         {url: 'a.json'},\n *         {url: 'b.bin', responseType: 'arraybuffer'}\n *     ]);\n * @return {clay.async.Task|clay.async.Task[]}\n */\nTask.makeRequestTask = function(url, responseType) {\n    if (typeof url === 'string') {\n        return makeRequestTask(url, responseType);\n    }\n    else if (url.url) {   //  Configure object\n        var obj = url;\n        return makeRequestTask(obj.url, obj.responseType);\n    }\n    else if (Array.isArray(url)) {  // Url list\n        var urlList = url;\n        var tasks = [];\n        urlList.forEach(function(obj) {\n            var url, responseType;\n            if (typeof obj === 'string') {\n                url = obj;\n            }\n            else if (Object(obj) === obj) {\n                url = obj.url;\n                responseType = obj.responseType;\n            }\n            tasks.push(makeRequestTask(url, responseType));\n        });\n        return tasks;\n    }\n};\n/**\n * @return {clay.async.Task}\n */\nTask.makeTask = function() {\n    return new Task();\n};\n\n__WEBPACK_IMPORTED_MODULE_2__core_util__[\"a\" /* default */].extend(Task.prototype, __WEBPACK_IMPORTED_MODULE_0__core_mixin_notifier__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Task);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvYXN5bmMvVGFzay5qcz82ZmVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBub3RpZmllciBmcm9tICcuLi9jb3JlL21peGluL25vdGlmaWVyJztcbmltcG9ydCB2ZW5kb3IgZnJvbSAnLi4vY29yZS92ZW5kb3InO1xuaW1wb3J0IHV0aWwgIGZyb20gJy4uL2NvcmUvdXRpbCc7XG5cbi8qKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAYWxpYXMgY2xheS5hc3luYy5UYXNrXG4gKiBAbWl4ZXMgY2xheS5jb3JlLm1peGluLm5vdGlmaWVyXG4gKi9cbmZ1bmN0aW9uIFRhc2soKSB7XG4gICAgdGhpcy5fZnVsbGZpbGxlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlamVjdGVkID0gZmFsc2U7XG59O1xuLyoqXG4gKiBUYXNrIHN1Y2Nlc3NlZFxuICogQHBhcmFtIHt9IGRhdGFcbiAqL1xuVGFzay5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICB0aGlzLl9mdWxsZmlsbGVkID0gdHJ1ZTtcbiAgICB0aGlzLl9yZWplY3RlZCA9IGZhbHNlO1xuICAgIHRoaXMudHJpZ2dlcignc3VjY2VzcycsIGRhdGEpO1xufTtcbi8qKlxuICogVGFzayBmYWlsZWRcbiAqIEBwYXJhbSB7fSBlcnJcbiAqL1xuVGFzay5wcm90b3R5cGUucmVqZWN0ID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgdGhpcy5fcmVqZWN0ZWQgPSB0cnVlO1xuICAgIHRoaXMuX2Z1bGxmaWxsZWQgPSBmYWxzZTtcbiAgICB0aGlzLnRyaWdnZXIoJ2Vycm9yJywgZXJyKTtcbn07XG4vKipcbiAqIElmIHRhc2sgc3VjY2Vzc2VkXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5UYXNrLnByb3RvdHlwZS5pc0Z1bGxmaWxsZWQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fZnVsbGZpbGxlZDtcbn07XG4vKipcbiAqIElmIHRhc2sgZmFpbGVkXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5UYXNrLnByb3RvdHlwZS5pc1JlamVjdGVkID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlamVjdGVkO1xufTtcbi8qKlxuICogSWYgdGFzayBmaW5pc2hlZCwgZWl0aGVyIHN1Y2Nlc3NlZCBvciBmYWlsZWRcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cblRhc2sucHJvdG90eXBlLmlzU2V0dGxlZCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9mdWxsZmlsbGVkIHx8IHRoaXMuX3JlamVjdGVkO1xufTtcblxudXRpbC5leHRlbmQoVGFzay5wcm90b3R5cGUsIG5vdGlmaWVyKTtcblxuZnVuY3Rpb24gbWFrZVJlcXVlc3RUYXNrKHVybCwgcmVzcG9uc2VUeXBlKSB7XG4gICAgdmFyIHRhc2sgPSBuZXcgVGFzaygpO1xuICAgIHZlbmRvci5yZXF1ZXN0LmdldCh7XG4gICAgICAgIHVybDogdXJsLFxuICAgICAgICByZXNwb25zZVR5cGU6IHJlc3BvbnNlVHlwZSxcbiAgICAgICAgb25sb2FkOiBmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgIHRhc2sucmVzb2x2ZShyZXMpO1xuICAgICAgICB9LFxuICAgICAgICBvbmVycm9yOiBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgdGFzay5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHRhc2s7XG59XG4vKipcbiAqIE1ha2UgYSB2ZW5kb3IucmVxdWVzdCB0YXNrXG4gKiBAcGFyYW0gIHtzdHJpbmd8b2JqZWN0fG9iamVjdFtdfHN0cmluZ1tdfSB1cmxcbiAqIEBwYXJhbSAge3N0cmluZ30gW3Jlc3BvbnNlVHlwZV1cbiAqIEBleGFtcGxlXG4gKiAgICAgdmFyIHRhc2sgPSBUYXNrLm1ha2VSZXF1ZXN0VGFzaygnLi9hLmpzb24nKTtcbiAqICAgICB2YXIgdGFzayA9IFRhc2subWFrZVJlcXVlc3RUYXNrKHtcbiAqICAgICAgICAgdXJsOiAnYi5iaW4nLFxuICogICAgICAgICByZXNwb25zZVR5cGU6ICdhcnJheWJ1ZmZlcidcbiAqICAgICB9KTtcbiAqICAgICB2YXIgdGFza3MgPSBUYXNrLm1ha2VSZXF1ZXN0VGFzayhbJy4vYS5qc29uJywgJy4vYi5qc29uJ10pO1xuICogICAgIHZhciB0YXNrcyA9IFRhc2subWFrZVJlcXVlc3RUYXNrKFtcbiAqICAgICAgICAge3VybDogJ2EuanNvbid9LFxuICogICAgICAgICB7dXJsOiAnYi5iaW4nLCByZXNwb25zZVR5cGU6ICdhcnJheWJ1ZmZlcid9XG4gKiAgICAgXSk7XG4gKiBAcmV0dXJuIHtjbGF5LmFzeW5jLlRhc2t8Y2xheS5hc3luYy5UYXNrW119XG4gKi9cblRhc2subWFrZVJlcXVlc3RUYXNrID0gZnVuY3Rpb24odXJsLCByZXNwb25zZVR5cGUpIHtcbiAgICBpZiAodHlwZW9mIHVybCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIG1ha2VSZXF1ZXN0VGFzayh1cmwsIHJlc3BvbnNlVHlwZSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC51cmwpIHsgICAvLyAgQ29uZmlndXJlIG9iamVjdFxuICAgICAgICB2YXIgb2JqID0gdXJsO1xuICAgICAgICByZXR1cm4gbWFrZVJlcXVlc3RUYXNrKG9iai51cmwsIG9iai5yZXNwb25zZVR5cGUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHVybCkpIHsgIC8vIFVybCBsaXN0XG4gICAgICAgIHZhciB1cmxMaXN0ID0gdXJsO1xuICAgICAgICB2YXIgdGFza3MgPSBbXTtcbiAgICAgICAgdXJsTGlzdC5mb3JFYWNoKGZ1bmN0aW9uKG9iaikge1xuICAgICAgICAgICAgdmFyIHVybCwgcmVzcG9uc2VUeXBlO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBvYmogPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdXJsID0gb2JqO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoT2JqZWN0KG9iaikgPT09IG9iaikge1xuICAgICAgICAgICAgICAgIHVybCA9IG9iai51cmw7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlID0gb2JqLnJlc3BvbnNlVHlwZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRhc2tzLnB1c2gobWFrZVJlcXVlc3RUYXNrKHVybCwgcmVzcG9uc2VUeXBlKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGFza3M7XG4gICAgfVxufTtcbi8qKlxuICogQHJldHVybiB7Y2xheS5hc3luYy5UYXNrfVxuICovXG5UYXNrLm1ha2VUYXNrID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIG5ldyBUYXNrKCk7XG59O1xuXG51dGlsLmV4dGVuZChUYXNrLnByb3RvdHlwZSwgbm90aWZpZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBUYXNrO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvYXN5bmMvVGFzay5qc1xuLy8gbW9kdWxlIGlkID0gNTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n");

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_util__ = __webpack_require__(9);\n\n\n\n\nvar TexturePool = function () {\n\n    this._pool = {};\n\n    this._allocatedTextures = [];\n};\n\nTexturePool.prototype = {\n\n    constructor: TexturePool,\n\n    get: function (parameters) {\n        var key = generateKey(parameters);\n        if (!this._pool.hasOwnProperty(key)) {\n            this._pool[key] = [];\n        }\n        var list = this._pool[key];\n        if (!list.length) {\n            var texture = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */](parameters);\n            this._allocatedTextures.push(texture);\n            return texture;\n        }\n        return list.pop();\n    },\n\n    put: function (texture) {\n        var key = generateKey(texture);\n        if (!this._pool.hasOwnProperty(key)) {\n            this._pool[key] = [];\n        }\n        var list = this._pool[key];\n        list.push(texture);\n    },\n\n    clear: function (renderer) {\n        for (var i = 0; i < this._allocatedTextures.length; i++) {\n            this._allocatedTextures[i].dispose(renderer);\n        }\n        this._pool = {};\n        this._allocatedTextures = [];\n    }\n};\n\nvar defaultParams = {\n    width: 512,\n    height: 512,\n    type: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].UNSIGNED_BYTE,\n    format: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].RGBA,\n    wrapS: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CLAMP_TO_EDGE,\n    wrapT: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CLAMP_TO_EDGE,\n    minFilter: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_LINEAR,\n    magFilter: __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR,\n    useMipmap: true,\n    anisotropic: 1,\n    flipY: true,\n    unpackAlignment: 4,\n    premultiplyAlpha: false\n};\n\nvar defaultParamPropList = Object.keys(defaultParams);\n\nfunction generateKey(parameters) {\n    __WEBPACK_IMPORTED_MODULE_2__core_util__[\"a\" /* default */].defaultsWithPropList(parameters, defaultParams, defaultParamPropList);\n    fallBack(parameters);\n\n    var key = '';\n    for (var i = 0; i < defaultParamPropList.length; i++) {\n        var name = defaultParamPropList[i];\n        var chunk = parameters[name].toString();\n        key += chunk;\n    }\n    return key;\n}\n\nfunction fallBack(target) {\n\n    var IPOT = isPowerOfTwo(target.width, target.height);\n\n    if (target.format === __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].DEPTH_COMPONENT) {\n        target.useMipmap = false;\n    }\n\n    if (!IPOT || !target.useMipmap) {\n        if (target.minFilter == __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST_MIPMAP_NEAREST ||\n            target.minFilter == __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST_MIPMAP_LINEAR) {\n            target.minFilter = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST;\n        } else if (\n            target.minFilter == __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_LINEAR ||\n            target.minFilter == __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR_MIPMAP_NEAREST\n        ) {\n            target.minFilter = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].LINEAR;\n        }\n    }\n    if (!IPOT) {\n        target.wrapS = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CLAMP_TO_EDGE;\n        target.wrapT = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].CLAMP_TO_EDGE;\n    }\n}\n\nfunction isPowerOfTwo(width, height) {\n    return (width & (width-1)) === 0 &&\n            (height & (height-1)) === 0;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TexturePool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29tcG9zaXRvci9UZXh0dXJlUG9vbC5qcz85ZTQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUZXh0dXJlMkQgZnJvbSAnLi4vVGV4dHVyZTJEJztcbmltcG9ydCBnbGVudW0gZnJvbSAnLi4vY29yZS9nbGVudW0nO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vY29yZS91dGlsJztcblxudmFyIFRleHR1cmVQb29sID0gZnVuY3Rpb24gKCkge1xuXG4gICAgdGhpcy5fcG9vbCA9IHt9O1xuXG4gICAgdGhpcy5fYWxsb2NhdGVkVGV4dHVyZXMgPSBbXTtcbn07XG5cblRleHR1cmVQb29sLnByb3RvdHlwZSA9IHtcblxuICAgIGNvbnN0cnVjdG9yOiBUZXh0dXJlUG9vbCxcblxuICAgIGdldDogZnVuY3Rpb24gKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgdmFyIGtleSA9IGdlbmVyYXRlS2V5KHBhcmFtZXRlcnMpO1xuICAgICAgICBpZiAoIXRoaXMuX3Bvb2wuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgdGhpcy5fcG9vbFtrZXldID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxpc3QgPSB0aGlzLl9wb29sW2tleV07XG4gICAgICAgIGlmICghbGlzdC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciB0ZXh0dXJlID0gbmV3IFRleHR1cmUyRChwYXJhbWV0ZXJzKTtcbiAgICAgICAgICAgIHRoaXMuX2FsbG9jYXRlZFRleHR1cmVzLnB1c2godGV4dHVyZSk7XG4gICAgICAgICAgICByZXR1cm4gdGV4dHVyZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbGlzdC5wb3AoKTtcbiAgICB9LFxuXG4gICAgcHV0OiBmdW5jdGlvbiAodGV4dHVyZSkge1xuICAgICAgICB2YXIga2V5ID0gZ2VuZXJhdGVLZXkodGV4dHVyZSk7XG4gICAgICAgIGlmICghdGhpcy5fcG9vbC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICB0aGlzLl9wb29sW2tleV0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGlzdCA9IHRoaXMuX3Bvb2xba2V5XTtcbiAgICAgICAgbGlzdC5wdXNoKHRleHR1cmUpO1xuICAgIH0sXG5cbiAgICBjbGVhcjogZnVuY3Rpb24gKHJlbmRlcmVyKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fYWxsb2NhdGVkVGV4dHVyZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2FsbG9jYXRlZFRleHR1cmVzW2ldLmRpc3Bvc2UocmVuZGVyZXIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Bvb2wgPSB7fTtcbiAgICAgICAgdGhpcy5fYWxsb2NhdGVkVGV4dHVyZXMgPSBbXTtcbiAgICB9XG59O1xuXG52YXIgZGVmYXVsdFBhcmFtcyA9IHtcbiAgICB3aWR0aDogNTEyLFxuICAgIGhlaWdodDogNTEyLFxuICAgIHR5cGU6IGdsZW51bS5VTlNJR05FRF9CWVRFLFxuICAgIGZvcm1hdDogZ2xlbnVtLlJHQkEsXG4gICAgd3JhcFM6IGdsZW51bS5DTEFNUF9UT19FREdFLFxuICAgIHdyYXBUOiBnbGVudW0uQ0xBTVBfVE9fRURHRSxcbiAgICBtaW5GaWx0ZXI6IGdsZW51bS5MSU5FQVJfTUlQTUFQX0xJTkVBUixcbiAgICBtYWdGaWx0ZXI6IGdsZW51bS5MSU5FQVIsXG4gICAgdXNlTWlwbWFwOiB0cnVlLFxuICAgIGFuaXNvdHJvcGljOiAxLFxuICAgIGZsaXBZOiB0cnVlLFxuICAgIHVucGFja0FsaWdubWVudDogNCxcbiAgICBwcmVtdWx0aXBseUFscGhhOiBmYWxzZVxufTtcblxudmFyIGRlZmF1bHRQYXJhbVByb3BMaXN0ID0gT2JqZWN0LmtleXMoZGVmYXVsdFBhcmFtcyk7XG5cbmZ1bmN0aW9uIGdlbmVyYXRlS2V5KHBhcmFtZXRlcnMpIHtcbiAgICB1dGlsLmRlZmF1bHRzV2l0aFByb3BMaXN0KHBhcmFtZXRlcnMsIGRlZmF1bHRQYXJhbXMsIGRlZmF1bHRQYXJhbVByb3BMaXN0KTtcbiAgICBmYWxsQmFjayhwYXJhbWV0ZXJzKTtcblxuICAgIHZhciBrZXkgPSAnJztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRlZmF1bHRQYXJhbVByb3BMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBuYW1lID0gZGVmYXVsdFBhcmFtUHJvcExpc3RbaV07XG4gICAgICAgIHZhciBjaHVuayA9IHBhcmFtZXRlcnNbbmFtZV0udG9TdHJpbmcoKTtcbiAgICAgICAga2V5ICs9IGNodW5rO1xuICAgIH1cbiAgICByZXR1cm4ga2V5O1xufVxuXG5mdW5jdGlvbiBmYWxsQmFjayh0YXJnZXQpIHtcblxuICAgIHZhciBJUE9UID0gaXNQb3dlck9mVHdvKHRhcmdldC53aWR0aCwgdGFyZ2V0LmhlaWdodCk7XG5cbiAgICBpZiAodGFyZ2V0LmZvcm1hdCA9PT0gZ2xlbnVtLkRFUFRIX0NPTVBPTkVOVCkge1xuICAgICAgICB0YXJnZXQudXNlTWlwbWFwID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKCFJUE9UIHx8ICF0YXJnZXQudXNlTWlwbWFwKSB7XG4gICAgICAgIGlmICh0YXJnZXQubWluRmlsdGVyID09IGdsZW51bS5ORUFSRVNUX01JUE1BUF9ORUFSRVNUIHx8XG4gICAgICAgICAgICB0YXJnZXQubWluRmlsdGVyID09IGdsZW51bS5ORUFSRVNUX01JUE1BUF9MSU5FQVIpIHtcbiAgICAgICAgICAgIHRhcmdldC5taW5GaWx0ZXIgPSBnbGVudW0uTkVBUkVTVDtcbiAgICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgICAgIHRhcmdldC5taW5GaWx0ZXIgPT0gZ2xlbnVtLkxJTkVBUl9NSVBNQVBfTElORUFSIHx8XG4gICAgICAgICAgICB0YXJnZXQubWluRmlsdGVyID09IGdsZW51bS5MSU5FQVJfTUlQTUFQX05FQVJFU1RcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0YXJnZXQubWluRmlsdGVyID0gZ2xlbnVtLkxJTkVBUjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIUlQT1QpIHtcbiAgICAgICAgdGFyZ2V0LndyYXBTID0gZ2xlbnVtLkNMQU1QX1RPX0VER0U7XG4gICAgICAgIHRhcmdldC53cmFwVCA9IGdsZW51bS5DTEFNUF9UT19FREdFO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gaXNQb3dlck9mVHdvKHdpZHRoLCBoZWlnaHQpIHtcbiAgICByZXR1cm4gKHdpZHRoICYgKHdpZHRoLTEpKSA9PT0gMCAmJlxuICAgICAgICAgICAgKGhlaWdodCAmIChoZWlnaHQtMSkpID09PSAwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUZXh0dXJlUG9vbDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvVGV4dHVyZVBvb2wuanNcbi8vIG1vZHVsZSBpZCA9IDU3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///57\n");

/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.kernel.gaussian_9\\nfloat gaussianKernel[9];\\ngaussianKernel[0] = 0.07;\\ngaussianKernel[1] = 0.09;\\ngaussianKernel[2] = 0.12;\\ngaussianKernel[3] = 0.14;\\ngaussianKernel[4] = 0.16;\\ngaussianKernel[5] = 0.14;\\ngaussianKernel[6] = 0.12;\\ngaussianKernel[7] = 0.09;\\ngaussianKernel[8] = 0.07;\\n@end\\n@export clay.compositor.kernel.gaussian_13\\nfloat gaussianKernel[13];\\ngaussianKernel[0] = 0.02;\\ngaussianKernel[1] = 0.03;\\ngaussianKernel[2] = 0.06;\\ngaussianKernel[3] = 0.08;\\ngaussianKernel[4] = 0.11;\\ngaussianKernel[5] = 0.13;\\ngaussianKernel[6] = 0.14;\\ngaussianKernel[7] = 0.13;\\ngaussianKernel[8] = 0.11;\\ngaussianKernel[9] = 0.08;\\ngaussianKernel[10] = 0.06;\\ngaussianKernel[11] = 0.03;\\ngaussianKernel[12] = 0.02;\\n@end\\n@export clay.compositor.gaussian_blur\\n#define SHADER_NAME gaussian_blur\\nuniform sampler2D texture;varying vec2 v_Texcoord;\\nuniform float blurSize : 2.0;\\nuniform vec2 textureSize : [512.0, 512.0];\\nuniform float blurDir : 0.0;\\n@import clay.util.rgbm\\n@import clay.util.clamp_sample\\nvoid main (void)\\n{\\n @import clay.compositor.kernel.gaussian_9\\n vec2 off = blurSize / textureSize;\\n off *= vec2(1.0 - blurDir, blurDir);\\n vec4 sum = vec4(0.0);\\n float weightAll = 0.0;\\n for (int i = 0; i < 9; i++) {\\n float w = gaussianKernel[i];\\n vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\\n sum += texel * w;\\n weightAll += w;\\n }\\n gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\\n}\\n@end\\n\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2JsdXIuZ2xzbC5qcz9iNDdiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3Iua2VybmVsLmdhdXNzaWFuXzlcXG5mbG9hdCBnYXVzc2lhbktlcm5lbFs5XTtcXG5nYXVzc2lhbktlcm5lbFswXSA9IDAuMDc7XFxuZ2F1c3NpYW5LZXJuZWxbMV0gPSAwLjA5O1xcbmdhdXNzaWFuS2VybmVsWzJdID0gMC4xMjtcXG5nYXVzc2lhbktlcm5lbFszXSA9IDAuMTQ7XFxuZ2F1c3NpYW5LZXJuZWxbNF0gPSAwLjE2O1xcbmdhdXNzaWFuS2VybmVsWzVdID0gMC4xNDtcXG5nYXVzc2lhbktlcm5lbFs2XSA9IDAuMTI7XFxuZ2F1c3NpYW5LZXJuZWxbN10gPSAwLjA5O1xcbmdhdXNzaWFuS2VybmVsWzhdID0gMC4wNztcXG5AZW5kXFxuQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3Iua2VybmVsLmdhdXNzaWFuXzEzXFxuZmxvYXQgZ2F1c3NpYW5LZXJuZWxbMTNdO1xcbmdhdXNzaWFuS2VybmVsWzBdID0gMC4wMjtcXG5nYXVzc2lhbktlcm5lbFsxXSA9IDAuMDM7XFxuZ2F1c3NpYW5LZXJuZWxbMl0gPSAwLjA2O1xcbmdhdXNzaWFuS2VybmVsWzNdID0gMC4wODtcXG5nYXVzc2lhbktlcm5lbFs0XSA9IDAuMTE7XFxuZ2F1c3NpYW5LZXJuZWxbNV0gPSAwLjEzO1xcbmdhdXNzaWFuS2VybmVsWzZdID0gMC4xNDtcXG5nYXVzc2lhbktlcm5lbFs3XSA9IDAuMTM7XFxuZ2F1c3NpYW5LZXJuZWxbOF0gPSAwLjExO1xcbmdhdXNzaWFuS2VybmVsWzldID0gMC4wODtcXG5nYXVzc2lhbktlcm5lbFsxMF0gPSAwLjA2O1xcbmdhdXNzaWFuS2VybmVsWzExXSA9IDAuMDM7XFxuZ2F1c3NpYW5LZXJuZWxbMTJdID0gMC4wMjtcXG5AZW5kXFxuQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IuZ2F1c3NpYW5fYmx1clxcbiNkZWZpbmUgU0hBREVSX05BTUUgZ2F1c3NpYW5fYmx1clxcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7dmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxudW5pZm9ybSBmbG9hdCBibHVyU2l6ZSA6IDIuMDtcXG51bmlmb3JtIHZlYzIgdGV4dHVyZVNpemUgOiBbNTEyLjAsIDUxMi4wXTtcXG51bmlmb3JtIGZsb2F0IGJsdXJEaXIgOiAwLjA7XFxuQGltcG9ydCBjbGF5LnV0aWwucmdibVxcbkBpbXBvcnQgY2xheS51dGlsLmNsYW1wX3NhbXBsZVxcbnZvaWQgbWFpbiAodm9pZClcXG57XFxuIEBpbXBvcnQgY2xheS5jb21wb3NpdG9yLmtlcm5lbC5nYXVzc2lhbl85XFxuIHZlYzIgb2ZmID0gYmx1clNpemUgLyB0ZXh0dXJlU2l6ZTtcXG4gb2ZmICo9IHZlYzIoMS4wIC0gYmx1ckRpciwgYmx1ckRpcik7XFxuIHZlYzQgc3VtID0gdmVjNCgwLjApO1xcbiBmbG9hdCB3ZWlnaHRBbGwgPSAwLjA7XFxuIGZvciAoaW50IGkgPSAwOyBpIDwgOTsgaSsrKSB7XFxuIGZsb2F0IHcgPSBnYXVzc2lhbktlcm5lbFtpXTtcXG4gdmVjNCB0ZXhlbCA9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICsgZmxvYXQoaSAtIDQpICogb2ZmKSk7XFxuIHN1bSArPSB0ZXhlbCAqIHc7XFxuIHdlaWdodEFsbCArPSB3O1xcbiB9XFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUihzdW0gLyBtYXgod2VpZ2h0QWxsLCAwLjAxKSk7XFxufVxcbkBlbmRcXG5cIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9ibHVyLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDU4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///58\n");

/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.output\\n#define OUTPUT_ALPHA\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\\n gl_FragColor.rgb = tex.rgb;\\n#ifdef OUTPUT_ALPHA\\n gl_FragColor.a = tex.a;\\n#else\\n gl_FragColor.a = 1.0;\\n#endif\\n gl_FragColor = encodeHDR(gl_FragColor);\\n#ifdef PREMULTIPLY_ALPHA\\n gl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL291dHB1dC5nbHNsLmpzP2ExNzUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IGNsYXkuY29tcG9zaXRvci5vdXRwdXRcXG4jZGVmaW5lIE9VVFBVVF9BTFBIQVxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxuQGltcG9ydCBjbGF5LnV0aWwucmdibVxcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWM0IHRleCA9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZSwgdl9UZXhjb29yZCkpO1xcbiBnbF9GcmFnQ29sb3IucmdiID0gdGV4LnJnYjtcXG4jaWZkZWYgT1VUUFVUX0FMUEhBXFxuIGdsX0ZyYWdDb2xvci5hID0gdGV4LmE7XFxuI2Vsc2VcXG4gZ2xfRnJhZ0NvbG9yLmEgPSAxLjA7XFxuI2VuZGlmXFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUihnbF9GcmFnQ29sb3IpO1xcbiNpZmRlZiBQUkVNVUxUSVBMWV9BTFBIQVxcbiBnbF9GcmFnQ29sb3IucmdiICo9IGdsX0ZyYWdDb2xvci5hO1xcbiNlbmRpZlxcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3Ivb3V0cHV0Lmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDU5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n");

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.bright\\nuniform sampler2D texture;\\nuniform float threshold : 1;\\nuniform float scale : 1.0;\\nuniform vec2 textureSize: [512, 512];\\nvarying vec2 v_Texcoord;\\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\\n@import clay.util.rgbm\\nvec4 median(vec4 a, vec4 b, vec4 c)\\n{\\n return a + b + c - min(min(a, b), c) - max(max(a, b), c);\\n}\\nvoid main()\\n{\\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\\n#ifdef ANTI_FLICKER\\n vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\\n vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\\n vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\\n vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\\n vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\\n texel = median(median(texel, s1, s2), s3, s4);\\n#endif\\n float lum = dot(texel.rgb , lumWeight);\\n vec4 color;\\n if (lum > threshold && texel.a > 0.0)\\n {\\n color = vec4(texel.rgb * scale, texel.a * scale);\\n }\\n else\\n {\\n color = vec4(0.0);\\n }\\n gl_FragColor = encodeHDR(color);\\n}\\n@end\\n\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2JyaWdodC5nbHNsLmpzPzBmZWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IGNsYXkuY29tcG9zaXRvci5icmlnaHRcXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcbnVuaWZvcm0gZmxvYXQgdGhyZXNob2xkIDogMTtcXG51bmlmb3JtIGZsb2F0IHNjYWxlIDogMS4wO1xcbnVuaWZvcm0gdmVjMiB0ZXh0dXJlU2l6ZTogWzUxMiwgNTEyXTtcXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG5jb25zdCB2ZWMzIGx1bVdlaWdodCA9IHZlYzMoMC4yMTI1LCAwLjcxNTQsIDAuMDcyMSk7XFxuQGltcG9ydCBjbGF5LnV0aWwucmdibVxcbnZlYzQgbWVkaWFuKHZlYzQgYSwgdmVjNCBiLCB2ZWM0IGMpXFxue1xcbiByZXR1cm4gYSArIGIgKyBjIC0gbWluKG1pbihhLCBiKSwgYykgLSBtYXgobWF4KGEsIGIpLCBjKTtcXG59XFxudm9pZCBtYWluKClcXG57XFxuIHZlYzQgdGV4ZWwgPSBkZWNvZGVIRFIodGV4dHVyZTJEKHRleHR1cmUsIHZfVGV4Y29vcmQpKTtcXG4jaWZkZWYgQU5USV9GTElDS0VSXFxuIHZlYzMgZCA9IDEuMCAvIHRleHR1cmVTaXplLnh5eCAqIHZlYzMoMS4wLCAxLjAsIDAuMCk7XFxuIHZlYzQgczEgPSBkZWNvZGVIRFIodGV4dHVyZTJEKHRleHR1cmUsIHZfVGV4Y29vcmQgLSBkLnh6KSk7XFxuIHZlYzQgczIgPSBkZWNvZGVIRFIodGV4dHVyZTJEKHRleHR1cmUsIHZfVGV4Y29vcmQgKyBkLnh6KSk7XFxuIHZlYzQgczMgPSBkZWNvZGVIRFIodGV4dHVyZTJEKHRleHR1cmUsIHZfVGV4Y29vcmQgLSBkLnp5KSk7XFxuIHZlYzQgczQgPSBkZWNvZGVIRFIodGV4dHVyZTJEKHRleHR1cmUsIHZfVGV4Y29vcmQgKyBkLnp5KSk7XFxuIHRleGVsID0gbWVkaWFuKG1lZGlhbih0ZXhlbCwgczEsIHMyKSwgczMsIHM0KTtcXG4jZW5kaWZcXG4gZmxvYXQgbHVtID0gZG90KHRleGVsLnJnYiAsIGx1bVdlaWdodCk7XFxuIHZlYzQgY29sb3I7XFxuIGlmIChsdW0gPiB0aHJlc2hvbGQgJiYgdGV4ZWwuYSA+IDAuMClcXG4ge1xcbiBjb2xvciA9IHZlYzQodGV4ZWwucmdiICogc2NhbGUsIHRleGVsLmEgKiBzY2FsZSk7XFxuIH1cXG4gZWxzZVxcbiB7XFxuIGNvbG9yID0gdmVjNCgwLjApO1xcbiB9XFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUihjb2xvcik7XFxufVxcbkBlbmRcXG5cIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9icmlnaHQuZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gNjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///60\n");

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.downsample\\nuniform sampler2D texture;\\nuniform vec2 textureSize : [512, 512];\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\nfloat brightness(vec3 c)\\n{\\n return max(max(c.r, c.g), c.b);\\n}\\n@import clay.util.clamp_sample\\nvoid main()\\n{\\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\\n#ifdef ANTI_FLICKER\\n vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\\n vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\\n vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\\n vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\\n float s1w = 1.0 / (brightness(s1) + 1.0);\\n float s2w = 1.0 / (brightness(s2) + 1.0);\\n float s3w = 1.0 / (brightness(s3) + 1.0);\\n float s4w = 1.0 / (brightness(s4) + 1.0);\\n float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\\n vec4 color = vec4(\\n (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\\n 1.0\\n );\\n#else\\n vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\\n color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\\n color *= 0.25;\\n#endif\\n gl_FragColor = encodeHDR(color);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2Rvd25zYW1wbGUuZ2xzbC5qcz9iNDQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IuZG93bnNhbXBsZVxcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSB2ZWMyIHRleHR1cmVTaXplIDogWzUxMiwgNTEyXTtcXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG5AaW1wb3J0IGNsYXkudXRpbC5yZ2JtXFxuZmxvYXQgYnJpZ2h0bmVzcyh2ZWMzIGMpXFxue1xcbiByZXR1cm4gbWF4KG1heChjLnIsIGMuZyksIGMuYik7XFxufVxcbkBpbXBvcnQgY2xheS51dGlsLmNsYW1wX3NhbXBsZVxcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWM0IGQgPSB2ZWM0KC0xLjAsIC0xLjAsIDEuMCwgMS4wKSAvIHRleHR1cmVTaXplLnh5eHk7XFxuI2lmZGVmIEFOVElfRkxJQ0tFUlxcbiB2ZWMzIHMxID0gZGVjb2RlSERSKGNsYW1wU2FtcGxlKHRleHR1cmUsIHZfVGV4Y29vcmQgKyBkLnh5KSkucmdiO1xcbiB2ZWMzIHMyID0gZGVjb2RlSERSKGNsYW1wU2FtcGxlKHRleHR1cmUsIHZfVGV4Y29vcmQgKyBkLnp5KSkucmdiO1xcbiB2ZWMzIHMzID0gZGVjb2RlSERSKGNsYW1wU2FtcGxlKHRleHR1cmUsIHZfVGV4Y29vcmQgKyBkLnh3KSkucmdiO1xcbiB2ZWMzIHM0ID0gZGVjb2RlSERSKGNsYW1wU2FtcGxlKHRleHR1cmUsIHZfVGV4Y29vcmQgKyBkLnp3KSkucmdiO1xcbiBmbG9hdCBzMXcgPSAxLjAgLyAoYnJpZ2h0bmVzcyhzMSkgKyAxLjApO1xcbiBmbG9hdCBzMncgPSAxLjAgLyAoYnJpZ2h0bmVzcyhzMikgKyAxLjApO1xcbiBmbG9hdCBzM3cgPSAxLjAgLyAoYnJpZ2h0bmVzcyhzMykgKyAxLjApO1xcbiBmbG9hdCBzNHcgPSAxLjAgLyAoYnJpZ2h0bmVzcyhzNCkgKyAxLjApO1xcbiBmbG9hdCBvbmVEaXZpZGVTdW0gPSAxLjAgLyAoczF3ICsgczJ3ICsgczN3ICsgczR3KTtcXG4gdmVjNCBjb2xvciA9IHZlYzQoXFxuIChzMSAqIHMxdyArIHMyICogczJ3ICsgczMgKiBzM3cgKyBzNCAqIHM0dykgKiBvbmVEaXZpZGVTdW0sXFxuIDEuMFxcbiApO1xcbiNlbHNlXFxuIHZlYzQgY29sb3IgPSBkZWNvZGVIRFIoY2xhbXBTYW1wbGUodGV4dHVyZSwgdl9UZXhjb29yZCArIGQueHkpKTtcXG4gY29sb3IgKz0gZGVjb2RlSERSKGNsYW1wU2FtcGxlKHRleHR1cmUsIHZfVGV4Y29vcmQgKyBkLnp5KSk7XFxuIGNvbG9yICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICsgZC54dykpO1xcbiBjb2xvciArPSBkZWNvZGVIRFIoY2xhbXBTYW1wbGUodGV4dHVyZSwgdl9UZXhjb29yZCArIGQuencpKTtcXG4gY29sb3IgKj0gMC4yNTtcXG4jZW5kaWZcXG4gZ2xfRnJhZ0NvbG9yID0gZW5jb2RlSERSKGNvbG9yKTtcXG59XFxuQGVuZFwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2Rvd25zYW1wbGUuZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gNjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///61\n");

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"\\n@export clay.compositor.upsample\\n#define HIGH_QUALITY\\nuniform sampler2D texture;\\nuniform vec2 textureSize : [512, 512];\\nuniform float sampleScale: 0.5;\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\n@import clay.util.clamp_sample\\nvoid main()\\n{\\n#ifdef HIGH_QUALITY\\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\\n vec4 s;\\n s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\\n s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\\n gl_FragColor = encodeHDR(s / 16.0);\\n#else\\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\\n vec4 s;\\n s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\\n gl_FragColor = encodeHDR(s / 4.0);\\n#endif\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL3Vwc2FtcGxlLmdsc2wuanM/MzgwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIlxcbkBleHBvcnQgY2xheS5jb21wb3NpdG9yLnVwc2FtcGxlXFxuI2RlZmluZSBISUdIX1FVQUxJVFlcXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcbnVuaWZvcm0gdmVjMiB0ZXh0dXJlU2l6ZSA6IFs1MTIsIDUxMl07XFxudW5pZm9ybSBmbG9hdCBzYW1wbGVTY2FsZTogMC41O1xcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbkBpbXBvcnQgY2xheS51dGlsLnJnYm1cXG5AaW1wb3J0IGNsYXkudXRpbC5jbGFtcF9zYW1wbGVcXG52b2lkIG1haW4oKVxcbntcXG4jaWZkZWYgSElHSF9RVUFMSVRZXFxuIHZlYzQgZCA9IHZlYzQoMS4wLCAxLjAsIC0xLjAsIDAuMCkgLyB0ZXh0dXJlU2l6ZS54eXh5ICogc2FtcGxlU2NhbGU7XFxuIHZlYzQgcztcXG4gcyA9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkIC0gZC54eSkpO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkIC0gZC53eSkpICogMi4wO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkIC0gZC56eSkpO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICsgZC56dykpICogMi4wO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICkpICogNC4wO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICsgZC54dykpICogMi4wO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICsgZC56eSkpO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICsgZC53eSkpICogMi4wO1xcbiBzICs9IGRlY29kZUhEUihjbGFtcFNhbXBsZSh0ZXh0dXJlLCB2X1RleGNvb3JkICsgZC54eSkpO1xcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIocyAvIDE2LjApO1xcbiNlbHNlXFxuIHZlYzQgZCA9IHZlYzQoLTEuMCwgLTEuMCwgKzEuMCwgKzEuMCkgLyB0ZXh0dXJlU2l6ZS54eXh5O1xcbiB2ZWM0IHM7XFxuIHMgPSBkZWNvZGVIRFIoY2xhbXBTYW1wbGUodGV4dHVyZSwgdl9UZXhjb29yZCArIGQueHkpKTtcXG4gcyArPSBkZWNvZGVIRFIoY2xhbXBTYW1wbGUodGV4dHVyZSwgdl9UZXhjb29yZCArIGQuenkpKTtcXG4gcyArPSBkZWNvZGVIRFIoY2xhbXBTYW1wbGUodGV4dHVyZSwgdl9UZXhjb29yZCArIGQueHcpKTtcXG4gcyArPSBkZWNvZGVIRFIoY2xhbXBTYW1wbGUodGV4dHVyZSwgdl9UZXhjb29yZCArIGQuencpKTtcXG4gZ2xfRnJhZ0NvbG9yID0gZW5jb2RlSERSKHMgLyA0LjApO1xcbiNlbmRpZlxcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3IvdXBzYW1wbGUuZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///62\n");

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.hdr.composite\\n#define TONEMAPPING\\nuniform sampler2D texture;\\n#ifdef BLOOM_ENABLED\\nuniform sampler2D bloom;\\n#endif\\n#ifdef LENSFLARE_ENABLED\\nuniform sampler2D lensflare;\\nuniform sampler2D lensdirt;\\n#endif\\n#ifdef LUM_ENABLED\\nuniform sampler2D lum;\\n#endif\\n#ifdef LUT_ENABLED\\nuniform sampler2D lut;\\n#endif\\n#ifdef COLOR_CORRECTION\\nuniform float brightness : 0.0;\\nuniform float contrast : 1.0;\\nuniform float saturation : 1.0;\\n#endif\\n#ifdef VIGNETTE\\nuniform float vignetteDarkness: 1.0;\\nuniform float vignetteOffset: 1.0;\\n#endif\\nuniform float exposure : 1.0;\\nuniform float bloomIntensity : 0.25;\\nuniform float lensflareIntensity : 1;\\nvarying vec2 v_Texcoord;\\n@import clay.util.srgb\\nvec3 ACESToneMapping(vec3 color)\\n{\\n const float A = 2.51;\\n const float B = 0.03;\\n const float C = 2.43;\\n const float D = 0.59;\\n const float E = 0.14;\\n return (color * (A * color + B)) / (color * (C * color + D) + E);\\n}\\nfloat eyeAdaption(float fLum)\\n{\\n return mix(0.2, fLum, 0.5);\\n}\\n#ifdef LUT_ENABLED\\nvec3 lutTransform(vec3 color) {\\n float blueColor = color.b * 63.0;\\n vec2 quad1;\\n quad1.y = floor(floor(blueColor) / 8.0);\\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\\n vec2 quad2;\\n quad2.y = floor(ceil(blueColor) / 8.0);\\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\\n vec2 texPos1;\\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\\n vec2 texPos2;\\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\\n vec4 newColor1 = texture2D(lut, texPos1);\\n vec4 newColor2 = texture2D(lut, texPos2);\\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\\n return newColor.rgb;\\n}\\n#endif\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 texel = vec4(0.0);\\n vec4 originalTexel = vec4(0.0);\\n#ifdef TEXTURE_ENABLED\\n texel = decodeHDR(texture2D(texture, v_Texcoord));\\n originalTexel = texel;\\n#endif\\n#ifdef BLOOM_ENABLED\\n vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\\n texel.rgb += bloomTexel.rgb * bloomIntensity;\\n texel.a += bloomTexel.a * bloomIntensity;\\n#endif\\n#ifdef LENSFLARE_ENABLED\\n texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\\n#endif\\n texel.a = min(texel.a, 1.0);\\n#ifdef LUM_ENABLED\\n float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\\n float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\\n float exposureBias = adaptedLumDest * exposure;\\n#else\\n float exposureBias = exposure;\\n#endif\\n#ifdef TONEMAPPING\\n texel.rgb *= exposureBias;\\n texel.rgb = ACESToneMapping(texel.rgb);\\n#endif\\n texel = linearTosRGB(texel);\\n#ifdef LUT_ENABLED\\n texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\\n#endif\\n#ifdef COLOR_CORRECTION\\n texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\\n texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\\n float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\\n texel.rgb = mix(vec3(lum), texel.rgb, saturation);\\n#endif\\n#ifdef VIGNETTE\\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\\n texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\\n#endif\\n gl_FragColor = encodeHDR(texel);\\n#ifdef DEBUG\\n #if DEBUG == 1\\n gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\\n #elif DEBUG == 2\\n gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\\n #elif DEBUG == 3\\n gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\\n #endif\\n#endif\\n if (originalTexel.a <= 0.01 && gl_FragColor.a > 1e-5) {\\n gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\\n }\\n#ifdef PREMULTIPLY_ALPHA\\n gl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2hkci5nbHNsLmpzPzYxOWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IGNsYXkuY29tcG9zaXRvci5oZHIuY29tcG9zaXRlXFxuI2RlZmluZSBUT05FTUFQUElOR1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxuI2lmZGVmIEJMT09NX0VOQUJMRURcXG51bmlmb3JtIHNhbXBsZXIyRCBibG9vbTtcXG4jZW5kaWZcXG4jaWZkZWYgTEVOU0ZMQVJFX0VOQUJMRURcXG51bmlmb3JtIHNhbXBsZXIyRCBsZW5zZmxhcmU7XFxudW5pZm9ybSBzYW1wbGVyMkQgbGVuc2RpcnQ7XFxuI2VuZGlmXFxuI2lmZGVmIExVTV9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgbHVtO1xcbiNlbmRpZlxcbiNpZmRlZiBMVVRfRU5BQkxFRFxcbnVuaWZvcm0gc2FtcGxlcjJEIGx1dDtcXG4jZW5kaWZcXG4jaWZkZWYgQ09MT1JfQ09SUkVDVElPTlxcbnVuaWZvcm0gZmxvYXQgYnJpZ2h0bmVzcyA6IDAuMDtcXG51bmlmb3JtIGZsb2F0IGNvbnRyYXN0IDogMS4wO1xcbnVuaWZvcm0gZmxvYXQgc2F0dXJhdGlvbiA6IDEuMDtcXG4jZW5kaWZcXG4jaWZkZWYgVklHTkVUVEVcXG51bmlmb3JtIGZsb2F0IHZpZ25ldHRlRGFya25lc3M6IDEuMDtcXG51bmlmb3JtIGZsb2F0IHZpZ25ldHRlT2Zmc2V0OiAxLjA7XFxuI2VuZGlmXFxudW5pZm9ybSBmbG9hdCBleHBvc3VyZSA6IDEuMDtcXG51bmlmb3JtIGZsb2F0IGJsb29tSW50ZW5zaXR5IDogMC4yNTtcXG51bmlmb3JtIGZsb2F0IGxlbnNmbGFyZUludGVuc2l0eSA6IDE7XFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxuQGltcG9ydCBjbGF5LnV0aWwuc3JnYlxcbnZlYzMgQUNFU1RvbmVNYXBwaW5nKHZlYzMgY29sb3IpXFxue1xcbiBjb25zdCBmbG9hdCBBID0gMi41MTtcXG4gY29uc3QgZmxvYXQgQiA9IDAuMDM7XFxuIGNvbnN0IGZsb2F0IEMgPSAyLjQzO1xcbiBjb25zdCBmbG9hdCBEID0gMC41OTtcXG4gY29uc3QgZmxvYXQgRSA9IDAuMTQ7XFxuIHJldHVybiAoY29sb3IgKiAoQSAqIGNvbG9yICsgQikpIC8gKGNvbG9yICogKEMgKiBjb2xvciArIEQpICsgRSk7XFxufVxcbmZsb2F0IGV5ZUFkYXB0aW9uKGZsb2F0IGZMdW0pXFxue1xcbiByZXR1cm4gbWl4KDAuMiwgZkx1bSwgMC41KTtcXG59XFxuI2lmZGVmIExVVF9FTkFCTEVEXFxudmVjMyBsdXRUcmFuc2Zvcm0odmVjMyBjb2xvcikge1xcbiBmbG9hdCBibHVlQ29sb3IgPSBjb2xvci5iICogNjMuMDtcXG4gdmVjMiBxdWFkMTtcXG4gcXVhZDEueSA9IGZsb29yKGZsb29yKGJsdWVDb2xvcikgLyA4LjApO1xcbiBxdWFkMS54ID0gZmxvb3IoYmx1ZUNvbG9yKSAtIChxdWFkMS55ICogOC4wKTtcXG4gdmVjMiBxdWFkMjtcXG4gcXVhZDIueSA9IGZsb29yKGNlaWwoYmx1ZUNvbG9yKSAvIDguMCk7XFxuIHF1YWQyLnggPSBjZWlsKGJsdWVDb2xvcikgLSAocXVhZDIueSAqIDguMCk7XFxuIHZlYzIgdGV4UG9zMTtcXG4gdGV4UG9zMS54ID0gKHF1YWQxLnggKiAwLjEyNSkgKyAwLjUvNTEyLjAgKyAoKDAuMTI1IC0gMS4wLzUxMi4wKSAqIGNvbG9yLnIpO1xcbiB0ZXhQb3MxLnkgPSAocXVhZDEueSAqIDAuMTI1KSArIDAuNS81MTIuMCArICgoMC4xMjUgLSAxLjAvNTEyLjApICogY29sb3IuZyk7XFxuIHZlYzIgdGV4UG9zMjtcXG4gdGV4UG9zMi54ID0gKHF1YWQyLnggKiAwLjEyNSkgKyAwLjUvNTEyLjAgKyAoKDAuMTI1IC0gMS4wLzUxMi4wKSAqIGNvbG9yLnIpO1xcbiB0ZXhQb3MyLnkgPSAocXVhZDIueSAqIDAuMTI1KSArIDAuNS81MTIuMCArICgoMC4xMjUgLSAxLjAvNTEyLjApICogY29sb3IuZyk7XFxuIHZlYzQgbmV3Q29sb3IxID0gdGV4dHVyZTJEKGx1dCwgdGV4UG9zMSk7XFxuIHZlYzQgbmV3Q29sb3IyID0gdGV4dHVyZTJEKGx1dCwgdGV4UG9zMik7XFxuIHZlYzQgbmV3Q29sb3IgPSBtaXgobmV3Q29sb3IxLCBuZXdDb2xvcjIsIGZyYWN0KGJsdWVDb2xvcikpO1xcbiByZXR1cm4gbmV3Q29sb3IucmdiO1xcbn1cXG4jZW5kaWZcXG5AaW1wb3J0IGNsYXkudXRpbC5yZ2JtXFxudm9pZCBtYWluKClcXG57XFxuIHZlYzQgdGV4ZWwgPSB2ZWM0KDAuMCk7XFxuIHZlYzQgb3JpZ2luYWxUZXhlbCA9IHZlYzQoMC4wKTtcXG4jaWZkZWYgVEVYVFVSRV9FTkFCTEVEXFxuIHRleGVsID0gZGVjb2RlSERSKHRleHR1cmUyRCh0ZXh0dXJlLCB2X1RleGNvb3JkKSk7XFxuIG9yaWdpbmFsVGV4ZWwgPSB0ZXhlbDtcXG4jZW5kaWZcXG4jaWZkZWYgQkxPT01fRU5BQkxFRFxcbiB2ZWM0IGJsb29tVGV4ZWwgPSBkZWNvZGVIRFIodGV4dHVyZTJEKGJsb29tLCB2X1RleGNvb3JkKSk7XFxuIHRleGVsLnJnYiArPSBibG9vbVRleGVsLnJnYiAqIGJsb29tSW50ZW5zaXR5O1xcbiB0ZXhlbC5hICs9IGJsb29tVGV4ZWwuYSAqIGJsb29tSW50ZW5zaXR5O1xcbiNlbmRpZlxcbiNpZmRlZiBMRU5TRkxBUkVfRU5BQkxFRFxcbiB0ZXhlbCArPSBkZWNvZGVIRFIodGV4dHVyZTJEKGxlbnNmbGFyZSwgdl9UZXhjb29yZCkpICogdGV4dHVyZTJEKGxlbnNkaXJ0LCB2X1RleGNvb3JkKSAqIGxlbnNmbGFyZUludGVuc2l0eTtcXG4jZW5kaWZcXG4gdGV4ZWwuYSA9IG1pbih0ZXhlbC5hLCAxLjApO1xcbiNpZmRlZiBMVU1fRU5BQkxFRFxcbiBmbG9hdCBmTHVtID0gdGV4dHVyZTJEKGx1bSwgdmVjMigwLjUsIDAuNSkpLnI7XFxuIGZsb2F0IGFkYXB0ZWRMdW1EZXN0ID0gMy4wIC8gKG1heCgwLjEsIDEuMCArIDEwLjAqZXllQWRhcHRpb24oZkx1bSkpKTtcXG4gZmxvYXQgZXhwb3N1cmVCaWFzID0gYWRhcHRlZEx1bURlc3QgKiBleHBvc3VyZTtcXG4jZWxzZVxcbiBmbG9hdCBleHBvc3VyZUJpYXMgPSBleHBvc3VyZTtcXG4jZW5kaWZcXG4jaWZkZWYgVE9ORU1BUFBJTkdcXG4gdGV4ZWwucmdiICo9IGV4cG9zdXJlQmlhcztcXG4gdGV4ZWwucmdiID0gQUNFU1RvbmVNYXBwaW5nKHRleGVsLnJnYik7XFxuI2VuZGlmXFxuIHRleGVsID0gbGluZWFyVG9zUkdCKHRleGVsKTtcXG4jaWZkZWYgTFVUX0VOQUJMRURcXG4gdGV4ZWwucmdiID0gbHV0VHJhbnNmb3JtKGNsYW1wKHRleGVsLnJnYix2ZWMzKDAuMCksdmVjMygxLjApKSk7XFxuI2VuZGlmXFxuI2lmZGVmIENPTE9SX0NPUlJFQ1RJT05cXG4gdGV4ZWwucmdiID0gY2xhbXAodGV4ZWwucmdiICsgdmVjMyhicmlnaHRuZXNzKSwgMC4wLCAxLjApO1xcbiB0ZXhlbC5yZ2IgPSBjbGFtcCgodGV4ZWwucmdiIC0gdmVjMygwLjUpKSpjb250cmFzdCt2ZWMzKDAuNSksIDAuMCwgMS4wKTtcXG4gZmxvYXQgbHVtID0gZG90KHRleGVsLnJnYiwgdmVjMygwLjIxMjUsIDAuNzE1NCwgMC4wNzIxKSk7XFxuIHRleGVsLnJnYiA9IG1peCh2ZWMzKGx1bSksIHRleGVsLnJnYiwgc2F0dXJhdGlvbik7XFxuI2VuZGlmXFxuI2lmZGVmIFZJR05FVFRFXFxuIHZlYzIgdXYgPSAodl9UZXhjb29yZCAtIHZlYzIoMC41KSkgKiB2ZWMyKHZpZ25ldHRlT2Zmc2V0KTtcXG4gdGV4ZWwucmdiID0gbWl4KHRleGVsLnJnYiwgdmVjMygxLjAgLSB2aWduZXR0ZURhcmtuZXNzKSwgZG90KHV2LCB1dikpO1xcbiNlbmRpZlxcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIodGV4ZWwpO1xcbiNpZmRlZiBERUJVR1xcbiAjaWYgREVCVUcgPT0gMVxcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIoZGVjb2RlSERSKHRleHR1cmUyRCh0ZXh0dXJlLCB2X1RleGNvb3JkKSkpO1xcbiAjZWxpZiBERUJVRyA9PSAyXFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUihkZWNvZGVIRFIodGV4dHVyZTJEKGJsb29tLCB2X1RleGNvb3JkKSkgKiBibG9vbUludGVuc2l0eSk7XFxuICNlbGlmIERFQlVHID09IDNcXG4gZ2xfRnJhZ0NvbG9yID0gZW5jb2RlSERSKGRlY29kZUhEUih0ZXh0dXJlMkQobGVuc2ZsYXJlLCB2X1RleGNvb3JkKSAqIGxlbnNmbGFyZUludGVuc2l0eSkpO1xcbiAjZW5kaWZcXG4jZW5kaWZcXG4gaWYgKG9yaWdpbmFsVGV4ZWwuYSA8PSAwLjAxICYmIGdsX0ZyYWdDb2xvci5hID4gMWUtNSkge1xcbiBnbF9GcmFnQ29sb3IuYSA9IGRvdChnbF9GcmFnQ29sb3IucmdiLCB2ZWMzKDAuMjEyNSwgMC43MTU0LCAwLjA3MjEpKTtcXG4gfVxcbiNpZmRlZiBQUkVNVUxUSVBMWV9BTFBIQVxcbiBnbF9GcmFnQ29sb3IucmdiICo9IGdsX0ZyYWdDb2xvci5hO1xcbiNlbmRpZlxcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3IvaGRyLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDYzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///63\n");

/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.blend\\n#define SHADER_NAME blend\\n#ifdef TEXTURE1_ENABLED\\nuniform sampler2D texture1;\\nuniform float weight1 : 1.0;\\n#endif\\n#ifdef TEXTURE2_ENABLED\\nuniform sampler2D texture2;\\nuniform float weight2 : 1.0;\\n#endif\\n#ifdef TEXTURE3_ENABLED\\nuniform sampler2D texture3;\\nuniform float weight3 : 1.0;\\n#endif\\n#ifdef TEXTURE4_ENABLED\\nuniform sampler2D texture4;\\nuniform float weight4 : 1.0;\\n#endif\\n#ifdef TEXTURE5_ENABLED\\nuniform sampler2D texture5;\\nuniform float weight5 : 1.0;\\n#endif\\n#ifdef TEXTURE6_ENABLED\\nuniform sampler2D texture6;\\nuniform float weight6 : 1.0;\\n#endif\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 tex = vec4(0.0);\\n#ifdef TEXTURE1_ENABLED\\n tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\\n#endif\\n#ifdef TEXTURE2_ENABLED\\n tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\\n#endif\\n#ifdef TEXTURE3_ENABLED\\n tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\\n#endif\\n#ifdef TEXTURE4_ENABLED\\n tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\\n#endif\\n#ifdef TEXTURE5_ENABLED\\n tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\\n#endif\\n#ifdef TEXTURE6_ENABLED\\n tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\\n#endif\\n gl_FragColor = encodeHDR(tex);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2JsZW5kLmdsc2wuanM/MjA1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIkBleHBvcnQgY2xheS5jb21wb3NpdG9yLmJsZW5kXFxuI2RlZmluZSBTSEFERVJfTkFNRSBibGVuZFxcbiNpZmRlZiBURVhUVVJFMV9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTE7XFxudW5pZm9ybSBmbG9hdCB3ZWlnaHQxIDogMS4wO1xcbiNlbmRpZlxcbiNpZmRlZiBURVhUVVJFMl9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTI7XFxudW5pZm9ybSBmbG9hdCB3ZWlnaHQyIDogMS4wO1xcbiNlbmRpZlxcbiNpZmRlZiBURVhUVVJFM19FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTM7XFxudW5pZm9ybSBmbG9hdCB3ZWlnaHQzIDogMS4wO1xcbiNlbmRpZlxcbiNpZmRlZiBURVhUVVJFNF9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTQ7XFxudW5pZm9ybSBmbG9hdCB3ZWlnaHQ0IDogMS4wO1xcbiNlbmRpZlxcbiNpZmRlZiBURVhUVVJFNV9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTU7XFxudW5pZm9ybSBmbG9hdCB3ZWlnaHQ1IDogMS4wO1xcbiNlbmRpZlxcbiNpZmRlZiBURVhUVVJFNl9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTY7XFxudW5pZm9ybSBmbG9hdCB3ZWlnaHQ2IDogMS4wO1xcbiNlbmRpZlxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbkBpbXBvcnQgY2xheS51dGlsLnJnYm1cXG52b2lkIG1haW4oKVxcbntcXG4gdmVjNCB0ZXggPSB2ZWM0KDAuMCk7XFxuI2lmZGVmIFRFWFRVUkUxX0VOQUJMRURcXG4gdGV4ICs9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZTEsIHZfVGV4Y29vcmQpKSAqIHdlaWdodDE7XFxuI2VuZGlmXFxuI2lmZGVmIFRFWFRVUkUyX0VOQUJMRURcXG4gdGV4ICs9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZTIsIHZfVGV4Y29vcmQpKSAqIHdlaWdodDI7XFxuI2VuZGlmXFxuI2lmZGVmIFRFWFRVUkUzX0VOQUJMRURcXG4gdGV4ICs9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZTMsIHZfVGV4Y29vcmQpKSAqIHdlaWdodDM7XFxuI2VuZGlmXFxuI2lmZGVmIFRFWFRVUkU0X0VOQUJMRURcXG4gdGV4ICs9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZTQsIHZfVGV4Y29vcmQpKSAqIHdlaWdodDQ7XFxuI2VuZGlmXFxuI2lmZGVmIFRFWFRVUkU1X0VOQUJMRURcXG4gdGV4ICs9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZTUsIHZfVGV4Y29vcmQpKSAqIHdlaWdodDU7XFxuI2VuZGlmXFxuI2lmZGVmIFRFWFRVUkU2X0VOQUJMRURcXG4gdGV4ICs9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZTYsIHZfVGV4Y29vcmQpKSAqIHdlaWdodDY7XFxuI2VuZGlmXFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUih0ZXgpO1xcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3IvYmxlbmQuZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gNjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///64\n");

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.fxaa\\nuniform sampler2D texture;\\nuniform vec4 viewport : VIEWPORT;\\nvarying vec2 v_Texcoord;\\n#define FXAA_REDUCE_MIN (1.0/128.0)\\n#define FXAA_REDUCE_MUL (1.0/8.0)\\n#define FXAA_SPAN_MAX 8.0\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec2 resolution = 1.0 / viewport.zw;\\n vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\\n vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\\n vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\\n vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\\n vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );\\n vec3 rgbM = rgbaM.xyz;\\n float opacity = rgbaM.w;\\n vec3 luma = vec3( 0.299, 0.587, 0.114 );\\n float lumaNW = dot( rgbNW, luma );\\n float lumaNE = dot( rgbNE, luma );\\n float lumaSW = dot( rgbSW, luma );\\n float lumaSE = dot( rgbSE, luma );\\n float lumaM = dot( rgbM, luma );\\n float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\\n float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\\n vec2 dir;\\n dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\\n float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\\n dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n dir * rcpDirMin)) * resolution;\\n vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\\n rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\\n rgbA *= 0.5;\\n vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;\\n rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;\\n rgbB *= 0.25;\\n rgbB += rgbA * 0.5;\\n float lumaB = dot( rgbB, luma );\\n if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\\n {\\n gl_FragColor = vec4( rgbA, opacity );\\n }\\n else {\\n gl_FragColor = vec4( rgbB, opacity );\\n }\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2Z4YWEuZ2xzbC5qcz8xN2JhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IuZnhhYVxcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSB2ZWM0IHZpZXdwb3J0IDogVklFV1BPUlQ7XFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxuI2RlZmluZSBGWEFBX1JFRFVDRV9NSU4gKDEuMC8xMjguMClcXG4jZGVmaW5lIEZYQUFfUkVEVUNFX01VTCAoMS4wLzguMClcXG4jZGVmaW5lIEZYQUFfU1BBTl9NQVggOC4wXFxuQGltcG9ydCBjbGF5LnV0aWwucmdibVxcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWMyIHJlc29sdXRpb24gPSAxLjAgLyB2aWV3cG9ydC56dztcXG4gdmVjMyByZ2JOVyA9IGRlY29kZUhEUiggdGV4dHVyZTJEKCB0ZXh0dXJlLCAoIGdsX0ZyYWdDb29yZC54eSArIHZlYzIoIC0xLjAsIC0xLjAgKSApICogcmVzb2x1dGlvbiApICkueHl6O1xcbiB2ZWMzIHJnYk5FID0gZGVjb2RlSERSKCB0ZXh0dXJlMkQoIHRleHR1cmUsICggZ2xfRnJhZ0Nvb3JkLnh5ICsgdmVjMiggMS4wLCAtMS4wICkgKSAqIHJlc29sdXRpb24gKSApLnh5ejtcXG4gdmVjMyByZ2JTVyA9IGRlY29kZUhEUiggdGV4dHVyZTJEKCB0ZXh0dXJlLCAoIGdsX0ZyYWdDb29yZC54eSArIHZlYzIoIC0xLjAsIDEuMCApICkgKiByZXNvbHV0aW9uICkgKS54eXo7XFxuIHZlYzMgcmdiU0UgPSBkZWNvZGVIRFIoIHRleHR1cmUyRCggdGV4dHVyZSwgKCBnbF9GcmFnQ29vcmQueHkgKyB2ZWMyKCAxLjAsIDEuMCApICkgKiByZXNvbHV0aW9uICkgKS54eXo7XFxuIHZlYzQgcmdiYU0gPSBkZWNvZGVIRFIoIHRleHR1cmUyRCggdGV4dHVyZSwgZ2xfRnJhZ0Nvb3JkLnh5ICogcmVzb2x1dGlvbiApICk7XFxuIHZlYzMgcmdiTSA9IHJnYmFNLnh5ejtcXG4gZmxvYXQgb3BhY2l0eSA9IHJnYmFNLnc7XFxuIHZlYzMgbHVtYSA9IHZlYzMoIDAuMjk5LCAwLjU4NywgMC4xMTQgKTtcXG4gZmxvYXQgbHVtYU5XID0gZG90KCByZ2JOVywgbHVtYSApO1xcbiBmbG9hdCBsdW1hTkUgPSBkb3QoIHJnYk5FLCBsdW1hICk7XFxuIGZsb2F0IGx1bWFTVyA9IGRvdCggcmdiU1csIGx1bWEgKTtcXG4gZmxvYXQgbHVtYVNFID0gZG90KCByZ2JTRSwgbHVtYSApO1xcbiBmbG9hdCBsdW1hTSA9IGRvdCggcmdiTSwgbHVtYSApO1xcbiBmbG9hdCBsdW1hTWluID0gbWluKCBsdW1hTSwgbWluKCBtaW4oIGx1bWFOVywgbHVtYU5FICksIG1pbiggbHVtYVNXLCBsdW1hU0UgKSApICk7XFxuIGZsb2F0IGx1bWFNYXggPSBtYXgoIGx1bWFNLCBtYXgoIG1heCggbHVtYU5XLCBsdW1hTkUpICwgbWF4KCBsdW1hU1csIGx1bWFTRSApICkgKTtcXG4gdmVjMiBkaXI7XFxuIGRpci54ID0gLSgobHVtYU5XICsgbHVtYU5FKSAtIChsdW1hU1cgKyBsdW1hU0UpKTtcXG4gZGlyLnkgPSAoKGx1bWFOVyArIGx1bWFTVykgLSAobHVtYU5FICsgbHVtYVNFKSk7XFxuIGZsb2F0IGRpclJlZHVjZSA9IG1heCggKCBsdW1hTlcgKyBsdW1hTkUgKyBsdW1hU1cgKyBsdW1hU0UgKSAqICggMC4yNSAqIEZYQUFfUkVEVUNFX01VTCApLCBGWEFBX1JFRFVDRV9NSU4gKTtcXG4gZmxvYXQgcmNwRGlyTWluID0gMS4wIC8gKCBtaW4oIGFicyggZGlyLnggKSwgYWJzKCBkaXIueSApICkgKyBkaXJSZWR1Y2UgKTtcXG4gZGlyID0gbWluKCB2ZWMyKCBGWEFBX1NQQU5fTUFYLCBGWEFBX1NQQU5fTUFYKSxcXG4gbWF4KCB2ZWMyKC1GWEFBX1NQQU5fTUFYLCAtRlhBQV9TUEFOX01BWCksXFxuIGRpciAqIHJjcERpck1pbikpICogcmVzb2x1dGlvbjtcXG4gdmVjMyByZ2JBID0gZGVjb2RlSERSKCB0ZXh0dXJlMkQoIHRleHR1cmUsIGdsX0ZyYWdDb29yZC54eSAqIHJlc29sdXRpb24gKyBkaXIgKiAoIDEuMCAvIDMuMCAtIDAuNSApICkgKS54eXo7XFxuIHJnYkEgKz0gZGVjb2RlSERSKCB0ZXh0dXJlMkQoIHRleHR1cmUsIGdsX0ZyYWdDb29yZC54eSAqIHJlc29sdXRpb24gKyBkaXIgKiAoIDIuMCAvIDMuMCAtIDAuNSApICkgKS54eXo7XFxuIHJnYkEgKj0gMC41O1xcbiB2ZWMzIHJnYkIgPSBkZWNvZGVIRFIoIHRleHR1cmUyRCggdGV4dHVyZSwgZ2xfRnJhZ0Nvb3JkLnh5ICogcmVzb2x1dGlvbiArIGRpciAqIC0wLjUgKSApLnh5ejtcXG4gcmdiQiArPSBkZWNvZGVIRFIoIHRleHR1cmUyRCggdGV4dHVyZSwgZ2xfRnJhZ0Nvb3JkLnh5ICogcmVzb2x1dGlvbiArIGRpciAqIDAuNSApICkueHl6O1xcbiByZ2JCICo9IDAuMjU7XFxuIHJnYkIgKz0gcmdiQSAqIDAuNTtcXG4gZmxvYXQgbHVtYUIgPSBkb3QoIHJnYkIsIGx1bWEgKTtcXG4gaWYgKCAoIGx1bWFCIDwgbHVtYU1pbiApIHx8ICggbHVtYUIgPiBsdW1hTWF4ICkgKVxcbiB7XFxuIGdsX0ZyYWdDb2xvciA9IHZlYzQoIHJnYkEsIG9wYWNpdHkgKTtcXG4gfVxcbiBlbHNlIHtcXG4gZ2xfRnJhZ0NvbG9yID0gdmVjNCggcmdiQiwgb3BhY2l0eSApO1xcbiB9XFxufVxcbkBlbmRcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9meGFhLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDY1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///65\n");

/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TextureCube__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__plugin_Skybox__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Scene__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__prePass_EnvironmentMap__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__texture__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__shader_integrateBRDF_glsl_js__ = __webpack_require__(123);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__shader_prefilter_glsl_js__ = __webpack_require__(124);\n// Cubemap prefilter utility\n// http://www.unrealengine.com/files/downloads/2013SiggraphPresentationsNotes.pdf\n// http://http.developer.nvidia.com/GPUGems3/gpugems3_ch20.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar cubemapUtil = {};\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// TODO Downsample\n/**\n * @name clay.util.cubemap.prefilterEnvironmentMap\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {number} [textureOpts.width=64]\n * @param  {number} [textureOpts.height=64]\n * @param  {number} [textureOpts.type]\n * @param  {boolean} [textureOpts.encodeRGBM=false]\n * @param  {boolean} [textureOpts.decodeRGBM=false]\n * @param  {clay.Texture2D} [normalDistribution]\n * @param  {clay.Texture2D} [brdfLookup]\n */\ncubemapUtil.prefilterEnvironmentMap = function (\n    renderer, envMap, textureOpts, normalDistribution, brdfLookup\n) {\n    // Not create other renderer, it is easy having issue of cross reference of resources like framebuffer\n    // PENDING preserveDrawingBuffer?\n    if (!brdfLookup || !normalDistribution) {\n        normalDistribution = cubemapUtil.generateNormalDistribution();\n        brdfLookup = cubemapUtil.integrateBRDF(renderer, normalDistribution);\n    }\n    textureOpts = textureOpts || {};\n\n    var width = textureOpts.width || 64;\n    var height = textureOpts.height || 64;\n\n    var textureType = textureOpts.type || envMap.type;\n\n    // Use same type with given envMap\n    var prefilteredCubeMap = new __WEBPACK_IMPORTED_MODULE_1__TextureCube__[\"a\" /* default */]({\n        width: width,\n        height: height,\n        type: textureType,\n        flipY: false,\n        mipmaps: []\n    });\n\n    if (!prefilteredCubeMap.isPowerOfTwo()) {\n        console.warn('Width and height must be power of two to enable mipmap.');\n    }\n\n    var size = Math.min(width, height);\n    var mipmapNum = Math.log(size) / Math.log(2) + 1;\n\n    var prefilterMaterial = new __WEBPACK_IMPORTED_MODULE_5__Material__[\"a\" /* default */]({\n        shader: new __WEBPACK_IMPORTED_MODULE_6__Shader__[\"a\" /* default */]({\n            vertex: __WEBPACK_IMPORTED_MODULE_6__Shader__[\"a\" /* default */].source('clay.skybox.vertex'),\n            fragment: __WEBPACK_IMPORTED_MODULE_13__shader_prefilter_glsl_js__[\"a\" /* default */]\n        })\n    });\n    prefilterMaterial.set('normalDistribution', normalDistribution);\n\n    textureOpts.encodeRGBM && prefilterMaterial.define('fragment', 'RGBM_ENCODE');\n    textureOpts.decodeRGBM && prefilterMaterial.define('fragment', 'RGBM_DECODE');\n\n    var dummyScene = new __WEBPACK_IMPORTED_MODULE_8__Scene__[\"a\" /* default */]();\n    var skyEnv;\n\n    if (envMap.textureType === 'texture2D') {\n        // Convert panorama to cubemap\n        var envCubemap = new __WEBPACK_IMPORTED_MODULE_1__TextureCube__[\"a\" /* default */]({\n            width: width,\n            height: height,\n            // FIXME FLOAT type will cause GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT error on iOS\n            type: textureType === __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].FLOAT ?\n                __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].HALF_FLOAT : textureType\n        });\n        __WEBPACK_IMPORTED_MODULE_11__texture__[\"a\" /* default */].panoramaToCubeMap(renderer, envMap, envCubemap, {\n            // PENDING encodeRGBM so it can be decoded as RGBM\n            encodeRGBM: textureOpts.decodeRGBM\n        });\n        envMap = envCubemap;\n    }\n    skyEnv = new __WEBPACK_IMPORTED_MODULE_7__plugin_Skybox__[\"a\" /* default */]({\n        scene: dummyScene,\n        material: prefilterMaterial\n    });\n    skyEnv.material.set('environmentMap', envMap);\n\n    var envMapPass = new __WEBPACK_IMPORTED_MODULE_9__prePass_EnvironmentMap__[\"a\" /* default */]({\n        texture: prefilteredCubeMap\n    });\n\n    // Force to be UNSIGNED_BYTE\n    if (textureOpts.encodeRGBM) {\n        textureType = prefilteredCubeMap.type = __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].UNSIGNED_BYTE;\n    }\n\n    var renderTargetTmp = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]({\n        width: width,\n        height: height,\n        type: textureType\n    });\n    var frameBuffer = new __WEBPACK_IMPORTED_MODULE_3__FrameBuffer__[\"a\" /* default */]({\n        depthBuffer: false\n    });\n    var ArrayCtor = __WEBPACK_IMPORTED_MODULE_10__core_vendor__[\"a\" /* default */][textureType === __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].UNSIGNED_BYTE ? 'Uint8Array' : 'Float32Array'];\n    for (var i = 0; i < mipmapNum; i++) {\n        // console.time('prefilter');\n        prefilteredCubeMap.mipmaps[i] = {\n            pixels: {}\n        };\n        skyEnv.material.set('roughness', i / (mipmapNum - 1));\n\n        // Tweak fov\n        // http://the-witness.net/news/2012/02/seamless-cube-map-filtering/\n        var n = renderTargetTmp.width;\n        var fov = 2 * Math.atan(n / (n - 0.5)) / Math.PI * 180;\n\n        for (var j = 0; j < targets.length; j++) {\n            var pixels = new ArrayCtor(renderTargetTmp.width * renderTargetTmp.height * 4);\n            frameBuffer.attach(renderTargetTmp);\n            frameBuffer.bind(renderer);\n\n            var camera = envMapPass.getCamera(targets[j]);\n            camera.fov = fov;\n            renderer.render(dummyScene, camera);\n            renderer.gl.readPixels(\n                0, 0, renderTargetTmp.width, renderTargetTmp.height,\n                __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].RGBA, textureType, pixels\n            );\n\n            // var canvas = document.createElement('canvas');\n            // var ctx = canvas.getContext('2d');\n            // canvas.width = renderTargetTmp.width;\n            // canvas.height = renderTargetTmp.height;\n            // var imageData = ctx.createImageData(renderTargetTmp.width, renderTargetTmp.height);\n            // for (var k = 0; k < pixels.length; k++) {\n            //     imageData.data[k] = pixels[k];\n            // }\n            // ctx.putImageData(imageData, 0, 0);\n            // document.body.appendChild(canvas);\n\n            frameBuffer.unbind(renderer);\n            prefilteredCubeMap.mipmaps[i].pixels[targets[j]] = pixels;\n        }\n\n        renderTargetTmp.width /= 2;\n        renderTargetTmp.height /= 2;\n        renderTargetTmp.dirty();\n        // console.timeEnd('prefilter');\n    }\n\n    frameBuffer.dispose(renderer);\n    renderTargetTmp.dispose(renderer);\n    skyEnv.dispose(renderer);\n    // Remove gpu resource allucated in renderer\n    normalDistribution.dispose(renderer);\n\n    // renderer.dispose();\n\n    return {\n        environmentMap: prefilteredCubeMap,\n        brdfLookup: brdfLookup,\n        normalDistribution: normalDistribution,\n        maxMipmapLevel: mipmapNum\n    };\n};\n\ncubemapUtil.integrateBRDF = function (renderer, normalDistribution) {\n    normalDistribution = normalDistribution || cubemapUtil.generateNormalDistribution();\n    var framebuffer = new __WEBPACK_IMPORTED_MODULE_3__FrameBuffer__[\"a\" /* default */]({\n        depthBuffer: false\n    });\n    var pass = new __WEBPACK_IMPORTED_MODULE_4__compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_12__shader_integrateBRDF_glsl_js__[\"a\" /* default */]\n    });\n\n    var texture = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]({\n        width: 512,\n        height: 256,\n        type: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].HALF_FLOAT,\n        wrapS: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].CLAMP_TO_EDGE,\n        wrapT: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].CLAMP_TO_EDGE,\n        minFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n        magFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n        useMipmap: false\n    });\n    pass.setUniform('normalDistribution', normalDistribution);\n    pass.setUniform('viewportSize', [512, 256]);\n    pass.attachOutput(texture);\n    pass.render(renderer, framebuffer);\n\n    // FIXME Only chrome and firefox can readPixels with float type.\n    // framebuffer.bind(renderer);\n    // var pixels = new Float32Array(512 * 256 * 4);\n    // renderer.gl.readPixels(\n    //     0, 0, texture.width, texture.height,\n    //     Texture.RGBA, Texture.FLOAT, pixels\n    // );\n    // texture.pixels = pixels;\n    // texture.flipY = false;\n    // texture.dirty();\n    // framebuffer.unbind(renderer);\n\n    framebuffer.dispose(renderer);\n\n    return texture;\n};\n\ncubemapUtil.generateNormalDistribution = function (roughnessLevels, sampleSize) {\n\n    // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n    // GLSL not support bit operation, use lookup instead\n    // V -> i / N, U -> roughness\n    var roughnessLevels = roughnessLevels || 256;\n    var sampleSize = sampleSize || 1024;\n\n    var normalDistribution = new __WEBPACK_IMPORTED_MODULE_0__Texture2D__[\"a\" /* default */]({\n        width: roughnessLevels,\n        height: sampleSize,\n        type: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].FLOAT,\n        minFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n        magFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n        wrapS: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].CLAMP_TO_EDGE,\n        wrapT: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].CLAMP_TO_EDGE,\n        useMipmap: false\n    });\n    var pixels = new Float32Array(sampleSize * roughnessLevels * 4);\n    var tmp = [];\n\n    // function sortFunc(a, b) {\n    //     return Math.abs(b) - Math.abs(a);\n    // }\n    for (var j = 0; j < roughnessLevels; j++) {\n        var roughness = j / roughnessLevels;\n        var a = roughness * roughness;\n\n        for (var i = 0; i < sampleSize; i++) {\n            // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\n            // http://stackoverflow.com/questions/1908492/unsigned-integer-in-javascript\n            // http://stackoverflow.com/questions/1822350/what-is-the-javascript-operator-and-how-do-you-use-it\n            var y = (i << 16 | i >>> 16) >>> 0;\n            y = ((y & 1431655765) << 1 | (y & 2863311530) >>> 1) >>> 0;\n            y = ((y & 858993459) << 2 | (y & 3435973836) >>> 2) >>> 0;\n            y = ((y & 252645135) << 4 | (y & 4042322160) >>> 4) >>> 0;\n            y = (((y & 16711935) << 8 | (y & 4278255360) >>> 8) >>> 0) / 4294967296;\n\n            // CDF\n            var cosTheta = Math.sqrt((1 - y) / (1 + (a * a - 1.0) * y));\n            tmp[i] = cosTheta;\n        }\n\n        for (var i = 0; i < sampleSize; i++) {\n            var offset = (i * roughnessLevels + j) * 4;\n            var cosTheta = tmp[i];\n            var sinTheta = Math.sqrt(1.0 - cosTheta * cosTheta);\n            var x = i / sampleSize;\n            var phi = 2.0 * Math.PI * x;\n            pixels[offset] = sinTheta * Math.cos(phi);\n            pixels[offset + 1] = cosTheta;\n            pixels[offset + 2] = sinTheta * Math.sin(phi);\n            pixels[offset + 3] = 1.0;\n        }\n    }\n    normalDistribution.pixels = pixels;\n\n    return normalDistribution;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (cubemapUtil);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///66\n");

/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.deferred.gbuffer.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nattribute vec3 position : POSITION;\\n#if defined(SECOND_PASS) || defined(FIRST_PASS)\\nattribute vec2 texcoord : TEXCOORD_0;\\nuniform vec2 uvRepeat;\\nuniform vec2 uvOffset;\\nvarying vec2 v_Texcoord;\\n#endif\\n#ifdef FIRST_PASS\\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\\nuniform mat4 world : WORLD;\\nvarying vec3 v_Normal;\\nattribute vec3 normal : NORMAL;\\nattribute vec4 tangent : TANGENT;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\nvarying vec3 v_WorldPosition;\\n#endif\\n@import clay.chunk.skinning_header\\n#ifdef THIRD_PASS\\nuniform mat4 prevWorldViewProjection;\\nvarying vec4 v_ViewPosition;\\nvarying vec4 v_PrevViewPosition;\\n#ifdef SKINNING\\n#ifdef USE_SKIN_MATRICES_TEXTURE\\nuniform sampler2D prevSkinMatricesTexture;\\nmat4 getPrevSkinMatrix(float idx) {\\n return getSkinMatrix(prevSkinMatricesTexture, idx);\\n}\\n#else\\nuniform mat4 prevSkinMatrix[JOINT_COUNT];\\nmat4 getPrevSkinMatrix(float idx) {\\n return prevSkinMatrix[int(idx)];\\n}\\n#endif\\n#endif\\n#endif\\nvoid main()\\n{\\n vec3 skinnedPosition = position;\\n vec3 prevSkinnedPosition = position;\\n#ifdef FIRST_PASS\\n vec3 skinnedNormal = normal;\\n vec3 skinnedTangent = tangent.xyz;\\n bool hasTangent = dot(tangent, tangent) > 0.0;\\n#endif\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\\n #ifdef FIRST_PASS\\n skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\\n if (hasTangent) {\\n skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\\n }\\n #endif\\n #ifdef THIRD_PASS\\n {\\n mat4 prevSkinMatrixWS = getPrevSkinMatrix(joint.x) * weight.x;\\n if (weight.y > 1e-4) { prevSkinMatrixWS += getPrevSkinMatrix(joint.y) * weight.y; }\\n if (weight.z > 1e-4) { prevSkinMatrixWS += getPrevSkinMatrix(joint.z) * weight.z; }\\n float weightW = 1.0-weight.x-weight.y-weight.z;\\n if (weightW > 1e-4) { prevSkinMatrixWS += getPrevSkinMatrix(joint.w) * weightW; }\\n prevSkinnedPosition = (prevSkinMatrixWS * vec4(position, 1.0)).xyz;\\n }\\n #endif\\n#endif\\n#if defined(SECOND_PASS) || defined(FIRST_PASS)\\n v_Texcoord = texcoord * uvRepeat + uvOffset;\\n#endif\\n#ifdef FIRST_PASS\\n v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\\n if (hasTangent) {\\n v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\\n }\\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\\n#endif\\n#ifdef THIRD_PASS\\n v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\\n v_PrevViewPosition = prevWorldViewProjection * vec4(prevSkinnedPosition, 1.0);\\n#endif\\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\\n}\\n@end\\n@export clay.deferred.gbuffer1.fragment\\nuniform mat4 viewInverse : VIEWINVERSE;\\nuniform float glossiness;\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\nuniform sampler2D normalMap;\\nuniform sampler2D diffuseMap;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\nuniform sampler2D roughGlossMap;\\nuniform bool useRoughGlossMap;\\nuniform bool useRoughness;\\nuniform bool doubleSided;\\nuniform float alphaCutoff: 0.0;\\nuniform float alpha: 1.0;\\nuniform int roughGlossChannel: 0;\\nfloat indexingTexel(in vec4 texel, in int idx) {\\n if (idx == 3) return texel.a;\\n else if (idx == 1) return texel.g;\\n else if (idx == 2) return texel.b;\\n else return texel.r;\\n}\\nvoid main()\\n{\\n vec3 N = v_Normal;\\n if (doubleSided) {\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = eyePos - v_WorldPosition;\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n }\\n if (alphaCutoff > 0.0) {\\n float a = texture2D(diffuseMap, v_Texcoord).a * alpha;\\n if (a < alphaCutoff) {\\n discard;\\n }\\n }\\n if (dot(v_Tangent, v_Tangent) > 0.0) {\\n vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\\n N = normalize(tbn * N);\\n }\\n }\\n gl_FragColor.rgb = (N + 1.0) * 0.5;\\n float g = glossiness;\\n if (useRoughGlossMap) {\\n float g2 = indexingTexel(texture2D(roughGlossMap, v_Texcoord), roughGlossChannel);\\n if (useRoughness) {\\n g2 = 1.0 - g2;\\n }\\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\\n }\\n gl_FragColor.a = g + 0.005;\\n}\\n@end\\n@export clay.deferred.gbuffer2.fragment\\nuniform sampler2D diffuseMap;\\nuniform sampler2D metalnessMap;\\nuniform vec3 color;\\nuniform float metalness;\\nuniform bool useMetalnessMap;\\nuniform bool linear;\\nuniform float alphaCutoff: 0.0;\\nuniform float alpha: 1.0;\\nvarying vec2 v_Texcoord;\\n@import clay.util.srgb\\nvoid main()\\n{\\n float m = metalness;\\n if (useMetalnessMap) {\\n vec4 metalnessTexel = texture2D(metalnessMap, v_Texcoord);\\n m = clamp(metalnessTexel.r + (m * 2.0 - 1.0), 0.0, 1.0);\\n }\\n vec4 texel = texture2D(diffuseMap, v_Texcoord);\\n if (linear) {\\n texel = sRGBToLinear(texel);\\n }\\n if (alphaCutoff > 0.0) {\\n float a = texel.a * alpha;\\n if (a < alphaCutoff) {\\n discard;\\n }\\n }\\n gl_FragColor.rgb = texel.rgb * color;\\n gl_FragColor.a = m + 0.005;\\n}\\n@end\\n@export clay.deferred.gbuffer3.fragment\\nuniform bool firstRender;\\nvarying vec4 v_ViewPosition;\\nvarying vec4 v_PrevViewPosition;\\nvoid main()\\n{\\n vec2 a = v_ViewPosition.xy / v_ViewPosition.w;\\n vec2 b = v_PrevViewPosition.xy / v_PrevViewPosition.w;\\n if (firstRender) {\\n gl_FragColor = vec4(0.0);\\n }\\n else {\\n gl_FragColor = vec4((a - b) * 0.5 + 0.5, 0.0, 1.0);\\n }\\n}\\n@end\\n@export clay.deferred.gbuffer.debug\\n@import clay.deferred.chunk.light_head\\nuniform sampler2D gBufferTexture4;\\nuniform int debug: 0;\\nvoid main ()\\n{\\n @import clay.deferred.chunk.gbuffer_read\\n if (debug == 0) {\\n gl_FragColor = vec4(N, 1.0);\\n }\\n else if (debug == 1) {\\n gl_FragColor = vec4(vec3(z), 1.0);\\n }\\n else if (debug == 2) {\\n gl_FragColor = vec4(position, 1.0);\\n }\\n else if (debug == 3) {\\n gl_FragColor = vec4(vec3(glossiness), 1.0);\\n }\\n else if (debug == 4) {\\n gl_FragColor = vec4(vec3(metalness), 1.0);\\n }\\n else if (debug == 5) {\\n gl_FragColor = vec4(albedo, 1.0);\\n }\\n else {\\n vec4 color = texture2D(gBufferTexture4, uv);\\n color.rg -= 0.5;\\n color.rg *= 2.0;\\n gl_FragColor = color;\\n }\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///67\n");

/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n\n    /**\n     * @type {module:zrender/core/LRU~Entry}\n     */\n    this.head = null;\n\n    /**\n     * @type {module:zrender/core/LRU~Entry}\n     */\n    this.tail = null;\n\n    this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\nlinkedListProto.insert = function (val) {\n    var entry = new Entry(val);\n    this.insertEntry(entry);\n    return entry;\n};\n\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\nlinkedListProto.insertEntry = function (entry) {\n    if (!this.head) {\n        this.head = this.tail = entry;\n    }\n    else {\n        this.tail.next = entry;\n        entry.prev = this.tail;\n        entry.next = null;\n        this.tail = entry;\n    }\n    this._len++;\n};\n\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\nlinkedListProto.remove = function (entry) {\n    var prev = entry.prev;\n    var next = entry.next;\n    if (prev) {\n        prev.next = next;\n    }\n    else {\n        // Is head\n        this.head = next;\n    }\n    if (next) {\n        next.prev = prev;\n    }\n    else {\n        // Is tail\n        this.tail = prev;\n    }\n    entry.next = entry.prev = null;\n    this._len--;\n};\n\n/**\n * @return {number}\n */\nlinkedListProto.len = function () {\n    return this._len;\n};\n\n/**\n * Clear list\n */\nlinkedListProto.clear = function () {\n    this.head = this.tail = null;\n    this._len = 0;\n};\n\n/**\n * @constructor\n * @param {} val\n */\nvar Entry = function (val) {\n    /**\n     * @type {}\n     */\n    this.value = val;\n\n    /**\n     * @type {module:zrender/core/LRU~Entry}\n     */\n    this.next;\n\n    /**\n     * @type {module:zrender/core/LRU~Entry}\n     */\n    this.prev;\n};\n\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\nvar LRU = function (maxSize) {\n\n    this._list = new LinkedList();\n\n    this._map = {};\n\n    this._maxSize = maxSize || 10;\n\n    this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\nLRUProto.put = function (key, value) {\n    var list = this._list;\n    var map = this._map;\n    var removed = null;\n    if (map[key] == null) {\n        var len = list.len();\n        // Reuse last removed entry\n        var entry = this._lastRemovedEntry;\n\n        if (len >= this._maxSize && len > 0) {\n            // Remove the least recently used\n            var leastUsedEntry = list.head;\n            list.remove(leastUsedEntry);\n            delete map[leastUsedEntry.key];\n\n            removed = leastUsedEntry.value;\n            this._lastRemovedEntry = leastUsedEntry;\n        }\n\n        if (entry) {\n            entry.value = value;\n        }\n        else {\n            entry = new Entry(value);\n        }\n        entry.key = key;\n        list.insertEntry(entry);\n        map[key] = entry;\n    }\n\n    return removed;\n};\n\n/**\n * @param  {string} key\n * @return {}\n */\nLRUProto.get = function (key) {\n    var entry = this._map[key];\n    var list = this._list;\n    if (entry != null) {\n        // Put the latest used entry in the tail\n        if (entry !== list.tail) {\n            list.remove(entry);\n            list.insertEntry(entry);\n        }\n\n        return entry.value;\n    }\n};\n\n/**\n * Clear the cache\n */\nLRUProto.clear = function () {\n    this._list.clear();\n    this._map = {};\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (LRU);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3pyZW5kZXIvc3JjL2NvcmUvTFJVLmpzP2UxYjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2ltcGxlIExSVSBjYWNoZSB1c2UgZG91Ymx5IGxpbmtlZCBsaXN0XG4vLyBAbW9kdWxlIHpyZW5kZXIvY29yZS9MUlVcblxuLyoqXG4gKiBTaW1wbGUgZG91YmxlIGxpbmtlZCBsaXN0LiBDb21wYXJlZCB3aXRoIGFycmF5LCBpdCBoYXMgTygxKSByZW1vdmUgb3BlcmF0aW9uLlxuICogQGNvbnN0cnVjdG9yXG4gKi9cbnZhciBMaW5rZWRMaXN0ID0gZnVuY3Rpb24gKCkge1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge21vZHVsZTp6cmVuZGVyL2NvcmUvTFJVfkVudHJ5fVxuICAgICAqL1xuICAgIHRoaXMuaGVhZCA9IG51bGw7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bW9kdWxlOnpyZW5kZXIvY29yZS9MUlV+RW50cnl9XG4gICAgICovXG4gICAgdGhpcy50YWlsID0gbnVsbDtcblxuICAgIHRoaXMuX2xlbiA9IDA7XG59O1xuXG52YXIgbGlua2VkTGlzdFByb3RvID0gTGlua2VkTGlzdC5wcm90b3R5cGU7XG4vKipcbiAqIEluc2VydCBhIG5ldyB2YWx1ZSBhdCB0aGUgdGFpbFxuICogQHBhcmFtICB7fSB2YWxcbiAqIEByZXR1cm4ge21vZHVsZTp6cmVuZGVyL2NvcmUvTFJVfkVudHJ5fVxuICovXG5saW5rZWRMaXN0UHJvdG8uaW5zZXJ0ID0gZnVuY3Rpb24gKHZhbCkge1xuICAgIHZhciBlbnRyeSA9IG5ldyBFbnRyeSh2YWwpO1xuICAgIHRoaXMuaW5zZXJ0RW50cnkoZW50cnkpO1xuICAgIHJldHVybiBlbnRyeTtcbn07XG5cbi8qKlxuICogSW5zZXJ0IGFuIGVudHJ5IGF0IHRoZSB0YWlsXG4gKiBAcGFyYW0gIHttb2R1bGU6enJlbmRlci9jb3JlL0xSVX5FbnRyeX0gZW50cnlcbiAqL1xubGlua2VkTGlzdFByb3RvLmluc2VydEVudHJ5ID0gZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgaWYgKCF0aGlzLmhlYWQpIHtcbiAgICAgICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gZW50cnk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aGlzLnRhaWwubmV4dCA9IGVudHJ5O1xuICAgICAgICBlbnRyeS5wcmV2ID0gdGhpcy50YWlsO1xuICAgICAgICBlbnRyeS5uZXh0ID0gbnVsbDtcbiAgICAgICAgdGhpcy50YWlsID0gZW50cnk7XG4gICAgfVxuICAgIHRoaXMuX2xlbisrO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgZW50cnkuXG4gKiBAcGFyYW0gIHttb2R1bGU6enJlbmRlci9jb3JlL0xSVX5FbnRyeX0gZW50cnlcbiAqL1xubGlua2VkTGlzdFByb3RvLnJlbW92ZSA9IGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHZhciBwcmV2ID0gZW50cnkucHJldjtcbiAgICB2YXIgbmV4dCA9IGVudHJ5Lm5leHQ7XG4gICAgaWYgKHByZXYpIHtcbiAgICAgICAgcHJldi5uZXh0ID0gbmV4dDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIElzIGhlYWRcbiAgICAgICAgdGhpcy5oZWFkID0gbmV4dDtcbiAgICB9XG4gICAgaWYgKG5leHQpIHtcbiAgICAgICAgbmV4dC5wcmV2ID0gcHJldjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIElzIHRhaWxcbiAgICAgICAgdGhpcy50YWlsID0gcHJldjtcbiAgICB9XG4gICAgZW50cnkubmV4dCA9IGVudHJ5LnByZXYgPSBudWxsO1xuICAgIHRoaXMuX2xlbi0tO1xufTtcblxuLyoqXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmxpbmtlZExpc3RQcm90by5sZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xlbjtcbn07XG5cbi8qKlxuICogQ2xlYXIgbGlzdFxuICovXG5saW5rZWRMaXN0UHJvdG8uY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gbnVsbDtcbiAgICB0aGlzLl9sZW4gPSAwO1xufTtcblxuLyoqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7fSB2YWxcbiAqL1xudmFyIEVudHJ5ID0gZnVuY3Rpb24gKHZhbCkge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHt9XG4gICAgICovXG4gICAgdGhpcy52YWx1ZSA9IHZhbDtcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHttb2R1bGU6enJlbmRlci9jb3JlL0xSVX5FbnRyeX1cbiAgICAgKi9cbiAgICB0aGlzLm5leHQ7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bW9kdWxlOnpyZW5kZXIvY29yZS9MUlV+RW50cnl9XG4gICAgICovXG4gICAgdGhpcy5wcmV2O1xufTtcblxuLyoqXG4gKiBMUlUgQ2FjaGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQGFsaWFzIG1vZHVsZTp6cmVuZGVyL2NvcmUvTFJVXG4gKi9cbnZhciBMUlUgPSBmdW5jdGlvbiAobWF4U2l6ZSkge1xuXG4gICAgdGhpcy5fbGlzdCA9IG5ldyBMaW5rZWRMaXN0KCk7XG5cbiAgICB0aGlzLl9tYXAgPSB7fTtcblxuICAgIHRoaXMuX21heFNpemUgPSBtYXhTaXplIHx8IDEwO1xuXG4gICAgdGhpcy5fbGFzdFJlbW92ZWRFbnRyeSA9IG51bGw7XG59O1xuXG52YXIgTFJVUHJvdG8gPSBMUlUucHJvdG90eXBlO1xuXG4vKipcbiAqIEBwYXJhbSAge3N0cmluZ30ga2V5XG4gKiBAcGFyYW0gIHt9IHZhbHVlXG4gKiBAcmV0dXJuIHt9IFJlbW92ZWQgdmFsdWVcbiAqL1xuTFJVUHJvdG8ucHV0ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICB2YXIgbGlzdCA9IHRoaXMuX2xpc3Q7XG4gICAgdmFyIG1hcCA9IHRoaXMuX21hcDtcbiAgICB2YXIgcmVtb3ZlZCA9IG51bGw7XG4gICAgaWYgKG1hcFtrZXldID09IG51bGwpIHtcbiAgICAgICAgdmFyIGxlbiA9IGxpc3QubGVuKCk7XG4gICAgICAgIC8vIFJldXNlIGxhc3QgcmVtb3ZlZCBlbnRyeVxuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLl9sYXN0UmVtb3ZlZEVudHJ5O1xuXG4gICAgICAgIGlmIChsZW4gPj0gdGhpcy5fbWF4U2l6ZSAmJiBsZW4gPiAwKSB7XG4gICAgICAgICAgICAvLyBSZW1vdmUgdGhlIGxlYXN0IHJlY2VudGx5IHVzZWRcbiAgICAgICAgICAgIHZhciBsZWFzdFVzZWRFbnRyeSA9IGxpc3QuaGVhZDtcbiAgICAgICAgICAgIGxpc3QucmVtb3ZlKGxlYXN0VXNlZEVudHJ5KTtcbiAgICAgICAgICAgIGRlbGV0ZSBtYXBbbGVhc3RVc2VkRW50cnkua2V5XTtcblxuICAgICAgICAgICAgcmVtb3ZlZCA9IGxlYXN0VXNlZEVudHJ5LnZhbHVlO1xuICAgICAgICAgICAgdGhpcy5fbGFzdFJlbW92ZWRFbnRyeSA9IGxlYXN0VXNlZEVudHJ5O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgICBlbnRyeS52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZW50cnkgPSBuZXcgRW50cnkodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVudHJ5LmtleSA9IGtleTtcbiAgICAgICAgbGlzdC5pbnNlcnRFbnRyeShlbnRyeSk7XG4gICAgICAgIG1hcFtrZXldID0gZW50cnk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlbW92ZWQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSAge3N0cmluZ30ga2V5XG4gKiBAcmV0dXJuIHt9XG4gKi9cbkxSVVByb3RvLmdldCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgZW50cnkgPSB0aGlzLl9tYXBba2V5XTtcbiAgICB2YXIgbGlzdCA9IHRoaXMuX2xpc3Q7XG4gICAgaWYgKGVudHJ5ICE9IG51bGwpIHtcbiAgICAgICAgLy8gUHV0IHRoZSBsYXRlc3QgdXNlZCBlbnRyeSBpbiB0aGUgdGFpbFxuICAgICAgICBpZiAoZW50cnkgIT09IGxpc3QudGFpbCkge1xuICAgICAgICAgICAgbGlzdC5yZW1vdmUoZW50cnkpO1xuICAgICAgICAgICAgbGlzdC5pbnNlcnRFbnRyeShlbnRyeSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZW50cnkudmFsdWU7XG4gICAgfVxufTtcblxuLyoqXG4gKiBDbGVhciB0aGUgY2FjaGVcbiAqL1xuTFJVUHJvdG8uY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5fbGlzdC5jbGVhcigpO1xuICAgIHRoaXMuX21hcCA9IHt9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTFJVO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy96cmVuZGVyL3NyYy9jb3JlL0xSVS5qc1xuLy8gbW9kdWxlIGlkID0gNjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///68\n");

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getDefaultSceneConfig__ = __webpack_require__(153);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getDefaultMaterialConfig__ = __webpack_require__(154);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__project__ = __webpack_require__(155);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__env__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_zrender_lib_core_util__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_zrender_lib_core_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_zrender_lib_core_util__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ui_Texture__ = __webpack_require__(165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__timeline__ = __webpack_require__(166);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__debug_renderOutline__ = __webpack_require__(167);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_vendor_openURL__ = __webpack_require__(169);\n\n\n\n\n\n\n\n\n\n\n\n\nvar config = Object(__WEBPACK_IMPORTED_MODULE_1__getDefaultSceneConfig__[\"a\" /* default */])();\nvar materialConfig = Object(__WEBPACK_IMPORTED_MODULE_2__getDefaultMaterialConfig__[\"a\" /* default */])();\n\nvar viewer;\n\nvar controlKit = new ControlKit({\n    loadAndSave: false,\n    useExternalStyle: true\n});\n\nfunction updateLight() {\n    ['mainLight', 'secondaryLight', 'tertiaryLight'].forEach(function (lightType) {\n        config[lightType].alpha = config[lightType].$padAngle[1] * 90;\n        config[lightType].beta = config[lightType].$padAngle[0] * 180;\n    });\n    viewer.setMainLight(config.mainLight);\n    viewer.setSecondaryLight(config.secondaryLight);\n    viewer.setTertiaryLight(config.tertiaryLight);\n    viewer.setAmbientLight(config.ambientLight);\n}\n\nfunction updatePostEffect() {\n    viewer.setPostEffect(config.postEffect);\n}\n\nfunction updateEnvironment() {\n    config.ambientCubemapLight.texture = __WEBPACK_IMPORTED_MODULE_4__env__[\"a\" /* default */].ENV_TEXTURE_ROOT + config.ambientCubemapLight.$texture + '.hdr';\n    viewer.setAmbientCubemapLight(config.ambientCubemapLight);\n}\nfunction updateGround() {\n    viewer.setGround(config.ground);\n}\nfunction updateAll() {\n    updateLight();\n    updatePostEffect();\n    updateEnvironment();\n    updateGround();\n}\n\nfunction updateMaterial() {\n    var $textureTiling = Math.max(materialConfig.$textureTiling, 0.01);\n    materialConfig.uvRepeat = [$textureTiling, $textureTiling];\n    // TODO configuration\n    materialConfig.transparent = materialConfig.alpha < 1;\n    viewer.setMaterial(materialConfig.name, materialConfig);\n}\n\nfunction selectMaterial(mat) {\n    materialConfig.name = mat.name;\n    var matConfig = viewer.getMaterial(mat.name);\n    matConfig.$textureTiling = matConfig.uvRepeat[0];\n    __WEBPACK_IMPORTED_MODULE_5_claygl_src_core_util__[\"a\" /* default */].extend(materialConfig, matConfig);\n    if (matConfig.specularColor == null) {\n        pbrRoughnessMetallicPanel.enable();\n        pbrSpecularGlossinessPanel.disable();\n    }\n    else {\n        pbrSpecularGlossinessPanel.enable();\n        pbrRoughnessMetallicPanel.disable();\n    }\n    controlKit.update();\n}\n\nfunction haveTexture(val) {\n    return val && val !== 'none';\n}\n\nfunction changeTexture(type, file, val) {\n    var uiNeedUpdate = false;\n    if (haveTexture(val)) {\n        [\n            ['diffuseMap', 'color', '#fff'],\n            ['metalnessMap', 'metalness', 0.5],\n            ['roughnessMap', 'roughness', 0.5],\n            ['glossinessMap', 'glossiness', 0.5],\n            ['specularMap', 'specularColor', '#fff'],\n            ['emissiveMap', 'emission', '#fff']\n        ].forEach(function (item) {\n            if (type === item[0]) {\n                console.warn('Force %s to be %s after set %s', item[1], item[2], item[0]);\n                materialConfig[item[1]] = item[2];\n\n                uiNeedUpdate = true;\n            }\n        }, this);\n\n        // TODO Remove old textures.\n        showSaveTip();\n        __WEBPACK_IMPORTED_MODULE_4__env__[\"a\" /* default */].AUTO_SAVE && __WEBPACK_IMPORTED_MODULE_3__project__[\"g\" /* writeTextureImage */](file).then(hideBackgroundProgress).catch(hideBackgroundProgress);\n        filesMapInverse[val] = file.name;\n\n        uiNeedUpdate && controlKit.update();\n    }\n\n    updateMaterial();\n}\n\nvar scenePanel;\nvar pbrRoughnessMetallicPanel;\nvar pbrSpecularGlossinessPanel;\nvar selectedMesh;\nvar outlineMeshes = [];\n\nfunction showTip() {\n    document.getElementById('tip').style.display = 'block';\n}\nfunction hideTip() {\n    document.getElementById('tip').style.display = 'none';\n}\n\nfunction createViewer() {\n    viewer = new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */](document.getElementById('viewport'), config);\n    viewer.enablePicking();\n    viewer.setCameraControl(config.viewControl);\n    viewer.start();\n\n    viewer.on('select', function (result) {\n        viewer.refresh();\n        selectMaterial(result.target.material);\n\n        selectedMesh = result.target;\n        outlineMeshes = [];\n        viewer.getModelRoot().traverse(function (mesh) {\n            if (mesh.material && mesh.material.name === selectedMesh.material.name) {\n                outlineMeshes.push(mesh);\n            }\n        });\n    });\n    viewer.on('doffocus', function (result) {\n        if (config.postEffect.depthOfField.enable) {\n            config.postEffect.depthOfField.focalDistance = result.distance;\n            controlKit.update();\n        }\n    });\n    viewer.on('unselect', function () {\n        viewer.refresh();\n        pbrRoughnessMetallicPanel.disable();\n        pbrSpecularGlossinessPanel.disable();\n        selectedMesh = null;\n        outlineMeshes = [];\n    });\n\n    viewer.on('afterrender', function (renderer, scene, camera) {\n        if (selectedMesh) {\n            Object(__WEBPACK_IMPORTED_MODULE_9__debug_renderOutline__[\"a\" /* default */])(viewer, outlineMeshes, camera);\n        }\n    });\n\n    viewer.on('updatecamera', function (params) {\n        config.viewControl = {\n            center: params.center,\n            alpha: params.alpha,\n            beta: params.beta,\n            distance: params.distance\n        };\n    });\n}\n\n\nvar loadingEl = document.getElementById('loading');\nvar backgroundProgressEl = document.getElementById('background-progress');\nfunction showLoading(text) {\n    document.body.appendChild(loadingEl);\n    loadingEl.querySelector('#loading-text').innerHTML = text || 'LOADING';\n}\nfunction hideLoading() {\n    // Remove loading\n    if (loadingEl.parentNode) {\n        loadingEl.parentNode.removeChild(loadingEl);\n    }\n}\n\nfunction showSaveTip() {\n    backgroundProgressEl.style.display = 'block';\n    backgroundProgressEl.querySelector('#background-progress-text').innerHTML = 'Saving...DONT close the page.';\n}\n\nfunction showPrepareTip() {\n    backgroundProgressEl.style.display = 'block';\n    backgroundProgressEl.querySelector('#background-progress-text').innerHTML = 'Preparing for download...DONT close the page.';\n}\n\nfunction hideBackgroundProgress () {\n    backgroundProgressEl.style.display = 'none';\n}\n\nfunction init() {\n    hideLoading();\n\n\n    document.getElementById('toolbar').style.display = 'block';\n    document.getElementById('reset').addEventListener('click', reset);\n    document.getElementById('download').addEventListener('click', download);\n\n    createViewer();\n\n    ///////////// Drag and drop\n    FileAPI.event.dnd(document.getElementById('main'), function (over) {\n\n    }, function (files) {\n\n        showLoading('Loading model');\n        __WEBPACK_IMPORTED_MODULE_8__timeline__[\"a\" /* hideTimeline */]();\n\n        __WEBPACK_IMPORTED_MODULE_3__project__[\"a\" /* createModelFilesURL */](files).then(function (res) {\n            var glTF = res.glTF;\n            var filesMap = res.filesMap;\n            var buffers = res.buffers;\n            var files = res.allFiles;\n\n            filesMapInverse = {};\n            for (var name in filesMap) {\n                filesMapInverse[filesMap[name]] = name;\n            }\n            var haveViewerConfig = !!(glTF.extras && glTF.extras.clayViewerConfig);\n            if (haveViewerConfig) {\n                __WEBPACK_IMPORTED_MODULE_6_zrender_lib_core_util__[\"merge\"](config, glTF.extras.clayViewerConfig, true);\n                viewer.setCameraControl(config.viewControl);\n                updateAll();\n                controlKit.update();\n            }\n            viewer.loadModel(glTF, {\n                files: filesMap,\n                buffers: buffers,\n                textureFlipY: config.textureFlipY,\n                doubleSided: true,\n                upAxis: config.zUpToYUp ? 'z' : 'y',\n                includeTexture: !haveViewerConfig\n            }).on('ready', function () {\n\n                hideTip();\n                hideLoading();\n\n                if (haveViewerConfig) {\n                    (glTF.extras.clayViewerConfig.materials || []).forEach(function (matConfig) {\n                        for (var key in matConfig) {\n                            if (filesMap[matConfig[key]]) {\n                                matConfig[key] = filesMap[matConfig[key]];\n                            }\n                        }\n                        viewer.setMaterial(matConfig.name, matConfig);\n                    });\n                }\n\n                setTimeout(function () {\n                    showSaveTip();\n                    __WEBPACK_IMPORTED_MODULE_4__env__[\"a\" /* default */].AUTO_SAVE && __WEBPACK_IMPORTED_MODULE_3__project__[\"e\" /* saveModelFiles */](files).then(hideBackgroundProgress).catch(hideBackgroundProgress);\n                }, 200);\n            })\n            .on('loadmodel', afterLoadModel)\n            .on('error', function () {\n                hideLoading();\n                swal('Model load error');\n            });\n\n            pbrRoughnessMetallicPanel.disable();\n            pbrSpecularGlossinessPanel.disable();\n\n        }).catch(function (err) {\n\n            hideLoading();\n            if (!viewer.getModelRoot()) {\n                showTip();\n            }\n            __WEBPACK_IMPORTED_MODULE_8__timeline__[\"b\" /* updateAnimationUI */](viewer);\n\n            console.log(err);\n            swal(err.toString());\n        });\n    });\n\n\n    initUI();\n\n    inited = true;\n}\n\nfunction initUI() {\n    scenePanel = controlKit.addPanel({ label: 'Settings', width: 250 });\n\n    scenePanel.addGroup({ label: 'Global' })\n        .addSubGroup( { label: 'Load Option'})\n            .addCheckbox(config, 'textureFlipY', { label: 'Flip Texture', onChange: function () {\n                viewer.setTextureFlipY(config.textureFlipY);\n            } })\n            .addCheckbox(config, 'zUpToYUp', { label: 'Z Up', onChange: function () {\n                viewer.setModelUpAxis(config.zUpToYUp ? 'Z' : 'Y');\n            } })\n        .addSubGroup( { label: 'Ground' })\n            .addCheckbox(config.ground, 'show', { label: 'Show', onChange: updateGround })\n            .addCheckbox(config.ground, 'grid', { label: 'Grid', onChange: updateGround });\n\n    scenePanel.addGroup({ label: 'Environment', enable: false })\n        .addSelect(config.ambientCubemapLight, '$textureOptions', { label: 'HDR Texture', onChange: updateEnvironment, target: '$texture' })\n        .addNumberInput(config.ambientCubemapLight, 'diffuseIntensity', { label: 'Diffuse Intensity', onChange: updateEnvironment, step: 0.1 })\n        .addNumberInput(config.ambientCubemapLight, 'specularIntensity', { label: 'Specular Intensity', onChange: updateEnvironment, step: 0.1 });\n\n    scenePanel.addGroup({ label: 'Light', enable: false })\n        .addSubGroup({ label: 'Main', enable: false })\n            .addCheckbox(config.mainLight, 'shadow', { label: 'Cast Shadow', onChange: updateLight })\n            .addNumberInput(config.mainLight, 'intensity', { label: 'Intensity', step: 0.1, onChange: updateLight })\n            .addColor(config.mainLight, 'color', { label: 'Color', onChange: updateLight })\n            .addPad(config.mainLight, '$padAngle', { label: 'Direction', onChange: updateLight })\n\n        .addSubGroup({ label: 'Secondary', enable: false })\n            .addNumberInput(config.secondaryLight, 'intensity', { label: 'Intensity', step: 0.1, onChange: updateLight })\n            .addColor(config.secondaryLight, 'color', { label: 'Color', onChange: updateLight })\n            .addPad(config.secondaryLight, '$padAngle', { label: 'Direction', onChange: updateLight })\n\n        .addSubGroup({ label: 'Tertiary', enable: false })\n            .addNumberInput(config.tertiaryLight, 'intensity', { label: 'Intensity', step: 0.1, onChange: updateLight })\n            .addColor(config.tertiaryLight, 'color', { label: 'Color', onChange: updateLight })\n            .addPad(config.tertiaryLight, '$padAngle', { label: 'Direction', onChange: updateLight })\n\n        .addSubGroup({ label: 'Ambient', enable: false })\n            .addNumberInput(config.ambientLight, 'intensity', { label: 'Intensity', step: 0.1, onChange: updateLight })\n            .addColor(config.ambientLight, 'color', { label: 'Color', onChange: updateLight });\n\n    scenePanel.addGroup({ label: 'Post Effect', enable: false})\n        .addCheckbox(config.postEffect, 'enable', { label: 'Enable', onChange: updatePostEffect })\n        .addSubGroup({ label: 'Bloom', enable: false })\n            .addCheckbox(config.postEffect.bloom, 'enable', { label: 'Enable', onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.bloom, 'intensity', { label: 'Intensity', step: 0.1, onChange: updatePostEffect })\n\n        .addSubGroup({ label: 'Screen Space Ambient Occulusion', enable: false })\n            .addCheckbox(config.postEffect.screenSpaceAmbientOcclusion, 'enable', { label: 'Enable', onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.screenSpaceAmbientOcclusion, 'radius', { label: 'Radius', step: 0.1, onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.screenSpaceAmbientOcclusion, 'intensity', { label: 'Intensity', step: 0.1, onChange: updatePostEffect })\n            .addSelect(config.postEffect.screenSpaceAmbientOcclusion, '$qualityOptions', { label: 'Quality', onChange: updatePostEffect, target: 'quality' })\n\n        .addSubGroup({ label: 'Screen Space Reflection', enable: false })\n            .addCheckbox(config.postEffect.screenSpaceReflection, 'enable', { label: 'Enable', onChange: updatePostEffect })\n            .addCheckbox(config.postEffect.screenSpaceReflection, 'physical', { label: 'Physical', onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.screenSpaceReflection, 'maxRoughness', { label: 'Max Roughness', step: 0.01, onChange: updatePostEffect })\n            .addSelect(config.postEffect.screenSpaceReflection, '$qualityOptions', { label: 'Quality', onChange: updatePostEffect, target: 'quality' })\n\n        .addSubGroup({ label: 'Depth of Field', enable: false })\n            .addCheckbox(config.postEffect.depthOfField, 'enable', { label: 'Enable', onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.depthOfField, 'fstop', { label: 'f-stop', step: 0.1, onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.depthOfField, 'focalDistance', { label: 'Focal Distance', step: 0.1, onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.depthOfField, 'focalRange', { label: 'Focal Range', step: 0.1, onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.depthOfField, 'blurRadius', { label: 'Blur Radius', step: 0.1, onChange: updatePostEffect })\n            .addSelect(config.postEffect.depthOfField, '$qualityOptions', { label: 'Quality', onChange: updatePostEffect, target: 'quality' })\n\n        .addSubGroup({ label: 'Color Correction', enable: false })\n            .addNumberInput(config.postEffect.colorCorrection, 'exposure', { label: 'Exposure', step: 0.1, onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.colorCorrection, 'brightness', { label: 'Brightness', step: 0.1, onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.colorCorrection, 'contrast', { label: 'Contrast', step: 0.1, onChange: updatePostEffect })\n            .addNumberInput(config.postEffect.colorCorrection, 'saturation', { label: 'Saturation', step: 0.1, onChange: updatePostEffect });\n\n    function getTextureFileName(url) {\n        return filesMapInverse && filesMapInverse[url];\n    }\n\n    function addCommmonProperties(panel) {\n        panel\n            .addStringOutput(materialConfig, 'name', { label: 'Name' })\n            .addColor(materialConfig, 'color', { label: 'Base Color', onChange: updateMaterial })\n            .addSlider(materialConfig, 'alpha', '$alphaRange', { label: 'Alpha', onChange: updateMaterial })\n            .addSlider(materialConfig, 'alphaCutoff', '$alphaCutoffRange', { label: 'Alpha Cutoff', onChange: updateMaterial })\n            .addNumberInput(materialConfig, '$textureTiling', { label: 'Tiling', onChange: updateMaterial, step: 0.5 })\n            .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'diffuseMap', { label: 'Base Map', onChange: changeTexture.bind(null, 'diffuseMap'), getFileName: getTextureFileName })\n            .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'normalMap', { label: 'Normal/Bump Map', onChange: changeTexture.bind(null, 'normalMap'), getFileName: getTextureFileName })\n    }\n    function addUncommonProperties(panel) {\n        panel\n            .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'parallaxOcclusionMap', { label: 'Parallax Occlusion Map', onChange: changeTexture.bind(null, 'parallaxOcclusionMap'), getFileName: getTextureFileName })\n            .addSlider(materialConfig, 'parallaxOcclusionScale', '$parallaxOcclusionScaleRange', { label: 'Scale', onChange: updateMaterial })\n            .addColor(materialConfig, 'emission', { label: 'Emission', onChange: updateMaterial })\n            .addNumberInput(materialConfig, 'emissionIntensity', { label: 'Emission Intensity', onChange: updateMaterial })\n            .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'emissiveMap', { label: 'Emissive Map', onChange: changeTexture.bind(null, 'emissiveMap'), getFileName: getTextureFileName });\n    }\n\n    pbrRoughnessMetallicPanel = controlKit.addPanel({ label: 'Material - Metalllic Roughness', width: 240, fixed: false, align: 'left', position: [10, 10] });\n    addCommmonProperties(pbrRoughnessMetallicPanel);\n    pbrRoughnessMetallicPanel\n        .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'metalnessMap', { label: 'Metalness Map', onChange: changeTexture.bind(null, 'metalnessMap'), getFileName: getTextureFileName })\n        .addSlider(materialConfig, 'metalness', '$metalnessRange', { label: 'Metalness', onChange: updateMaterial })\n        .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'roughnessMap', { label: 'Roughness Map', onChange: changeTexture.bind(null, 'roughnessMap'), getFileName: getTextureFileName })\n        .addSlider(materialConfig, 'roughness', '$roughnessRange', { label: 'Roughness', onChange: updateMaterial });\n    addUncommonProperties(pbrRoughnessMetallicPanel);\n    pbrRoughnessMetallicPanel.disable();\n\n    pbrSpecularGlossinessPanel = controlKit.addPanel({ label: 'Material - Specular Glossiness', width: 240, fixed: false, align: 'left', position: [10, 10] });\n    addCommmonProperties(pbrSpecularGlossinessPanel);\n    pbrSpecularGlossinessPanel\n        .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'specularMap', { label: 'Specular Map', onChange: changeTexture.bind(null, 'specularMap'), getFileName: getTextureFileName })\n        .addColor(materialConfig, 'specularColor', { label: 'Specular Factor', onChange: updateMaterial })\n        .addCustomComponent(__WEBPACK_IMPORTED_MODULE_7__ui_Texture__[\"a\" /* default */], materialConfig, 'glossinessMap', { label: 'Glossiness Map', onChange: changeTexture.bind(null, 'glossinessMap'), getFileName: getTextureFileName })\n        .addSlider(materialConfig, 'glossiness', '$glossinessRange', { label: 'Glossiness', onChange: updateMaterial });\n    addUncommonProperties(pbrSpecularGlossinessPanel);\n    pbrSpecularGlossinessPanel.disable();\n}\n\nfunction reset() {\n    swal({\n        title: 'Reset?',\n        text: 'Reset the viewer',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes!'\n    }).then(function () {\n        __WEBPACK_IMPORTED_MODULE_6_zrender_lib_core_util__[\"merge\"](config, Object(__WEBPACK_IMPORTED_MODULE_1__getDefaultSceneConfig__[\"a\" /* default */])(), true);\n        __WEBPACK_IMPORTED_MODULE_6_zrender_lib_core_util__[\"merge\"](materialConfig, Object(__WEBPACK_IMPORTED_MODULE_2__getDefaultMaterialConfig__[\"a\" /* default */])(), true);\n        controlKit.update();\n        pbrRoughnessMetallicPanel.disable();\n        pbrSpecularGlossinessPanel.disable();\n\n        selectedMesh = null;\n        outlineMeshes = [];\n        viewer.dispose();\n        createViewer();\n\n        __WEBPACK_IMPORTED_MODULE_3__project__[\"d\" /* removeProject */]();\n\n        showTip();\n\n        __WEBPACK_IMPORTED_MODULE_8__timeline__[\"b\" /* updateAnimationUI */](viewer);\n        hideBackgroundProgress();\n    }).catch(function () {});\n}\n\nfunction download() {\n    swal({\n        title: 'Select download format.',\n        input: 'radio',\n        inputOptions: {\n            'glb': 'GLB',\n            'zip': 'ZIP'\n        }\n    }).then(function (result) {\n        showPrepareTip();\n        __WEBPACK_IMPORTED_MODULE_3__project__[\"b\" /* downloadProject */](result, hideBackgroundProgress, hideBackgroundProgress);\n    });\n}\n\nfunction afterLoadModel() {\n    selectedMesh = null;\n    viewer.stopAnimation();\n    __WEBPACK_IMPORTED_MODULE_8__timeline__[\"b\" /* updateAnimationUI */](viewer);\n}\n\nvar filesMapInverse;\nvar inited = false;\n\n__WEBPACK_IMPORTED_MODULE_3__project__[\"c\" /* init */](function (glTF, filesMap, loadedSceneCfg) {\n\n    if (loadedSceneCfg) {\n        __WEBPACK_IMPORTED_MODULE_6_zrender_lib_core_util__[\"merge\"](config, loadedSceneCfg, true);\n    }\n    if (inited) {\n        return;\n    }\n\n    init();\n\n    if (glTF) {\n        filesMapInverse = {};\n        for (var name in filesMap) {\n            filesMapInverse[filesMap[name]] = name;\n        }\n        viewer.loadModel(glTF, {\n            files: filesMap,\n            textureFlipY: config.textureFlipY,\n            upAxis: config.zUpToYUp ? 'z' : 'y',\n            doubleSided: true,\n            // Not load texture, setMaterial will do it.\n            includeTexture: false\n        }).on('ready', function () {\n            if (loadedSceneCfg && loadedSceneCfg.materials) {\n                loadedSceneCfg.materials.forEach(function (matConfig) {\n                    // From file name to object URL\n                    for (var key in matConfig) {\n                        if (filesMap[matConfig[key]]) {\n                            matConfig[key] = filesMap[matConfig[key]];\n                        }\n                    }\n                    viewer.setMaterial(matConfig.name, matConfig);\n                });\n            }\n        })\n        .on('loadmodel', afterLoadModel)\n        .on('error', function () {\n            showTip();\n            swal('Model load error');\n        });\n    }\n    else {\n        showTip();\n    }\n});\n\nsetTimeout(function () {\n    if (inited) {\n        return;\n    }\n    console.warn('Init time out');\n    init();\n}, 5000);\n\nsetInterval(function () {\n    if (viewer && !document.hidden) {\n        var materialsMap = {};\n        config.materials = viewer.getMaterialsNames().map(function (matName) {\n            var matConfig = viewer.getMaterial(matName);\n            // From object URL to file name;\n            for (var key in matConfig) {\n                if (filesMapInverse[matConfig[key]]) {\n                    matConfig[key] = filesMapInverse[matConfig[key]];\n                }\n            }\n            matConfig.targetMeshes = [];\n            materialsMap[matName] = matConfig;\n            return matConfig;\n        });\n\n        if (viewer.getModelRoot()) {\n            viewer.getModelRoot().traverse(function (mesh) {\n                if (mesh.material && materialsMap[mesh.material.name]) {\n                    materialsMap[mesh.material.name].targetMeshes.push(mesh.originalMeshName || mesh.name);\n                }\n            });\n        }\n\n        showSaveTip();\n        __WEBPACK_IMPORTED_MODULE_4__env__[\"a\" /* default */].AUTO_SAVE && __WEBPACK_IMPORTED_MODULE_3__project__[\"f\" /* saveSceneConfig */](config).then(function () {\n            hideBackgroundProgress();\n            console.log('Saved');\n        }).catch(hideBackgroundProgress);\n    }\n}, 5000);\n\n\nwindow.addEventListener('resize', function () { viewer.resize(); });\n\nwindow.addEventListener('dragover', function (e) {\n    e.preventDefault();\n});\nwindow.addEventListener('drop', function (e) {\n    e.preventDefault();\n});\n\n$(document).on('click', 'a[href^=\"http\"]', function(event) {\n    event.preventDefault();\n    Object(__WEBPACK_IMPORTED_MODULE_10_vendor_openURL__[\"a\" /* default */])(this.href);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///69\n");

/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_Viewer__ = __webpack_require__(71);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__src_Viewer__[\"a\" /* default */]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vaW5kZXguanM/NGI3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmlld2VyIGZyb20gJy4vc3JjL1ZpZXdlcic7XG5leHBvcnQgZGVmYXVsdCBWaWV3ZXI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDcwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///70\n");

/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_Renderer__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_loader_GLTF__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_animation_Timeline__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_util_mesh__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_async_Task__ = __webpack_require__(56);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_claygl_src_async_TaskGroup__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_claygl_src_core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_claygl_src_Node__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_claygl_src_Mesh__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_claygl_src_Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_claygl_src_geometry_Plane__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_claygl_src_Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_claygl_src_picking_RayPicking__ = __webpack_require__(98);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_claygl_src_core_mixin_notifier__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_claygl_src_util_texture__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_claygl_src_TextureCube__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__graphic_RenderMain__ = __webpack_require__(102);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__graphic_helper__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__graphic_SceneHelper__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__defaultSceneConfig__ = __webpack_require__(141);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_zrender_src_core_util__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__util_getBoundingBoxWithSkinning__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23_claygl_src_plugin_OrbitControl__ = __webpack_require__(148);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__HotspotManager__ = __webpack_require__(150);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__graphic_ground_glsl_js__ = __webpack_require__(152);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_12_claygl_src_Shader__[\"a\" /* default */].import(__WEBPACK_IMPORTED_MODULE_25__graphic_ground_glsl_js__[\"a\" /* default */]);\n\nvar TEXTURES = ['diffuseMap', 'normalMap', 'emissiveMap', 'metalnessMap', 'roughnessMap', 'specularMap', 'glossinessMap'];\n\n/**\n * @constructor\n * @param {HTMLDivElement} dom Root node\n * @param {Object} [sceneConfig]\n * @param {boolean} [sceneConfig.enablePicking]\n * @param {Object} [sceneConfig.shadow]\n * @param {boolean} [sceneConfig.devicePixelRatio]\n * @param {Object} [sceneConfig.postEffect]\n * @param {Object} [sceneConfig.mainLight]\n * @param {Object} [sceneConfig.ambientLight]\n * @param {Object} [sceneConfig.ambientCubemapLight]\n */\nfunction Viewer(dom, sceneConfig) {\n\n    sceneConfig = __WEBPACK_IMPORTED_MODULE_21_zrender_src_core_util__[\"a\" /* clone */](sceneConfig);\n    __WEBPACK_IMPORTED_MODULE_21_zrender_src_core_util__[\"b\" /* merge */](sceneConfig, __WEBPACK_IMPORTED_MODULE_20__defaultSceneConfig__[\"a\" /* default */]);\n\n    this.init(dom, sceneConfig);\n}\n\nViewer.prototype.init = function (dom, opts) {\n    opts = opts || {};\n\n    /**\n     * @type {HTMLDivElement}\n     */\n    this.root = dom;\n\n    /**\n     * @private\n     */\n    this._timeline = new __WEBPACK_IMPORTED_MODULE_3_claygl_src_animation_Timeline__[\"a\" /* default */]();\n\n    var renderer = new __WEBPACK_IMPORTED_MODULE_0_claygl_src_Renderer__[\"a\" /* default */]({\n        devicePixelRatio: opts.devicePixelRatio || window.devicePixelRatio\n    });\n    dom.appendChild(renderer.canvas);\n    renderer.canvas.style.cssText = 'position:absolute;left:0;top:0';\n\n    /**\n     * @private\n     */\n    this._renderer = renderer;\n\n    this._renderMain = new __WEBPACK_IMPORTED_MODULE_17__graphic_RenderMain__[\"a\" /* default */](renderer, opts.shadow, 'perspective');\n    this._renderMain.afterRenderScene = (function (renderer, scene, camera) {\n        this.trigger('renderscene', renderer, scene, camera);\n    }).bind(this);\n    this._renderMain.afterRenderAll = (function (renderer, scene, camera) {\n        this.trigger('afterrender', renderer, scene, camera);\n    }).bind(this);\n    this._renderMain.preZ = opts.preZ || false;\n\n    var cameraControl = this._cameraControl = new __WEBPACK_IMPORTED_MODULE_23_claygl_src_plugin_OrbitControl__[\"a\" /* default */]({\n        renderer: renderer,\n        timeline: this._timeline,\n        domElement: dom\n    });\n    cameraControl.target = this._renderMain.camera;\n    cameraControl.init();\n\n    this._hotspotManager = new __WEBPACK_IMPORTED_MODULE_24__HotspotManager__[\"a\" /* default */]({\n        dom: dom,\n        renderer: renderer,\n        camera: this._renderMain.camera\n    });\n\n    /**\n     * List of skeletons\n     */\n    this._skeletons = [];\n    /**\n     * List of animation clips\n     */\n    this._clips = [];\n\n    /**\n     * List of takes.\n     */\n    this._takes = [];\n\n    /**\n     * Map of materials\n     */\n    this._materialsMap = {};\n\n    this._sceneHelper = new __WEBPACK_IMPORTED_MODULE_19__graphic_SceneHelper__[\"a\" /* default */](this._renderMain.scene);\n    this._sceneHelper.initLight(this._renderMain.scene);\n\n    this.resize();\n\n    if (opts.postEffect) {\n        this.setPostEffect(opts.postEffect);\n    }\n    if (opts.mainLight) {\n        this.setMainLight(opts.mainLight);\n    }\n    if (opts.secondaryLight) {\n        this.setSecondaryLight(opts.secondaryLight);\n    }\n    if (opts.tertiaryLight) {\n        this.setTertiaryLight(opts.tertiaryLight);\n    }\n    if (opts.ambientCubemapLight) {\n        this.setAmbientCubemapLight(opts.ambientCubemapLight);\n    }\n    if (opts.ambientLight) {\n        this.setAmbientLight(opts.ambientLight);\n    }\n    if (opts.environment) {\n        this.setEnvironment(opts.environment);\n    }\n\n    this._createGround();\n    if (opts.ground) {\n        this.setGround(opts.ground);\n    }\n\n    this.setCameraControl({\n        distance: 20,\n        minDisntance: 2,\n        maxDistance: 100,\n        center: [0, 0, 0]\n    });\n\n    this._enablePicking = opts.picking || false;\n\n    this._initHandlers();\n\n    cameraControl.on('update', function () {\n        this.trigger('updatecamera', {\n            center: cameraControl.getCenter(),\n            alpha: cameraControl.getAlpha(),\n            beta: cameraControl.getBeta(),\n            distance: cameraControl.getDistance()\n        });\n\n        this.refresh();\n    }, this);\n\n};\n\nViewer.prototype._createGround = function () {\n    var groundMesh = new __WEBPACK_IMPORTED_MODULE_9_claygl_src_Mesh__[\"a\" /* default */]({\n        isGround: true,\n        material: new __WEBPACK_IMPORTED_MODULE_10_claygl_src_Material__[\"a\" /* default */]({\n            shader: new __WEBPACK_IMPORTED_MODULE_12_claygl_src_Shader__[\"a\" /* default */]({\n                vertex: __WEBPACK_IMPORTED_MODULE_12_claygl_src_Shader__[\"a\" /* default */].source('qmv.ground.vertex'),\n                fragment: __WEBPACK_IMPORTED_MODULE_12_claygl_src_Shader__[\"a\" /* default */].source('qmv.ground.fragment')\n            }),\n            transparent: true\n        }),\n        castShadow: false,\n        geometry: new __WEBPACK_IMPORTED_MODULE_11_claygl_src_geometry_Plane__[\"a\" /* default */](),\n        renderOrder: -10\n    });\n    groundMesh.material.set('color', [0, 0, 0, 1]);\n    groundMesh.scale.set(40, 40, 1);\n    groundMesh.rotation.rotateX(-Math.PI / 2);\n    this._groundMesh = groundMesh;\n\n    this._renderMain.scene.add(groundMesh);\n};\n\nViewer.prototype._addModel = function (modelNode, nodes, skeletons, clips) {\n    // Remove previous loaded\n    this.removeModel();\n\n    this._renderMain.scene.add(modelNode);\n\n    this._skeletons = skeletons.slice();\n    this._modelNode = modelNode;\n\n    this._setAnimationClips(clips);\n\n    // Not save if glTF has only animation info\n    if (nodes && nodes.length) {\n        this._nodes = nodes;\n    }\n    var materialsMap = {};\n    modelNode.traverse(function (node) {\n        // Save material\n        if (node.material) {\n            var material = node.material;\n            // Avoid name duplicate\n            materialsMap[material.name] = materialsMap[material.name] || [];\n            materialsMap[material.name].push(material);\n        }\n    }, this);\n    this._materialsMap = materialsMap;\n\n    this._updateMaterialsSRGB();\n\n    this._stopAccumulating();\n};\n\nViewer.prototype._removeAnimationClips = function () {\n    this._clips.forEach(function (clip) {\n        this._timeline.removeClip(clip);\n    }, this);\n    this._clips = [];\n    this._takes = [];\n};\n\nViewer.prototype._setAnimationClips = function (clips) {\n    var self = this;\n    function refresh() {\n        self.refresh();\n    }\n    clips.forEach(function (clip) {\n        clip.tracks.forEach(function (track) {\n            if (!track.target) {\n                track.target = this._nodes[track.targetNodeIndex];\n            }\n        }, this);\n        clip.onframe = refresh;\n\n        this._timeline.addClip(clip);\n\n        this._takes.push({\n            name: clip.name,\n            range: [0, clip.life],\n            clip: clip\n        });\n    }, this);\n\n    this._clips = clips.slice();\n};\n\nViewer.prototype._initHandlers = function () {\n\n    this._picking = new __WEBPACK_IMPORTED_MODULE_13_claygl_src_picking_RayPicking__[\"a\" /* default */]({\n        renderer: this._renderer,\n        scene: this._renderMain.scene,\n        camera: this._renderMain.camera\n    });\n\n    this._clickHandler = this._clickHandler.bind(this);\n    this._mouseDownHandler = this._mouseDownHandler.bind(this);\n\n    this.root.addEventListener('mousedown', this._mouseDownHandler);\n    this.root.addEventListener('click', this._clickHandler);\n};\n\nViewer.prototype._mouseDownHandler = function (e) {\n    this._startX = e.clientX;\n    this._startY = e.clientY;\n};\n\nViewer.prototype._clickHandler = function (e) {\n    if (!this._enablePicking && !this._renderMain.isDOFEnabled()) {\n        return;\n    }\n    var dx = e.clientX - this._startX;\n    var dy = e.clientY - this._startY;\n    if (Math.sqrt(dx * dx + dy * dy) >= 5) {\n        return;\n    }\n\n    var result = this._picking.pick(e.clientX, e.clientY, true);\n\n    if (result && !result.target.isGround) {\n        this._renderMain.setDOFFocusOnPoint(result.distance);\n        this.trigger('doffocus', result);\n\n        this._selectResult = result;\n        this.trigger('select', result);\n\n        this.refresh();\n    }\n    else {\n        if (this._selectResult) {\n            this.trigger('unselect', this._selectResult);\n        }\n        this._selectResult = null;\n    }\n};\n\n/**\n * Enable picking\n */\nViewer.prototype.enablePicking = function () {\n    this._enablePicking = true;\n};\n/**\n * Disable picking\n */\nViewer.prototype.disablePicking = function () {\n    this._enablePicking = false;\n};\n/**\n * Model coordinate system is y up.\n */\nViewer.prototype.setModelUpAxis = function (upAxis) {\n    var modelNode = this._modelNode;\n    if (!modelNode) {\n        return;\n    }\n    modelNode.position.set(0, 0, 0);\n    modelNode.scale.set(1, 1, 1);\n    modelNode.rotation.identity();\n    if (upAxis.toLowerCase() === 'z') {\n        modelNode.rotation.identity().rotateX(-Math.PI / 2);\n    }\n\n    this.autoFitModel();\n};\nViewer.prototype.setTextureFlipY = function (flipY) {\n    if (!this._modelNode) {\n        return;\n    }\n    for (var key in this._materialsMap) {\n        for (var i = 0; i < this._materialsMap[key].length; i++) {\n            var mat = this._materialsMap[key][i];\n            for (var k = 0; k < TEXTURES.length; k++) {\n                var tex = mat.get(TEXTURES[k]);\n                if (tex) {\n                    tex.flipY = flipY;\n                    tex.dirty();\n                }\n            }\n        }\n    }\n    this.refresh();\n};\n /**\n * Resize the viewport\n */\nViewer.prototype.resize = function () {\n    var renderer = this._renderer;\n    renderer.resize(this.root.clientWidth, this.root.clientHeight);\n    this._renderMain.setViewport(0, 0, renderer.getWidth(), renderer.getHeight(), renderer.getDevicePixelRatio());\n\n    this.refresh();\n};\n\n/**\n * Scale model to auto fit the camera.\n */\nViewer.prototype.autoFitModel = function (fitSize) {\n    fitSize = fitSize || 10;\n    if (this._modelNode) {\n        this.setPose(10);\n        this._modelNode.update();\n        // Update skeleton after model node transform updated.\n        this._skeletons.forEach(function (skeleton) {\n            skeleton.update();\n        });\n        var bbox = Object(__WEBPACK_IMPORTED_MODULE_22__util_getBoundingBoxWithSkinning__[\"a\" /* default */])(this._modelNode);\n\n        var size = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_math_Vector3__[\"a\" /* default */]();\n        size.copy(bbox.max).sub(bbox.min);\n\n        var center = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_math_Vector3__[\"a\" /* default */]();\n        center.copy(bbox.max).add(bbox.min).scale(0.5);\n\n        // scale may be NaN if mesh is a plane.\n        var scale = fitSize / Math.max(size.x, size.y, size.z) || 1;\n\n        this._modelNode.scale.set(scale, scale, scale);\n        this._modelNode.position.copy(center).scale(-scale);\n        this._modelNode.update();\n\n        this._hotspotManager.setBoundingBox(bbox.min.array, bbox.max.array);\n\n        // FIXME, Do it in the renderer?\n        this._modelNode.traverse(function (mesh) {\n            if (mesh.isSkinnedMesh()) {\n                mesh.geometry.boundingBox.applyTransform(this._modelNode.worldTransform);\n            }\n        }, this);\n\n        // Fit the ground\n        this._groundMesh.position.y = -size.y * scale / 2;\n\n        this.refresh();\n    }\n};\n\n/**\n * Load glTF model resource\n * @param {string|Object} gltfFile Model url or json\n * @param {Object} [opts]\n * @param {Object} [opts.shader='lambert'] 'basic'|'lambert'|'standard'\n * @param {boolean} [opts.includeTexture=true]\n * @param {Object} [opts.files] Pre-read files map\n * @param {Array.<ArrayBuffer>} [opts.buffers]\n * @param {boolean} [opts.upAxis='y'] Change model to y up if upAxis is 'z'\n * @param {boolean} [opts.textureFlipY=false]\n * @param {boolean} [opts.regenerateNormal=false] If regenerate per vertex normal.\n */\nViewer.prototype.loadModel = function (gltfFile, opts) {\n    opts = opts || {};\n    if (!gltfFile) {\n        throw new Error('URL of model is not provided');\n    }\n    var shaderName = opts.shader || 'standard';\n\n    var pathResolver = null;\n    if (opts.files) {\n        pathResolver = function (uri) {\n            if (uri.match(/^data:(.*?)base64,/)) {\n                return uri;\n            }\n            uri = uri.replace(/[\\\\\\/]+/g, '/');\n            var fileName = uri.substr(uri.lastIndexOf('/') + 1);\n            if (opts.files[fileName]) {\n                return opts.files[fileName];\n            }\n            else {\n                return fileName || '';\n            }\n        };\n    }\n    var loaderOpts = {\n        rootNode: new __WEBPACK_IMPORTED_MODULE_8_claygl_src_Node__[\"a\" /* default */](),\n        shader: 'clay.' + shaderName,\n        textureRootPath: opts.textureRootPath,\n        bufferRootPath: opts.bufferRootPath,\n        crossOrigin: 'Anonymous',\n        includeTexture: opts.includeTexture == null ? true : opts.includeTexture,\n        textureFlipY: opts.textureFlipY,\n        textureConvertToPOT: true\n    };\n    if (pathResolver) {\n        loaderOpts.resolveTexturePath =\n        loaderOpts.resolveBinaryPath = pathResolver;\n    }\n\n    var loader = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_loader_GLTF__[\"a\" /* default */](loaderOpts);\n    if (typeof gltfFile === 'string') {\n        loader.load(gltfFile);\n    }\n    else if (gltfFile instanceof ArrayBuffer) {\n        loader.parseBinary(gltfFile);\n    }\n    else {\n        loader.parse(gltfFile, opts.buffers);\n    }\n\n    if (opts.upAxis && opts.upAxis.toLowerCase() === 'z') {\n        loader.rootNode.rotation.rotateX(-Math.PI / 2);\n    }\n\n    var task = new __WEBPACK_IMPORTED_MODULE_5_claygl_src_async_Task__[\"a\" /* default */]();\n\n    var vertexCount = 0;\n    var triangleCount = 0;\n    var nodeCount = 0;\n\n    loader.success(function (res) {\n        res.rootNode.traverse(function (mesh) {\n            nodeCount++;\n            if (mesh.geometry) {\n                triangleCount += mesh.geometry.triangleCount;\n                vertexCount += mesh.geometry.vertexCount;\n            }\n        });\n        this._preprocessModel(res.rootNode, opts);\n\n        this._addModel(res.rootNode, res.nodes, res.skeletons, res.clips);\n\n        this.autoFitModel();\n\n        var stat = {\n            triangleCount: triangleCount,\n            vertexCount: vertexCount,\n            nodeCount: nodeCount,\n            meshCount: Object.keys(res.meshes).length,\n            materialCount: Object.keys(res.materials).length,\n            textureCount: Object.keys(res.textures).length\n        };\n\n        task.trigger('loadmodel', stat);\n\n        var loadingTextures = [];\n        __WEBPACK_IMPORTED_MODULE_7_claygl_src_core_util__[\"a\" /* default */].each(res.textures, function (texture) {\n            if (!texture.isRenderable()) {\n                loadingTextures.push(texture);\n            }\n        });\n        var taskGroup = new __WEBPACK_IMPORTED_MODULE_6_claygl_src_async_TaskGroup__[\"a\" /* default */]();\n        taskGroup.allSettled(loadingTextures).success(function () {\n\n            this._convertBumpToNormal();\n            task.trigger('ready');\n            this.refresh();\n        }, this);\n\n        this.refresh();\n    }, this);\n    loader.error(function () {\n        task.trigger('error');\n    });\n\n    this._textureFlipY = opts.textureFlipY;\n    this._shaderName = shaderName;\n\n    return task;\n};\n\nViewer.prototype._convertBumpToNormal = function () {\n    for (var key in this._materialsMap) {\n        for (var i = 0; i < this._materialsMap[key].length; i++) {\n            var mat = this._materialsMap[key][i];\n            var normalTexture = mat.get('normalMap');\n            if (normalTexture && __WEBPACK_IMPORTED_MODULE_15_claygl_src_util_texture__[\"a\" /* default */].isHeightImage(normalTexture.image)) {\n                var normalImage = __WEBPACK_IMPORTED_MODULE_15_claygl_src_util_texture__[\"a\" /* default */].heightToNormal(normalTexture.image);\n                normalImage.srcImage = normalTexture.image;\n                normalTexture.image = normalImage;\n                normalTexture.dirty();\n            }\n        }\n    }\n};\n\n/**\n * Remove current loaded model\n */\nViewer.prototype.removeModel = function () {\n    var prevModelNode = this._modelNode;\n    if (prevModelNode) {\n        this._renderer.disposeNode(prevModelNode);\n        this._renderMain.scene.remove(prevModelNode);\n        this._modelNode = null;\n        this.refresh();\n    }\n    this._removeAnimationClips();\n    this._materialsMap = {};\n    this._nodes = [];\n    this._skeletons = [];\n};\n\n/**\n * Return scene.\n * @return {clay.Scene}\n */\nViewer.prototype.getScene = function () {\n    return this._renderMain.scene;\n};\n\n/**\n * @return {clay.Node}\n */\nViewer.prototype.getModelRoot = function () {\n    return this._modelNode;\n};\n\nViewer.prototype._preprocessModel = function (rootNode, opts) {\n\n    var alphaCutoff = opts.alphaCutoff;\n    var doubleSided = opts.doubleSided;\n\n    var meshNeedsSplit = [];\n    rootNode.traverse(function (mesh) {\n        if (mesh.skeleton) {\n            meshNeedsSplit.push(mesh);\n        }\n    });\n    meshNeedsSplit.forEach(function (mesh) {\n        var newNode = __WEBPACK_IMPORTED_MODULE_4_claygl_src_util_mesh__[\"a\" /* default */].splitByJoints(mesh, 15, true);\n        if (newNode !== mesh) {\n            newNode.eachChild(function (mesh) {\n                mesh.originalMeshName = newNode.name;\n            });\n        }\n    }, this);\n    rootNode.traverse(function (mesh) {\n        if (mesh.geometry) {\n            // TODO Shared geometry? face normal?\n            if (opts.regenerateNormal) {\n                mesh.geometry.generateVertexNormals();\n            }\n            mesh.geometry.updateBoundingBox();\n            if (doubleSided != null) {\n                mesh.culling = !doubleSided;\n            }\n        }\n        if (mesh.material) {\n            mesh.material.define('fragment', 'DIFFUSEMAP_ALPHA_ALPHA');\n            mesh.material.define('fragment', 'ALPHA_TEST');\n            if (doubleSided != null) {\n                mesh.material[doubleSided ? 'define' : 'undefine']('fragment', 'DOUBLE_SIDED');\n            }\n            mesh.material.precision = 'mediump';\n\n            if (alphaCutoff != null) {\n                mesh.material.set('alphaCutoff', alphaCutoff);\n            }\n\n            // Transparent mesh not cast shadow\n            if (mesh.material.transparent) {\n                mesh.castShadow = false;\n            }\n        }\n    });\n\n};\n\n/**\n * Load animation glTF\n * @param {string} url\n */\nViewer.prototype.loadAnimation = function (url) {\n    var loader = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_loader_GLTF__[\"a\" /* default */]({\n        rootNode: new __WEBPACK_IMPORTED_MODULE_8_claygl_src_Node__[\"a\" /* default */](),\n        crossOrigin: 'Anonymous'\n    });\n    loader.load(url);\n    loader.success(function (res) {\n        this._removeAnimationClips();\n        this._setAnimationClips(res.clips);\n    }, this);\n\n    return loader;\n};\n\n/**\n * Pause animation\n */\nViewer.prototype.pauseAnimation = function () {\n    this._clips.forEach(function (clip) {\n        clip.pause();\n    });\n};\n\nViewer.prototype.stopAnimation = function () {\n    this._clips.forEach(function (clip) {\n        this._timeline.removeClip(clip);\n    }, this);\n};\n\n/**\n * Resume animation\n */\nViewer.prototype.resumeAnimation = function () {\n    this._clips.forEach(function (clip) {\n        clip.resume();\n    });\n};\n\n/**\n * @param {Object} [opts]\n * @param {number} [opts.distance]\n * @param {number} [opts.minDistance]\n * @param {number} [opts.maxDistance]\n * @param {number} [opts.alpha]\n * @param {number} [opts.beta]\n * @param {number} [opts.minAlpha]\n * @param {number} [opts.maxAlpha]\n * @param {number} [opts.minBeta]\n * @param {number} [opts.maxBeta]\n * @param {number} [opts.rotateSensitivity]\n * @param {number} [opts.panSensitivity]\n * @param {number} [opts.zoomSensitivity]\n */\nViewer.prototype.setCameraControl = function (opts) {\n    this._cameraControl.setOption(opts);\n    this.refresh();\n};\n\n/**\n * @param {Object} [opts]\n * @param {number} [opts.intensity]\n * @param {string} [opts.color]\n * @param {number} [opts.alpha]\n * @param {number} [opts.beta]\n * @param {number} [opts.shadow]\n * @param {number} [opts.shadowQuality]\n */\nViewer.prototype.setMainLight = function (opts) {\n    this._sceneHelper.updateMainLight(opts, this);\n    this.refresh();\n};\n\n/**\n * @param {Object} [opts]\n * @param {number} [opts.intensity]\n * @param {string} [opts.color]\n * @param {number} [opts.alpha]\n * @param {number} [opts.beta]\n * @param {number} [opts.shadow]\n * @param {number} [opts.shadowQuality]\n */\nViewer.prototype.setSecondaryLight = function (opts) {\n    this._sceneHelper.updateSecondaryLight(opts, this);\n    this.refresh();\n};\n\n/**\n * @param {Object} [opts]\n * @param {number} [opts.intensity]\n * @param {string} [opts.color]\n * @param {number} [opts.alpha]\n * @param {number} [opts.beta]\n * @param {number} [opts.shadow]\n * @param {number} [opts.shadowQuality]\n */\nViewer.prototype.setTertiaryLight = function (opts) {\n    this._sceneHelper.updateTertiaryLight(opts, this);\n    this.refresh();\n};\n\n/**\n * @param {Object} [opts]\n * @param {number} [opts.intensity]\n * @param {string} [opts.color]\n */\nViewer.prototype.setAmbientLight = function (opts) {\n    this._sceneHelper.updateAmbientLight(opts, this);\n    this.refresh();\n};\n/**\n * @param {Object} [opts]\n * @param {Object} [opts.texture]\n * @param {Object} [opts.exposure]\n * @param {number} [opts.diffuseIntensity]\n * @param {number} [opts.specularIntensity]\n */\nViewer.prototype.setAmbientCubemapLight = function (opts) {\n    this._sceneHelper.updateAmbientCubemapLight(opts, this);\n    this.refresh();\n};\n\n/**\n * @param {string} envUrl\n */\nViewer.prototype.setEnvironment = function (envUrl) {\n    this._sceneHelper.updateSkybox(envUrl, this._renderMain.isLinearSpace(), this);\n};\n\n/**\n * @param {string|Array.<string>} matName\n * @param {Object} materialCfg\n * @param {boolean} [materialCfg.transparent]\n * @param {boolean} [materialCfg.alphaCutoff]\n * @param {boolean} [materialCfg.metalness]\n * @param {boolean} [materialCfg.roughness]\n */\nViewer.prototype.setMaterial = function (matName, materialCfg) {\n    var renderer = this._renderer;\n    materialCfg = materialCfg || {};\n    if (! (matName instanceof Array)) {\n        matName = [matName];\n    }\n    var materials = [];\n    matName.forEach(function (singleMatName) {\n        if (this._materialsMap[singleMatName]) {\n            materials = materials.concat(this._materialsMap[singleMatName]);\n        }\n    }, this);\n    var app = this;\n    var textureFlipY = this._textureFlipY;\n    if (!materials || !materials.length) {\n        console.warn('Material %s not exits', matName.join(', '));\n        return;\n    }\n\n    function haveTexture(val) {\n        return val && val !== 'none';\n    }\n    var needTangents = false;\n    function addTexture(propName) {\n        // Not change if texture name is not in the config.\n        if (propName in materialCfg) {\n            if (haveTexture(materialCfg[propName])) {\n                var isEnvironmentMap = propName === 'environmentMap';\n                if (propName === 'normalMap' || propName === 'parallaxOcclusionMap') {\n                    needTangents = true;\n                }\n\n                __WEBPACK_IMPORTED_MODULE_18__graphic_helper__[\"a\" /* default */].loadTexture(materialCfg[propName], app, {\n                    flipY: isEnvironmentMap ? false : textureFlipY,\n                    anisotropic: isEnvironmentMap ? 1 : 8\n                }, function (texture) {\n                    if (propName === 'normalMap' && __WEBPACK_IMPORTED_MODULE_15_claygl_src_util_texture__[\"a\" /* default */].isHeightImage(texture.image)) {\n                        var normalImage = __WEBPACK_IMPORTED_MODULE_15_claygl_src_util_texture__[\"a\" /* default */].heightToNormal(texture.image);\n                        normalImage.srcImage = texture.image;\n                        texture.image = normalImage;\n                    }\n                    else if (propName === 'environmentMap') {\n                        var size = Math.round(texture.width / 4);\n                        var cubemap = new __WEBPACK_IMPORTED_MODULE_16_claygl_src_TextureCube__[\"a\" /* default */]({\n                            width: size,\n                            height: size\n                        });\n                        // TODO No need to use environment map if there is ambient cubemap\n                        __WEBPACK_IMPORTED_MODULE_15_claygl_src_util_texture__[\"a\" /* default */].panoramaToCubeMap(renderer, texture, cubemap);\n                        // Use the cubemap.\n                        texture = cubemap;\n                    }\n                    materials.forEach(function (mat) {\n                        mat.set(propName, texture);\n                    });\n                    app.refresh();\n                });\n            }\n            else {\n                materials.forEach(function (mat) {\n                    mat.set(propName, null);\n                });\n            }\n        }\n    }\n    ['diffuseMap', 'normalMap', 'parallaxOcclusionMap', 'emissiveMap', 'environmentMap'].forEach(function (propName) {\n        addTexture(propName);\n    }, this);\n    if (materials[0].isDefined('fragment', 'USE_METALNESS')) {\n        ['metalnessMap', 'roughnessMap'].forEach(function (propName) {\n            addTexture(propName);\n        }, this);\n    }\n    else {\n        ['specularMap', 'glossinessMap'].forEach(function (propName) {\n            addTexture(propName);\n        }, this);\n    }\n\n    if (needTangents) {\n        this._modelNode.traverse(function (mesh) {\n            if (mesh.material && matName.indexOf(mesh.material.name) >= 0) {\n                if (!mesh.geometry.attributes.tangent.value) {\n                    mesh.geometry.generateTangents();\n                }\n            }\n        });\n    }\n    materials.forEach(function (mat) {\n        if (materialCfg.transparent != null) {\n            mat.transparent = !!materialCfg.transparent;\n            mat.depthMask = !materialCfg.transparent;\n        }\n        ['color', 'emission', 'specularColor'].forEach(function (propName) {\n            if (materialCfg[propName] != null) {\n                mat.set(propName, __WEBPACK_IMPORTED_MODULE_18__graphic_helper__[\"a\" /* default */].parseColor(materialCfg[propName]));\n            }\n        });\n        ['alpha', 'alphaCutoff', 'metalness', 'roughness', 'glossiness', 'emissionIntensity', 'uvRepeat', 'parallaxOcclusionScale'].forEach(function (propName) {\n            if (materialCfg[propName] != null) {\n                mat.set(propName, materialCfg[propName]);\n            }\n        });\n    }, this);\n    this.refresh();\n};\n\n/**\n * @param {string} name\n */\nViewer.prototype.getMaterial = function (name) {\n    var materials = this._materialsMap[name];\n    if (!materials) {\n        console.warn('Material %s not exits', name);\n        return;\n    }\n    var mat = materials[0];\n    var materialCfg = {\n        name: name,\n        transparent: mat.transparent\n    };\n    ['color', 'emission'].forEach(function (propName) {\n        materialCfg[propName] = __WEBPACK_IMPORTED_MODULE_18__graphic_helper__[\"a\" /* default */].stringifyColor(mat.get(propName), 'hex');\n    });\n    ['alpha', 'alphaCutoff', 'emissionIntensity', 'uvRepeat', 'parallaxOcclusionScale'].forEach(function (propName) {\n        materialCfg[propName] = mat.get(propName);\n    });\n    function getTextureUri(propName) {\n        var texture = mat.get(propName);\n        if (!texture) {\n            return '';\n        }\n        var image = texture.image;\n        while (image.srcImage) {\n            image = image.srcImage;\n        }\n        return (image && image.src) || '';\n    }\n    ['diffuseMap', 'normalMap', 'parallaxOcclusionMap', 'emissiveMap'].forEach(function (propName) {\n        materialCfg[propName] = getTextureUri(propName);\n    });\n    if (mat.isDefined('fragment', 'USE_METALNESS')) {\n        ['metalness', 'roughness'].forEach(function (propName) {\n            materialCfg[propName] = mat.get(propName);\n        });\n        ['metalnessMap', 'roughnessMap'].forEach(function (propName) {\n            materialCfg[propName] = getTextureUri(propName);\n        });\n        materialCfg.type = 'pbrMetallicRoughness';\n    }\n    else {\n        materialCfg.specularColor = __WEBPACK_IMPORTED_MODULE_18__graphic_helper__[\"a\" /* default */].stringifyColor(mat.get('specularColor'), 'hex');\n        materialCfg.glossiness = mat.get('glossiness');\n        ['specularMap', 'glossinessMap'].forEach(function (propName) {\n            materialCfg[propName] = getTextureUri(propName);\n        });\n        materialCfg.type = 'pbrSpecularGlossiness';\n    }\n\n    return materialCfg;\n};\n\n/**\n * @param {Object} opts\n * @param {boolean} [opts.show]\n * @param {boolean} [opts.grid]\n */\nViewer.prototype.setGround = function (opts) {\n    if ('show' in opts) {\n        this._groundMesh.invisible = !opts.show;\n    }\n    if ('grid' in opts) {\n        this._groundMesh.material.set('showGrid', opts.grid);\n    }\n    this.refresh();\n};\n\n/**\n * @return {Array.<string>}\n */\nViewer.prototype.getMaterialsNames = function () {\n    return Object.keys(this._materialsMap);\n};\n\n/**\n * @param {Object} opts\n */\nViewer.prototype.setPostEffect = function (opts) {\n    this._renderMain.setPostEffect(opts);\n\n    this._updateMaterialsSRGB();\n    this.refresh();\n};\n\n/**\n * Start loop.\n */\nViewer.prototype.start = function () {\n    if (this._disposed) {\n        console.warn('Viewer already disposed');\n        return;\n    }\n\n    this._timeline.start();\n    this._timeline.on('frame', this._loop, this);\n};\n\n/**\n * Stop loop.\n */\nViewer.prototype.stop = function () {\n    this._timeline.stop();\n    this._timeline.off('frame', this._loop);\n};\n\n/**\n * Add html tip\n */\nViewer.prototype.addHotspot = function (position, tipHTML) {\n    return this._hotspotManager.add(position, tipHTML);\n};\n\nViewer.prototype.setPose = function (time) {\n    this._clips.forEach(function (clip) {\n        clip.setTime(time);\n    });\n    this.refresh();\n};\n\n/**\n * Get duration of clip\n */\nViewer.prototype.getAnimationDuration = function () {\n    var maxLife = 0;\n    this._clips.forEach(function (clip) {\n        maxLife = Math.max(clip.life, maxLife);\n    });\n    return maxLife;\n};\n\n\nViewer.prototype.refresh = function () {\n    this._needsRefresh = true;\n};\n\nViewer.prototype.getRenderer = function () {\n    return this._renderer;\n};\n\nViewer.prototype._updateMaterialsSRGB = function () {\n    var isLinearSpace = this._renderMain.isLinearSpace();\n    for (var name in this._materialsMap) {\n        var materials = this._materialsMap[name];\n        for (var i = 0; i < materials.length; i++) {\n            materials[i][isLinearSpace ? 'define' : 'undefine']('fragment', 'SRGB_DECODE');\n        }\n    }\n};\n\nViewer.prototype._loop = function (deltaTime) {\n    if (this._disposed) {\n        return;\n    }\n    if (!this._needsRefresh) {\n        return;\n    }\n\n    this._needsRefresh = false;\n\n    this._renderMain.prepareRender();\n    this._renderMain.render();\n    // this._renderer.render(this._renderMain.scene, this._renderMain.camera);\n\n    this._startAccumulating();\n\n    this._hotspotManager.update();\n};\n\nvar accumulatingId = 1;\nViewer.prototype._stopAccumulating = function () {\n    this._accumulatingId = 0;\n    clearTimeout(this._accumulatingTimeout);\n};\n\nViewer.prototype._startAccumulating = function (immediate) {\n    var self = this;\n    this._stopAccumulating();\n\n    var needsAccumulate = self._renderMain.needsAccumulate();\n    if (!needsAccumulate) {\n        return;\n    }\n\n    function accumulate(id) {\n        if (!self._accumulatingId || id !== self._accumulatingId || self._disposed) {\n            return;\n        }\n\n        var isFinished = self._renderMain.isAccumulateFinished() && needsAccumulate;\n\n        if (!isFinished) {\n            self._renderMain.render(true);\n\n            if (immediate) {\n                accumulate(id);\n            }\n            else {\n                requestAnimationFrame(function () {\n                    accumulate(id);\n                });\n            }\n        }\n    }\n\n    this._accumulatingId = accumulatingId++;\n\n    if (immediate) {\n        accumulate(self._accumulatingId);\n    }\n    else {\n        this._accumulatingTimeout = setTimeout(function () {\n            accumulate(self._accumulatingId);\n        }, 50);\n    }\n};\n\n/**\n * Dispose viewer.\n */\nViewer.prototype.dispose = function () {\n    this._disposed = true;\n\n    this._renderer.disposeScene(this._renderMain.scene);\n    this._renderMain.dispose(this._renderer);\n    this._sceneHelper.dispose(this._renderer);\n\n    this._renderer.dispose();\n    this._cameraControl.dispose();\n    this.root.removeEventListener('mousedown', this._mouseDownHandler);\n    this.root.removeEventListener('click', this._clickHandler);\n    this.root.innerHTML = '';\n\n    this.off('select');\n    this.off('doffocus');\n    this.off('unselect');\n    this.off('afterrender');\n    this.off('updatecamera');\n\n    this.stop();\n};\n\n__WEBPACK_IMPORTED_MODULE_7_claygl_src_core_util__[\"a\" /* default */].extend(Viewer.prototype, __WEBPACK_IMPORTED_MODULE_14_claygl_src_core_mixin_notifier__[\"a\" /* default */]);\n\nViewer.version = '0.2.1';\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Viewer);\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///71\n");

/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\n * Extend a sub class from base class\n * @param {object|Function} makeDefaultOpt default option of this sub class, method of the sub can use this.xxx to access this option\n * @param {Function} [initialize] Initialize after the sub class is instantiated\n * @param {Object} [proto] Prototype methods/properties of the sub class\n * @memberOf clay.core.mixin.extend\n * @return {Function}\n */\nfunction derive(makeDefaultOpt, initialize/*optional*/, proto/*optional*/) {\n\n    if (typeof initialize == 'object') {\n        proto = initialize;\n        initialize = null;\n    }\n\n    var _super = this;\n\n    var propList;\n    if (!(makeDefaultOpt instanceof Function)) {\n        // Optimize the property iterate if it have been fixed\n        propList = [];\n        for (var propName in makeDefaultOpt) {\n            if (makeDefaultOpt.hasOwnProperty(propName)) {\n                propList.push(propName);\n            }\n        }\n    }\n\n    var sub = function(options) {\n\n        // call super constructor\n        _super.apply(this, arguments);\n\n        if (makeDefaultOpt instanceof Function) {\n            // Invoke makeDefaultOpt each time if it is a function, So we can make sure each\n            // property in the object will not be shared by mutiple instances\n            extend(this, makeDefaultOpt.call(this, options));\n        }\n        else {\n            extendWithPropList(this, makeDefaultOpt, propList);\n        }\n\n        if (this.constructor === sub) {\n            // Initialize function will be called in the order of inherit\n            var initializers = sub.__initializers__;\n            for (var i = 0; i < initializers.length; i++) {\n                initializers[i].apply(this, arguments);\n            }\n        }\n    };\n    // save super constructor\n    sub.__super__ = _super;\n    // Initialize function will be called after all the super constructor is called\n    if (!_super.__initializers__) {\n        sub.__initializers__ = [];\n    } else {\n        sub.__initializers__ = _super.__initializers__.slice();\n    }\n    if (initialize) {\n        sub.__initializers__.push(initialize);\n    }\n\n    var Ctor = function() {};\n    Ctor.prototype = _super.prototype;\n    sub.prototype = new Ctor();\n    sub.prototype.constructor = sub;\n    extend(sub.prototype, proto);\n\n    // extend the derive method as a static method;\n    sub.extend = _super.extend;\n\n    // DEPCRATED\n    sub.derive = _super.extend;\n\n    return sub;\n}\n\nfunction extend(target, source) {\n    if (!source) {\n        return;\n    }\n    for (var name in source) {\n        if (source.hasOwnProperty(name)) {\n            target[name] = source[name];\n        }\n    }\n}\n\nfunction extendWithPropList(target, source, propList) {\n    for (var i = 0; i < propList.length; i++) {\n        var propName = propList[i];\n        target[propName] = source[propName];\n    }\n}\n\n/**\n * @alias clay.core.mixin.extend\n * @mixin\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n    extend: derive,\n\n    // DEPCRATED\n    derive: derive\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9taXhpbi9leHRlbmQuanM/YjMxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVuZCBhIHN1YiBjbGFzcyBmcm9tIGJhc2UgY2xhc3NcbiAqIEBwYXJhbSB7b2JqZWN0fEZ1bmN0aW9ufSBtYWtlRGVmYXVsdE9wdCBkZWZhdWx0IG9wdGlvbiBvZiB0aGlzIHN1YiBjbGFzcywgbWV0aG9kIG9mIHRoZSBzdWIgY2FuIHVzZSB0aGlzLnh4eCB0byBhY2Nlc3MgdGhpcyBvcHRpb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtpbml0aWFsaXplXSBJbml0aWFsaXplIGFmdGVyIHRoZSBzdWIgY2xhc3MgaXMgaW5zdGFudGlhdGVkXG4gKiBAcGFyYW0ge09iamVjdH0gW3Byb3RvXSBQcm90b3R5cGUgbWV0aG9kcy9wcm9wZXJ0aWVzIG9mIHRoZSBzdWIgY2xhc3NcbiAqIEBtZW1iZXJPZiBjbGF5LmNvcmUubWl4aW4uZXh0ZW5kXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqL1xuZnVuY3Rpb24gZGVyaXZlKG1ha2VEZWZhdWx0T3B0LCBpbml0aWFsaXplLypvcHRpb25hbCovLCBwcm90by8qb3B0aW9uYWwqLykge1xuXG4gICAgaWYgKHR5cGVvZiBpbml0aWFsaXplID09ICdvYmplY3QnKSB7XG4gICAgICAgIHByb3RvID0gaW5pdGlhbGl6ZTtcbiAgICAgICAgaW5pdGlhbGl6ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgdmFyIF9zdXBlciA9IHRoaXM7XG5cbiAgICB2YXIgcHJvcExpc3Q7XG4gICAgaWYgKCEobWFrZURlZmF1bHRPcHQgaW5zdGFuY2VvZiBGdW5jdGlvbikpIHtcbiAgICAgICAgLy8gT3B0aW1pemUgdGhlIHByb3BlcnR5IGl0ZXJhdGUgaWYgaXQgaGF2ZSBiZWVuIGZpeGVkXG4gICAgICAgIHByb3BMaXN0ID0gW107XG4gICAgICAgIGZvciAodmFyIHByb3BOYW1lIGluIG1ha2VEZWZhdWx0T3B0KSB7XG4gICAgICAgICAgICBpZiAobWFrZURlZmF1bHRPcHQuaGFzT3duUHJvcGVydHkocHJvcE5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcHJvcExpc3QucHVzaChwcm9wTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgc3ViID0gZnVuY3Rpb24ob3B0aW9ucykge1xuXG4gICAgICAgIC8vIGNhbGwgc3VwZXIgY29uc3RydWN0b3JcbiAgICAgICAgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cbiAgICAgICAgaWYgKG1ha2VEZWZhdWx0T3B0IGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgICAgICAgIC8vIEludm9rZSBtYWtlRGVmYXVsdE9wdCBlYWNoIHRpbWUgaWYgaXQgaXMgYSBmdW5jdGlvbiwgU28gd2UgY2FuIG1ha2Ugc3VyZSBlYWNoXG4gICAgICAgICAgICAvLyBwcm9wZXJ0eSBpbiB0aGUgb2JqZWN0IHdpbGwgbm90IGJlIHNoYXJlZCBieSBtdXRpcGxlIGluc3RhbmNlc1xuICAgICAgICAgICAgZXh0ZW5kKHRoaXMsIG1ha2VEZWZhdWx0T3B0LmNhbGwodGhpcywgb3B0aW9ucykpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXh0ZW5kV2l0aFByb3BMaXN0KHRoaXMsIG1ha2VEZWZhdWx0T3B0LCBwcm9wTGlzdCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5jb25zdHJ1Y3RvciA9PT0gc3ViKSB7XG4gICAgICAgICAgICAvLyBJbml0aWFsaXplIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGluIHRoZSBvcmRlciBvZiBpbmhlcml0XG4gICAgICAgICAgICB2YXIgaW5pdGlhbGl6ZXJzID0gc3ViLl9faW5pdGlhbGl6ZXJzX187XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGluaXRpYWxpemVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGluaXRpYWxpemVyc1tpXS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICAvLyBzYXZlIHN1cGVyIGNvbnN0cnVjdG9yXG4gICAgc3ViLl9fc3VwZXJfXyA9IF9zdXBlcjtcbiAgICAvLyBJbml0aWFsaXplIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFmdGVyIGFsbCB0aGUgc3VwZXIgY29uc3RydWN0b3IgaXMgY2FsbGVkXG4gICAgaWYgKCFfc3VwZXIuX19pbml0aWFsaXplcnNfXykge1xuICAgICAgICBzdWIuX19pbml0aWFsaXplcnNfXyA9IFtdO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHN1Yi5fX2luaXRpYWxpemVyc19fID0gX3N1cGVyLl9faW5pdGlhbGl6ZXJzX18uc2xpY2UoKTtcbiAgICB9XG4gICAgaWYgKGluaXRpYWxpemUpIHtcbiAgICAgICAgc3ViLl9faW5pdGlhbGl6ZXJzX18ucHVzaChpbml0aWFsaXplKTtcbiAgICB9XG5cbiAgICB2YXIgQ3RvciA9IGZ1bmN0aW9uKCkge307XG4gICAgQ3Rvci5wcm90b3R5cGUgPSBfc3VwZXIucHJvdG90eXBlO1xuICAgIHN1Yi5wcm90b3R5cGUgPSBuZXcgQ3RvcigpO1xuICAgIHN1Yi5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWI7XG4gICAgZXh0ZW5kKHN1Yi5wcm90b3R5cGUsIHByb3RvKTtcblxuICAgIC8vIGV4dGVuZCB0aGUgZGVyaXZlIG1ldGhvZCBhcyBhIHN0YXRpYyBtZXRob2Q7XG4gICAgc3ViLmV4dGVuZCA9IF9zdXBlci5leHRlbmQ7XG5cbiAgICAvLyBERVBDUkFURURcbiAgICBzdWIuZGVyaXZlID0gX3N1cGVyLmV4dGVuZDtcblxuICAgIHJldHVybiBzdWI7XG59XG5cbmZ1bmN0aW9uIGV4dGVuZCh0YXJnZXQsIHNvdXJjZSkge1xuICAgIGlmICghc291cmNlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yICh2YXIgbmFtZSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICAgICAgdGFyZ2V0W25hbWVdID0gc291cmNlW25hbWVdO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBleHRlbmRXaXRoUHJvcExpc3QodGFyZ2V0LCBzb3VyY2UsIHByb3BMaXN0KSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcHJvcE5hbWUgPSBwcm9wTGlzdFtpXTtcbiAgICAgICAgdGFyZ2V0W3Byb3BOYW1lXSA9IHNvdXJjZVtwcm9wTmFtZV07XG4gICAgfVxufVxuXG4vKipcbiAqIEBhbGlhcyBjbGF5LmNvcmUubWl4aW4uZXh0ZW5kXG4gKiBAbWl4aW5cbiAqL1xuZXhwb3J0IGRlZmF1bHQge1xuXG4gICAgZXh0ZW5kOiBkZXJpdmUsXG5cbiAgICAvLyBERVBDUkFURURcbiAgICBkZXJpdmU6IGRlcml2ZVxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvcmUvbWl4aW4vZXh0ZW5kLmpzXG4vLyBtb2R1bGUgaWQgPSA3MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///72\n");

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var EXTENSION_LIST = [\n    'OES_texture_float',\n    'OES_texture_half_float',\n    'OES_texture_float_linear',\n    'OES_texture_half_float_linear',\n    'OES_standard_derivatives',\n    'OES_vertex_array_object',\n    'OES_element_index_uint',\n    'WEBGL_compressed_texture_s3tc',\n    'WEBGL_depth_texture',\n    'EXT_texture_filter_anisotropic',\n    'EXT_shader_texture_lod',\n    'WEBGL_draw_buffers',\n    'EXT_frag_depth',\n    'EXT_sRGB',\n    'ANGLE_instanced_arrays'\n];\n\nvar PARAMETER_NAMES = [\n    'MAX_TEXTURE_SIZE',\n    'MAX_CUBE_MAP_TEXTURE_SIZE'\n];\n\nfunction GLInfo(_gl) {\n    var extensions = {};\n    var parameters = {};\n\n    // Get webgl extension\n    for (var i = 0; i < EXTENSION_LIST.length; i++) {\n        var extName = EXTENSION_LIST[i];\n        createExtension(extName);\n    }\n    // Get parameters\n    for (var i = 0; i < PARAMETER_NAMES.length; i++) {\n        var name = PARAMETER_NAMES[i];\n        parameters[name] = _gl.getParameter(_gl[name]);\n    }\n\n    this.getExtension = function (name) {\n        if (!(name in extensions)) {\n            createExtension(name);\n        }\n        return extensions[name];\n    };\n\n    this.getParameter = function (name) {\n        return parameters[name];\n    };\n\n    function createExtension(name) {\n        if (_gl.getExtension) {\n            var ext = _gl.getExtension(name);\n            if (!ext) {\n                ext = _gl.getExtension('MOZ_' + name);\n            }\n            if (!ext) {\n                ext = _gl.getExtension('WEBKIT_' + name);\n            }\n            extensions[name] = ext;\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GLInfo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9HTEluZm8uanM/N2U5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRVhURU5TSU9OX0xJU1QgPSBbXG4gICAgJ09FU190ZXh0dXJlX2Zsb2F0JyxcbiAgICAnT0VTX3RleHR1cmVfaGFsZl9mbG9hdCcsXG4gICAgJ09FU190ZXh0dXJlX2Zsb2F0X2xpbmVhcicsXG4gICAgJ09FU190ZXh0dXJlX2hhbGZfZmxvYXRfbGluZWFyJyxcbiAgICAnT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzJyxcbiAgICAnT0VTX3ZlcnRleF9hcnJheV9vYmplY3QnLFxuICAgICdPRVNfZWxlbWVudF9pbmRleF91aW50JyxcbiAgICAnV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3MzdGMnLFxuICAgICdXRUJHTF9kZXB0aF90ZXh0dXJlJyxcbiAgICAnRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljJyxcbiAgICAnRVhUX3NoYWRlcl90ZXh0dXJlX2xvZCcsXG4gICAgJ1dFQkdMX2RyYXdfYnVmZmVycycsXG4gICAgJ0VYVF9mcmFnX2RlcHRoJyxcbiAgICAnRVhUX3NSR0InLFxuICAgICdBTkdMRV9pbnN0YW5jZWRfYXJyYXlzJ1xuXTtcblxudmFyIFBBUkFNRVRFUl9OQU1FUyA9IFtcbiAgICAnTUFYX1RFWFRVUkVfU0laRScsXG4gICAgJ01BWF9DVUJFX01BUF9URVhUVVJFX1NJWkUnXG5dO1xuXG5mdW5jdGlvbiBHTEluZm8oX2dsKSB7XG4gICAgdmFyIGV4dGVuc2lvbnMgPSB7fTtcbiAgICB2YXIgcGFyYW1ldGVycyA9IHt9O1xuXG4gICAgLy8gR2V0IHdlYmdsIGV4dGVuc2lvblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgRVhURU5TSU9OX0xJU1QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGV4dE5hbWUgPSBFWFRFTlNJT05fTElTVFtpXTtcbiAgICAgICAgY3JlYXRlRXh0ZW5zaW9uKGV4dE5hbWUpO1xuICAgIH1cbiAgICAvLyBHZXQgcGFyYW1ldGVyc1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgUEFSQU1FVEVSX05BTUVTLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBuYW1lID0gUEFSQU1FVEVSX05BTUVTW2ldO1xuICAgICAgICBwYXJhbWV0ZXJzW25hbWVdID0gX2dsLmdldFBhcmFtZXRlcihfZ2xbbmFtZV0pO1xuICAgIH1cblxuICAgIHRoaXMuZ2V0RXh0ZW5zaW9uID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgaWYgKCEobmFtZSBpbiBleHRlbnNpb25zKSkge1xuICAgICAgICAgICAgY3JlYXRlRXh0ZW5zaW9uKG5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBleHRlbnNpb25zW25hbWVdO1xuICAgIH07XG5cbiAgICB0aGlzLmdldFBhcmFtZXRlciA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHJldHVybiBwYXJhbWV0ZXJzW25hbWVdO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVFeHRlbnNpb24obmFtZSkge1xuICAgICAgICBpZiAoX2dsLmdldEV4dGVuc2lvbikge1xuICAgICAgICAgICAgdmFyIGV4dCA9IF9nbC5nZXRFeHRlbnNpb24obmFtZSk7XG4gICAgICAgICAgICBpZiAoIWV4dCkge1xuICAgICAgICAgICAgICAgIGV4dCA9IF9nbC5nZXRFeHRlbnNpb24oJ01PWl8nICsgbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWV4dCkge1xuICAgICAgICAgICAgICAgIGV4dCA9IF9nbC5nZXRFeHRlbnNpb24oJ1dFQktJVF8nICsgbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBleHRlbnNpb25zW25hbWVdID0gZXh0O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHTEluZm87XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9jb3JlL0dMSW5mby5qc1xuLy8gbW9kdWxlIGlkID0gNzNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///73\n");

/***/ }),
/* 74 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanM/ODdhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gNzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///74\n");

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("function get(options) {\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open('get', options.url);\n    // With response type set browser can get and put binary data\n    // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\n    // Default is text, and it can be set\n    // arraybuffer, blob, document, json, text\n    xhr.responseType = options.responseType || 'text';\n\n    if (options.onprogress) {\n        //https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest\n        xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n                var percent = e.loaded / e.total;\n                options.onprogress(percent, e.loaded, e.total);\n            }\n            else {\n                options.onprogress(null);\n            }\n        };\n    }\n    xhr.onload = function(e) {\n        if (xhr.status >= 400) {\n            options.onerror && options.onerror();\n        }\n        else {\n            options.onload && options.onload(xhr.response);\n        }\n    };\n    if (options.onerror) {\n        xhr.onerror = options.onerror;\n    }\n    xhr.send(null);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    get: get\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvY29yZS9yZXF1ZXN0LmpzPzY0ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0KG9wdGlvbnMpIHtcblxuICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIHhoci5vcGVuKCdnZXQnLCBvcHRpb25zLnVybCk7XG4gICAgLy8gV2l0aCByZXNwb25zZSB0eXBlIHNldCBicm93c2VyIGNhbiBnZXQgYW5kIHB1dCBiaW5hcnkgZGF0YVxuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvRE9NL1hNTEh0dHBSZXF1ZXN0L1NlbmRpbmdfYW5kX1JlY2VpdmluZ19CaW5hcnlfRGF0YVxuICAgIC8vIERlZmF1bHQgaXMgdGV4dCwgYW5kIGl0IGNhbiBiZSBzZXRcbiAgICAvLyBhcnJheWJ1ZmZlciwgYmxvYiwgZG9jdW1lbnQsIGpzb24sIHRleHRcbiAgICB4aHIucmVzcG9uc2VUeXBlID0gb3B0aW9ucy5yZXNwb25zZVR5cGUgfHwgJ3RleHQnO1xuXG4gICAgaWYgKG9wdGlvbnMub25wcm9ncmVzcykge1xuICAgICAgICAvL2h0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvRE9NL1hNTEh0dHBSZXF1ZXN0L1VzaW5nX1hNTEh0dHBSZXF1ZXN0XG4gICAgICAgIHhoci5vbnByb2dyZXNzID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaWYgKGUubGVuZ3RoQ29tcHV0YWJsZSkge1xuICAgICAgICAgICAgICAgIHZhciBwZXJjZW50ID0gZS5sb2FkZWQgLyBlLnRvdGFsO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMub25wcm9ncmVzcyhwZXJjZW50LCBlLmxvYWRlZCwgZS50b3RhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLm9ucHJvZ3Jlc3MobnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmICh4aHIuc3RhdHVzID49IDQwMCkge1xuICAgICAgICAgICAgb3B0aW9ucy5vbmVycm9yICYmIG9wdGlvbnMub25lcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb3B0aW9ucy5vbmxvYWQgJiYgb3B0aW9ucy5vbmxvYWQoeGhyLnJlc3BvbnNlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKG9wdGlvbnMub25lcnJvcikge1xuICAgICAgICB4aHIub25lcnJvciA9IG9wdGlvbnMub25lcnJvcjtcbiAgICB9XG4gICAgeGhyLnNlbmQobnVsbCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBnZXQ6IGdldFxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvcmUvcmVxdWVzdC5qc1xuLy8gbW9kdWxlIGlkID0gNzVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///75\n");

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_LRU__ = __webpack_require__(41);\n/**\n * @namespace clay.core.color\n */\n\n\nvar colorUtil = {};\n\nvar kCSSColorTable = {\n    'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n    'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n    'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n    'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n    'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n    'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n    'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n    'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n    'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n    'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n    'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n    'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n    'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n    'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n    'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n    'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n    'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n    'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n    'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n    'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n    'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n    'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n    'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n    'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n    'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n    'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n    'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n    'gray': [128,128,128,1], 'green': [0,128,0,1],\n    'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n    'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n    'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n    'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n    'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n    'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n    'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n    'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n    'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n    'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n    'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n    'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n    'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n    'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n    'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n    'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n    'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n    'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n    'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n    'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n    'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n    'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n    'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n    'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n    'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n    'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n    'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n    'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n    'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n    'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n    'pink': [255,192,203,1], 'plum': [221,160,221,1],\n    'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n    'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n    'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n    'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n    'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n    'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n    'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n    'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n    'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n    'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n    'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n    'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n    'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n    'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n    'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n};\n\nfunction clampCssByte(i) {  // Clamp to integer 0 .. 255.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {  // int or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssByte(parseFloat(str) / 100 * 255);\n    }\n    return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {  // float or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssFloat(parseFloat(str) / 100);\n    }\n    return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n    if (h < 0) {\n        h += 1;\n    }\n    else if (h > 1) {\n        h -= 1;\n    }\n\n    if (h * 6 < 1) {\n        return m1 + (m2 - m1) * h * 6;\n    }\n    if (h * 2 < 1) {\n        return m2;\n    }\n    if (h * 3 < 2) {\n        return m1 + (m2 - m1) * (2/3 - h) * 6;\n    }\n    return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n    return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n    out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n    return out;\n}\nfunction copyRgba(out, a) {\n    out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n    return out;\n}\n\nvar colorCache = new __WEBPACK_IMPORTED_MODULE_0__core_LRU__[\"a\" /* default */](20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n    // Reuse removed array\n    if (lastRemovedArr) {\n        copyRgba(lastRemovedArr, rgbaArr);\n    }\n    lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n}\n\n/**\n * @name clay.core.color.parse\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n */\ncolorUtil.parse = function (colorStr, rgbaArr) {\n    if (!colorStr) {\n        return;\n    }\n    rgbaArr = rgbaArr || [];\n\n    var cached = colorCache.get(colorStr);\n    if (cached) {\n        return copyRgba(rgbaArr, cached);\n    }\n\n    // colorStr may be not string\n    colorStr = colorStr + '';\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = colorStr.replace(/ /g, '').toLowerCase();\n\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable) {\n        copyRgba(rgbaArr, kCSSColorTable[str]);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n    }\n\n    // #abc and #abc123 syntax.\n    if (str.charAt(0) === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xfff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                (iv & 0xf) | ((iv & 0xf) << 4),\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n        else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xffffff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                (iv & 0xff0000) >> 16,\n                (iv & 0xff00) >> 8,\n                iv & 0xff,\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        return;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;  // To allow case fallthrough.\n        switch (fname) {\n            case 'rgba':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                alpha = parseCssFloat(params.pop()); // jshint ignore:line\n            // Fall through.\n            case 'rgb':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                setRgba(rgbaArr,\n                    parseCssInt(params[0]),\n                    parseCssInt(params[1]),\n                    parseCssInt(params[2]),\n                    alpha\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsla':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                params[3] = parseCssFloat(params[3]);\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsl':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            default:\n                return;\n        }\n    }\n\n    setRgba(rgbaArr, 0, 0, 0, 1);\n    return;\n};\n\ncolorUtil.parseToFloat = function (colorStr, rgbaArr) {\n    rgbaArr = colorUtil.parse(colorStr, rgbaArr);\n    if (!rgbaArr) {\n        return;\n    }\n    rgbaArr[0] /= 255;\n    rgbaArr[1] /= 255;\n    rgbaArr[2] /= 255;\n    return rgbaArr;\n}\n\n/**\n * @name clay.core.color.hsla2rgba\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\nfunction hsla2rgba(hsla, rgba) {\n    var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n    // NOTE(deanm): According to the CSS spec s/l should only be\n    // percentages, but we don't bother and let float or percentage.\n    var s = parseCssFloat(hsla[1]);\n    var l = parseCssFloat(hsla[2]);\n    var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n    var m1 = l * 2 - m2;\n\n    rgba = rgba || [];\n    setRgba(rgba,\n        clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n        1\n    );\n\n    if (hsla.length === 4) {\n        rgba[3] = hsla[3];\n    }\n\n    return rgba;\n}\n\n/**\n * @name clay.core.color.rgba2hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\nfunction rgba2hsla(rgba) {\n    if (!rgba) {\n        return;\n    }\n\n    // RGB from 0 to 255\n    var R = rgba[0] / 255;\n    var G = rgba[1] / 255;\n    var B = rgba[2] / 255;\n\n    var vMin = Math.min(R, G, B); // Min. value of RGB\n    var vMax = Math.max(R, G, B); // Max. value of RGB\n    var delta = vMax - vMin; // Delta RGB value\n\n    var L = (vMax + vMin) / 2;\n    var H;\n    var S;\n    // HSL results from 0 to 1\n    if (delta === 0) {\n        H = 0;\n        S = 0;\n    }\n    else {\n        if (L < 0.5) {\n            S = delta / (vMax + vMin);\n        }\n        else {\n            S = delta / (2 - vMax - vMin);\n        }\n\n        var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n        var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n        var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n        if (R === vMax) {\n            H = deltaB - deltaG;\n        }\n        else if (G === vMax) {\n            H = (1 / 3) + deltaR - deltaB;\n        }\n        else if (B === vMax) {\n            H = (2 / 3) + deltaG - deltaR;\n        }\n\n        if (H < 0) {\n            H += 1;\n        }\n\n        if (H > 1) {\n            H -= 1;\n        }\n    }\n\n    var hsla = [H * 360, S, L];\n\n    if (rgba[3] != null) {\n        hsla.push(rgba[3]);\n    }\n\n    return hsla;\n}\n\n/**\n * @name clay.core.color.lift\n * @param {string} color\n * @param {number} level\n * @return {string}\n */\ncolorUtil.lift = function (color, level) {\n    var colorArr = colorUtil.parse(color);\n    if (colorArr) {\n        for (var i = 0; i < 3; i++) {\n            if (level < 0) {\n                colorArr[i] = colorArr[i] * (1 - level) | 0;\n            }\n            else {\n                colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n            }\n        }\n        return colorUtil.stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n    }\n}\n\n/**\n * @name clay.core.color.toHex\n * @param {string} color\n * @return {string}\n */\ncolorUtil.toHex = function (color) {\n    var colorArr = colorUtil.parse(color);\n    if (colorArr) {\n        return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n    }\n};\n\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @name clay.core.color\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\ncolorUtil.fastLerp = function (normalizedValue, colors, out) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    out = out || [];\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = colors[leftIndex];\n    var rightColor = colors[rightIndex];\n    var dv = value - leftIndex;\n    out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n    out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n    out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n    out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n    return out;\n}\n\ncolorUtil.fastMapToColor = colorUtil.fastLerp;\n\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n */\ncolorUtil.lerp = function (normalizedValue, colors, fullOutput) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = colorUtil.parse(colors[leftIndex]);\n    var rightColor = colorUtil.parse(colors[rightIndex]);\n    var dv = value - leftIndex;\n\n    var color = colorUtil.stringify(\n        [\n            clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n            clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n            clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n            clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n        ],\n        'rgba'\n    );\n\n    return fullOutput\n        ? {\n            color: color,\n            leftIndex: leftIndex,\n            rightIndex: rightIndex,\n            value: value\n        }\n        : color;\n}\n\n/**\n * @deprecated\n */\ncolorUtil.mapToColor = colorUtil.lerp;\n\n/**\n * @name clay.core.color\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n */\ncolorUtil.modifyHSL = function (color, h, s, l) {\n    color = colorUtil.parse(color);\n\n    if (color) {\n        color = rgba2hsla(color);\n        h != null && (color[0] = clampCssAngle(h));\n        s != null && (color[1] = parseCssFloat(s));\n        l != null && (color[2] = parseCssFloat(l));\n\n        return colorUtil.stringify(hsla2rgba(color), 'rgba');\n    }\n}\n\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n */\ncolorUtil.modifyAlpha = function (color, alpha) {\n    color = colorUtil.parse(color);\n\n    if (color && alpha != null) {\n        color[3] = clampCssFloat(alpha);\n        return colorUtil.stringify(color, 'rgba');\n    }\n}\n\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\ncolorUtil.stringify = function (arrColor, type) {\n    if (!arrColor || !arrColor.length) {\n        return;\n    }\n    var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n    if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n        colorStr += ',' + arrColor[3];\n    }\n    return type + '(' + colorStr + ')';\n};\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (colorUtil);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///76\n");

/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n * @alias clay.core.LinkedList\n */\nvar LinkedList = function () {\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.head = null;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.tail = null;\n\n    this._length = 0;\n};\n\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {clay.core.LinkedList.Entry}\n */\nLinkedList.prototype.insert = function (val) {\n    var entry = new LinkedList.Entry(val);\n    this.insertEntry(entry);\n    return entry;\n};\n\n/**\n * Insert a new value at idx\n * @param {number} idx\n * @param  {} val\n * @return {clay.core.LinkedList.Entry}\n */\nLinkedList.prototype.insertAt = function (idx, val) {\n    if (idx < 0) {\n        return;\n    }\n    var next = this.head;\n    var cursor = 0;\n    while (next && cursor != idx) {\n        next = next.next;\n        cursor++;\n    }\n    if (next) {\n        var entry = new LinkedList.Entry(val);\n        var prev = next.prev;\n        if (!prev) { //next is head\n            this.head = entry;\n        }\n        else {\n            prev.next = entry;\n            entry.prev = prev;\n        }\n        entry.next = next;\n        next.prev = entry;\n    }\n    else {\n        this.insert(val);\n    }\n};\n\nLinkedList.prototype.insertBeforeEntry = function (val, next) {\n    var entry = new LinkedList.Entry(val);\n    var prev = next.prev;\n    if (!prev) { //next is head\n        this.head = entry;\n    }\n    else {\n        prev.next = entry;\n        entry.prev = prev;\n    }\n    entry.next = next;\n    next.prev = entry;\n\n    this._length++;\n};\n\n/**\n * Insert an entry at the tail\n * @param  {clay.core.LinkedList.Entry} entry\n */\nLinkedList.prototype.insertEntry = function (entry) {\n    if (!this.head) {\n        this.head = this.tail = entry;\n    }\n    else {\n        this.tail.next = entry;\n        entry.prev = this.tail;\n        this.tail = entry;\n    }\n    this._length++;\n};\n\n/**\n * Remove entry.\n * @param  {clay.core.LinkedList.Entry} entry\n */\nLinkedList.prototype.remove = function (entry) {\n    var prev = entry.prev;\n    var next = entry.next;\n    if (prev) {\n        prev.next = next;\n    }\n    else {\n        // Is head\n        this.head = next;\n    }\n    if (next) {\n        next.prev = prev;\n    }\n    else {\n        // Is tail\n        this.tail = prev;\n    }\n    entry.next = entry.prev = null;\n    this._length--;\n};\n\n/**\n * Remove entry at index.\n * @param  {number} idx\n * @return {}\n */\nLinkedList.prototype.removeAt = function (idx) {\n    if (idx < 0) {\n        return;\n    }\n    var curr = this.head;\n    var cursor = 0;\n    while (curr && cursor != idx) {\n        curr = curr.next;\n        cursor++;\n    }\n    if (curr) {\n        this.remove(curr);\n        return curr.value;\n    }\n};\n/**\n * Get head value\n * @return {}\n */\nLinkedList.prototype.getHead = function () {\n    if (this.head) {\n        return this.head.value;\n    }\n};\n/**\n * Get tail value\n * @return {}\n */\nLinkedList.prototype.getTail = function () {\n    if (this.tail) {\n        return this.tail.value;\n    }\n};\n/**\n * Get value at idx\n * @param {number} idx\n * @return {}\n */\nLinkedList.prototype.getAt = function (idx) {\n    if (idx < 0) {\n        return;\n    }\n    var curr = this.head;\n    var cursor = 0;\n    while (curr && cursor != idx) {\n        curr = curr.next;\n        cursor++;\n    }\n    return curr.value;\n};\n\n/**\n * @param  {} value\n * @return {number}\n */\nLinkedList.prototype.indexOf = function (value) {\n    var curr = this.head;\n    var cursor = 0;\n    while (curr) {\n        if (curr.value === value) {\n            return cursor;\n        }\n        curr = curr.next;\n        cursor++;\n    }\n};\n\n/**\n * @return {number}\n */\nLinkedList.prototype.length = function () {\n    return this._length;\n};\n\n/**\n * If list is empty\n */\nLinkedList.prototype.isEmpty = function () {\n    return this._length === 0;\n};\n\n/**\n * @param  {Function} cb\n * @param  {} context\n */\nLinkedList.prototype.forEach = function (cb, context) {\n    var curr = this.head;\n    var idx = 0;\n    var haveContext = typeof(context) != 'undefined';\n    while (curr) {\n        if (haveContext) {\n            cb.call(context, curr.value, idx);\n        }\n        else {\n            cb(curr.value, idx);\n        }\n        curr = curr.next;\n        idx++;\n    }\n};\n\n/**\n * Clear the list\n */\nLinkedList.prototype.clear = function () {\n    this.tail = this.head = null;\n    this._length = 0;\n};\n\n/**\n * @constructor\n * @param {} val\n */\nLinkedList.Entry = function (val) {\n    /**\n     * @type {}\n     */\n    this.value = val;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.next = null;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.prev = null;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (LinkedList);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///77\n");

/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__GLProgram__ = __webpack_require__(79);\n\n\nvar loopRegex = /for\\s*?\\(int\\s*?_idx_\\s*\\=\\s*([\\w-]+)\\;\\s*_idx_\\s*<\\s*([\\w-]+);\\s*_idx_\\s*\\+\\+\\s*\\)\\s*\\{\\{([\\s\\S]+?)(?=\\}\\})\\}\\}/g;\n\nfunction unrollLoop(shaderStr, defines, lightsNumbers) {\n    // Loop unroll from three.js, https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLProgram.js#L175\n    // In some case like shadowMap in loop use 'i' to index value much slower.\n\n    // Loop use _idx_ and increased with _idx_++ will be unrolled\n    // Use {{ }} to match the pair so the if statement will not be affected\n    // Write like following\n    // for (int _idx_ = 0; _idx_ < 4; _idx_++) {{\n    //     vec3 color = texture2D(textures[_idx_], uv).rgb;\n    // }}\n    function replace(match, start, end, snippet) {\n        var unroll = '';\n        // Try to treat as define\n        if (isNaN(start)) {\n            if (start in defines) {\n                start = defines[start];\n            }\n            else {\n                start = lightNumberDefines[start];\n            }\n        }\n        if (isNaN(end)) {\n            if (end in defines) {\n                end = defines[end];\n            }\n            else {\n                end = lightNumberDefines[end];\n            }\n        }\n        // TODO Error checking\n\n        for (var idx = parseInt(start); idx < parseInt(end); idx++) {\n            // PENDING Add scope?\n            unroll += '{'\n                + snippet\n                    .replace(/float\\s*\\(\\s*_idx_\\s*\\)/g, idx.toFixed(1))\n                    .replace(/_idx_/g, idx)\n            + '}';\n        }\n\n        return unroll;\n    }\n\n    var lightNumberDefines = {};\n    for (var lightType in lightsNumbers) {\n        lightNumberDefines[lightType + '_COUNT'] = lightsNumbers[lightType];\n    }\n    return shaderStr.replace(loopRegex, replace);\n}\n\nfunction getDefineCode(defines, lightsNumbers, enabledTextures) {\n    var defineStr = [];\n    if (lightsNumbers) {\n        for (var lightType in lightsNumbers) {\n            var count = lightsNumbers[lightType];\n            if (count > 0) {\n                defineStr.push('#define ' + lightType.toUpperCase() + '_COUNT ' + count);\n            }\n        }\n    }\n    if (enabledTextures) {\n        for (var i = 0; i < enabledTextures.length; i++) {\n            var symbol = enabledTextures[i];\n            defineStr.push('#define ' + symbol.toUpperCase() + '_ENABLED');\n        }\n    }\n    // Custom Defines\n    for (var symbol in defines) {\n        var value = defines[symbol];\n        if (value === null) {\n            defineStr.push('#define ' + symbol);\n        }\n        else{\n            defineStr.push('#define ' + symbol + ' ' + value.toString());\n        }\n    }\n    return defineStr.join('\\n');\n}\n\nfunction getExtensionCode(exts) {\n    // Extension declaration must before all non-preprocessor codes\n    // TODO vertex ? extension enum ?\n    var extensionStr = [];\n    for (var i = 0; i < exts.length; i++) {\n        extensionStr.push('#extension GL_' + exts[i] + ' : enable');\n    }\n    return extensionStr.join('\\n');\n}\n\nfunction getPrecisionCode(precision) {\n    return ['precision', precision, 'float'].join(' ') + ';\\n'\n        + ['precision', precision, 'int'].join(' ') + ';\\n'\n        // depth texture may have precision problem on iOS device.\n        + ['precision', precision, 'sampler2D'].join(' ') + ';\\n';\n}\n\nfunction ProgramManager(renderer) {\n    this._renderer = renderer;\n    this._cache = {};\n}\n\nProgramManager.prototype.getProgram = function (renderable, material, scene) {\n    var cache = this._cache;\n\n    var isSkinnedMesh = renderable.isSkinnedMesh && renderable.isSkinnedMesh();\n    var isInstancedMesh = renderable.isInstancedMesh && renderable.isInstancedMesh();\n    var key = 's' + material.shader.shaderID + 'm' + material.getProgramKey();\n    if (scene) {\n        key += 'se' + scene.getProgramKey(renderable.lightGroup);\n    }\n    if (isSkinnedMesh) {\n        key += ',sk' + renderable.joints.length;\n    }\n    if (isInstancedMesh) {\n        key += ',is';\n    }\n    var program = cache[key];\n\n    if (program) {\n        return program;\n    }\n\n    var lightsNumbers = scene ? scene.getLightsNumbers(renderable.lightGroup) : {};\n    var renderer = this._renderer;\n    var _gl = renderer.gl;\n    var enabledTextures = material.getEnabledTextures();\n    var extraDefineCode = '';\n    if (isSkinnedMesh) {\n        var skinDefines = {\n            SKINNING: null,\n            JOINT_COUNT: renderable.joints.length\n        };\n        if (renderable.joints.length > renderer.getMaxJointNumber()) {\n            skinDefines.USE_SKIN_MATRICES_TEXTURE = null;\n        }\n        // TODO Add skinning code?\n        extraDefineCode += '\\n' + getDefineCode(skinDefines) + '\\n';\n    }\n    if (isInstancedMesh) {\n        extraDefineCode += '\\n#define INSTANCING\\n';\n    }\n    // TODO Optimize key generation\n    // VERTEX\n    var vertexDefineStr = extraDefineCode + getDefineCode(material.vertexDefines, lightsNumbers, enabledTextures);\n    // FRAGMENT\n    var fragmentDefineStr = extraDefineCode + getDefineCode(material.fragmentDefines, lightsNumbers, enabledTextures);\n\n    var vertexCode = vertexDefineStr + '\\n' + material.shader.vertex;\n\n    var extensions = [\n        'OES_standard_derivatives',\n        'EXT_shader_texture_lod'\n    ].filter(function (ext) {\n        return renderer.getGLExtension(ext) != null;\n    });\n\n    if (extensions.indexOf('EXT_shader_texture_lod') >= 0) {\n        fragmentDefineStr += '\\n#define SUPPORT_TEXTURE_LOD';\n    }\n    if (extensions.indexOf('OES_standard_derivatives') >= 0) {\n        fragmentDefineStr += '\\n#define SUPPORT_STANDARD_DERIVATIVES';\n    }\n\n    var fragmentCode = getExtensionCode(extensions) + '\\n'\n        + getPrecisionCode(material.precision) + '\\n'\n        + fragmentDefineStr + '\\n'\n        + material.shader.fragment;\n\n    var finalVertexCode = unrollLoop(vertexCode, material.vertexDefines, lightsNumbers);\n    var finalFragmentCode = unrollLoop(fragmentCode, material.fragmentDefines, lightsNumbers);\n\n    var program = new __WEBPACK_IMPORTED_MODULE_0__GLProgram__[\"a\" /* default */]();\n    program.uniformSemantics = material.shader.uniformSemantics;\n    program.attributes = material.shader.attributes;\n    var errorMsg = program.buildProgram(_gl, material.shader, finalVertexCode, finalFragmentCode);\n    program.__error = errorMsg;\n\n    cache[key] = program;\n\n    return program;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ProgramManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///78\n");

/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_Base__ = __webpack_require__(0);\n\n\n\nvar SHADER_STATE_TO_ENABLE = 1;\nvar SHADER_STATE_KEEP_ENABLE = 2;\nvar SHADER_STATE_PENDING = 3;\n\n// Enable attribute operation is global to all programs\n// Here saved the list of all enabled attribute index\n// http://www.mjbshaw.com/2013/03/webgl-fixing-invalidoperation.html\nvar enabledAttributeList = {};\n\n// some util functions\nfunction addLineNumbers(string) {\n    var chunks = string.split('\\n');\n    for (var i = 0, il = chunks.length; i < il; i ++) {\n        // Chrome reports shader errors on lines\n        // starting counting from 1\n        chunks[i] = (i + 1) + ': ' + chunks[i];\n    }\n    return chunks.join('\\n');\n}\n\n// Return true or error msg if error happened\nfunction checkShaderErrorMsg(_gl, shader, shaderString) {\n    if (!_gl.getShaderParameter(shader, _gl.COMPILE_STATUS)) {\n        return [_gl.getShaderInfoLog(shader), addLineNumbers(shaderString)].join('\\n');\n    }\n}\n\nvar tmpFloat32Array16 = new __WEBPACK_IMPORTED_MODULE_0__core_vendor__[\"a\" /* default */].Float32Array(16);\n\nvar GLProgram = __WEBPACK_IMPORTED_MODULE_1__core_Base__[\"a\" /* default */].extend({\n\n    uniformSemantics: {},\n    attributes: {}\n\n}, function () {\n    this._locations = {};\n\n    this._textureSlot = 0;\n\n    this._program = null;\n}, {\n\n    bind: function (renderer) {\n        this._textureSlot = 0;\n        renderer.gl.useProgram(this._program);\n    },\n\n    hasUniform: function (symbol) {\n        var location = this._locations[symbol];\n        return location !== null && location !== undefined;\n    },\n\n    useTextureSlot: function (renderer, texture, slot) {\n        if (texture) {\n            renderer.gl.activeTexture(renderer.gl.TEXTURE0 + slot);\n            // Maybe texture is not loaded yet;\n            if (texture.isRenderable()) {\n                texture.bind(renderer);\n            }\n            else {\n                // Bind texture to null\n                texture.unbind(renderer);\n            }\n        }\n    },\n\n    currentTextureSlot: function () {\n        return this._textureSlot;\n    },\n\n    resetTextureSlot: function (slot) {\n        this._textureSlot = slot || 0;\n    },\n\n    takeCurrentTextureSlot: function (renderer, texture) {\n        var textureSlot = this._textureSlot;\n\n        this.useTextureSlot(renderer, texture, textureSlot);\n\n        this._textureSlot++;\n\n        return textureSlot;\n    },\n\n    setUniform: function (_gl, type, symbol, value) {\n        var locationMap = this._locations;\n        var location = locationMap[symbol];\n        // Uniform is not existed in the shader\n        if (location === null || location === undefined) {\n            return false;\n        }\n\n        switch (type) {\n            case 'm4':\n                if (!(value instanceof Float32Array)) {\n                    // Use Float32Array is much faster than array when uniformMatrix4fv.\n                    for (var i = 0; i < value.length; i++) {\n                        tmpFloat32Array16[i] = value[i];\n                    }\n                    value = tmpFloat32Array16;\n                }\n                _gl.uniformMatrix4fv(location, false, value);\n                break;\n            case '2i':\n                _gl.uniform2i(location, value[0], value[1]);\n                break;\n            case '2f':\n                _gl.uniform2f(location, value[0], value[1]);\n                break;\n            case '3i':\n                _gl.uniform3i(location, value[0], value[1], value[2]);\n                break;\n            case '3f':\n                _gl.uniform3f(location, value[0], value[1], value[2]);\n                break;\n            case '4i':\n                _gl.uniform4i(location, value[0], value[1], value[2], value[3]);\n                break;\n            case '4f':\n                _gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n                break;\n            case '1i':\n                _gl.uniform1i(location, value);\n                break;\n            case '1f':\n                _gl.uniform1f(location, value);\n                break;\n            case '1fv':\n                _gl.uniform1fv(location, value);\n                break;\n            case '1iv':\n                _gl.uniform1iv(location, value);\n                break;\n            case '2iv':\n                _gl.uniform2iv(location, value);\n                break;\n            case '2fv':\n                _gl.uniform2fv(location, value);\n                break;\n            case '3iv':\n                _gl.uniform3iv(location, value);\n                break;\n            case '3fv':\n                _gl.uniform3fv(location, value);\n                break;\n            case '4iv':\n                _gl.uniform4iv(location, value);\n                break;\n            case '4fv':\n                _gl.uniform4fv(location, value);\n                break;\n            case 'm2':\n            case 'm2v':\n                _gl.uniformMatrix2fv(location, false, value);\n                break;\n            case 'm3':\n            case 'm3v':\n                _gl.uniformMatrix3fv(location, false, value);\n                break;\n            case 'm4v':\n                // Raw value\n                if (Array.isArray(value) && Array.isArray(value[0])) {\n                    var array = new __WEBPACK_IMPORTED_MODULE_0__core_vendor__[\"a\" /* default */].Float32Array(value.length * 16);\n                    var cursor = 0;\n                    for (var i = 0; i < value.length; i++) {\n                        var item = value[i];\n                        for (var j = 0; j < 16; j++) {\n                            array[cursor++] = item[j];\n                        }\n                    }\n                    _gl.uniformMatrix4fv(location, false, array);\n                }\n                else {   // ArrayBufferView\n                    _gl.uniformMatrix4fv(location, false, value);\n                }\n                break;\n        }\n        return true;\n    },\n\n    setUniformOfSemantic: function (_gl, semantic, val) {\n        var semanticInfo = this.uniformSemantics[semantic];\n        if (semanticInfo) {\n            return this.setUniform(_gl, semanticInfo.type, semanticInfo.symbol, val);\n        }\n        return false;\n    },\n\n    // Used for creating VAO\n    // Enable the attributes passed in and disable the rest\n    // Example Usage:\n    // enableAttributes(renderer, [\"position\", \"texcoords\"])\n    enableAttributes: function (renderer, attribList, vao) {\n        var _gl = renderer.gl;\n        var program = this._program;\n\n        var locationMap = this._locations;\n\n        var enabledAttributeListInContext;\n        if (vao) {\n            enabledAttributeListInContext = vao.__enabledAttributeList;\n        }\n        else {\n            enabledAttributeListInContext = enabledAttributeList[renderer.__uid__];\n        }\n        if (!enabledAttributeListInContext) {\n            // In vertex array object context\n            // PENDING Each vao object needs to enable attributes again?\n            if (vao) {\n                enabledAttributeListInContext\n                    = vao.__enabledAttributeList\n                    = [];\n            }\n            else {\n                enabledAttributeListInContext\n                    = enabledAttributeList[renderer.__uid__]\n                    = [];\n            }\n        }\n        var locationList = [];\n        for (var i = 0; i < attribList.length; i++) {\n            var symbol = attribList[i];\n            if (!this.attributes[symbol]) {\n                locationList[i] = -1;\n                continue;\n            }\n            var location = locationMap[symbol];\n            if (location == null) {\n                location = _gl.getAttribLocation(program, symbol);\n                // Attrib location is a number from 0 to ...\n                if (location === -1) {\n                    locationList[i] = -1;\n                    continue;\n                }\n                locationMap[symbol] = location;\n            }\n            locationList[i] = location;\n\n            if (!enabledAttributeListInContext[location]) {\n                enabledAttributeListInContext[location] = SHADER_STATE_TO_ENABLE;\n            }\n            else {\n                enabledAttributeListInContext[location] = SHADER_STATE_KEEP_ENABLE;\n            }\n        }\n\n        for (var i = 0; i < enabledAttributeListInContext.length; i++) {\n            switch(enabledAttributeListInContext[i]){\n                case SHADER_STATE_TO_ENABLE:\n                    _gl.enableVertexAttribArray(i);\n                    enabledAttributeListInContext[i] = SHADER_STATE_PENDING;\n                    break;\n                case SHADER_STATE_KEEP_ENABLE:\n                    enabledAttributeListInContext[i] = SHADER_STATE_PENDING;\n                    break;\n                // Expired\n                case SHADER_STATE_PENDING:\n                    _gl.disableVertexAttribArray(i);\n                    enabledAttributeListInContext[i] = 0;\n                    break;\n            }\n        }\n\n        return locationList;\n    },\n\n    getAttribLocation: function (_gl, symbol) {\n        var locationMap = this._locations;\n\n        var location = locationMap[symbol];\n        if (location == null) {\n            location = _gl.getAttribLocation(this._program, symbol);\n            locationMap[symbol] = location;\n        }\n\n        return location;\n    },\n\n    buildProgram: function (_gl, shader, vertexShaderCode, fragmentShaderCode) {\n        var vertexShader = _gl.createShader(_gl.VERTEX_SHADER);\n        var program = _gl.createProgram();\n\n        _gl.shaderSource(vertexShader, vertexShaderCode);\n        _gl.compileShader(vertexShader);\n\n        var fragmentShader = _gl.createShader(_gl.FRAGMENT_SHADER);\n        _gl.shaderSource(fragmentShader, fragmentShaderCode);\n        _gl.compileShader(fragmentShader);\n\n        var msg = checkShaderErrorMsg(_gl, vertexShader, vertexShaderCode);\n        if (msg) {\n            return msg;\n        }\n        msg = checkShaderErrorMsg(_gl, fragmentShader, fragmentShaderCode);\n        if (msg) {\n            return msg;\n        }\n\n        _gl.attachShader(program, vertexShader);\n        _gl.attachShader(program, fragmentShader);\n        // Force the position bind to location 0;\n        if (shader.attributeSemantics['POSITION']) {\n            _gl.bindAttribLocation(program, 0, shader.attributeSemantics['POSITION'].symbol);\n        }\n        else {\n            // Else choose an attribute and bind to location 0;\n            var keys = Object.keys(this.attributes);\n            _gl.bindAttribLocation(program, 0, keys[0]);\n        }\n\n        _gl.linkProgram(program);\n\n        _gl.deleteShader(vertexShader);\n        _gl.deleteShader(fragmentShader);\n\n        this._program = program;\n\n        // Save code.\n        this.vertexCode = vertexShaderCode;\n        this.fragmentCode = fragmentShaderCode;\n\n        if (!_gl.getProgramParameter(program, _gl.LINK_STATUS)) {\n            return 'Could not link program\\n' + _gl.getProgramInfoLog(program);\n        }\n\n        // Cache uniform locations\n        for (var i = 0; i < shader.uniforms.length; i++) {\n            var uniformSymbol = shader.uniforms[i];\n            this._locations[uniformSymbol] = _gl.getUniformLocation(program, uniformSymbol);\n        }\n\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GLProgram);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///79\n");

/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat3__ = __webpack_require__(26);\n\n\n\n/**\n * @constructor\n * @alias clay.Quaternion\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Quaternion = function (x, y, z, w) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    w = w === undefined ? 1 : w;\n\n    /**\n     * Storage of Quaternion, read and write of x, y, z, w will change the values in array\n     * All methods also operate on the array instead of x, y, z, w components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Quaternion#\n     */\n    this.array = __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].fromValues(x, y, z, w);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Quaternion#\n     */\n    this._dirty = true;\n};\n\nQuaternion.prototype = {\n\n    constructor: Quaternion,\n\n    /**\n     * Add b to self\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    add: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate the w component from x, y, z component\n     * @return {clay.Quaternion}\n     */\n    calculateW: function () {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].calculateW(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @param  {number}  w\n     * @return {clay.Quaternion}\n     */\n    set: function (x, y, z, w) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this.array[3] = w;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y, z and w components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Quaternion}\n     */\n    setArray: function (arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n        this.array[3] = arr[3];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Quaternion\n     * @return {clay.Quaternion}\n     */\n    clone: function () {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    },\n\n    /**\n     * Calculates the conjugate of self If the quaternion is normalized,\n     * this function is faster than invert and produces the same result.\n     *\n     * @return {clay.Quaternion}\n     */\n    conjugate: function () {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].conjugate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    copy: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Quaternion} b\n     * @return {number}\n     */\n    dot: function (b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].dot(this.array, b.array);\n    },\n\n    /**\n     * Set from the given 3x3 rotation matrix\n     * @param  {clay.Matrix3} m\n     * @return {clay.Quaternion}\n     */\n    fromMat3: function (m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].fromMat3(this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from the given 4x4 rotation matrix\n     * The 4th column and 4th row will be droped\n     * @param  {clay.Matrix4} m\n     * @return {clay.Quaternion}\n     */\n    fromMat4: (function () {\n        var m3 = __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat3__[\"a\" /* default */].create();\n        return function (m) {\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat3__[\"a\" /* default */].fromMat4(m3, m.array);\n            // TODO Not like mat4, mat3 in glmatrix seems to be row-based\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat3__[\"a\" /* default */].transpose(m3, m3);\n            __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].fromMat3(this.array, m3);\n            this._dirty = true;\n            return this;\n        };\n    })(),\n\n    /**\n     * Set to identity quaternion\n     * @return {clay.Quaternion}\n     */\n    identity: function () {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Invert self\n     * @return {clay.Quaternion}\n     */\n    invert: function () {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].length(this.array);\n    },\n\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Quaternion} a\n     * @param  {clay.Quaternion} b\n     * @param  {number}  t\n     * @return {clay.Quaternion}\n     */\n    lerp: function (a, b, t) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    mul: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Quaternion} a\n     * @return {clay.Quaternion}\n     */\n    mulLeft: function (a) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    multiply: function (b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply a and self\n     * Quaternion mutiply is not commutative, so the result of mutiplyLeft is different with multiply.\n     * @param  {clay.Quaternion} a\n     * @return {clay.Quaternion}\n     */\n    multiplyLeft: function (a) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Quaternion}\n     */\n    normalize: function () {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about X axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateX: function (rad) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotateX(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Y axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateY: function (rad) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotateY(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Z axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateZ: function (rad) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotateZ(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Sets self to represent the shortest rotation from Vector3 a to Vector3 b.\n     * a and b needs to be normalized\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @return {clay.Quaternion}\n     */\n    rotationTo: function (a, b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotationTo(this.array, a.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Sets self with values corresponding to the given axes\n     * @param {clay.Vector3} view\n     * @param {clay.Vector3} right\n     * @param {clay.Vector3} up\n     * @return {clay.Quaternion}\n     */\n    setAxes: function (view, right, up) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].setAxes(this.array, view.array, right.array, up.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Sets self with a rotation axis and rotation angle\n     * @param {clay.Vector3} axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    setAxisAngle: function (axis, rad) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].setAxisAngle(this.array, axis.array, rad);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Perform spherical linear interpolation between a and b\n     * @param  {clay.Quaternion} a\n     * @param  {clay.Quaternion} b\n     * @param  {number} t\n     * @return {clay.Quaternion}\n     */\n    slerp: function (a, b, t) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].slerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function () {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].squaredLength(this.array);\n    },\n\n    /**\n     * Set from euler\n     * @param {clay.Vector3} v\n     * @param {String} order\n     */\n    fromEuler: function (v, order) {\n        return Quaternion.fromEuler(this, v, order);\n    },\n\n    toString: function () {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Quaternion.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name w\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'w', {\n        get: function () {\n            return this.array[3];\n        },\n        set: function (value) {\n            this.array[3] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.add = function (out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {number}     x\n * @param  {number}     y\n * @param  {number}     z\n * @param  {number}     w\n * @return {clay.Quaternion}\n */\nQuaternion.set = function (out, x, y, z, w) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].set(out.array, x, y, z, w);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.copy = function (out, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.calculateW = function (out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].calculateW(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.conjugate = function (out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].conjugate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @return {clay.Quaternion}\n */\nQuaternion.identity = function (out) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.invert = function (out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {number}\n */\nQuaternion.dot = function (a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.len = function (a) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].length(a.array);\n};\n\n// Quaternion.length = Quaternion.len;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @param  {number}     t\n * @return {clay.Quaternion}\n */\nQuaternion.lerp = function (out, a, b, t) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @param  {number}     t\n * @return {clay.Quaternion}\n */\nQuaternion.slerp = function (out, a, b, t) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].slerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.mul = function (out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.multiply = Quaternion.mul;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateX = function (out, a, rad) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotateX(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateY = function (out, a, rad) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotateY(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateZ = function (out, a, rad) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotateZ(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    axis\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.setAxisAngle = function (out, axis, rad) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].setAxisAngle(out.array, axis.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.normalize = function (out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.sqrLen = function (a) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].sqrLen(a.array);\n};\n\n/**\n * @function\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.squaredLength = Quaternion.sqrLen;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Matrix3}    m\n * @return {clay.Quaternion}\n */\nQuaternion.fromMat3 = function (out, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].fromMat3(out.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    view\n * @param  {clay.Vector3}    right\n * @param  {clay.Vector3}    up\n * @return {clay.Quaternion}\n */\nQuaternion.setAxes = function (out, view, right, up) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].setAxes(out.array, view.array, right.array, up.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    a\n * @param  {clay.Vector3}    b\n * @return {clay.Quaternion}\n */\nQuaternion.rotationTo = function (out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].rotationTo(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * Set quaternion from euler\n * @param {clay.Quaternion} out\n * @param {clay.Vector3} v\n * @param {String} order\n */\nQuaternion.fromEuler = function (out, v, order) {\n\n    out._dirty = true;\n\n    v = v.array;\n    var target = out.array;\n    var c1 = Math.cos(v[0] / 2);\n    var c2 = Math.cos(v[1] / 2);\n    var c3 = Math.cos(v[2] / 2);\n    var s1 = Math.sin(v[0] / 2);\n    var s2 = Math.sin(v[1] / 2);\n    var s3 = Math.sin(v[2] / 2);\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    // http://www.mathworks.com/matlabcentral/fileexchange/\n    //  20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //  content/SpinCalc.m\n\n    switch (order) {\n        case 'XYZ':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'YXZ':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n        case 'ZXY':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'ZYX':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n        case 'YZX':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'XZY':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Quaternion);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///80\n");

/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"vec3 calcAmbientSHLight(int idx, vec3 N) {\\n int offset = 9 * idx;\\n return ambientSHLightCoefficients[0]\\n + ambientSHLightCoefficients[1] * N.x\\n + ambientSHLightCoefficients[2] * N.y\\n + ambientSHLightCoefficients[3] * N.z\\n + ambientSHLightCoefficients[4] * N.x * N.z\\n + ambientSHLightCoefficients[5] * N.z * N.y\\n + ambientSHLightCoefficients[6] * N.y * N.x\\n + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\\n + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\\n}\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9oZWFkZXIvY2FsY0FtYmllbnRTSExpZ2h0Lmdsc2wuanM/M2FhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcInZlYzMgY2FsY0FtYmllbnRTSExpZ2h0KGludCBpZHgsIHZlYzMgTikge1xcbiBpbnQgb2Zmc2V0ID0gOSAqIGlkeDtcXG4gcmV0dXJuIGFtYmllbnRTSExpZ2h0Q29lZmZpY2llbnRzWzBdXFxuICsgYW1iaWVudFNITGlnaHRDb2VmZmljaWVudHNbMV0gKiBOLnhcXG4gKyBhbWJpZW50U0hMaWdodENvZWZmaWNpZW50c1syXSAqIE4ueVxcbiArIGFtYmllbnRTSExpZ2h0Q29lZmZpY2llbnRzWzNdICogTi56XFxuICsgYW1iaWVudFNITGlnaHRDb2VmZmljaWVudHNbNF0gKiBOLnggKiBOLnpcXG4gKyBhbWJpZW50U0hMaWdodENvZWZmaWNpZW50c1s1XSAqIE4ueiAqIE4ueVxcbiArIGFtYmllbnRTSExpZ2h0Q29lZmZpY2llbnRzWzZdICogTi55ICogTi54XFxuICsgYW1iaWVudFNITGlnaHRDb2VmZmljaWVudHNbN10gKiAoMy4wICogTi56ICogTi56IC0gMS4wKVxcbiArIGFtYmllbnRTSExpZ2h0Q29lZmZpY2llbnRzWzhdICogKE4ueCAqIE4ueCAtIE4ueSAqIE4ueSk7XFxufVwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9oZWFkZXIvY2FsY0FtYmllbnRTSExpZ2h0Lmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDgxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///81\n");

/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__glmatrix_vec4__ = __webpack_require__(21);\n\n\n\n\n\n/**\n * @constructor\n * @alias clay.Plane\n * @param {clay.Vector3} [normal]\n * @param {number} [distance]\n */\nvar Plane = function(normal, distance) {\n    /**\n     * Normal of the plane\n     * @type {clay.Vector3}\n     */\n    this.normal = normal || new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */](0, 1, 0);\n\n    /**\n     * Constant of the plane equation, used as distance to the origin\n     * @type {number}\n     */\n    this.distance = distance || 0;\n};\n\nPlane.prototype = {\n\n    constructor: Plane,\n\n    /**\n     * Distance from a given point to the plane\n     * @param  {clay.Vector3} point\n     * @return {number}\n     */\n    distanceToPoint: function(point) {\n        return __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].dot(point.array, this.normal.array) - this.distance;\n    },\n\n    /**\n     * Calculate the projection point on the plane\n     * @param  {clay.Vector3} point\n     * @param  {clay.Vector3} out\n     * @return {clay.Vector3}\n     */\n    projectPoint: function(point, out) {\n        if (!out) {\n            out = new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n        }\n        var d = this.distanceToPoint(point);\n        __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, point.array, this.normal.array, -d);\n        out._dirty = true;\n        return out;\n    },\n\n    /**\n     * Normalize the plane's normal and calculate the distance\n     */\n    normalize: function() {\n        var invLen = 1 / __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].len(this.normal.array);\n        __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].scale(this.normal.array, invLen);\n        this.distance *= invLen;\n    },\n\n    /**\n     * If the plane intersect a frustum\n     * @param  {clay.Frustum} Frustum\n     * @return {boolean}\n     */\n    intersectFrustum: function(frustum) {\n        // Check if all coords of frustum is on plane all under plane\n        var coords = frustum.vertices;\n        var normal = this.normal.array;\n        var onPlane = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].dot(coords[0].array, normal) > this.distance;\n        for (var i = 1; i < 8; i++) {\n            if ((__WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].dot(coords[i].array, normal) > this.distance) != onPlane) {\n                return true;\n            }\n        }\n    },\n\n    /**\n     * Calculate the intersection point between plane and a given line\n     * @function\n     * @param {clay.Vector3} start start point of line\n     * @param {clay.Vector3} end end point of line\n     * @param {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    intersectLine: (function() {\n        var rd = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].create();\n        return function(start, end, out) {\n            var d0 = this.distanceToPoint(start);\n            var d1 = this.distanceToPoint(end);\n            if ((d0 > 0 && d1 > 0) || (d0 < 0 && d1 < 0)) {\n                return null;\n            }\n            // Ray intersection\n            var pn = this.normal.array;\n            var d = this.distance;\n            var ro = start.array;\n            // direction\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].sub(rd, end.array, start.array);\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].normalize(rd, rd);\n\n            var divider = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].dot(pn, rd);\n            // ray is parallel to the plane\n            if (divider === 0) {\n                return null;\n            }\n            if (!out) {\n                out = new __WEBPACK_IMPORTED_MODULE_0__Vector3__[\"a\" /* default */]();\n            }\n            var t = (__WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].dot(pn, ro) - d) / divider;\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(out.array, ro, rd, -t);\n            out._dirty = true;\n            return out;\n        };\n    })(),\n\n    /**\n     * Apply an affine transform matrix to plane\n     * @function\n     * @return {clay.Matrix4}\n     */\n    applyTransform: (function() {\n        var inverseTranspose = __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat4__[\"a\" /* default */].create();\n        var normalv4 = __WEBPACK_IMPORTED_MODULE_3__glmatrix_vec4__[\"a\" /* default */].create();\n        var pointv4 = __WEBPACK_IMPORTED_MODULE_3__glmatrix_vec4__[\"a\" /* default */].create();\n        pointv4[3] = 1;\n        return function(m4) {\n            m4 = m4.array;\n            // Transform point on plane\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].scale(pointv4, this.normal.array, this.distance);\n            __WEBPACK_IMPORTED_MODULE_3__glmatrix_vec4__[\"a\" /* default */].transformMat4(pointv4, pointv4, m4);\n            this.distance = __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].dot(pointv4, this.normal.array);\n            // Transform plane normal\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat4__[\"a\" /* default */].invert(inverseTranspose, m4);\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_mat4__[\"a\" /* default */].transpose(inverseTranspose, inverseTranspose);\n            normalv4[3] = 0;\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].copy(normalv4, this.normal.array);\n            __WEBPACK_IMPORTED_MODULE_3__glmatrix_vec4__[\"a\" /* default */].transformMat4(normalv4, normalv4, inverseTranspose);\n            __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].copy(this.normal.array, normalv4);\n        };\n    })(),\n\n    /**\n     * Copy from another plane\n     * @param  {clay.Vector3} plane\n     */\n    copy: function(plane) {\n        __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].copy(this.normal.array, plane.normal.array);\n        this.normal._dirty = true;\n        this.distance = plane.distance;\n    },\n\n    /**\n     * Clone a new plane\n     * @return {clay.Plane}\n     */\n    clone: function() {\n        var plane = new Plane();\n        plane.copy(this);\n        return plane;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Plane);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///82\n");

/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shader_source_standard_glsl_js__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_util__ = __webpack_require__(9);\n\n\n\n\n\n\n// Import standard shader\n__WEBPACK_IMPORTED_MODULE_1__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_2__shader_source_standard_glsl_js__[\"a\" /* default */]);\n\nvar TEXTURE_PROPERTIES = ['diffuseMap', 'normalMap', 'roughnessMap', 'metalnessMap', 'emissiveMap', 'environmentMap', 'brdfLookup', 'ssaoMap', 'aoMap'];\nvar SIMPLE_PROPERTIES = ['color', 'emission', 'emissionIntensity', 'alpha', 'roughness', 'metalness', 'uvRepeat', 'uvOffset', 'aoIntensity', 'alphaCutoff', 'normalScale'];\nvar PROPERTIES_CHANGE_SHADER = ['linear', 'encodeRGBM', 'decodeRGBM', 'doubleSided', 'alphaTest', 'roughnessChannel', 'metalnessChannel', 'environmentMapPrefiltered'];\n\nvar NUM_DEFINE_MAP = {\n    'roughnessChannel': 'ROUGHNESS_CHANNEL',\n    'metalnessChannel': 'METALNESS_CHANNEL'\n};\nvar BOOL_DEFINE_MAP = {\n    'linear': 'SRGB_DECODE',\n    'encodeRGBM': 'RGBM_ENCODE',\n    'decodeRGBM': 'RGBM_DECODE',\n    'doubleSided': 'DOUBLE_SIDED',\n    'alphaTest': 'ALPHA_TEST',\n    'environmentMapPrefiltered': 'ENVIRONMENTMAP_PREFILTER'\n};\n\n\nvar standardShader;\n/**\n * Standard material without custom shader.\n * @constructor clay.StandardMaterial\n * @extends clay.Base\n * @example\n * var mat = new clay.StandardMaterial({\n *     color: [1, 1, 1],\n *     diffuseMap: diffuseTexture\n * });\n * mat.roughness = 1;\n */\nvar StandardMaterial = __WEBPACK_IMPORTED_MODULE_0__Material__[\"a\" /* default */].extend(function () {\n    if (!standardShader) {\n        standardShader = new __WEBPACK_IMPORTED_MODULE_1__Shader__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_1__Shader__[\"a\" /* default */].source('clay.standardMR.vertex'), __WEBPACK_IMPORTED_MODULE_1__Shader__[\"a\" /* default */].source('clay.standardMR.fragment'));\n    }\n    return /** @lends clay.StandardMaterial# */ {\n        shader: standardShader\n    };\n}, function (option) {\n    // PENDING\n    __WEBPACK_IMPORTED_MODULE_3__core_util__[\"a\" /* default */].extend(this, option);\n    // Extend after shader is created.\n    __WEBPACK_IMPORTED_MODULE_3__core_util__[\"a\" /* default */].defaults(this, /** @lends clay.StandardMaterial# */  {\n        /**\n         * @type {Array.<number>}\n         * @default [1, 1, 1]\n         */\n        color: [1, 1, 1],\n\n        /**\n         * @type {Array.<number>}\n         * @default [0, 0, 0]\n         */\n        emission: [0, 0, 0],\n\n        /**\n         * @type {number}\n         * @default 0\n         */\n        emissionIntensity: 0,\n\n        /**\n         * @type {number}\n         * @default 0.5\n         */\n        roughness: 0.5,\n\n        /**\n         * @type {number}\n         * @default 0\n         */\n        metalness: 0,\n\n        /**\n         * @type {number}\n         * @default 1\n         */\n        alpha: 1,\n\n        /**\n         * @type {boolean}\n         */\n        alphaTest: false,\n\n        /**\n         * Cutoff threshold for alpha test\n         * @type {number}\n         */\n        alphaCutoff: 0.9,\n\n        /**\n         * Scalar multiplier applied to each normal vector of normal texture.\n         *\n         * @type {number}\n         *\n         * XXX This value is considered only if a normal texture is specified.\n         */\n        normalScale: 1.0,\n\n        /**\n         * @type {boolean}\n         */\n        // TODO Must disable culling.\n        doubleSided: false,\n\n        /**\n         * @type {clay.Texture2D}\n         */\n        diffuseMap: null,\n\n        /**\n         * @type {clay.Texture2D}\n         */\n        normalMap: null,\n\n        /**\n         * @type {clay.Texture2D}\n         */\n        roughnessMap: null,\n\n        /**\n         * @type {clay.Texture2D}\n         */\n        metalnessMap: null,\n        /**\n         * @type {clay.Texture2D}\n         */\n        emissiveMap: null,\n\n        /**\n         * @type {clay.TextureCube}\n         */\n        environmentMap: null,\n\n        /**\n         * @type {clay.BoundingBox}\n         */\n        environmentBox: null,\n        /**\n         * BRDF Lookup is generated by clay.util.cubemap.integrateBrdf\n         * @type {clay.Texture2D}\n         */\n        brdfLookup: null,\n\n        /**\n         * @type {clay.Texture2D}\n         */\n        ssaoMap: null,\n\n        /**\n         * @type {clay.Texture2D}\n         */\n        aoMap: null,\n\n        /**\n         * @type {Array.<number>}\n         * @default [1, 1]\n         */\n        uvRepeat: [1, 1],\n\n        /**\n         * @type {Array.<number>}\n         * @default [0, 0]\n         */\n        uvOffset: [0, 0],\n\n        /**\n         * @type {number}\n         * @default 1\n         */\n        aoIntensity: 1,\n\n        /**\n         * @type {boolean}\n         */\n        environmentMapPrefiltered: false,\n\n        /**\n         * @type {boolean}\n         */\n        linear: false,\n\n        /**\n         * @type {boolean}\n         */\n        encodeRGBM: false,\n\n        /**\n         * @type {boolean}\n         */\n        decodeRGBM: false,\n\n        /**\n         * @type {Number}\n         */\n        roughnessChannel: 0,\n        /**\n         * @type {Number}\n         */\n        metalnessChannel: 1\n    });\n}, {\n    clone: function () {\n        var material = new StandardMaterial({\n            name: this.name\n        });\n        TEXTURE_PROPERTIES.forEach(function (propName) {\n            if (this[propName]) {\n                material[propName] = this[propName];\n            }\n        }, this);\n        SIMPLE_PROPERTIES.concat(PROPERTIES_CHANGE_SHADER).forEach(function (propName) {\n            material[propName] = this[propName];\n        }, this);\n        return material;\n    }\n});\n\nSIMPLE_PROPERTIES.forEach(function (propName) {\n    Object.defineProperty(StandardMaterial.prototype, propName, {\n        get: function () {\n            return this.get(propName);\n        },\n        set: function (value) {\n            this.setUniform(propName, value);\n        }\n    });\n});\n\nTEXTURE_PROPERTIES.forEach(function (propName) {\n    Object.defineProperty(StandardMaterial.prototype, propName, {\n        get: function () {\n            return this.get(propName);\n        },\n        set: function (value) {\n            this.setUniform(propName, value);\n        }\n    });\n});\n\nPROPERTIES_CHANGE_SHADER.forEach(function (propName) {\n    var privateKey = '_' + propName;\n    Object.defineProperty(StandardMaterial.prototype, propName, {\n        get: function () {\n            return this[privateKey];\n        },\n        set: function (value) {\n            this[privateKey] = value;\n            if (propName in NUM_DEFINE_MAP) {\n                var defineName = NUM_DEFINE_MAP[propName];\n                this.define('fragment', defineName, value);\n            }\n            else {\n                var defineName = BOOL_DEFINE_MAP[propName];\n                value ? this.define('fragment', defineName) : this.undefine('fragment', defineName);\n            }\n        }\n    });\n});\n\nObject.defineProperty(StandardMaterial.prototype, 'environmentBox', {\n    get: function () {\n        var envBox = this._environmentBox;\n        if (envBox) {\n            envBox.min.setArray(this.get('environmentBoxMin'));\n            envBox.max.setArray(this.get('environmentBoxMax'));\n        }\n        return envBox;\n    },\n\n    set: function (value) {\n        this._environmentBox = value;\n\n        var uniforms = this.uniforms = this.uniforms || {};\n        uniforms['environmentBoxMin'] = uniforms['environmentBoxMin'] || {\n            value: null\n        };\n        uniforms['environmentBoxMax'] = uniforms['environmentBoxMax'] || {\n            value: null\n        };\n\n        // TODO Can't detect operation like box.min = new Vector()\n        if (value) {\n            this.setUniform('environmentBoxMin', value.min.array);\n            this.setUniform('environmentBoxMax', value.max.array);\n        }\n\n        if (value) {\n            this.define('fragment', 'PARALLAX_CORRECTED');\n        }\n        else {\n            this.undefine('fragment', 'PARALLAX_CORRECTED');\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (StandardMaterial);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83\n");

/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Joint__ = __webpack_require__(52);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__glmatrix_quat__ = __webpack_require__(18);\n\n\n\n\n\n\n\n\n\n\n\n\nvar tmpBoundingBox = new __WEBPACK_IMPORTED_MODULE_4__math_BoundingBox__[\"a\" /* default */]();\nvar tmpMat4 = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n\n/**\n * @constructor clay.Skeleton\n */\nvar Skeleton = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Skeleton# */{\n\n        /**\n         * Relative root node that not affect transform of joint.\n         * @type {clay.Node}\n         */\n        relativeRootNode: null,\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * joints\n         * @type {Array.<clay.Joint>}\n         */\n        joints: [],\n\n        /**\n         * bounding box with bound geometry.\n         * @type {clay.BoundingBox}\n         */\n        boundingBox: null,\n\n        _clips: [],\n\n        // Matrix to joint space (relative to root joint)\n        _invBindPoseMatricesArray: null,\n\n        // Use subarray instead of copy back each time computing matrix\n        // http://jsperf.com/subarray-vs-copy-for-array-transform/5\n        _jointMatricesSubArrays: [],\n\n        // jointMatrix * currentPoseMatrix\n        // worldTransform is relative to the root bone\n        // still in model space not world space\n        _skinMatricesArray: null,\n\n        _skinMatricesSubArrays: [],\n\n        _subSkinMatricesArray: {}\n    };\n},\n/** @lends clay.Skeleton.prototype */\n{\n\n    /**\n     * Add a skinning clip and create a map between clip and skeleton\n     * @param {clay.animation.SkinningClip} clip\n     * @param {Object} [mapRule] Map between joint name in skeleton and joint name in clip\n     */\n    addClip: function (clip, mapRule) {\n        // Clip have been exists in\n        for (var i = 0; i < this._clips.length; i++) {\n            if (this._clips[i].clip === clip) {\n                return;\n            }\n        }\n        // Map the joint index in skeleton to joint pose index in clip\n        var maps = [];\n        for (var i = 0; i < this.joints.length; i++) {\n            maps[i] = -1;\n        }\n        // Create avatar\n        for (var i = 0; i < clip.tracks.length; i++) {\n            for (var j = 0; j < this.joints.length; j++) {\n                var joint = this.joints[j];\n                var track = clip.tracks[i];\n                var jointName = joint.name;\n                if (mapRule) {\n                    jointName = mapRule[jointName];\n                }\n                if (track.name === jointName) {\n                    maps[j] = i;\n                    break;\n                }\n            }\n        }\n\n        this._clips.push({\n            maps: maps,\n            clip: clip\n        });\n\n        return this._clips.length - 1;\n    },\n\n    /**\n     * @param {clay.animation.SkinningClip} clip\n     */\n    removeClip: function (clip) {\n        var idx = -1;\n        for (var i = 0; i < this._clips.length; i++) {\n            if (this._clips[i].clip === clip) {\n                idx = i;\n                break;\n            }\n        }\n        if (idx > 0) {\n            this._clips.splice(idx, 1);\n        }\n    },\n    /**\n     * Remove all clips\n     */\n    removeClipsAll: function () {\n        this._clips = [];\n    },\n\n    /**\n     * Get clip by index\n     * @param  {number} index\n     */\n    getClip: function (index) {\n        if (this._clips[index]) {\n            return this._clips[index].clip;\n        }\n    },\n\n    /**\n     * @return {number}\n     */\n    getClipNumber: function () {\n        return this._clips.length;\n    },\n\n    /**\n     * Calculate joint matrices from node transform\n     * @function\n     */\n    updateJointMatrices: (function () {\n\n        var m4 = __WEBPACK_IMPORTED_MODULE_6__glmatrix_mat4__[\"a\" /* default */].create();\n\n        return function () {\n            this._invBindPoseMatricesArray = new Float32Array(this.joints.length * 16);\n            this._skinMatricesArray = new Float32Array(this.joints.length * 16);\n\n            for (var i = 0; i < this.joints.length; i++) {\n                var joint = this.joints[i];\n                __WEBPACK_IMPORTED_MODULE_6__glmatrix_mat4__[\"a\" /* default */].copy(m4, joint.node.worldTransform.array);\n                __WEBPACK_IMPORTED_MODULE_6__glmatrix_mat4__[\"a\" /* default */].invert(m4, m4);\n\n                var offset = i * 16;\n                for (var j = 0; j < 16; j++) {\n                    this._invBindPoseMatricesArray[offset + j] = m4[j];\n                }\n            }\n\n            this.updateMatricesSubArrays();\n        };\n    })(),\n\n    /**\n     * Update boundingBox of each joint bound to geometry.\n     * ASSUME skeleton and geometry joints are matched.\n     * @param {clay.Geometry} geometry\n     */\n    updateJointsBoundingBoxes: function (geometry) {\n        var attributes = geometry.attributes;\n        var positionAttr = attributes.position;\n        var jointAttr = attributes.joint;\n        var weightAttr = attributes.weight;\n\n        var jointsBoundingBoxes = [];\n        for (var i = 0; i < this.joints.length; i++) {\n            jointsBoundingBoxes[i] = new __WEBPACK_IMPORTED_MODULE_4__math_BoundingBox__[\"a\" /* default */]();\n            jointsBoundingBoxes[i].__updated = false;\n        }\n\n        var vtxJoint = [];\n        var vtxPos = [];\n        var vtxWeight = [];\n        var maxJointIdx = 0;\n        for (var i = 0; i < geometry.vertexCount; i++) {\n            jointAttr.get(i, vtxJoint);\n            positionAttr.get(i, vtxPos);\n            weightAttr.get(i, vtxWeight);\n\n            for (var k = 0; k < 4; k++) {\n                if (vtxWeight[k] > 0.01) {\n                    var jointIdx = vtxJoint[k];\n                    maxJointIdx = Math.max(maxJointIdx, jointIdx);\n\n                    var min = jointsBoundingBoxes[jointIdx].min.array;\n                    var max = jointsBoundingBoxes[jointIdx].max.array;\n\n                    jointsBoundingBoxes[jointIdx].__updated = true;\n\n                    min = __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__[\"a\" /* default */].min(min, min, vtxPos);\n                    max = __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__[\"a\" /* default */].max(max, max, vtxPos);\n                }\n            }\n        }\n\n        this._jointsBoundingBoxes = jointsBoundingBoxes;\n\n        this.boundingBox = new __WEBPACK_IMPORTED_MODULE_4__math_BoundingBox__[\"a\" /* default */]();\n\n        if (maxJointIdx < this.joints.length - 1) {\n            console.warn('Geometry joints and skeleton joints don\\'t match');\n        }\n    },\n\n    setJointMatricesArray: function (arr) {\n        this._invBindPoseMatricesArray = arr;\n        this._skinMatricesArray = new Float32Array(arr.length);\n        this.updateMatricesSubArrays();\n    },\n\n    updateMatricesSubArrays: function () {\n        for (var i = 0; i < this.joints.length; i++) {\n            this._jointMatricesSubArrays[i] = this._invBindPoseMatricesArray.subarray(i * 16, (i+1) * 16);\n            this._skinMatricesSubArrays[i] = this._skinMatricesArray.subarray(i * 16, (i+1) * 16);\n        }\n    },\n\n    /**\n     * Update skinning matrices\n     */\n    update: function () {\n\n        this._setPose();\n\n        var jointsBoundingBoxes = this._jointsBoundingBoxes;\n\n        for (var i = 0; i < this.joints.length; i++) {\n            var joint = this.joints[i];\n            __WEBPACK_IMPORTED_MODULE_6__glmatrix_mat4__[\"a\" /* default */].multiply(\n                this._skinMatricesSubArrays[i],\n                joint.node.worldTransform.array,\n                this._jointMatricesSubArrays[i]\n            );\n        }\n        if (this.boundingBox) {\n            this.boundingBox.min.set(Infinity, Infinity, Infinity);\n            this.boundingBox.max.set(-Infinity, -Infinity, -Infinity);\n            for (var i = 0; i < this.joints.length; i++) {\n                var joint = this.joints[i];\n                var bbox = jointsBoundingBoxes[i];\n                if (bbox.__updated) {\n                    tmpBoundingBox.copy(bbox);\n                    tmpMat4.array = this._skinMatricesSubArrays[i];\n                    tmpBoundingBox.applyTransform(tmpMat4);\n\n                    this.boundingBox.union(tmpBoundingBox);\n                }\n            }\n        }\n    },\n\n    getSubSkinMatrices: function (meshId, joints) {\n        var subArray = this._subSkinMatricesArray[meshId];\n        if (!subArray) {\n            subArray\n                = this._subSkinMatricesArray[meshId]\n                = new Float32Array(joints.length * 16);\n        }\n        var cursor = 0;\n        for (var i = 0; i < joints.length; i++) {\n            var idx = joints[i];\n            for (var j = 0; j < 16; j++) {\n                subArray[cursor++] = this._skinMatricesArray[idx * 16 + j];\n            }\n        }\n        return subArray;\n    },\n\n    getSubSkinMatricesTexture: function (meshId, joints) {\n        var skinMatrices = this.getSubSkinMatrices(meshId, joints);\n        var size;\n        var numJoints = this.joints.length;\n        if (numJoints > 256) {\n            size = 64;\n        }\n        else if (numJoints > 64) {\n            size = 32;\n        }\n        else if (numJoints > 16) {\n            size = 16;\n        }\n        else {\n            size = 8;\n        }\n\n        var texture = this._skinMatricesTexture = this._skinMatricesTexture || new __WEBPACK_IMPORTED_MODULE_2__Texture2D__[\"a\" /* default */]({\n            type: __WEBPACK_IMPORTED_MODULE_3__Texture__[\"a\" /* default */].FLOAT,\n            minFilter: __WEBPACK_IMPORTED_MODULE_3__Texture__[\"a\" /* default */].NEAREST,\n            magFilter: __WEBPACK_IMPORTED_MODULE_3__Texture__[\"a\" /* default */].NEAREST,\n            useMipmap: false,\n            flipY: false\n        });\n        texture.width = size;\n        texture.height = size;\n\n        if (!texture.pixels || texture.pixels.length !== size * size * 4) {\n            texture.pixels = new Float32Array(size * size * 4);\n        }\n        texture.pixels.set(skinMatrices);\n        texture.dirty();\n\n        return texture;\n    },\n\n    getSkinMatricesTexture: function () {\n\n\n        return this._skinMatricesTexture;\n    },\n\n    _setPose: function () {\n        if (this._clips[0]) {\n            var clip = this._clips[0].clip;\n            var maps = this._clips[0].maps;\n\n            for (var i = 0; i < this.joints.length; i++) {\n                var joint = this.joints[i];\n                if (maps[i] === -1) {\n                    continue;\n                }\n                var pose = clip.tracks[maps[i]];\n\n                // Not update if there is no data.\n                // PENDING If sync pose.position, pose.rotation, pose.scale\n                if (pose.channels.position) {\n                    __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__[\"a\" /* default */].copy(joint.node.position.array, pose.position);\n                }\n                if (pose.channels.rotation) {\n                    __WEBPACK_IMPORTED_MODULE_8__glmatrix_quat__[\"a\" /* default */].copy(joint.node.rotation.array, pose.rotation);\n                }\n                if (pose.channels.scale) {\n                    __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__[\"a\" /* default */].copy(joint.node.scale.array, pose.scale);\n                }\n\n                joint.node.position._dirty = true;\n                joint.node.rotation._dirty = true;\n                joint.node.scale._dirty = true;\n            }\n        }\n    },\n\n    clone: function (clonedNodesMap) {\n        var skeleton = new Skeleton();\n        skeleton.name = this.name;\n\n        for (var i = 0; i < this.joints.length; i++) {\n            var newJoint = new __WEBPACK_IMPORTED_MODULE_1__Joint__[\"a\" /* default */]();\n            var joint = this.joints[i];\n            newJoint.name = joint.name;\n            newJoint.index = joint.index;\n\n            if (clonedNodesMap) {\n                var newNode = clonedNodesMap[joint.node.__uid__];\n\n                if (!newNode) {\n                    // PENDING\n                    console.warn('Can\\'t find node');\n                }\n\n                newJoint.node = newNode || joint.node;\n            }\n            else {\n                newJoint.node = joint.node;\n            }\n\n            skeleton.joints.push(newJoint);\n        }\n\n        if (this._invBindPoseMatricesArray) {\n            var len = this._invBindPoseMatricesArray.length;\n            skeleton._invBindPoseMatricesArray = new Float32Array(len);\n            for (var i = 0; i < len; i++) {\n                skeleton._invBindPoseMatricesArray[i] = this._invBindPoseMatricesArray[i];\n            }\n\n            skeleton._skinMatricesArray = new Float32Array(len);\n\n            skeleton.updateMatricesSubArrays();\n        }\n\n        skeleton._jointsBoundingBoxe = (this._jointsBoundingBoxes || []).map(function (bbox) {\n            return bbox.clone();\n        });\n\n        skeleton.update();\n\n        return skeleton;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Skeleton);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84\n");

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Clip__ = __webpack_require__(53);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_quat__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__ = __webpack_require__(3);\n\n\n\n\n\n\n/**\n *\n * Animation clip that manage a collection of {@link clay.animation.SamplerTrack}\n * @constructor\n * @alias clay.animation.TrackClip\n *\n * @extends clay.animation.Clip\n * @param {Object} [opts]\n * @param {string} [opts.name]\n * @param {Object} [opts.target]\n * @param {number} [opts.life]\n * @param {number} [opts.delay]\n * @param {number} [opts.gap]\n * @param {number} [opts.playbackRatio]\n * @param {boolean|number} [opts.loop] If loop is a number, it indicate the loop count of animation\n * @param {string|Function} [opts.easing]\n * @param {Function} [opts.onframe]\n * @param {Function} [opts.onfinish]\n * @param {Function} [opts.onrestart]\n * @param {Array.<clay.animation.SamplerTrack>} [opts.tracks]\n */\nvar TrackClip = function (opts) {\n\n    opts = opts || {};\n\n    __WEBPACK_IMPORTED_MODULE_0__Clip__[\"a\" /* default */].call(this, opts);\n\n    /**\n     *\n     * @type {clay.animation.SamplerTrack[]}\n     */\n    this.tracks = opts.tracks || [];\n\n    this.calcLifeFromTracks();\n};\n\nTrackClip.prototype = Object.create(__WEBPACK_IMPORTED_MODULE_0__Clip__[\"a\" /* default */].prototype);\n\nTrackClip.prototype.constructor = TrackClip;\n\nTrackClip.prototype.step = function (time, dTime, silent) {\n\n    var ret = __WEBPACK_IMPORTED_MODULE_0__Clip__[\"a\" /* default */].prototype.step.call(this, time, dTime, true);\n\n    if (ret !== 'finish') {\n        var time = this.getElapsedTime();\n        // TODO life may be changed.\n        if (this._range) {\n            time = this._range[0] + time;\n        }\n        this.setTime(time);\n    }\n\n    // PENDING Schedule\n    if (!silent && ret !== 'paused') {\n        this.fire('frame');\n    }\n\n    return ret;\n};\n\n/**\n * @param {Array.<number>} range\n */\nTrackClip.prototype.setRange = function (range) {\n    this.calcLifeFromTracks();\n    this._range = range;\n    if (range) {\n        range[1] = Math.min(range[1], this.life);\n        range[0] = Math.min(range[0], this.life);\n        this.life = (range[1] - range[0]);\n    }\n};\n\nTrackClip.prototype.setTime = function (time) {\n    for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].setTime(time);\n    }\n};\n\nTrackClip.prototype.calcLifeFromTracks = function () {\n    this.life = 0;\n    for (var i = 0; i < this.tracks.length; i++) {\n        this.life = Math.max(this.life, this.tracks[i].getMaxTime());\n    }\n};\n\n/**\n * @param {clay.animation.SamplerTrack} track\n */\nTrackClip.prototype.addTrack = function (track) {\n    this.tracks.push(track);\n    this.calcLifeFromTracks();\n};\n\n/**\n * @param {clay.animation.SamplerTrack} track\n */\nTrackClip.prototype.removeTarck = function (track) {\n    var idx = this.tracks.indexOf(track);\n    if (idx >= 0) {\n        this.tracks.splice(idx, 1);\n    }\n};\n\n/**\n * @param {number} startTime\n * @param {number} endTime\n * @param {boolean} isLoop\n * @return {clay.animation.TrackClip}\n */\nTrackClip.prototype.getSubClip = function (startTime, endTime, isLoop) {\n    var subClip = new TrackClip({\n        name: this.name\n    });\n\n    for (var i = 0; i < this.tracks.length; i++) {\n        var subTrack = this.tracks[i].getSubTrack(startTime, endTime);\n        subClip.addTrack(subTrack);\n    }\n\n    if (isLoop !== undefined) {\n        subClip.setLoop(isLoop);\n    }\n\n    subClip.life = endTime - startTime;\n\n    return subClip;\n};\n\n/**\n * 1d blending from two skinning clips\n * @param  {clay.animation.TrackClip} clip1\n * @param  {clay.animation.TrackClip} clip2\n * @param  {number} w\n */\nTrackClip.prototype.blend1D = function (clip1, clip2, w) {\n    for (var i = 0; i < this.tracks.length; i++) {\n        var c1 = clip1.tracks[i];\n        var c2 = clip2.tracks[i];\n        var tClip = this.tracks[i];\n\n        tClip.blend1D(c1, c2, w);\n    }\n};\n\n/**\n * Additive blending from two skinning clips\n * @param  {clay.animation.TrackClip} clip1\n * @param  {clay.animation.TrackClip} clip2\n */\nTrackClip.prototype.additiveBlend = function (clip1, clip2) {\n    for (var i = 0; i < this.tracks.length; i++) {\n        var c1 = clip1.tracks[i];\n        var c2 = clip2.tracks[i];\n        var tClip = this.tracks[i];\n\n        tClip.additiveBlend(c1, c2);\n    }\n};\n\n/**\n * Subtractive blending from two skinning clips\n * @param  {clay.animation.TrackClip} clip1\n * @param  {clay.animation.TrackClip} clip2\n */\nTrackClip.prototype.subtractiveBlend = function (clip1, clip2) {\n    for (var i = 0; i < this.tracks.length; i++) {\n        var c1 = clip1.tracks[i];\n        var c2 = clip2.tracks[i];\n        var tClip = this.tracks[i];\n\n        tClip.subtractiveBlend(c1, c2);\n    }\n};\n\n/**\n * 2D blending from three skinning clips\n * @param  {clay.animation.TrackClip} clip1\n * @param  {clay.animation.TrackClip} clip2\n * @param  {clay.animation.TrackClip} clip3\n * @param  {number} f\n * @param  {number} g\n */\nTrackClip.prototype.blend2D = function (clip1, clip2, clip3, f, g) {\n    for (var i = 0; i < this.tracks.length; i++) {\n        var c1 = clip1.tracks[i];\n        var c2 = clip2.tracks[i];\n        var c3 = clip3.tracks[i];\n        var tClip = this.tracks[i];\n\n        tClip.blend2D(c1, c2, c3, f, g);\n    }\n};\n\n/**\n * Copy SRT of all joints clips from another TrackClip\n * @param  {clay.animation.TrackClip} clip\n */\nTrackClip.prototype.copy = function (clip) {\n    for (var i = 0; i < this.tracks.length; i++) {\n        var sTrack = clip.tracks[i];\n        var tTrack = this.tracks[i];\n\n        __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].copy(tTrack.position, sTrack.position);\n        __WEBPACK_IMPORTED_MODULE_2__glmatrix_vec3__[\"a\" /* default */].copy(tTrack.scale, sTrack.scale);\n        __WEBPACK_IMPORTED_MODULE_1__glmatrix_quat__[\"a\" /* default */].copy(tTrack.rotation, sTrack.rotation);\n    }\n};\n\nTrackClip.prototype.clone = function () {\n    var clip = __WEBPACK_IMPORTED_MODULE_0__Clip__[\"a\" /* default */].prototype.clone.call(this);\n    for (var i = 0; i < this.tracks.length; i++) {\n        clip.addTrack(this.tracks[i].clone());\n    }\n    clip.life = this.life;\n    return clip;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TrackClip);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvYW5pbWF0aW9uL1RyYWNrQ2xpcC5qcz8zNTlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDbGlwIGZyb20gJy4vQ2xpcCc7XG5cbmltcG9ydCBxdWF0IGZyb20gJy4uL2dsbWF0cml4L3F1YXQnO1xuaW1wb3J0IHZlYzMgZnJvbSAnLi4vZ2xtYXRyaXgvdmVjMyc7XG5cblxuLyoqXG4gKlxuICogQW5pbWF0aW9uIGNsaXAgdGhhdCBtYW5hZ2UgYSBjb2xsZWN0aW9uIG9mIHtAbGluayBjbGF5LmFuaW1hdGlvbi5TYW1wbGVyVHJhY2t9XG4gKiBAY29uc3RydWN0b3JcbiAqIEBhbGlhcyBjbGF5LmFuaW1hdGlvbi5UcmFja0NsaXBcbiAqXG4gKiBAZXh0ZW5kcyBjbGF5LmFuaW1hdGlvbi5DbGlwXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdHNdXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdHMubmFtZV1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0cy50YXJnZXRdXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdHMubGlmZV1cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0cy5kZWxheV1cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0cy5nYXBdXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdHMucGxheWJhY2tSYXRpb11cbiAqIEBwYXJhbSB7Ym9vbGVhbnxudW1iZXJ9IFtvcHRzLmxvb3BdIElmIGxvb3AgaXMgYSBudW1iZXIsIGl0IGluZGljYXRlIHRoZSBsb29wIGNvdW50IG9mIGFuaW1hdGlvblxuICogQHBhcmFtIHtzdHJpbmd8RnVuY3Rpb259IFtvcHRzLmVhc2luZ11cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRzLm9uZnJhbWVdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0cy5vbmZpbmlzaF1cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRzLm9ucmVzdGFydF1cbiAqIEBwYXJhbSB7QXJyYXkuPGNsYXkuYW5pbWF0aW9uLlNhbXBsZXJUcmFjaz59IFtvcHRzLnRyYWNrc11cbiAqL1xudmFyIFRyYWNrQ2xpcCA9IGZ1bmN0aW9uIChvcHRzKSB7XG5cbiAgICBvcHRzID0gb3B0cyB8fCB7fTtcblxuICAgIENsaXAuY2FsbCh0aGlzLCBvcHRzKTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHR5cGUge2NsYXkuYW5pbWF0aW9uLlNhbXBsZXJUcmFja1tdfVxuICAgICAqL1xuICAgIHRoaXMudHJhY2tzID0gb3B0cy50cmFja3MgfHwgW107XG5cbiAgICB0aGlzLmNhbGNMaWZlRnJvbVRyYWNrcygpO1xufTtcblxuVHJhY2tDbGlwLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoQ2xpcC5wcm90b3R5cGUpO1xuXG5UcmFja0NsaXAucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gVHJhY2tDbGlwO1xuXG5UcmFja0NsaXAucHJvdG90eXBlLnN0ZXAgPSBmdW5jdGlvbiAodGltZSwgZFRpbWUsIHNpbGVudCkge1xuXG4gICAgdmFyIHJldCA9IENsaXAucHJvdG90eXBlLnN0ZXAuY2FsbCh0aGlzLCB0aW1lLCBkVGltZSwgdHJ1ZSk7XG5cbiAgICBpZiAocmV0ICE9PSAnZmluaXNoJykge1xuICAgICAgICB2YXIgdGltZSA9IHRoaXMuZ2V0RWxhcHNlZFRpbWUoKTtcbiAgICAgICAgLy8gVE9ETyBsaWZlIG1heSBiZSBjaGFuZ2VkLlxuICAgICAgICBpZiAodGhpcy5fcmFuZ2UpIHtcbiAgICAgICAgICAgIHRpbWUgPSB0aGlzLl9yYW5nZVswXSArIHRpbWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRUaW1lKHRpbWUpO1xuICAgIH1cblxuICAgIC8vIFBFTkRJTkcgU2NoZWR1bGVcbiAgICBpZiAoIXNpbGVudCAmJiByZXQgIT09ICdwYXVzZWQnKSB7XG4gICAgICAgIHRoaXMuZmlyZSgnZnJhbWUnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0FycmF5LjxudW1iZXI+fSByYW5nZVxuICovXG5UcmFja0NsaXAucHJvdG90eXBlLnNldFJhbmdlID0gZnVuY3Rpb24gKHJhbmdlKSB7XG4gICAgdGhpcy5jYWxjTGlmZUZyb21UcmFja3MoKTtcbiAgICB0aGlzLl9yYW5nZSA9IHJhbmdlO1xuICAgIGlmIChyYW5nZSkge1xuICAgICAgICByYW5nZVsxXSA9IE1hdGgubWluKHJhbmdlWzFdLCB0aGlzLmxpZmUpO1xuICAgICAgICByYW5nZVswXSA9IE1hdGgubWluKHJhbmdlWzBdLCB0aGlzLmxpZmUpO1xuICAgICAgICB0aGlzLmxpZmUgPSAocmFuZ2VbMV0gLSByYW5nZVswXSk7XG4gICAgfVxufTtcblxuVHJhY2tDbGlwLnByb3RvdHlwZS5zZXRUaW1lID0gZnVuY3Rpb24gKHRpbWUpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudHJhY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMudHJhY2tzW2ldLnNldFRpbWUodGltZSk7XG4gICAgfVxufTtcblxuVHJhY2tDbGlwLnByb3RvdHlwZS5jYWxjTGlmZUZyb21UcmFja3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5saWZlID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudHJhY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMubGlmZSA9IE1hdGgubWF4KHRoaXMubGlmZSwgdGhpcy50cmFja3NbaV0uZ2V0TWF4VGltZSgpKTtcbiAgICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7Y2xheS5hbmltYXRpb24uU2FtcGxlclRyYWNrfSB0cmFja1xuICovXG5UcmFja0NsaXAucHJvdG90eXBlLmFkZFRyYWNrID0gZnVuY3Rpb24gKHRyYWNrKSB7XG4gICAgdGhpcy50cmFja3MucHVzaCh0cmFjayk7XG4gICAgdGhpcy5jYWxjTGlmZUZyb21UcmFja3MoKTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtjbGF5LmFuaW1hdGlvbi5TYW1wbGVyVHJhY2t9IHRyYWNrXG4gKi9cblRyYWNrQ2xpcC5wcm90b3R5cGUucmVtb3ZlVGFyY2sgPSBmdW5jdGlvbiAodHJhY2spIHtcbiAgICB2YXIgaWR4ID0gdGhpcy50cmFja3MuaW5kZXhPZih0cmFjayk7XG4gICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICAgIHRoaXMudHJhY2tzLnNwbGljZShpZHgsIDEpO1xuICAgIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0VGltZVxuICogQHBhcmFtIHtudW1iZXJ9IGVuZFRpbWVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNMb29wXG4gKiBAcmV0dXJuIHtjbGF5LmFuaW1hdGlvbi5UcmFja0NsaXB9XG4gKi9cblRyYWNrQ2xpcC5wcm90b3R5cGUuZ2V0U3ViQ2xpcCA9IGZ1bmN0aW9uIChzdGFydFRpbWUsIGVuZFRpbWUsIGlzTG9vcCkge1xuICAgIHZhciBzdWJDbGlwID0gbmV3IFRyYWNrQ2xpcCh7XG4gICAgICAgIG5hbWU6IHRoaXMubmFtZVxuICAgIH0pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRyYWNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgc3ViVHJhY2sgPSB0aGlzLnRyYWNrc1tpXS5nZXRTdWJUcmFjayhzdGFydFRpbWUsIGVuZFRpbWUpO1xuICAgICAgICBzdWJDbGlwLmFkZFRyYWNrKHN1YlRyYWNrKTtcbiAgICB9XG5cbiAgICBpZiAoaXNMb29wICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgc3ViQ2xpcC5zZXRMb29wKGlzTG9vcCk7XG4gICAgfVxuXG4gICAgc3ViQ2xpcC5saWZlID0gZW5kVGltZSAtIHN0YXJ0VGltZTtcblxuICAgIHJldHVybiBzdWJDbGlwO1xufTtcblxuLyoqXG4gKiAxZCBibGVuZGluZyBmcm9tIHR3byBza2lubmluZyBjbGlwc1xuICogQHBhcmFtICB7Y2xheS5hbmltYXRpb24uVHJhY2tDbGlwfSBjbGlwMVxuICogQHBhcmFtICB7Y2xheS5hbmltYXRpb24uVHJhY2tDbGlwfSBjbGlwMlxuICogQHBhcmFtICB7bnVtYmVyfSB3XG4gKi9cblRyYWNrQ2xpcC5wcm90b3R5cGUuYmxlbmQxRCA9IGZ1bmN0aW9uIChjbGlwMSwgY2xpcDIsIHcpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudHJhY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBjMSA9IGNsaXAxLnRyYWNrc1tpXTtcbiAgICAgICAgdmFyIGMyID0gY2xpcDIudHJhY2tzW2ldO1xuICAgICAgICB2YXIgdENsaXAgPSB0aGlzLnRyYWNrc1tpXTtcblxuICAgICAgICB0Q2xpcC5ibGVuZDFEKGMxLCBjMiwgdyk7XG4gICAgfVxufTtcblxuLyoqXG4gKiBBZGRpdGl2ZSBibGVuZGluZyBmcm9tIHR3byBza2lubmluZyBjbGlwc1xuICogQHBhcmFtICB7Y2xheS5hbmltYXRpb24uVHJhY2tDbGlwfSBjbGlwMVxuICogQHBhcmFtICB7Y2xheS5hbmltYXRpb24uVHJhY2tDbGlwfSBjbGlwMlxuICovXG5UcmFja0NsaXAucHJvdG90eXBlLmFkZGl0aXZlQmxlbmQgPSBmdW5jdGlvbiAoY2xpcDEsIGNsaXAyKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRyYWNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgYzEgPSBjbGlwMS50cmFja3NbaV07XG4gICAgICAgIHZhciBjMiA9IGNsaXAyLnRyYWNrc1tpXTtcbiAgICAgICAgdmFyIHRDbGlwID0gdGhpcy50cmFja3NbaV07XG5cbiAgICAgICAgdENsaXAuYWRkaXRpdmVCbGVuZChjMSwgYzIpO1xuICAgIH1cbn07XG5cbi8qKlxuICogU3VidHJhY3RpdmUgYmxlbmRpbmcgZnJvbSB0d28gc2tpbm5pbmcgY2xpcHNcbiAqIEBwYXJhbSAge2NsYXkuYW5pbWF0aW9uLlRyYWNrQ2xpcH0gY2xpcDFcbiAqIEBwYXJhbSAge2NsYXkuYW5pbWF0aW9uLlRyYWNrQ2xpcH0gY2xpcDJcbiAqL1xuVHJhY2tDbGlwLnByb3RvdHlwZS5zdWJ0cmFjdGl2ZUJsZW5kID0gZnVuY3Rpb24gKGNsaXAxLCBjbGlwMikge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50cmFja3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGMxID0gY2xpcDEudHJhY2tzW2ldO1xuICAgICAgICB2YXIgYzIgPSBjbGlwMi50cmFja3NbaV07XG4gICAgICAgIHZhciB0Q2xpcCA9IHRoaXMudHJhY2tzW2ldO1xuXG4gICAgICAgIHRDbGlwLnN1YnRyYWN0aXZlQmxlbmQoYzEsIGMyKTtcbiAgICB9XG59O1xuXG4vKipcbiAqIDJEIGJsZW5kaW5nIGZyb20gdGhyZWUgc2tpbm5pbmcgY2xpcHNcbiAqIEBwYXJhbSAge2NsYXkuYW5pbWF0aW9uLlRyYWNrQ2xpcH0gY2xpcDFcbiAqIEBwYXJhbSAge2NsYXkuYW5pbWF0aW9uLlRyYWNrQ2xpcH0gY2xpcDJcbiAqIEBwYXJhbSAge2NsYXkuYW5pbWF0aW9uLlRyYWNrQ2xpcH0gY2xpcDNcbiAqIEBwYXJhbSAge251bWJlcn0gZlxuICogQHBhcmFtICB7bnVtYmVyfSBnXG4gKi9cblRyYWNrQ2xpcC5wcm90b3R5cGUuYmxlbmQyRCA9IGZ1bmN0aW9uIChjbGlwMSwgY2xpcDIsIGNsaXAzLCBmLCBnKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRyYWNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgYzEgPSBjbGlwMS50cmFja3NbaV07XG4gICAgICAgIHZhciBjMiA9IGNsaXAyLnRyYWNrc1tpXTtcbiAgICAgICAgdmFyIGMzID0gY2xpcDMudHJhY2tzW2ldO1xuICAgICAgICB2YXIgdENsaXAgPSB0aGlzLnRyYWNrc1tpXTtcblxuICAgICAgICB0Q2xpcC5ibGVuZDJEKGMxLCBjMiwgYzMsIGYsIGcpO1xuICAgIH1cbn07XG5cbi8qKlxuICogQ29weSBTUlQgb2YgYWxsIGpvaW50cyBjbGlwcyBmcm9tIGFub3RoZXIgVHJhY2tDbGlwXG4gKiBAcGFyYW0gIHtjbGF5LmFuaW1hdGlvbi5UcmFja0NsaXB9IGNsaXBcbiAqL1xuVHJhY2tDbGlwLnByb3RvdHlwZS5jb3B5ID0gZnVuY3Rpb24gKGNsaXApIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudHJhY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBzVHJhY2sgPSBjbGlwLnRyYWNrc1tpXTtcbiAgICAgICAgdmFyIHRUcmFjayA9IHRoaXMudHJhY2tzW2ldO1xuXG4gICAgICAgIHZlYzMuY29weSh0VHJhY2sucG9zaXRpb24sIHNUcmFjay5wb3NpdGlvbik7XG4gICAgICAgIHZlYzMuY29weSh0VHJhY2suc2NhbGUsIHNUcmFjay5zY2FsZSk7XG4gICAgICAgIHF1YXQuY29weSh0VHJhY2sucm90YXRpb24sIHNUcmFjay5yb3RhdGlvbik7XG4gICAgfVxufTtcblxuVHJhY2tDbGlwLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY2xpcCA9IENsaXAucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRyYWNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjbGlwLmFkZFRyYWNrKHRoaXMudHJhY2tzW2ldLmNsb25lKCkpO1xuICAgIH1cbiAgICBjbGlwLmxpZmUgPSB0aGlzLmxpZmU7XG4gICAgcmV0dXJuIGNsaXA7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUcmFja0NsaXA7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9hbmltYXRpb24vVHJhY2tDbGlwLmpzXG4vLyBtb2R1bGUgaWQgPSA4NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///85\n");

/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__ = __webpack_require__(3);\n// Sampler clip is especially for the animation sampler in glTF\n// Use Typed Array can reduce a lot of heap memory\n\n\n\n\n// lerp function with offset in large array\nfunction vec3lerp(out, a, b, t, oa, ob) {\n    var ax = a[oa];\n    var ay = a[oa + 1];\n    var az = a[oa + 2];\n    out[0] = ax + t * (b[ob] - ax);\n    out[1] = ay + t * (b[ob + 1] - ay);\n    out[2] = az + t * (b[ob + 2] - az);\n\n    return out;\n}\n\nfunction quatSlerp(out, a, b, t, oa, ob) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0 + oa], ay = a[1 + oa], az = a[2 + oa], aw = a[3 + oa],\n        bx = b[0 + ob], by = b[1 + ob], bz = b[2 + ob], bw = b[3 + ob];\n\n    var omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ((1.0 - cosom) > 0.000001) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    }\n    else {\n        // 'from' and 'to' quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * SamplerTrack manages `position`, `rotation`, `scale` tracks in animation of single scene node.\n * @constructor\n * @alias clay.animation.SamplerTrack\n * @param {Object} [opts]\n * @param {string} [opts.name] Track name\n * @param {clay.Node} [opts.target] Target node's transform will updated automatically\n */\nvar SamplerTrack = function (opts) {\n    opts = opts || {};\n\n    this.name = opts.name || '';\n    /**\n     * @param {clay.Node}\n     */\n    this.target = opts.target || null;\n    /**\n     * @type {Array}\n     */\n    this.position = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].create();\n    /**\n     * Rotation is represented by a quaternion\n     * @type {Array}\n     */\n    this.rotation = __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].create();\n    /**\n     * @type {Array}\n     */\n    this.scale = __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].fromValues(1, 1, 1);\n\n    this.channels = {\n        time: null,\n        position: null,\n        rotation: null,\n        scale: null\n    };\n\n    this._cacheKey = 0;\n    this._cacheTime = 0;\n};\n\nSamplerTrack.prototype.setTime = function (time) {\n    if (!this.channels.time) {\n        return;\n    }\n    var channels = this.channels;\n    var len = channels.time.length;\n    var key = -1;\n    // Only one frame\n    if (len === 1) {\n        if (channels.rotation) {\n            __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].copy(this.rotation, channels.rotation);\n        }\n        if (channels.position) {\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].copy(this.position, channels.position);\n        }\n        if (channels.scale) {\n            __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].copy(this.scale, channels.scale);\n        }\n        return;\n    }\n    // Clamp\n    else if (time <= channels.time[0]) {\n        time = channels.time[0];\n        key = 0;\n    }\n    else if (time >= channels.time[len - 1]) {\n        time = channels.time[len - 1];\n        key = len - 2;\n    }\n    else {\n        if (time < this._cacheTime) {\n            var s = Math.min(len - 1, this._cacheKey + 1);\n            for (var i = s; i >= 0; i--) {\n                if (channels.time[i - 1] <= time && channels.time[i] > time) {\n                    key = i - 1;\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = this._cacheKey; i < len - 1; i++) {\n                if (channels.time[i] <= time && channels.time[i + 1] > time) {\n                    key = i;\n                    break;\n                }\n            }\n        }\n    }\n    if (key > -1) {\n        this._cacheKey = key;\n        this._cacheTime = time;\n        var start = key;\n        var end = key + 1;\n        var startTime = channels.time[start];\n        var endTime = channels.time[end];\n        var range = endTime - startTime;\n        var percent = range === 0 ? 0 : (time - startTime) / range;\n\n        if (channels.rotation) {\n            quatSlerp(this.rotation, channels.rotation, channels.rotation, percent, start * 4, end * 4);\n        }\n        if (channels.position) {\n            vec3lerp(this.position, channels.position, channels.position, percent, start * 3, end * 3);\n        }\n        if (channels.scale) {\n            vec3lerp(this.scale, channels.scale, channels.scale, percent, start * 3, end * 3);\n        }\n    }\n    // Loop handling\n    if (key === len - 2) {\n        this._cacheKey = 0;\n        this._cacheTime = 0;\n    }\n\n    this.updateTarget();\n};\n\n/**\n * Update transform of target node manually\n */\nSamplerTrack.prototype.updateTarget = function () {\n    var channels = this.channels;\n    if (this.target) {\n        // Only update target prop if have data.\n        if (channels.position) {\n            this.target.position.setArray(this.position);\n        }\n        if (channels.rotation) {\n            this.target.rotation.setArray(this.rotation);\n        }\n        if (channels.scale) {\n            this.target.scale.setArray(this.scale);\n        }\n    }\n};\n\n/**\n * @return {number}\n */\nSamplerTrack.prototype.getMaxTime = function () {\n    return this.channels.time[this.channels.time.length - 1];\n};\n\n/**\n * @param {number} startTime\n * @param {number} endTime\n * @return {clay.animation.SamplerTrack}\n */\nSamplerTrack.prototype.getSubTrack = function (startTime, endTime) {\n\n    var subClip = new SamplerTrack({\n        name: this.name\n    });\n    var minTime = this.channels.time[0];\n    startTime = Math.min(Math.max(startTime, minTime), this.life);\n    endTime = Math.min(Math.max(endTime, minTime), this.life);\n\n    var rangeStart = this._findRange(startTime);\n    var rangeEnd = this._findRange(endTime);\n\n    var count = rangeEnd[0] - rangeStart[0] + 1;\n    if (rangeStart[1] === 0 && rangeEnd[1] === 0) {\n        count -= 1;\n    }\n    if (this.channels.rotation) {\n        subClip.channels.rotation = new Float32Array(count * 4);\n    }\n    if (this.channels.position) {\n        subClip.channels.position = new Float32Array(count * 3);\n    }\n    if (this.channels.scale) {\n        subClip.channels.scale = new Float32Array(count * 3);\n    }\n    if (this.channels.time) {\n        subClip.channels.time = new Float32Array(count);\n    }\n    // Clip at the start\n    this.setTime(startTime);\n    for (var i = 0; i < 3; i++) {\n        subClip.channels.rotation[i] = this.rotation[i];\n        subClip.channels.position[i] = this.position[i];\n        subClip.channels.scale[i] = this.scale[i];\n    }\n    subClip.channels.time[0] = 0;\n    subClip.channels.rotation[3] = this.rotation[3];\n\n    for (var i = 1; i < count-1; i++) {\n        var i2;\n        for (var j = 0; j < 3; j++) {\n            i2 = rangeStart[0] + i;\n            subClip.channels.rotation[i * 4 + j] = this.channels.rotation[i2 * 4 + j];\n            subClip.channels.position[i * 3 + j] = this.channels.position[i2 * 3 + j];\n            subClip.channels.scale[i * 3 + j] = this.channels.scale[i2 * 3 + j];\n        }\n        subClip.channels.time[i] = this.channels.time[i2] - startTime;\n        subClip.channels.rotation[i * 4 + 3] = this.channels.rotation[i2 * 4 + 3];\n    }\n    // Clip at the end\n    this.setTime(endTime);\n    for (var i = 0; i < 3; i++) {\n        subClip.channels.rotation[(count - 1) * 4 + i] = this.rotation[i];\n        subClip.channels.position[(count - 1) * 3 + i] = this.position[i];\n        subClip.channels.scale[(count - 1) * 3 + i] = this.scale[i];\n    }\n    subClip.channels.time[(count - 1)] = endTime - startTime;\n    subClip.channels.rotation[(count - 1) * 4 + 3] = this.rotation[3];\n\n    // TODO set back ?\n    subClip.life = endTime - startTime;\n    return subClip;\n};\n\nSamplerTrack.prototype._findRange = function (time) {\n    var channels = this.channels;\n    var len = channels.time.length;\n    var start = -1;\n    for (var i = 0; i < len - 1; i++) {\n        if (channels.time[i] <= time && channels.time[i+1] > time) {\n            start = i;\n        }\n    }\n    var percent = 0;\n    if (start >= 0) {\n        var startTime = channels.time[start];\n        var endTime = channels.time[start+1];\n        var percent = (time-startTime) / (endTime-startTime);\n    }\n    // Percent [0, 1)\n    return [start, percent];\n};\n\n/**\n * 1D blending between two clips\n * @function\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c1\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c2\n * @param  {number} w\n */\nSamplerTrack.prototype.blend1D = function (t1, t2, w) {\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].lerp(this.position, t1.position, t2.position, w);\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].lerp(this.scale, t1.scale, t2.scale, w);\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].slerp(this.rotation, t1.rotation, t2.rotation, w);\n};\n/**\n * 2D blending between three clips\n * @function\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c1\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c2\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c3\n * @param  {number} f\n * @param  {number} g\n */\nSamplerTrack.prototype.blend2D = (function () {\n    var q1 = __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].create();\n    var q2 = __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].create();\n    return function (t1, t2, t3, f, g) {\n        var a = 1 - f - g;\n\n        this.position[0] = t1.position[0] * a + t2.position[0] * f + t3.position[0] * g;\n        this.position[1] = t1.position[1] * a + t2.position[1] * f + t3.position[1] * g;\n        this.position[2] = t1.position[2] * a + t2.position[2] * f + t3.position[2] * g;\n\n        this.scale[0] = t1.scale[0] * a + t2.scale[0] * f + t3.scale[0] * g;\n        this.scale[1] = t1.scale[1] * a + t2.scale[1] * f + t3.scale[1] * g;\n        this.scale[2] = t1.scale[2] * a + t2.scale[2] * f + t3.scale[2] * g;\n\n        // http://msdn.microsoft.com/en-us/library/windows/desktop/bb205403(v=vs.85).aspx\n        // http://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.quaternion.xmquaternionbarycentric(v=vs.85).aspx\n        var s = f + g;\n        if (s === 0) {\n            __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].copy(this.rotation, t1.rotation);\n        }\n        else {\n            __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].slerp(q1, t1.rotation, t2.rotation, s);\n            __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].slerp(q2, t1.rotation, t3.rotation, s);\n            __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].slerp(this.rotation, q1, q2, g / s);\n        }\n    };\n})();\n/**\n * Additive blending between two clips\n * @function\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c1\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c2\n */\nSamplerTrack.prototype.additiveBlend = function (t1, t2) {\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].add(this.position, t1.position, t2.position);\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].add(this.scale, t1.scale, t2.scale);\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].multiply(this.rotation, t2.rotation, t1.rotation);\n};\n/**\n * Subtractive blending between two clips\n * @function\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c1\n * @param  {clay.animation.SamplerTrack|clay.animation.TransformTrack} c2\n */\nSamplerTrack.prototype.subtractiveBlend = function (t1, t2) {\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(this.position, t1.position, t2.position);\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].sub(this.scale, t1.scale, t2.scale);\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].invert(this.rotation, t2.rotation);\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].multiply(this.rotation, this.rotation, t1.rotation);\n};\n\n/**\n * Clone a new SamplerTrack\n * @return {clay.animation.SamplerTrack}\n */\nSamplerTrack.prototype.clone = function () {\n    var track = SamplerTrack.prototype.clone.call(this);\n    track.channels = {\n        time: this.channels.time || null,\n        position: this.channels.position || null,\n        rotation: this.channels.rotation || null,\n        scale: this.channels.scale || null\n    };\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].copy(track.position, this.position);\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_quat__[\"a\" /* default */].copy(track.rotation, this.rotation);\n    __WEBPACK_IMPORTED_MODULE_1__glmatrix_vec3__[\"a\" /* default */].copy(track.scale, this.scale);\n\n    track.target = this.target;\n    track.updateTarget();\n\n    return track;\n\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (SamplerTrack);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///86\n");

/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_Cache__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_vendor__ = __webpack_require__(5);\n\n\n\n\n\nfunction getArrayCtorByType (type) {\n    return ({\n        'byte': __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].Int8Array,\n        'ubyte': __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].Uint8Array,\n        'short': __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].Int16Array,\n        'ushort': __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].Uint16Array\n    })[type] || __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].Float32Array;\n}\n\nfunction makeAttrKey(attrName) {\n    return 'attr_' + attrName;\n}\n/**\n * GeometryBase attribute\n * @alias clay.GeometryBase.Attribute\n * @constructor\n */\nfunction Attribute(name, type, size, semantic) {\n    /**\n     * Attribute name\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * Attribute type\n     * Possible values:\n     *  + `'byte'`\n     *  + `'ubyte'`\n     *  + `'short'`\n     *  + `'ushort'`\n     *  + `'float'` Most commonly used.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * Size of attribute component. 1 - 4.\n     * @type {number}\n     */\n    this.size = size;\n    /**\n     * Semantic of this attribute.\n     * Possible values:\n     *  + `'POSITION'`\n     *  + `'NORMAL'`\n     *  + `'BINORMAL'`\n     *  + `'TANGENT'`\n     *  + `'TEXCOORD'`\n     *  + `'TEXCOORD_0'`\n     *  + `'TEXCOORD_1'`\n     *  + `'COLOR'`\n     *  + `'JOINT'`\n     *  + `'WEIGHT'`\n     *\n     * In shader, attribute with same semantic will be automatically mapped. For example:\n     * ```glsl\n     * attribute vec3 pos: POSITION\n     * ```\n     * will use the attribute value with semantic POSITION in geometry, no matter what name it used.\n     * @type {string}\n     */\n    this.semantic = semantic || '';\n\n    /**\n     * Value of the attribute.\n     * @type {TypedArray}\n     */\n    this.value = null;\n\n    // Init getter setter\n    switch (size) {\n        case 1:\n            this.get = function (idx) {\n                return this.value[idx];\n            };\n            this.set = function (idx, value) {\n                this.value[idx] = value;\n            };\n            // Copy from source to target\n            this.copy = function (target, source) {\n                this.value[target] = this.value[target];\n            };\n            break;\n        case 2:\n            this.get = function (idx, out) {\n                var arr = this.value;\n                out[0] = arr[idx * 2];\n                out[1] = arr[idx * 2 + 1];\n                return out;\n            };\n            this.set = function (idx, val) {\n                var arr = this.value;\n                arr[idx * 2] = val[0];\n                arr[idx * 2 + 1] = val[1];\n            };\n            this.copy = function (target, source) {\n                var arr = this.value;\n                source *= 2;\n                target *= 2;\n                arr[target] = arr[source];\n                arr[target + 1] = arr[source + 1];\n            };\n            break;\n        case 3:\n            this.get = function (idx, out) {\n                var idx3 = idx * 3;\n                var arr = this.value;\n                out[0] = arr[idx3];\n                out[1] = arr[idx3 + 1];\n                out[2] = arr[idx3 + 2];\n                return out;\n            };\n            this.set = function (idx, val) {\n                var idx3 = idx * 3;\n                var arr = this.value;\n                arr[idx3] = val[0];\n                arr[idx3 + 1] = val[1];\n                arr[idx3 + 2] = val[2];\n            };\n            this.copy = function (target, source) {\n                var arr = this.value;\n                source *= 3;\n                target *= 3;\n                arr[target] = arr[source];\n                arr[target + 1] = arr[source + 1];\n                arr[target + 2] = arr[source + 2];\n            };\n            break;\n        case 4:\n            this.get = function (idx, out) {\n                var arr = this.value;\n                var idx4 = idx * 4;\n                out[0] = arr[idx4];\n                out[1] = arr[idx4 + 1];\n                out[2] = arr[idx4 + 2];\n                out[3] = arr[idx4 + 3];\n                return out;\n            };\n            this.set = function (idx, val) {\n                var arr = this.value;\n                var idx4 = idx * 4;\n                arr[idx4] = val[0];\n                arr[idx4 + 1] = val[1];\n                arr[idx4 + 2] = val[2];\n                arr[idx4 + 3] = val[3];\n            };\n            this.copy = function (target, source) {\n                var arr = this.value;\n                source *= 4;\n                target *= 4;\n                // copyWithin is extremely slow\n                arr[target] = arr[source];\n                arr[target + 1] = arr[source + 1];\n                arr[target + 2] = arr[source + 2];\n                arr[target + 3] = arr[source + 3];\n            };\n    }\n}\n\n/**\n * Set item value at give index. Second parameter val is number if size is 1\n * @function\n * @name clay.GeometryBase.Attribute#set\n * @param {number} idx\n * @param {number[]|number} val\n * @example\n * geometry.getAttribute('position').set(0, [1, 1, 1]);\n */\n\n/**\n * Get item value at give index. Second parameter out is no need if size is 1\n * @function\n * @name clay.GeometryBase.Attribute#set\n * @param {number} idx\n * @param {number[]} [out]\n * @example\n * geometry.getAttribute('position').get(0, out);\n */\n\n/**\n * Initialize attribute with given vertex count\n * @param {number} nVertex\n */\nAttribute.prototype.init = function (nVertex) {\n    if (!this.value || this.value.length !== nVertex * this.size) {\n        var ArrayConstructor = getArrayCtorByType(this.type);\n        this.value = new ArrayConstructor(nVertex * this.size);\n    }\n};\n\n/**\n * Initialize attribute with given array. Which can be 1 dimensional or 2 dimensional\n * @param {Array} array\n * @example\n *  geometry.getAttribute('position').fromArray(\n *      [-1, 0, 0, 1, 0, 0, 0, 1, 0]\n *  );\n *  geometry.getAttribute('position').fromArray(\n *      [ [-1, 0, 0], [1, 0, 0], [0, 1, 0] ]\n *  );\n */\nAttribute.prototype.fromArray = function (array) {\n    var ArrayConstructor = getArrayCtorByType(this.type);\n    var value;\n    // Convert 2d array to flat\n    if (array[0] && (array[0].length)) {\n        var n = 0;\n        var size = this.size;\n        value = new ArrayConstructor(array.length * size);\n        for (var i = 0; i < array.length; i++) {\n            for (var j = 0; j < size; j++) {\n                value[n++] = array[i][j];\n            }\n        }\n    }\n    else {\n        value = new ArrayConstructor(array);\n    }\n    this.value = value;\n};\n\nAttribute.prototype.clone = function(copyValue) {\n    var ret = new Attribute(this.name, this.type, this.size, this.semantic);\n    // FIXME\n    if (copyValue) {\n        console.warn('todo');\n    }\n    return ret;\n};\n\nfunction AttributeBuffer(name, type, buffer, size, semantic) {\n    this.name = name;\n    this.type = type;\n    this.buffer = buffer;\n    this.size = size;\n    this.semantic = semantic;\n\n    // To be set in mesh\n    // symbol in the shader\n    this.symbol = '';\n\n    // Needs remove flag\n    this.needsRemove = false;\n}\n\nfunction IndicesBuffer(buffer) {\n    this.buffer = buffer;\n    this.count = 0;\n}\n\n/**\n * Base of all geometry. Use {@link clay.Geometry} for common 3D usage.\n * @constructor clay.GeometryBase\n * @extends clay.core.Base\n */\nvar GeometryBase = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.GeometryBase# */ {\n        /**\n         * Attributes of geometry.\n         * @type {Object.<string, clay.GeometryBase.Attribute>}\n         */\n        attributes: {},\n\n        /**\n         * Indices of geometry.\n         * @type {Uint16Array|Uint32Array}\n         */\n        indices: null,\n\n        /**\n         * Is vertices data dynamically updated.\n         * Attributes value can't be changed after first render if dyanmic is false.\n         * @type {boolean}\n         */\n        dynamic: true,\n\n        _enabledAttributes: null,\n\n        // PENDING\n        // Init it here to avoid deoptimization when it's assigned in application dynamically\n        __used: 0\n    };\n}, function () {\n    // Use cache\n    this._cache = new __WEBPACK_IMPORTED_MODULE_2__core_Cache__[\"a\" /* default */]();\n\n    this._attributeList = Object.keys(this.attributes);\n\n    this.__vaoCache = {};\n},\n/** @lends clay.GeometryBase.prototype */\n{\n    /**\n     * Main attribute will be used to count vertex number\n     * @type {string}\n     */\n    mainAttribute: '',\n    /**\n     * User defined picking algorithm instead of default\n     * triangle ray intersection\n     * x, y are NDC.\n     * ```typescript\n     * (x, y, renderer, camera, renderable, out) => boolean\n     * ```\n     * @type {?Function}\n     */\n    pick: null,\n\n    /**\n     * User defined ray picking algorithm instead of default\n     * triangle ray intersection\n     * ```typescript\n     * (ray: clay.Ray, renderable: clay.Renderable, out: Array) => boolean\n     * ```\n     * @type {?Function}\n     */\n    pickByRay: null,\n\n    /**\n     * Mark attributes and indices in geometry needs to update.\n     * Usually called after you change the data in attributes.\n     */\n    dirty: function () {\n        var enabledAttributes = this.getEnabledAttributes();\n        for (var i = 0; i < enabledAttributes.length; i++) {\n            this.dirtyAttribute(enabledAttributes[i]);\n        }\n        this.dirtyIndices();\n        this._enabledAttributes = null;\n\n        this._cache.dirty('any');\n    },\n    /**\n     * Mark the indices needs to update.\n     */\n    dirtyIndices: function () {\n        this._cache.dirtyAll('indices');\n    },\n    /**\n     * Mark the attributes needs to update.\n     * @param {string} [attrName]\n     */\n    dirtyAttribute: function (attrName) {\n        this._cache.dirtyAll(makeAttrKey(attrName));\n        this._cache.dirtyAll('attributes');\n    },\n    /**\n     * Get indices of triangle at given index.\n     * @param {number} idx\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     */\n    getTriangleIndices: function (idx, out) {\n        if (idx < this.triangleCount && idx >= 0) {\n            if (!out) {\n                out = [];\n            }\n            var indices = this.indices;\n            out[0] = indices[idx * 3];\n            out[1] = indices[idx * 3 + 1];\n            out[2] = indices[idx * 3 + 2];\n            return out;\n        }\n    },\n\n    /**\n     * Set indices of triangle at given index.\n     * @param {number} idx\n     * @param {Array.<number>} arr\n     */\n    setTriangleIndices: function (idx, arr) {\n        var indices = this.indices;\n        indices[idx * 3] = arr[0];\n        indices[idx * 3 + 1] = arr[1];\n        indices[idx * 3 + 2] = arr[2];\n    },\n\n    isUseIndices: function () {\n        return !!this.indices;\n    },\n\n    /**\n     * Initialize indices from an array.\n     * @param {Array} array\n     */\n    initIndicesFromArray: function (array) {\n        var value;\n        var ArrayConstructor = this.vertexCount > 0xffff\n            ? __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].Uint32Array : __WEBPACK_IMPORTED_MODULE_3__core_vendor__[\"a\" /* default */].Uint16Array;\n        // Convert 2d array to flat\n        if (array[0] && (array[0].length)) {\n            var n = 0;\n            var size = 3;\n\n            value = new ArrayConstructor(array.length * size);\n            for (var i = 0; i < array.length; i++) {\n                for (var j = 0; j < size; j++) {\n                    value[n++] = array[i][j];\n                }\n            }\n        }\n        else {\n            value = new ArrayConstructor(array);\n        }\n\n        this.indices = value;\n    },\n    /**\n     * Create a new attribute\n     * @param {string} name\n     * @param {string} type\n     * @param {number} size\n     * @param {string} [semantic]\n     */\n    createAttribute: function (name, type, size, semantic) {\n        var attrib = new Attribute(name, type, size, semantic);\n        if (this.attributes[name]) {\n            this.removeAttribute(name);\n        }\n        this.attributes[name] = attrib;\n        this._attributeList.push(name);\n        return attrib;\n    },\n    /**\n     * Remove attribute\n     * @param {string} name\n     */\n    removeAttribute: function (name) {\n        var attributeList = this._attributeList;\n        var idx = attributeList.indexOf(name);\n        if (idx >= 0) {\n            attributeList.splice(idx, 1);\n            delete this.attributes[name];\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Get attribute\n     * @param {string} name\n     * @return {clay.GeometryBase.Attribute}\n     */\n    getAttribute: function (name) {\n        return this.attributes[name];\n    },\n\n    /**\n     * Get enabled attributes name list\n     * Attribute which has the same vertex number with position is treated as a enabled attribute\n     * @return {string[]}\n     */\n    getEnabledAttributes: function () {\n        var enabledAttributes = this._enabledAttributes;\n        var attributeList = this._attributeList;\n        // Cache\n        if (enabledAttributes) {\n            return enabledAttributes;\n        }\n\n        var result = [];\n        var nVertex = this.vertexCount;\n\n        for (var i = 0; i < attributeList.length; i++) {\n            var name = attributeList[i];\n            var attrib = this.attributes[name];\n            if (attrib.value) {\n                if (attrib.value.length === nVertex * attrib.size) {\n                    result.push(name);\n                }\n            }\n        }\n\n        this._enabledAttributes = result;\n\n        return result;\n    },\n\n    getBufferChunks: function (renderer) {\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n        var isAttributesDirty = cache.isDirty('attributes');\n        var isIndicesDirty = cache.isDirty('indices');\n        if (isAttributesDirty || isIndicesDirty) {\n            this._updateBuffer(renderer.gl, isAttributesDirty, isIndicesDirty);\n            var enabledAttributes = this.getEnabledAttributes();\n            for (var i = 0; i < enabledAttributes.length; i++) {\n                cache.fresh(makeAttrKey(enabledAttributes[i]));\n            }\n            cache.fresh('attributes');\n            cache.fresh('indices');\n        }\n        cache.fresh('any');\n        return cache.get('chunks');\n    },\n\n    _updateBuffer: function (_gl, isAttributesDirty, isIndicesDirty) {\n        var cache = this._cache;\n        var chunks = cache.get('chunks');\n        var firstUpdate = false;\n        if (!chunks) {\n            chunks = [];\n            // Intialize\n            chunks[0] = {\n                attributeBuffers: [],\n                indicesBuffer: null\n            };\n            cache.put('chunks', chunks);\n            firstUpdate = true;\n        }\n\n        var chunk = chunks[0];\n        var attributeBuffers = chunk.attributeBuffers;\n        var indicesBuffer = chunk.indicesBuffer;\n\n        if (isAttributesDirty || firstUpdate) {\n            var attributeList = this.getEnabledAttributes();\n\n            var attributeBufferMap = {};\n            if (!firstUpdate) {\n                for (var i = 0; i < attributeBuffers.length; i++) {\n                    attributeBufferMap[attributeBuffers[i].name] = attributeBuffers[i];\n                }\n            }\n            // FIXME If some attributes removed\n            for (var k = 0; k < attributeList.length; k++) {\n                var name = attributeList[k];\n                var attribute = this.attributes[name];\n\n                var bufferInfo;\n\n                if (!firstUpdate) {\n                    bufferInfo = attributeBufferMap[name];\n                }\n                var buffer;\n                if (bufferInfo) {\n                    buffer = bufferInfo.buffer;\n                }\n                else {\n                    buffer = _gl.createBuffer();\n                }\n                if (cache.isDirty(makeAttrKey(name))) {\n                    // Only update when they are dirty.\n                    // TODO: Use BufferSubData?\n                    _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n                    _gl.bufferData(_gl.ARRAY_BUFFER, attribute.value, this.dynamic ? _gl.DYNAMIC_DRAW : _gl.STATIC_DRAW);\n                }\n\n                attributeBuffers[k] = new AttributeBuffer(name, attribute.type, buffer, attribute.size, attribute.semantic);\n            }\n            // Remove unused attributes buffers.\n            // PENDING\n            for (var i = k; i < attributeBuffers.length; i++) {\n                _gl.deleteBuffer(attributeBuffers[i].buffer);\n            }\n            attributeBuffers.length = k;\n\n        }\n\n        if (this.isUseIndices() && (isIndicesDirty || firstUpdate)) {\n            if (!indicesBuffer) {\n                indicesBuffer = new IndicesBuffer(_gl.createBuffer());\n                chunk.indicesBuffer = indicesBuffer;\n            }\n            indicesBuffer.count = this.indices.length;\n            _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, indicesBuffer.buffer);\n            _gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER, this.indices, this.dynamic ? _gl.DYNAMIC_DRAW : _gl.STATIC_DRAW);\n        }\n    },\n\n    /**\n     * Dispose geometry data in GL context.\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n        var chunks = cache.get('chunks');\n        if (chunks) {\n            for (var c = 0; c < chunks.length; c++) {\n                var chunk = chunks[c];\n\n                for (var k = 0; k < chunk.attributeBuffers.length; k++) {\n                    var attribs = chunk.attributeBuffers[k];\n                    renderer.gl.deleteBuffer(attribs.buffer);\n                }\n\n                if (chunk.indicesBuffer) {\n                    renderer.gl.deleteBuffer(chunk.indicesBuffer.buffer);\n                }\n            }\n        }\n        if (this.__vaoCache) {\n            var vaoExt = renderer.getGLExtension('OES_vertex_array_object');\n            for (var id in this.__vaoCache) {\n                var vao = this.__vaoCache[id].vao;\n                if (vao) {\n                    vaoExt.deleteVertexArrayOES(vao);\n                }\n            }\n        }\n        this.__vaoCache = {};\n        cache.deleteContext(renderer.__uid__);\n    }\n\n});\n\nif (Object.defineProperty) {\n    /**\n     * @name clay.GeometryBase#vertexCount\n     * @type {number}\n     * @readOnly\n     */\n    Object.defineProperty(GeometryBase.prototype, 'vertexCount', {\n\n        enumerable: false,\n\n        get: function () {\n\n            var mainAttribute = this.attributes[this.mainAttribute];\n\n            if (!mainAttribute) {\n                mainAttribute = this.attributes[this._attributeList[0]];\n            }\n\n            if (!mainAttribute || !mainAttribute.value) {\n                return 0;\n            }\n            return mainAttribute.value.length / mainAttribute.size;\n        }\n    });\n    /**\n     * @name clay.GeometryBase#triangleCount\n     * @type {number}\n     * @readOnly\n     */\n    Object.defineProperty(GeometryBase.prototype, 'triangleCount', {\n\n        enumerable: false,\n\n        get: function () {\n            var indices = this.indices;\n            if (!indices) {\n                return 0;\n            }\n            else {\n                return indices.length / 3;\n            }\n        }\n    });\n}\n\nGeometryBase.STATIC_DRAW = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].STATIC_DRAW;\nGeometryBase.DYNAMIC_DRAW = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].DYNAMIC_DRAW;\nGeometryBase.STREAM_DRAW = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].STREAM_DRAW;\n\nGeometryBase.AttributeBuffer = AttributeBuffer;\nGeometryBase.IndicesBuffer = IndicesBuffer;\n\nGeometryBase.Attribute = Attribute;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GeometryBase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///87\n");

/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__source_header_light__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__source_util_glsl_js__ = __webpack_require__(89);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__source_basic_glsl_js__ = __webpack_require__(90);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__source_lambert_glsl_js__ = __webpack_require__(91);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__source_standard_glsl_js__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__source_wireframe_glsl_js__ = __webpack_require__(92);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__source_skybox_glsl_js__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__source_prez_glsl_js__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__library__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__Shader__ = __webpack_require__(2);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_0__source_header_light__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_1__source_util_glsl_js__[\"a\" /* default */]);\n\n// Some build in shaders\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_2__source_basic_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_3__source_lambert_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_4__source_standard_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_5__source_wireframe_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_6__source_skybox_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_7__source_prez_glsl_js__[\"a\" /* default */]);\n\n__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */].template('clay.basic', __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.basic.vertex'), __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.basic.fragment'));\n__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */].template('clay.lambert', __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.lambert.vertex'), __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.lambert.fragment'));\n__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */].template('clay.wireframe', __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.wireframe.vertex'), __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.wireframe.fragment'));\n__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */].template('clay.skybox', __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.skybox.vertex'), __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.skybox.fragment'));\n__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */].template('clay.prez', __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.prez.vertex'), __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.prez.fragment'));\n__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */].template('clay.standard', __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.standard.vertex'), __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.standard.fragment'));\n__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */].template('clay.standardMR', __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.standardMR.vertex'), __WEBPACK_IMPORTED_MODULE_9__Shader__[\"a\" /* default */].source('clay.standardMR.fragment'));\n\n// TODO Must export a module and be used in the other modules. Or it will be tree shaked\n/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_8__library__[\"a\" /* default */]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL2J1aWx0aW4uanM/N2Q0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbGlnaHRFc3NsIGZyb20gJy4vc291cmNlL2hlYWRlci9saWdodCc7XG5pbXBvcnQgdXRpbEVzc2wgZnJvbSAnLi9zb3VyY2UvdXRpbC5nbHNsLmpzJztcblxuaW1wb3J0IGJhc2ljRXNzbCBmcm9tICcuL3NvdXJjZS9iYXNpYy5nbHNsLmpzJztcbmltcG9ydCBsYW1iZXJ0RXNzbCBmcm9tICcuL3NvdXJjZS9sYW1iZXJ0Lmdsc2wuanMnO1xuaW1wb3J0IHN0YW5kYXJkRXNzbCBmcm9tICcuL3NvdXJjZS9zdGFuZGFyZC5nbHNsLmpzJztcbmltcG9ydCB3aXJlZnJhbWVFc3NsIGZyb20gJy4vc291cmNlL3dpcmVmcmFtZS5nbHNsLmpzJztcbmltcG9ydCBza3lib3hFc3NsIGZyb20gJy4vc291cmNlL3NreWJveC5nbHNsLmpzJztcbmltcG9ydCBwcmV6RXNzbCBmcm9tICcuL3NvdXJjZS9wcmV6Lmdsc2wuanMnO1xuXG5pbXBvcnQgbGlicmFyeSBmcm9tICcuL2xpYnJhcnknO1xuaW1wb3J0IFNoYWRlciBmcm9tICcuLi9TaGFkZXInO1xuXG5cblNoYWRlclsnaW1wb3J0J10obGlnaHRFc3NsKTtcblNoYWRlclsnaW1wb3J0J10odXRpbEVzc2wpO1xuXG4vLyBTb21lIGJ1aWxkIGluIHNoYWRlcnNcblNoYWRlclsnaW1wb3J0J10oYmFzaWNFc3NsKTtcblNoYWRlclsnaW1wb3J0J10obGFtYmVydEVzc2wpO1xuU2hhZGVyWydpbXBvcnQnXShzdGFuZGFyZEVzc2wpO1xuU2hhZGVyWydpbXBvcnQnXSh3aXJlZnJhbWVFc3NsKTtcblNoYWRlclsnaW1wb3J0J10oc2t5Ym94RXNzbCk7XG5TaGFkZXJbJ2ltcG9ydCddKHByZXpFc3NsKTtcblxubGlicmFyeS50ZW1wbGF0ZSgnY2xheS5iYXNpYycsIFNoYWRlci5zb3VyY2UoJ2NsYXkuYmFzaWMudmVydGV4JyksIFNoYWRlci5zb3VyY2UoJ2NsYXkuYmFzaWMuZnJhZ21lbnQnKSk7XG5saWJyYXJ5LnRlbXBsYXRlKCdjbGF5LmxhbWJlcnQnLCBTaGFkZXIuc291cmNlKCdjbGF5LmxhbWJlcnQudmVydGV4JyksIFNoYWRlci5zb3VyY2UoJ2NsYXkubGFtYmVydC5mcmFnbWVudCcpKTtcbmxpYnJhcnkudGVtcGxhdGUoJ2NsYXkud2lyZWZyYW1lJywgU2hhZGVyLnNvdXJjZSgnY2xheS53aXJlZnJhbWUudmVydGV4JyksIFNoYWRlci5zb3VyY2UoJ2NsYXkud2lyZWZyYW1lLmZyYWdtZW50JykpO1xubGlicmFyeS50ZW1wbGF0ZSgnY2xheS5za3lib3gnLCBTaGFkZXIuc291cmNlKCdjbGF5LnNreWJveC52ZXJ0ZXgnKSwgU2hhZGVyLnNvdXJjZSgnY2xheS5za3lib3guZnJhZ21lbnQnKSk7XG5saWJyYXJ5LnRlbXBsYXRlKCdjbGF5LnByZXonLCBTaGFkZXIuc291cmNlKCdjbGF5LnByZXoudmVydGV4JyksIFNoYWRlci5zb3VyY2UoJ2NsYXkucHJlei5mcmFnbWVudCcpKTtcbmxpYnJhcnkudGVtcGxhdGUoJ2NsYXkuc3RhbmRhcmQnLCBTaGFkZXIuc291cmNlKCdjbGF5LnN0YW5kYXJkLnZlcnRleCcpLCBTaGFkZXIuc291cmNlKCdjbGF5LnN0YW5kYXJkLmZyYWdtZW50JykpO1xubGlicmFyeS50ZW1wbGF0ZSgnY2xheS5zdGFuZGFyZE1SJywgU2hhZGVyLnNvdXJjZSgnY2xheS5zdGFuZGFyZE1SLnZlcnRleCcpLCBTaGFkZXIuc291cmNlKCdjbGF5LnN0YW5kYXJkTVIuZnJhZ21lbnQnKSk7XG5cbi8vIFRPRE8gTXVzdCBleHBvcnQgYSBtb2R1bGUgYW5kIGJlIHVzZWQgaW4gdGhlIG90aGVyIG1vZHVsZXMuIE9yIGl0IHdpbGwgYmUgdHJlZSBzaGFrZWRcbmV4cG9ydCBkZWZhdWx0IGxpYnJhcnk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL2J1aWx0aW4uanNcbi8vIG1vZHVsZSBpZCA9IDg4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///88\n");

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"\\n@export clay.util.rand\\nhighp float rand(vec2 uv) {\\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\\n return fract(sin(sn) * c);\\n}\\n@end\\n@export clay.util.calculate_attenuation\\nuniform float attenuationFactor : 5.0;\\nfloat lightAttenuation(float dist, float range)\\n{\\n float attenuation = 1.0;\\n attenuation = dist*dist/(range*range+1.0);\\n float att_s = attenuationFactor;\\n attenuation = 1.0/(attenuation*att_s+1.0);\\n att_s = 1.0/(att_s+1.0);\\n attenuation = attenuation - att_s;\\n attenuation /= 1.0 - att_s;\\n return clamp(attenuation, 0.0, 1.0);\\n}\\n@end\\n@export clay.util.edge_factor\\n#ifdef SUPPORT_STANDARD_DERIVATIVES\\nfloat edgeFactor(float width)\\n{\\n vec3 d = fwidth(v_Barycentric);\\n vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\\n return min(min(a3.x, a3.y), a3.z);\\n}\\n#else\\nfloat edgeFactor(float width)\\n{\\n return 1.0;\\n}\\n#endif\\n@end\\n@export clay.util.encode_float\\nvec4 encodeFloat(const in float depth)\\n{\\n const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\\n const vec4 bit_mask = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\\n vec4 res = fract(depth * bitShifts);\\n res -= res.xxyz * bit_mask;\\n return res;\\n}\\n@end\\n@export clay.util.decode_float\\nfloat decodeFloat(const in vec4 color)\\n{\\n const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\\n return dot(color, bitShifts);\\n}\\n@end\\n@export clay.util.float\\n@import clay.util.encode_float\\n@import clay.util.decode_float\\n@end\\n@export clay.util.rgbm_decode\\nvec3 RGBMDecode(vec4 rgbm, float range) {\\n return range * rgbm.rgb * rgbm.a;\\n}\\n@end\\n@export clay.util.rgbm_encode\\nvec4 RGBMEncode(vec3 color, float range) {\\n if (dot(color, color) == 0.0) {\\n return vec4(0.0);\\n }\\n vec4 rgbm;\\n color /= range;\\n rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\\n rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\\n rgbm.rgb = color / rgbm.a;\\n return rgbm;\\n}\\n@end\\n@export clay.util.rgbm\\n@import clay.util.rgbm_decode\\n@import clay.util.rgbm_encode\\nvec4 decodeHDR(vec4 color)\\n{\\n#if defined(RGBM_DECODE) || defined(RGBM)\\n return vec4(RGBMDecode(color, 8.12), 1.0);\\n#else\\n return color;\\n#endif\\n}\\nvec4 encodeHDR(vec4 color)\\n{\\n#if defined(RGBM_ENCODE) || defined(RGBM)\\n return RGBMEncode(color.xyz, 8.12);\\n#else\\n return color;\\n#endif\\n}\\n@end\\n@export clay.util.srgb\\nvec4 sRGBToLinear(in vec4 value) {\\n return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\\n}\\nvec4 linearTosRGB(in vec4 value) {\\n return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\\n}\\n@end\\n@export clay.chunk.skinning_header\\n#ifdef SKINNING\\nattribute vec3 weight : WEIGHT;\\nattribute vec4 joint : JOINT;\\n#ifdef USE_SKIN_MATRICES_TEXTURE\\nuniform sampler2D skinMatricesTexture : ignore;\\nuniform float skinMatricesTextureSize: ignore;\\nmat4 getSkinMatrix(sampler2D tex, float idx) {\\n float j = idx * 4.0;\\n float x = mod(j, skinMatricesTextureSize);\\n float y = floor(j / skinMatricesTextureSize) + 0.5;\\n vec2 scale = vec2(skinMatricesTextureSize);\\n return mat4(\\n texture2D(tex, vec2(x + 0.5, y) / scale),\\n texture2D(tex, vec2(x + 1.5, y) / scale),\\n texture2D(tex, vec2(x + 2.5, y) / scale),\\n texture2D(tex, vec2(x + 3.5, y) / scale)\\n );\\n}\\nmat4 getSkinMatrix(float idx) {\\n return getSkinMatrix(skinMatricesTexture, idx);\\n}\\n#else\\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\\nmat4 getSkinMatrix(float idx) {\\n return skinMatrix[int(idx)];\\n}\\n#endif\\n#endif\\n@end\\n@export clay.chunk.skin_matrix\\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\\nif (weight.y > 1e-4)\\n{\\n skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\\n}\\nif (weight.z > 1e-4)\\n{\\n skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\\n}\\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\\nif (weightW > 1e-4)\\n{\\n skinMatrixWS += getSkinMatrix(joint.w) * weightW;\\n}\\n@end\\n@export clay.chunk.instancing_header\\n#ifdef INSTANCING\\nattribute vec4 instanceMat1;\\nattribute vec4 instanceMat2;\\nattribute vec4 instanceMat3;\\n#endif\\n@end\\n@export clay.chunk.instancing_matrix\\nmat4 instanceMat = mat4(\\n vec4(instanceMat1.xyz, 0.0),\\n vec4(instanceMat2.xyz, 0.0),\\n vec4(instanceMat3.xyz, 0.0),\\n vec4(instanceMat1.w, instanceMat2.w, instanceMat3.w, 1.0)\\n);\\n@end\\n@export clay.util.parallax_correct\\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\\n vec3 first = (boxMax - pos) / dir;\\n vec3 second = (boxMin - pos) / dir;\\n vec3 further = max(first, second);\\n float dist = min(further.x, min(further.y, further.z));\\n vec3 fixedPos = pos + dir * dist;\\n vec3 boxCenter = (boxMax + boxMin) * 0.5;\\n return normalize(fixedPos - boxCenter);\\n}\\n@end\\n@export clay.util.clamp_sample\\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\\n{\\n#ifdef STEREO\\n float eye = step(0.5, coord.x) * 0.5;\\n vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\\n#else\\n vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\\n#endif\\n return texture2D(texture, coordClamped);\\n}\\n@end\\n@export clay.util.ACES\\nvec3 ACESToneMapping(vec3 color)\\n{\\n const float A = 2.51;\\n const float B = 0.03;\\n const float C = 2.43;\\n const float D = 0.59;\\n const float E = 0.14;\\n return (color * (A * color + B)) / (color * (C * color + D) + E);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///89\n");

/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.basic.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform vec2 uvRepeat : [1.0, 1.0];\\nuniform vec2 uvOffset : [0.0, 0.0];\\nattribute vec2 texcoord : TEXCOORD_0;\\nattribute vec3 position : POSITION;\\nattribute vec3 barycentric;\\n@import clay.chunk.skinning_header\\n@import clay.chunk.instancing_header\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_Barycentric;\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\nvoid main()\\n{\\n vec4 skinnedPosition = vec4(position, 1.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n skinnedPosition = skinMatrixWS * skinnedPosition;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n skinnedPosition = instanceMat * skinnedPosition;\\n#endif\\n v_Texcoord = texcoord * uvRepeat + uvOffset;\\n v_Barycentric = barycentric;\\n gl_Position = worldViewProjection * skinnedPosition;\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n}\\n@end\\n@export clay.basic.fragment\\n#define DIFFUSEMAP_ALPHA_ALPHA\\nvarying vec2 v_Texcoord;\\nuniform sampler2D diffuseMap;\\nuniform vec3 color : [1.0, 1.0, 1.0];\\nuniform vec3 emission : [0.0, 0.0, 0.0];\\nuniform float alpha : 1.0;\\n#ifdef ALPHA_TEST\\nuniform float alphaCutoff: 0.9;\\n#endif\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\nuniform float lineWidth : 0.0;\\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\\nvarying vec3 v_Barycentric;\\n@import clay.util.edge_factor\\n@import clay.util.rgbm\\n@import clay.util.srgb\\n@import clay.util.ACES\\nvoid main()\\n{\\n gl_FragColor = vec4(color, alpha);\\n#ifdef VERTEX_COLOR\\n gl_FragColor *= v_Color;\\n#endif\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(gl_FragColor);\\n#endif\\n#ifdef DIFFUSEMAP_ENABLED\\n vec4 texel = decodeHDR(texture2D(diffuseMap, v_Texcoord));\\n#ifdef SRGB_DECODE\\n texel = sRGBToLinear(texel);\\n#endif\\n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\\n gl_FragColor.a = texel.a;\\n#endif\\n gl_FragColor.rgb *= texel.rgb;\\n#endif\\n gl_FragColor.rgb += emission;\\n if( lineWidth > 0.)\\n {\\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\\n }\\n#ifdef ALPHA_TEST\\n if (gl_FragColor.a < alphaCutoff) {\\n discard;\\n }\\n#endif\\n#ifdef TONEMAPPING\\n gl_FragColor.rgb = ACESToneMapping(gl_FragColor.rgb);\\n#endif\\n#ifdef SRGB_ENCODE\\n gl_FragColor = linearTosRGB(gl_FragColor);\\n#endif\\n gl_FragColor = encodeHDR(gl_FragColor);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9iYXNpYy5nbHNsLmpzPzk2NTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IGNsYXkuYmFzaWMudmVydGV4XFxudW5pZm9ybSBtYXQ0IHdvcmxkVmlld1Byb2plY3Rpb24gOiBXT1JMRFZJRVdQUk9KRUNUSU9OO1xcbnVuaWZvcm0gdmVjMiB1dlJlcGVhdCA6IFsxLjAsIDEuMF07XFxudW5pZm9ybSB2ZWMyIHV2T2Zmc2V0IDogWzAuMCwgMC4wXTtcXG5hdHRyaWJ1dGUgdmVjMiB0ZXhjb29yZCA6IFRFWENPT1JEXzA7XFxuYXR0cmlidXRlIHZlYzMgcG9zaXRpb24gOiBQT1NJVElPTjtcXG5hdHRyaWJ1dGUgdmVjMyBiYXJ5Y2VudHJpYztcXG5AaW1wb3J0IGNsYXkuY2h1bmsuc2tpbm5pbmdfaGVhZGVyXFxuQGltcG9ydCBjbGF5LmNodW5rLmluc3RhbmNpbmdfaGVhZGVyXFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxudmFyeWluZyB2ZWMzIHZfQmFyeWNlbnRyaWM7XFxuI2lmZGVmIFZFUlRFWF9DT0xPUlxcbmF0dHJpYnV0ZSB2ZWM0IGFfQ29sb3IgOiBDT0xPUjtcXG52YXJ5aW5nIHZlYzQgdl9Db2xvcjtcXG4jZW5kaWZcXG52b2lkIG1haW4oKVxcbntcXG4gdmVjNCBza2lubmVkUG9zaXRpb24gPSB2ZWM0KHBvc2l0aW9uLCAxLjApO1xcbiNpZmRlZiBTS0lOTklOR1xcbiBAaW1wb3J0IGNsYXkuY2h1bmsuc2tpbl9tYXRyaXhcXG4gc2tpbm5lZFBvc2l0aW9uID0gc2tpbk1hdHJpeFdTICogc2tpbm5lZFBvc2l0aW9uO1xcbiNlbmRpZlxcbiNpZmRlZiBJTlNUQU5DSU5HXFxuIEBpbXBvcnQgY2xheS5jaHVuay5pbnN0YW5jaW5nX21hdHJpeFxcbiBza2lubmVkUG9zaXRpb24gPSBpbnN0YW5jZU1hdCAqIHNraW5uZWRQb3NpdGlvbjtcXG4jZW5kaWZcXG4gdl9UZXhjb29yZCA9IHRleGNvb3JkICogdXZSZXBlYXQgKyB1dk9mZnNldDtcXG4gdl9CYXJ5Y2VudHJpYyA9IGJhcnljZW50cmljO1xcbiBnbF9Qb3NpdGlvbiA9IHdvcmxkVmlld1Byb2plY3Rpb24gKiBza2lubmVkUG9zaXRpb247XFxuI2lmZGVmIFZFUlRFWF9DT0xPUlxcbiB2X0NvbG9yID0gYV9Db2xvcjtcXG4jZW5kaWZcXG59XFxuQGVuZFxcbkBleHBvcnQgY2xheS5iYXNpYy5mcmFnbWVudFxcbiNkZWZpbmUgRElGRlVTRU1BUF9BTFBIQV9BTFBIQVxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIGRpZmZ1c2VNYXA7XFxudW5pZm9ybSB2ZWMzIGNvbG9yIDogWzEuMCwgMS4wLCAxLjBdO1xcbnVuaWZvcm0gdmVjMyBlbWlzc2lvbiA6IFswLjAsIDAuMCwgMC4wXTtcXG51bmlmb3JtIGZsb2F0IGFscGhhIDogMS4wO1xcbiNpZmRlZiBBTFBIQV9URVNUXFxudW5pZm9ybSBmbG9hdCBhbHBoYUN1dG9mZjogMC45O1xcbiNlbmRpZlxcbiNpZmRlZiBWRVJURVhfQ09MT1JcXG52YXJ5aW5nIHZlYzQgdl9Db2xvcjtcXG4jZW5kaWZcXG51bmlmb3JtIGZsb2F0IGxpbmVXaWR0aCA6IDAuMDtcXG51bmlmb3JtIHZlYzQgbGluZUNvbG9yIDogWzAuMCwgMC4wLCAwLjAsIDAuNl07XFxudmFyeWluZyB2ZWMzIHZfQmFyeWNlbnRyaWM7XFxuQGltcG9ydCBjbGF5LnV0aWwuZWRnZV9mYWN0b3JcXG5AaW1wb3J0IGNsYXkudXRpbC5yZ2JtXFxuQGltcG9ydCBjbGF5LnV0aWwuc3JnYlxcbkBpbXBvcnQgY2xheS51dGlsLkFDRVNcXG52b2lkIG1haW4oKVxcbntcXG4gZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgYWxwaGEpO1xcbiNpZmRlZiBWRVJURVhfQ09MT1JcXG4gZ2xfRnJhZ0NvbG9yICo9IHZfQ29sb3I7XFxuI2VuZGlmXFxuI2lmZGVmIFNSR0JfREVDT0RFXFxuIGdsX0ZyYWdDb2xvciA9IHNSR0JUb0xpbmVhcihnbF9GcmFnQ29sb3IpO1xcbiNlbmRpZlxcbiNpZmRlZiBESUZGVVNFTUFQX0VOQUJMRURcXG4gdmVjNCB0ZXhlbCA9IGRlY29kZUhEUih0ZXh0dXJlMkQoZGlmZnVzZU1hcCwgdl9UZXhjb29yZCkpO1xcbiNpZmRlZiBTUkdCX0RFQ09ERVxcbiB0ZXhlbCA9IHNSR0JUb0xpbmVhcih0ZXhlbCk7XFxuI2VuZGlmXFxuI2lmIGRlZmluZWQoRElGRlVTRU1BUF9BTFBIQV9BTFBIQSlcXG4gZ2xfRnJhZ0NvbG9yLmEgPSB0ZXhlbC5hO1xcbiNlbmRpZlxcbiBnbF9GcmFnQ29sb3IucmdiICo9IHRleGVsLnJnYjtcXG4jZW5kaWZcXG4gZ2xfRnJhZ0NvbG9yLnJnYiArPSBlbWlzc2lvbjtcXG4gaWYoIGxpbmVXaWR0aCA+IDAuKVxcbiB7XFxuIGdsX0ZyYWdDb2xvci5yZ2IgPSBtaXgoZ2xfRnJhZ0NvbG9yLnJnYiwgbGluZUNvbG9yLnJnYiwgKDEuMCAtIGVkZ2VGYWN0b3IobGluZVdpZHRoKSkgKiBsaW5lQ29sb3IuYSk7XFxuIH1cXG4jaWZkZWYgQUxQSEFfVEVTVFxcbiBpZiAoZ2xfRnJhZ0NvbG9yLmEgPCBhbHBoYUN1dG9mZikge1xcbiBkaXNjYXJkO1xcbiB9XFxuI2VuZGlmXFxuI2lmZGVmIFRPTkVNQVBQSU5HXFxuIGdsX0ZyYWdDb2xvci5yZ2IgPSBBQ0VTVG9uZU1hcHBpbmcoZ2xfRnJhZ0NvbG9yLnJnYik7XFxuI2VuZGlmXFxuI2lmZGVmIFNSR0JfRU5DT0RFXFxuIGdsX0ZyYWdDb2xvciA9IGxpbmVhclRvc1JHQihnbF9GcmFnQ29sb3IpO1xcbiNlbmRpZlxcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIoZ2xfRnJhZ0NvbG9yKTtcXG59XFxuQGVuZFwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9iYXNpYy5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSA5MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///90\n");

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"\\n@export clay.lambert.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\\nuniform mat4 world : WORLD;\\nuniform vec2 uvRepeat : [1.0, 1.0];\\nuniform vec2 uvOffset : [0.0, 0.0];\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\nattribute vec3 normal : NORMAL;\\nattribute vec3 barycentric;\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n@import clay.chunk.skinning_header\\n@import clay.chunk.instancing_header\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\nvarying vec3 v_Barycentric;\\nvoid main()\\n{\\n vec4 skinnedPosition = vec4(position, 1.0);\\n vec4 skinnedNormal = vec4(normal, 0.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n skinnedPosition = skinMatrixWS * skinnedPosition;\\n skinnedNormal = skinMatrixWS * skinnedNormal;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n skinnedPosition = instanceMat * skinnedPosition;\\n skinnedNormal = instanceMat * skinnedNormal;\\n#endif\\n gl_Position = worldViewProjection * skinnedPosition;\\n v_Texcoord = texcoord * uvRepeat + uvOffset;\\n v_Normal = normalize((worldInverseTranspose * skinnedNormal).xyz);\\n v_WorldPosition = ( world * skinnedPosition ).xyz;\\n v_Barycentric = barycentric;\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n}\\n@end\\n@export clay.lambert.fragment\\n#define DIFFUSEMAP_ALPHA_ALPHA\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\nuniform sampler2D diffuseMap;\\nuniform sampler2D alphaMap;\\nuniform vec3 color : [1.0, 1.0, 1.0];\\nuniform vec3 emission : [0.0, 0.0, 0.0];\\nuniform float alpha : 1.0;\\n#ifdef ALPHA_TEST\\nuniform float alphaCutoff: 0.9;\\n#endif\\nuniform float lineWidth : 0.0;\\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\\nvarying vec3 v_Barycentric;\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n#ifdef POINT_LIGHT_COUNT\\n@import clay.header.point_light\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n#ifdef SPOT_LIGHT_COUNT\\n@import clay.header.spot_light\\n#endif\\n@import clay.util.calculate_attenuation\\n@import clay.util.edge_factor\\n@import clay.util.rgbm\\n@import clay.plugin.compute_shadow_map\\n@import clay.util.ACES\\nvoid main()\\n{\\n gl_FragColor = vec4(color, alpha);\\n#ifdef VERTEX_COLOR\\n gl_FragColor *= v_Color;\\n#endif\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(gl_FragColor);\\n#endif\\n#ifdef DIFFUSEMAP_ENABLED\\n vec4 tex = texture2D( diffuseMap, v_Texcoord );\\n#ifdef SRGB_DECODE\\n tex.rgb = pow(tex.rgb, vec3(2.2));\\n#endif\\n gl_FragColor.rgb *= tex.rgb;\\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\\n gl_FragColor.a *= tex.a;\\n#endif\\n#endif\\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\\n {\\n diffuseColor += ambientLightColor[_idx_];\\n }\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\\n }}\\n#endif\\n#ifdef POINT_LIGHT_COUNT\\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsPoint[POINT_LIGHT_COUNT];\\n if( shadowEnabled )\\n {\\n computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\\n }\\n#endif\\n for(int i = 0; i < POINT_LIGHT_COUNT; i++)\\n {\\n vec3 lightPosition = pointLightPosition[i];\\n vec3 lightColor = pointLightColor[i];\\n float range = pointLightRange[i];\\n vec3 lightDirection = lightPosition - v_WorldPosition;\\n float dist = length(lightDirection);\\n float attenuation = lightAttenuation(dist, range);\\n lightDirection /= dist;\\n float ndl = dot( v_Normal, lightDirection );\\n float shadowContrib = 1.0;\\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\\n if( shadowEnabled )\\n {\\n shadowContrib = shadowContribsPoint[i];\\n }\\n#endif\\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\\n }\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\\n {\\n vec3 lightDirection = -directionalLightDirection[i];\\n vec3 lightColor = directionalLightColor[i];\\n float ndl = dot(v_Normal, normalize(lightDirection));\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if( shadowEnabled )\\n {\\n shadowContrib = shadowContribsDir[i];\\n }\\n#endif\\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\\n }\\n#endif\\n#ifdef SPOT_LIGHT_COUNT\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsSpot[SPOT_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\\n }\\n#endif\\n for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\\n {\\n vec3 lightPosition = -spotLightPosition[i];\\n vec3 spotLightDirection = -normalize( spotLightDirection[i] );\\n vec3 lightColor = spotLightColor[i];\\n float range = spotLightRange[i];\\n float a = spotLightUmbraAngleCosine[i];\\n float b = spotLightPenumbraAngleCosine[i];\\n float falloffFactor = spotLightFalloffFactor[i];\\n vec3 lightDirection = lightPosition - v_WorldPosition;\\n float dist = length(lightDirection);\\n float attenuation = lightAttenuation(dist, range);\\n lightDirection /= dist;\\n float c = dot(spotLightDirection, lightDirection);\\n float falloff;\\n falloff = clamp((c - a) /( b - a), 0.0, 1.0);\\n falloff = pow(falloff, falloffFactor);\\n float ndl = dot(v_Normal, lightDirection);\\n ndl = clamp(ndl, 0.0, 1.0);\\n float shadowContrib = 1.0;\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\\n if( shadowEnabled )\\n {\\n shadowContrib = shadowContribsSpot[i];\\n }\\n#endif\\n diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\\n }\\n#endif\\n gl_FragColor.rgb *= diffuseColor;\\n gl_FragColor.rgb += emission;\\n if(lineWidth > 0.)\\n {\\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\\n }\\n#ifdef ALPHA_TEST\\n if (gl_FragColor.a < alphaCutoff) {\\n discard;\\n }\\n#endif\\n#ifdef TONEMAPPING\\n gl_FragColor.rgb = ACESToneMapping(gl_FragColor.rgb);\\n#endif\\n#ifdef SRGB_ENCODE\\n gl_FragColor = linearTosRGB(gl_FragColor);\\n#endif\\n gl_FragColor = encodeHDR(gl_FragColor);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///91\n");

/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.wireframe.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 world : WORLD;\\nattribute vec3 position : POSITION;\\nattribute vec3 barycentric;\\n@import clay.chunk.skinning_header\\nvarying vec3 v_Barycentric;\\nvoid main()\\n{\\n vec3 skinnedPosition = position;\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\\n#endif\\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\\n v_Barycentric = barycentric;\\n}\\n@end\\n@export clay.wireframe.fragment\\nuniform vec3 color : [0.0, 0.0, 0.0];\\nuniform float alpha : 1.0;\\nuniform float lineWidth : 1.0;\\nvarying vec3 v_Barycentric;\\n@import clay.util.edge_factor\\nvoid main()\\n{\\n gl_FragColor.rgb = color;\\n gl_FragColor.a = (1.0-edgeFactor(lineWidth)) * alpha;\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS93aXJlZnJhbWUuZ2xzbC5qcz9mZTQwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LndpcmVmcmFtZS52ZXJ0ZXhcXG51bmlmb3JtIG1hdDQgd29ybGRWaWV3UHJvamVjdGlvbiA6IFdPUkxEVklFV1BST0pFQ1RJT047XFxudW5pZm9ybSBtYXQ0IHdvcmxkIDogV09STEQ7XFxuYXR0cmlidXRlIHZlYzMgcG9zaXRpb24gOiBQT1NJVElPTjtcXG5hdHRyaWJ1dGUgdmVjMyBiYXJ5Y2VudHJpYztcXG5AaW1wb3J0IGNsYXkuY2h1bmsuc2tpbm5pbmdfaGVhZGVyXFxudmFyeWluZyB2ZWMzIHZfQmFyeWNlbnRyaWM7XFxudm9pZCBtYWluKClcXG57XFxuIHZlYzMgc2tpbm5lZFBvc2l0aW9uID0gcG9zaXRpb247XFxuI2lmZGVmIFNLSU5OSU5HXFxuIEBpbXBvcnQgY2xheS5jaHVuay5za2luX21hdHJpeFxcbiBza2lubmVkUG9zaXRpb24gPSAoc2tpbk1hdHJpeFdTICogdmVjNChwb3NpdGlvbiwgMS4wKSkueHl6O1xcbiNlbmRpZlxcbiBnbF9Qb3NpdGlvbiA9IHdvcmxkVmlld1Byb2plY3Rpb24gKiB2ZWM0KHNraW5uZWRQb3NpdGlvbiwgMS4wICk7XFxuIHZfQmFyeWNlbnRyaWMgPSBiYXJ5Y2VudHJpYztcXG59XFxuQGVuZFxcbkBleHBvcnQgY2xheS53aXJlZnJhbWUuZnJhZ21lbnRcXG51bmlmb3JtIHZlYzMgY29sb3IgOiBbMC4wLCAwLjAsIDAuMF07XFxudW5pZm9ybSBmbG9hdCBhbHBoYSA6IDEuMDtcXG51bmlmb3JtIGZsb2F0IGxpbmVXaWR0aCA6IDEuMDtcXG52YXJ5aW5nIHZlYzMgdl9CYXJ5Y2VudHJpYztcXG5AaW1wb3J0IGNsYXkudXRpbC5lZGdlX2ZhY3RvclxcbnZvaWQgbWFpbigpXFxue1xcbiBnbF9GcmFnQ29sb3IucmdiID0gY29sb3I7XFxuIGdsX0ZyYWdDb2xvci5hID0gKDEuMC1lZGdlRmFjdG9yKGxpbmVXaWR0aCkpICogYWxwaGE7XFxufVxcbkBlbmRcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2Uvd2lyZWZyYW1lLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDkyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///92\n");

/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Timeline__ = __webpack_require__(94);\n// DEPRECATED\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__Timeline__[\"a\" /* default */]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvYW5pbWF0aW9uL1RpbWVsaW5lLmpzP2Y2YzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gREVQUkVDQVRFRFxuaW1wb3J0IFRpbWVsaW5lIGZyb20gJy4uL1RpbWVsaW5lJztcbmV4cG9ydCBkZWZhdWx0IFRpbWVsaW5lO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2FuaW1hdGlvbi9UaW1lbGluZS5qc1xuLy8gbW9kdWxlIGlkID0gOTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///93\n");

/***/ }),
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__animation_Animator__ = __webpack_require__(95);\n\n\n\n\n\n/**\n * Animation is global timeline that schedule all clips. each frame animation will set the time of clips to current and update the states of clips\n * @constructor clay.Timeline\n * @extends clay.core.Base\n *\n * @example\n * var animation = new clay.Timeline();\n * var node = new clay.Node();\n * animation.animate(node.position)\n *     .when(1000, {\n *         x: 500,\n *         y: 500\n *     })\n *     .when(2000, {\n *         x: 100,\n *         y: 100\n *     })\n *     .when(3000, {\n *         z: 10\n *     })\n *     .start('spline');\n */\nvar Timeline = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.Timeline# */{\n        /**\n         * stage is an object with render method, each frame if there exists any animating clips, stage.render will be called\n         * @type {Object}\n         */\n        stage: null,\n\n        _clips: [],\n\n        _running: false,\n\n        _time: 0,\n\n        _paused: false,\n\n        _pausedTime: 0\n    };\n},\n/** @lends clay.Timeline.prototype */\n{\n\n    /**\n     * Add animator\n     * @param {clay.animate.Animator} animator\n     */\n    addAnimator: function (animator) {\n        animator.animation = this;\n        var clips = animator.getClips();\n        for (var i = 0; i < clips.length; i++) {\n            this.addClip(clips[i]);\n        }\n    },\n\n    /**\n     * @param {clay.animation.Clip} clip\n     */\n    addClip: function (clip) {\n        if (this._clips.indexOf(clip) < 0) {\n            this._clips.push(clip);\n        }\n    },\n\n    /**\n     * @param  {clay.animation.Clip} clip\n     */\n    removeClip: function (clip) {\n        var idx = this._clips.indexOf(clip);\n        if (idx >= 0) {\n            this._clips.splice(idx, 1);\n        }\n    },\n\n    /**\n     * Remove animator\n     * @param {clay.animate.Animator} animator\n     */\n    removeAnimator: function (animator) {\n        var clips = animator.getClips();\n        for (var i = 0; i < clips.length; i++) {\n            this.removeClip(clips[i]);\n        }\n        animator.animation = null;\n    },\n\n    _update: function () {\n\n        var time = Date.now() - this._pausedTime;\n        var delta = time - this._time;\n        var clips = this._clips;\n        var len = clips.length;\n\n        var deferredEvents = [];\n        var deferredClips = [];\n        for (var i = 0; i < len; i++) {\n            var clip = clips[i];\n            var e = clip.step(time, delta, false);\n            // Throw out the events need to be called after\n            // stage.render, like finish\n            if (e) {\n                deferredEvents.push(e);\n                deferredClips.push(clip);\n            }\n        }\n\n        // Remove the finished clip\n        for (var i = 0; i < len;) {\n            if (clips[i]._needsRemove) {\n                clips[i] = clips[len-1];\n                clips.pop();\n                len--;\n            } else {\n                i++;\n            }\n        }\n\n        len = deferredEvents.length;\n        for (var i = 0; i < len; i++) {\n            deferredClips[i].fire(deferredEvents[i]);\n        }\n\n        this._time = time;\n\n        this.trigger('frame', delta);\n\n        if (this.stage && this.stage.render) {\n            this.stage.render();\n        }\n    },\n    /**\n     * Start running animation\n     */\n    start: function () {\n        var self = this;\n\n        this._running = true;\n        this._time = Date.now();\n\n        this._pausedTime = 0;\n\n        var requestAnimationFrame = __WEBPACK_IMPORTED_MODULE_1__core_vendor__[\"a\" /* default */].requestAnimationFrame;\n\n        function step() {\n            if (self._running) {\n\n                requestAnimationFrame(step);\n\n                if (!self._paused) {\n                    self._update();\n                }\n            }\n        }\n\n        requestAnimationFrame(step);\n\n    },\n    /**\n     * Stop running animation\n     */\n    stop: function () {\n        this._running = false;\n    },\n\n    /**\n     * Pause\n     */\n    pause: function () {\n        if (!this._paused) {\n            this._pauseStart = Date.now();\n            this._paused = true;\n        }\n    },\n\n    /**\n     * Resume\n     */\n    resume: function () {\n        if (this._paused) {\n            this._pausedTime += Date.now() - this._pauseStart;\n            this._paused = false;\n        }\n    },\n\n    /**\n     * Remove all clips\n     */\n    removeClipsAll: function () {\n        this._clips = [];\n    },\n    /**\n     * Create an animator\n     * @param  {Object} target\n     * @param  {Object} [options]\n     * @param  {boolean} [options.loop]\n     * @param  {Function} [options.getter]\n     * @param  {Function} [options.setter]\n     * @param  {Function} [options.interpolater]\n     * @return {clay.animation.Animator}\n     */\n    animate: function (target, options) {\n        options = options || {};\n        var animator = new __WEBPACK_IMPORTED_MODULE_2__animation_Animator__[\"a\" /* default */](\n            target,\n            options.loop,\n            options.getter,\n            options.setter,\n            options.interpolater\n        );\n        animator.animation = this;\n        return animator;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Timeline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///94\n");

/***/ }),
/* 95 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Clip__ = __webpack_require__(53);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__easing__ = __webpack_require__(54);\n\n\n\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n    return target[key];\n}\nfunction defaultSetter(target, key, value) {\n    target[key] = value;\n}\n\nfunction interpolateNumber(p0, p1, percent) {\n    return (p1 - p0) * percent + p0;\n}\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n    var len = p0.length;\n    if (arrDim == 1) {\n        for (var i = 0; i < len; i++) {\n            out[i] = interpolateNumber(p0[i], p1[i], percent);\n        }\n    }\n    else {\n        var len2 = p0[0].length;\n        for (var i = 0; i < len; i++) {\n            for (var j = 0; j < len2; j++) {\n                out[i][j] = interpolateNumber(\n                    p0[i][j], p1[i][j], percent\n                );\n            }\n        }\n    }\n}\n\nfunction isArrayLike(data) {\n    if (typeof(data) == 'undefined') {\n        return false;\n    } else if (typeof(data) == 'string') {\n        return false;\n    } else {\n        return typeof(data.length) == 'number';\n    }\n}\n\nfunction cloneValue(value) {\n    if (isArrayLike(value)) {\n        var len = value.length;\n        if (isArrayLike(value[0])) {\n            var ret = [];\n            for (var i = 0; i < len; i++) {\n                ret.push(arraySlice.call(value[i]));\n            }\n            return ret;\n        } else {\n            return arraySlice.call(value);\n        }\n    } else {\n        return value;\n    }\n}\n\nfunction catmullRomInterpolateArray(\n    p0, p1, p2, p3, t, t2, t3, out, arrDim\n) {\n    var len = p0.length;\n    if (arrDim == 1) {\n        for (var i = 0; i < len; i++) {\n            out[i] = catmullRomInterpolate(\n                p0[i], p1[i], p2[i], p3[i], t, t2, t3\n            );\n        }\n    } else {\n        var len2 = p0[0].length;\n        for (var i = 0; i < len; i++) {\n            for (var j = 0; j < len2; j++) {\n                out[i][j] = catmullRomInterpolate(\n                    p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                    t, t2, t3\n                );\n            }\n        }\n    }\n}\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3\n            + (- 3 * (p1 - p2) - 2 * v0 - v1) * t2\n            + v0 * t + p1;\n}\n\n// arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\nfunction fillArr(arr0, arr1, arrDim) {\n    var arr0Len = arr0.length;\n    var arr1Len = arr1.length;\n    if (arr0Len !== arr1Len) {\n        // FIXME Not work for TypedArray\n        var isPreviousLarger = arr0Len > arr1Len;\n        if (isPreviousLarger) {\n            // Cut the previous\n            arr0.length = arr1Len;\n        }\n        else {\n            // Fill the previous\n            for (var i = arr0Len; i < arr1Len; i++) {\n                arr0.push(\n                    arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                );\n            }\n        }\n    }\n    // Handling NaN value\n    var len2 = arr0[0] && arr0[0].length;\n    for (var i = 0; i < arr0.length; i++) {\n        if (arrDim === 1) {\n            if (isNaN(arr0[i])) {\n                arr0[i] = arr1[i];\n            }\n        }\n        else {\n            for (var j = 0; j < len2; j++) {\n                if (isNaN(arr0[i][j])) {\n                    arr0[i][j] = arr1[i][j];\n                }\n            }\n        }\n    }\n}\n\nfunction isArraySame(arr0, arr1, arrDim) {\n    if (arr0 === arr1) {\n        return true;\n    }\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    if (arrDim === 1) {\n        for (var i = 0; i < len; i++) {\n            if (arr0[i] !== arr1[i]) {\n                return false;\n            }\n        }\n    }\n    else {\n        var len2 = arr0[0].length;\n        for (var i = 0; i < len; i++) {\n            for (var j = 0; j < len2; j++) {\n                if (arr0[i][j] !== arr1[i][j]) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n\nfunction createTrackClip(animator, globalEasing, oneTrackDone, keyframes, propName, interpolater, maxTime) {\n    var getter = animator._getter;\n    var setter = animator._setter;\n    var useSpline = globalEasing === 'spline';\n\n    var trackLen = keyframes.length;\n    if (!trackLen) {\n        return;\n    }\n    // Guess data type\n    var firstVal = keyframes[0].value;\n    var isValueArray = isArrayLike(firstVal);\n\n    // For vertices morphing\n    var arrDim = (\n            isValueArray\n            && isArrayLike(firstVal[0])\n        )\n        ? 2 : 1;\n    // Sort keyframe as ascending\n    keyframes.sort(function(a, b) {\n        return a.time - b.time;\n    });\n\n    // Percents of each keyframe\n    var kfPercents = [];\n    // Value of each keyframe\n    var kfValues = [];\n    // Easing funcs of each keyframe.\n    var kfEasings = [];\n\n    var prevValue = keyframes[0].value;\n    var isAllValueEqual = true;\n    for (var i = 0; i < trackLen; i++) {\n        kfPercents.push(keyframes[i].time / maxTime);\n\n        // Assume value is a color when it is a string\n        var value = keyframes[i].value;\n\n        // Check if value is equal, deep check if value is array\n        if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n            || (!isValueArray && value === prevValue))) {\n            isAllValueEqual = false;\n        }\n        prevValue = value;\n\n        kfValues.push(value);\n        kfEasings.push(keyframes[i].easing);\n    }\n    if (isAllValueEqual) {\n        return;\n    }\n\n    var lastValue = kfValues[trackLen - 1];\n    // Polyfill array and NaN value\n    for (var i = 0; i < trackLen - 1; i++) {\n        if (isValueArray) {\n            fillArr(kfValues[i], lastValue, arrDim);\n        }\n        else {\n            if (isNaN(kfValues[i]) && !isNaN(lastValue)) {\n                kfValues[i] = lastValue;\n            }\n        }\n    }\n    isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n    // Cache the key of last frame to speed up when\n    // animation playback is sequency\n    var cacheKey = 0;\n    var cachePercent = 0;\n    var start;\n    var i, w;\n    var p0, p1, p2, p3;\n\n    var onframe = function(target, percent) {\n        // Find the range keyframes\n        // kf1-----kf2---------current--------kf3\n        // find kf2(i) and kf3(i + 1) and do interpolation\n        if (percent < cachePercent) {\n            // Start from next key\n            start = Math.min(cacheKey + 1, trackLen - 1);\n            for (i = start; i >= 0; i--) {\n                if (kfPercents[i] <= percent) {\n                    break;\n                }\n            }\n            i = Math.min(i, trackLen - 2);\n        }\n        else {\n            for (i = cacheKey; i < trackLen; i++) {\n                if (kfPercents[i] > percent) {\n                    break;\n                }\n            }\n            i = Math.min(i - 1, trackLen - 2);\n        }\n        cacheKey = i;\n        cachePercent = percent;\n\n        var range = (kfPercents[i + 1] - kfPercents[i]);\n        if (range === 0) {\n            return;\n        }\n        else {\n            w = (percent - kfPercents[i]) / range;\n            // Clamp 0 - 1\n            w = Math.max(Math.min(1, w), 0);\n        }\n        w = kfEasings[i + 1](w);\n\n        if (useSpline) {\n            p1 = kfValues[i];\n            p0 = kfValues[i === 0 ? i : i - 1];\n            p2 = kfValues[i > trackLen - 2 ? trackLen - 1 : i + 1];\n            p3 = kfValues[i > trackLen - 3 ? trackLen - 1 : i + 2];\n            if (interpolater) {\n                setter(\n                    target,\n                    propName,\n                    interpolater(\n                        getter(target, propName),\n                        p0, p1, p2, p3, w\n                    )\n                );\n            }\n            else if (isValueArray) {\n                catmullRomInterpolateArray(\n                    p0, p1, p2, p3, w, w*w, w*w*w,\n                    getter(target, propName),\n                    arrDim\n                );\n            }\n            else {\n                setter(\n                    target,\n                    propName,\n                    catmullRomInterpolate(p0, p1, p2, p3, w, w*w, w*w*w)\n                );\n            }\n        }\n        else {\n            if (interpolater) {\n                setter(\n                    target,\n                    propName,\n                    interpolater(\n                        getter(target, propName),\n                        kfValues[i],\n                        kfValues[i + 1],\n                        w\n                    )\n                );\n            }\n\n            else if (isValueArray) {\n                interpolateArray(\n                    kfValues[i], kfValues[i+1], w,\n                    getter(target, propName),\n                    arrDim\n                );\n            }\n            else {\n                setter(\n                    target,\n                    propName,\n                    interpolateNumber(kfValues[i], kfValues[i+1], w)\n                );\n            }\n        }\n    };\n\n    var clip = new __WEBPACK_IMPORTED_MODULE_0__Clip__[\"a\" /* default */]({\n        target: animator._target,\n        life: maxTime,\n        loop: animator._loop,\n        delay: animator._delay,\n        onframe: onframe,\n        onfinish: oneTrackDone\n    });\n\n    if (globalEasing && globalEasing !== 'spline') {\n        clip.setEasing(globalEasing);\n    }\n\n    return clip;\n}\n\n/**\n * @description Animator object can only be created by Animation.prototype.animate method.\n * After created, we can use {@link clay.animation.Animator#when} to add all keyframes and {@link clay.animation.Animator#start} it.\n * Clips will be automatically created and added to the animation instance which created this deferred object.\n *\n * @constructor clay.animation.Animator\n *\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n * @param {Function} interpolater\n */\nfunction Animator(target, loop, getter, setter, interpolater) {\n    this._tracks = {};\n    this._target = target;\n\n    this._loop = loop || false;\n\n    this._getter = getter || defaultGetter;\n    this._setter = setter || defaultSetter;\n\n    this._interpolater = interpolater || null;\n\n    this._delay = 0;\n\n    this._doneList = [];\n\n    this._onframeList = [];\n\n    this._clipList = [];\n\n    this._maxTime = 0;\n\n    this._lastKFTime = 0;\n}\n\nfunction noopEasing(w) {\n    return w;\n}\n\nAnimator.prototype = {\n\n    constructor: Animator,\n\n    /**\n     * @param {number} time Keyframe time using millisecond\n     * @param {Object} props A key-value object. Value can be number, 1d and 2d array\n     * @param {string|Function} [easing]\n     * @return {clay.animation.Animator}\n     * @memberOf clay.animation.Animator.prototype\n     */\n    when: function (time, props, easing) {\n\n        this._maxTime = Math.max(time, this._maxTime);\n\n        easing = (typeof easing === 'function' ? easing : __WEBPACK_IMPORTED_MODULE_1__easing__[\"a\" /* default */][easing]) || noopEasing;\n        for (var propName in props) {\n            if (!this._tracks[propName]) {\n                this._tracks[propName] = [];\n                // If time is 0\n                //  Then props is given initialize value\n                // Else\n                //  Initialize value from current prop value\n                if (time !== 0) {\n                    this._tracks[propName].push({\n                        time: 0,\n                        value: cloneValue(\n                            this._getter(this._target, propName)\n                        ),\n                        easing: easing\n                    });\n                }\n            }\n            this._tracks[propName].push({\n                time: parseInt(time),\n                value: props[propName],\n                easing: easing\n            });\n        }\n        return this;\n    },\n    /**\n     * @param {number} time During time since last keyframe\n     * @param {Object} props A key-value object. Value can be number, 1d and 2d array\n     * @param {string|Function} [easing]\n     * @return {clay.animation.Animator}\n     * @memberOf clay.animation.Animator.prototype\n     */\n    then: function (duringTime, props, easing) {\n        this.when(duringTime + this._lastKFTime, props, easing);\n        this._lastKFTime += duringTime;\n        return this;\n    },\n    /**\n     * callback when running animation\n     * @param  {Function} callback callback have two args, animating target and current percent\n     * @return {clay.animation.Animator}\n     * @memberOf clay.animation.Animator.prototype\n     */\n    during: function (callback) {\n        this._onframeList.push(callback);\n        return this;\n    },\n\n    _doneCallback: function () {\n        // Clear all tracks\n        this._tracks = {};\n        // Clear all clips\n        this._clipList.length = 0;\n\n        var doneList = this._doneList;\n        var len = doneList.length;\n        for (var i = 0; i < len; i++) {\n            doneList[i].call(this);\n        }\n    },\n    /**\n     * Start the animation\n     * @param  {string|Function} easing\n     * @return {clay.animation.Animator}\n     * @memberOf clay.animation.Animator.prototype\n     */\n    start: function (globalEasing) {\n\n        var self = this;\n        var clipCount = 0;\n\n        var oneTrackDone = function() {\n            clipCount--;\n            if (clipCount === 0) {\n                self._doneCallback();\n            }\n        };\n\n        var lastClip;\n        var clipMaxTime = 0;\n        for (var propName in this._tracks) {\n            var clip = createTrackClip(\n                this, globalEasing, oneTrackDone,\n                this._tracks[propName], propName, self._interpolater, self._maxTime\n            );\n            if (clip) {\n                clipMaxTime = Math.max(clipMaxTime, clip.life);\n                this._clipList.push(clip);\n                clipCount++;\n\n                // If start after added to animation\n                if (this.animation) {\n                    this.animation.addClip(clip);\n                }\n\n                lastClip = clip;\n            }\n        }\n\n        // Add during callback on the last clip\n        if (lastClip) {\n            var oldOnFrame = lastClip.onframe;\n            lastClip.onframe = function (target, percent) {\n                oldOnFrame(target, percent);\n\n                for (var i = 0; i < self._onframeList.length; i++) {\n                    self._onframeList[i](target, percent);\n                }\n            };\n        }\n\n        if (!clipCount) {\n            this._doneCallback();\n        }\n        return this;\n    },\n\n    /**\n     * Stop the animation\n     * @memberOf clay.animation.Animator.prototype\n     */\n    stop: function () {\n        for (var i = 0; i < this._clipList.length; i++) {\n            var clip = this._clipList[i];\n            this.animation.removeClip(clip);\n        }\n        this._clipList = [];\n    },\n    /**\n     * Delay given milliseconds\n     * @param  {number} time\n     * @return {clay.animation.Animator}\n     * @memberOf clay.animation.Animator.prototype\n     */\n    delay: function (time){\n        this._delay = time;\n        return this;\n    },\n    /**\n     * Callback after animation finished\n     * @param {Function} func\n     * @return {clay.animation.Animator}\n     * @memberOf clay.animation.Animator.prototype\n     */\n    done: function (func) {\n        if (func) {\n            this._doneList.push(func);\n        }\n        return this;\n    },\n    /**\n     * Get all clips created in start method.\n     * @return {clay.animation.Clip[]}\n     * @memberOf clay.animation.Animator.prototype\n     */\n    getClips: function () {\n        return this._clipList;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Animator);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///95\n");

/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Geometry__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Mesh__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Node__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__ = __webpack_require__(13);\n// TODO test\n\n\n\n\n\n\n\n/**\n * @namespace clay.util.mesh\n */\nvar meshUtil = {\n\n    /**\n     * Merge multiple meshes to one.\n     * Note that these meshes must have the same material\n     *\n     * @param {Array.<clay.Mesh>} meshes\n     * @param {boolean} applyWorldTransform\n     * @return {clay.Mesh}\n     * @memberOf clay.util.mesh\n     */\n    merge: function (meshes, applyWorldTransform) {\n\n        if (! meshes.length) {\n            return;\n        }\n\n        var templateMesh = meshes[0];\n        var templateGeo = templateMesh.geometry;\n        var material = templateMesh.material;\n\n        var geometry = new __WEBPACK_IMPORTED_MODULE_0__Geometry__[\"a\" /* default */]({\n            dynamic: false\n        });\n        geometry.boundingBox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n\n        var attributeNames = templateGeo.getEnabledAttributes();\n\n        for (var i = 0; i < attributeNames.length; i++) {\n            var name = attributeNames[i];\n            var attr = templateGeo.attributes[name];\n            // Extend custom attributes\n            if (!geometry.attributes[name]) {\n                geometry.attributes[name] = attr.clone(false);\n            }\n        }\n\n        var inverseTransposeMatrix = __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__[\"a\" /* default */].create();\n        // Initialize the array data and merge bounding box\n        var nVertex = 0;\n        var nFace = 0;\n        for (var k = 0; k < meshes.length; k++) {\n            var currentGeo = meshes[k].geometry;\n            if (currentGeo.boundingBox) {\n                currentGeo.boundingBox.applyTransform(applyWorldTransform ? meshes[k].worldTransform : meshes[k].localTransform);\n                geometry.boundingBox.union(currentGeo.boundingBox);\n            }\n            nVertex += currentGeo.vertexCount;\n            nFace += currentGeo.triangleCount;\n        }\n        for (var n = 0; n < attributeNames.length; n++) {\n            var name = attributeNames[n];\n            var attrib = geometry.attributes[name];\n            attrib.init(nVertex);\n        }\n        if (nVertex >= 0xffff) {\n            geometry.indices = new Uint32Array(nFace * 3);\n        }\n        else {\n            geometry.indices = new Uint16Array(nFace * 3);\n        }\n\n        var vertexOffset = 0;\n        var indicesOffset = 0;\n        var useIndices = templateGeo.isUseIndices();\n\n        for (var mm = 0; mm < meshes.length; mm++) {\n            var mesh = meshes[mm];\n            var currentGeo = mesh.geometry;\n\n            var nVertex = currentGeo.vertexCount;\n\n            var matrix = applyWorldTransform ? mesh.worldTransform.array : mesh.localTransform.array;\n            __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__[\"a\" /* default */].invert(inverseTransposeMatrix, matrix);\n            __WEBPACK_IMPORTED_MODULE_5__glmatrix_mat4__[\"a\" /* default */].transpose(inverseTransposeMatrix, inverseTransposeMatrix);\n\n            for (var nn = 0; nn < attributeNames.length; nn++) {\n                var name = attributeNames[nn];\n                var currentAttr = currentGeo.attributes[name];\n                var targetAttr = geometry.attributes[name];\n                // Skip the unused attributes;\n                if (!currentAttr.value.length) {\n                    continue;\n                }\n                var len = currentAttr.value.length;\n                var size = currentAttr.size;\n                var offset = vertexOffset * size;\n                var count = len / size;\n                for (var i = 0; i < len; i++) {\n                    targetAttr.value[offset + i] = currentAttr.value[i];\n                }\n                // Transform position, normal and tangent\n                if (name === 'position') {\n                    __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec3__[\"a\" /* default */].forEach(targetAttr.value, size, offset, count, __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec3__[\"a\" /* default */].transformMat4, matrix);\n                }\n                else if (name === 'normal' || name === 'tangent') {\n                    __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec3__[\"a\" /* default */].forEach(targetAttr.value, size, offset, count, __WEBPACK_IMPORTED_MODULE_4__glmatrix_vec3__[\"a\" /* default */].transformMat4, inverseTransposeMatrix);\n                }\n            }\n\n            if (useIndices) {\n                var len = currentGeo.indices.length;\n                for (var i = 0; i < len; i++) {\n                    geometry.indices[i + indicesOffset] = currentGeo.indices[i] + vertexOffset;\n                }\n                indicesOffset += len;\n            }\n\n            vertexOffset += nVertex;\n        }\n\n        return new __WEBPACK_IMPORTED_MODULE_1__Mesh__[\"a\" /* default */]({\n            material: material,\n            geometry: geometry\n        });\n    },\n\n    /**\n     * Split mesh into sub meshes, each mesh will have maxJointNumber joints.\n     * @param {clay.Mesh} mesh\n     * @param {number} maxJointNumber\n     * @param {boolean} inPlace\n     * @return {clay.Node}\n     *\n     * @memberOf clay.util.mesh\n     */\n\n    // FIXME, Have issues on some models\n    splitByJoints: function (mesh, maxJointNumber, inPlace) {\n        var geometry = mesh.geometry;\n        var skeleton = mesh.skeleton;\n        var material = mesh.material;\n        var joints = mesh.joints;\n        if (!geometry || !skeleton || !joints.length) {\n            return;\n        }\n        if (joints.length < maxJointNumber) {\n            return mesh;\n        }\n\n\n        var indices = geometry.indices;\n\n        var faceLen = geometry.triangleCount;\n        var rest = faceLen;\n        var isFaceAdded = [];\n        var jointValues = geometry.attributes.joint.value;\n        for (var i = 0; i < faceLen; i++) {\n            isFaceAdded[i] = false;\n        }\n        var addedJointIdxPerFace = [];\n\n        var buckets = [];\n\n        var getJointByIndex = function (idx) {\n            return joints[idx];\n        };\n        while (rest > 0) {\n            var bucketTriangles = [];\n            var bucketJointReverseMap = [];\n            var bucketJoints = [];\n            var subJointNumber = 0;\n            for (var i = 0; i < joints.length; i++) {\n                bucketJointReverseMap[i] = -1;\n            }\n            for (var f = 0; f < faceLen; f++) {\n                if (isFaceAdded[f]) {\n                    continue;\n                }\n                var canAddToBucket = true;\n                var addedNumber = 0;\n                for (var i = 0; i < 3; i++) {\n\n                    var idx = indices[f * 3 + i];\n\n                    for (var j = 0; j < 4; j++) {\n                        var jointIdx = jointValues[idx * 4 + j];\n\n                        if (jointIdx >= 0) {\n                            if (bucketJointReverseMap[jointIdx] === -1) {\n                                if (subJointNumber < maxJointNumber) {\n                                    bucketJointReverseMap[jointIdx] = subJointNumber;\n                                    bucketJoints[subJointNumber++] = jointIdx;\n                                    addedJointIdxPerFace[addedNumber++] = jointIdx;\n                                }\n                                else {\n                                    canAddToBucket = false;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!canAddToBucket) {\n                    // Reverse operation\n                    for (var i = 0; i < addedNumber; i++) {\n                        bucketJointReverseMap[addedJointIdxPerFace[i]] = -1;\n                        bucketJoints.pop();\n                        subJointNumber--;\n                    }\n                }\n                else {\n                    bucketTriangles.push(indices.subarray(f * 3, (f + 1) * 3));\n\n                    isFaceAdded[f] = true;\n                    rest--;\n                }\n            }\n            buckets.push({\n                triangles: bucketTriangles,\n                joints: bucketJoints.map(getJointByIndex),\n                jointReverseMap: bucketJointReverseMap\n            });\n        }\n\n        var root = new __WEBPACK_IMPORTED_MODULE_2__Node__[\"a\" /* default */]({\n            name: mesh.name\n        });\n        var attribNames = geometry.getEnabledAttributes();\n\n        attribNames.splice(attribNames.indexOf('joint'), 1);\n        // Map from old vertex index to new vertex index\n        var newIndices = [];\n        for (var b = 0; b < buckets.length; b++) {\n            var bucket = buckets[b];\n            var jointReverseMap = bucket.jointReverseMap;\n            var subJointNumber = bucket.joints.length;\n\n            var subGeo = new __WEBPACK_IMPORTED_MODULE_0__Geometry__[\"a\" /* default */]();\n\n            var subMesh = new __WEBPACK_IMPORTED_MODULE_1__Mesh__[\"a\" /* default */]({\n                name: [mesh.name, i].join('-'),\n                // DON'T clone material.\n                material: material,\n                geometry: subGeo,\n                skeleton: skeleton,\n                joints: bucket.joints.slice()\n            });\n            var nVertex = 0;\n            var nVertex2 = geometry.vertexCount;\n            for (var i = 0; i < nVertex2; i++) {\n                newIndices[i] = -1;\n            }\n            // Count sub geo number\n            for (var f = 0; f < bucket.triangles.length; f++) {\n                var face = bucket.triangles[f];\n                for (var i = 0; i < 3; i++) {\n                    var idx = face[i];\n                    if (newIndices[idx] === -1) {\n                        newIndices[idx] = nVertex;\n                        nVertex++;\n                    }\n                }\n            }\n            for (var a = 0; a < attribNames.length; a++) {\n                var attribName = attribNames[a];\n                var subAttrib = subGeo.attributes[attribName];\n                subAttrib.init(nVertex);\n            }\n            subGeo.attributes.joint.value = new Float32Array(nVertex * 4);\n\n            if (nVertex > 0xffff) {\n                subGeo.indices = new Uint32Array(bucket.triangles.length * 3);\n            }\n            else {\n                subGeo.indices = new Uint16Array(bucket.triangles.length * 3);\n            }\n\n            var indicesOffset = 0;\n            nVertex = 0;\n            for (var i = 0; i < nVertex2; i++) {\n                newIndices[i] = -1;\n            }\n\n            for (var f = 0; f < bucket.triangles.length; f++) {\n                var triangle = bucket.triangles[f];\n                for (var i = 0; i < 3; i++) {\n\n                    var idx = triangle[i];\n\n                    if (newIndices[idx] === -1) {\n                        newIndices[idx] = nVertex;\n                        for (var a = 0; a < attribNames.length; a++) {\n                            var attribName = attribNames[a];\n                            var attrib = geometry.attributes[attribName];\n                            var subAttrib = subGeo.attributes[attribName];\n                            var size = attrib.size;\n\n                            for (var j = 0; j < size; j++) {\n                                subAttrib.value[nVertex * size + j] = attrib.value[idx * size + j];\n                            }\n                        }\n                        for (var j = 0; j < 4; j++) {\n                            var jointIdx = geometry.attributes.joint.value[idx * 4 + j];\n                            var offset = nVertex * 4 + j;\n                            if (jointIdx >= 0) {\n                                subGeo.attributes.joint.value[offset] = jointReverseMap[jointIdx];\n                            }\n                            else {\n                                subGeo.attributes.joint.value[offset] = -1;\n                            }\n                        }\n                        nVertex++;\n                    }\n                    subGeo.indices[indicesOffset++] = newIndices[idx];\n                }\n            }\n            subGeo.updateBoundingBox();\n\n            root.add(subMesh);\n        }\n        var children = mesh.children();\n        for (var i = 0; i < children.length; i++) {\n            root.add(children[i]);\n        }\n        root.position.copy(mesh.position);\n        root.rotation.copy(mesh.rotation);\n        root.scale.copy(mesh.scale);\n\n        if (inPlace) {\n            if (mesh.getParent()) {\n                var parent = mesh.getParent();\n                parent.remove(mesh);\n                parent.add(root);\n            }\n        }\n        return root;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (meshUtil);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///96\n");

/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Task__ = __webpack_require__(56);\n\n\n\n/**\n * @constructor\n * @alias clay.async.TaskGroup\n * @extends clay.async.Task\n */\nvar TaskGroup = function () {\n\n    __WEBPACK_IMPORTED_MODULE_1__Task__[\"a\" /* default */].apply(this, arguments);\n\n    this._tasks = [];\n\n    this._fulfilledNumber = 0;\n\n    this._rejectedNumber = 0;\n};\n\nvar Ctor = function (){};\nCtor.prototype = __WEBPACK_IMPORTED_MODULE_1__Task__[\"a\" /* default */].prototype;\nTaskGroup.prototype = new Ctor();\n\nTaskGroup.prototype.constructor = TaskGroup;\n\n/**\n * Wait for all given tasks successed, task can also be any notifier object which will trigger success and error events. Like {@link clay.Texture2D}, {@link clay.TextureCube}, {@link clay.loader.GLTF}.\n * @param  {Array.<clay.async.Task>} tasks\n * @chainable\n * @example\n *     // Load texture list\n *     var list = ['a.jpg', 'b.jpg', 'c.jpg']\n *     var textures = list.map(function (src) {\n *         var texture = new clay.Texture2D();\n *         texture.load(src);\n *         return texture;\n *     });\n *     var taskGroup = new clay.async.TaskGroup();\n *     taskGroup.all(textures).success(function () {\n *         // Do some thing after all textures loaded\n *     });\n */\nTaskGroup.prototype.all = function (tasks) {\n    var count = 0;\n    var self = this;\n    var data = [];\n    this._tasks = tasks;\n    this._fulfilledNumber = 0;\n    this._rejectedNumber = 0;\n\n    __WEBPACK_IMPORTED_MODULE_0__core_util__[\"a\" /* default */].each(tasks, function (task, idx) {\n        if (!task || !task.once) {\n            return;\n        }\n        count++;\n        task.once('success', function (res) {\n            count--;\n\n            self._fulfilledNumber++;\n            // TODO\n            // Some tasks like texture, loader are not inherited from task\n            // We need to set the states here\n            task._fulfilled = true;\n            task._rejected = false;\n\n            data[idx] = res;\n            if (count === 0) {\n                self.resolve(data);\n            }\n        });\n        task.once('error', function () {\n\n            self._rejectedNumber ++;\n\n            task._fulfilled = false;\n            task._rejected = true;\n\n            self.reject(task);\n        });\n    });\n    if (count === 0) {\n        setTimeout(function () {\n            self.resolve(data);\n        });\n        return this;\n    }\n    return this;\n};\n/**\n * Wait for all given tasks finished, either successed or failed\n * @param  {Array.<clay.async.Task>} tasks\n * @return {clay.async.TaskGroup}\n */\nTaskGroup.prototype.allSettled = function (tasks) {\n    var count = 0;\n    var self = this;\n    var data = [];\n    if (tasks.length === 0) {\n        setTimeout(function () {\n            self.trigger('success', data);\n        });\n        return this;\n    }\n    this._tasks = tasks;\n\n    __WEBPACK_IMPORTED_MODULE_0__core_util__[\"a\" /* default */].each(tasks, function (task, idx) {\n        if (!task || !task.once) {\n            return;\n        }\n        count++;\n        task.once('success', function (res) {\n            count--;\n\n            self._fulfilledNumber++;\n\n            task._fulfilled = true;\n            task._rejected = false;\n\n            data[idx] = res;\n            if (count === 0) {\n                self.resolve(data);\n            }\n        });\n        task.once('error', function (err) {\n            count--;\n\n            self._rejectedNumber++;\n\n            task._fulfilled = false;\n            task._rejected = true;\n\n            // TODO\n            data[idx] = null;\n            if (count === 0) {\n                self.resolve(data);\n            }\n        });\n    });\n    return this;\n};\n/**\n * Get successed sub tasks number, recursive can be true if sub task is also a TaskGroup.\n * @param  {boolean} [recursive]\n * @return {number}\n */\nTaskGroup.prototype.getFulfilledNumber = function (recursive) {\n    if (recursive) {\n        var nFulfilled = 0;\n        for (var i = 0; i < this._tasks.length; i++) {\n            var task = this._tasks[i];\n            if (task instanceof TaskGroup) {\n                nFulfilled += task.getFulfilledNumber(recursive);\n            } else if(task._fulfilled) {\n                nFulfilled += 1;\n            }\n        }\n        return nFulfilled;\n    } else {\n        return this._fulfilledNumber;\n    }\n};\n\n/**\n * Get failed sub tasks number, recursive can be true if sub task is also a TaskGroup.\n * @param  {boolean} [recursive]\n * @return {number}\n */\nTaskGroup.prototype.getRejectedNumber = function (recursive) {\n    if (recursive) {\n        var nRejected = 0;\n        for (var i = 0; i < this._tasks.length; i++) {\n            var task = this._tasks[i];\n            if (task instanceof TaskGroup) {\n                nRejected += task.getRejectedNumber(recursive);\n            } else if(task._rejected) {\n                nRejected += 1;\n            }\n        }\n        return nRejected;\n    } else {\n        return this._rejectedNumber;\n    }\n};\n\n/**\n * Get finished sub tasks number, recursive can be true if sub task is also a TaskGroup.\n * @param  {boolean} [recursive]\n * @return {number}\n */\nTaskGroup.prototype.getSettledNumber = function (recursive) {\n\n    if (recursive) {\n        var nSettled = 0;\n        for (var i = 0; i < this._tasks.length; i++) {\n            var task = this._tasks[i];\n            if (task instanceof TaskGroup) {\n                nSettled += task.getSettledNumber(recursive);\n            } else if(task._rejected || task._fulfilled) {\n                nSettled += 1;\n            }\n        }\n        return nSettled;\n    } else {\n        return this._fulfilledNumber + this._rejectedNumber;\n    }\n};\n\n/**\n * Get all sub tasks number, recursive can be true if sub task is also a TaskGroup.\n * @param  {boolean} [recursive]\n * @return {number}\n */\nTaskGroup.prototype.getTaskNumber = function (recursive) {\n    if (recursive) {\n        var nTask = 0;\n        for (var i = 0; i < this._tasks.length; i++) {\n            var task = this._tasks[i];\n            if (task instanceof TaskGroup) {\n                nTask += task.getTaskNumber(recursive);\n            } else {\n                nTask += 1;\n            }\n        }\n        return nTask;\n    } else {\n        return this._tasks.length;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TaskGroup);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///97\n");

/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math_Ray__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math_Vector2__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Renderable__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__ = __webpack_require__(3);\n\n\n\n\n\n\n\n\n\n/**\n * @constructor clay.picking.RayPicking\n * @extends clay.core.Base\n */\nvar RayPicking = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(/** @lends clay.picking.RayPicking# */{\n    /**\n     * Target scene\n     * @type {clay.Scene}\n     */\n    scene: null,\n    /**\n     * Target camera\n     * @type {clay.Camera}\n     */\n    camera: null,\n    /**\n     * Target renderer\n     * @type {clay.Renderer}\n     */\n    renderer: null\n}, function () {\n    this._ray = new __WEBPACK_IMPORTED_MODULE_1__math_Ray__[\"a\" /* default */]();\n    this._ndc = new __WEBPACK_IMPORTED_MODULE_2__math_Vector2__[\"a\" /* default */]();\n},\n/** @lends clay.picking.RayPicking.prototype */\n{\n\n    /**\n     * Pick the nearest intersection object in the scene\n     * @param  {number} x Mouse position x\n     * @param  {number} y Mouse position y\n     * @param  {boolean} [forcePickAll=false] ignore ignorePicking\n     * @return {clay.picking.RayPicking~Intersection}\n     */\n    pick: function (x, y, forcePickAll) {\n        var out = this.pickAll(x, y, [], forcePickAll);\n        return out[0] || null;\n    },\n\n    /**\n     * Pick all intersection objects, wich will be sorted from near to far\n     * @param  {number} x Mouse position x\n     * @param  {number} y Mouse position y\n     * @param  {Array} [output]\n     * @param  {boolean} [forcePickAll=false] ignore ignorePicking\n     * @return {Array.<clay.picking.RayPicking~Intersection>}\n     */\n    pickAll: function (x, y, output, forcePickAll) {\n        this.renderer.screenToNDC(x, y, this._ndc);\n        this.camera.castRay(this._ndc, this._ray);\n\n        output = output || [];\n\n        this._intersectNode(this.scene, output, forcePickAll || false);\n\n        output.sort(this._intersectionCompareFunc);\n\n        return output;\n    },\n\n    _intersectNode: function (node, out, forcePickAll) {\n        if ((node instanceof __WEBPACK_IMPORTED_MODULE_5__Renderable__[\"a\" /* default */]) && node.isRenderable()) {\n            if ((!node.ignorePicking || forcePickAll)\n                && (\n                    // Only triangle mesh support ray picking\n                    (node.mode === __WEBPACK_IMPORTED_MODULE_6__core_glenum__[\"a\" /* default */].TRIANGLES && node.geometry.isUseIndices())\n                    // Or if geometry has it's own pickByRay, pick, implementation\n                    || node.geometry.pickByRay\n                    || node.geometry.pick\n                )\n            ) {\n                this._intersectRenderable(node, out);\n            }\n        }\n        for (var i = 0; i < node._children.length; i++) {\n            this._intersectNode(node._children[i], out, forcePickAll);\n        }\n    },\n\n    _intersectRenderable: (function () {\n\n        var v1 = new __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */]();\n        var v2 = new __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */]();\n        var v3 = new __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */]();\n        var ray = new __WEBPACK_IMPORTED_MODULE_1__math_Ray__[\"a\" /* default */]();\n        var worldInverse = new __WEBPACK_IMPORTED_MODULE_4__math_Matrix4__[\"a\" /* default */]();\n\n        return function (renderable, out) {\n\n            var isSkinnedMesh = renderable.isSkinnedMesh();\n            ray.copy(this._ray);\n            __WEBPACK_IMPORTED_MODULE_4__math_Matrix4__[\"a\" /* default */].invert(worldInverse, renderable.worldTransform);\n\n            // Skinned mesh will ignore the world transform.\n            if (!isSkinnedMesh) {\n                ray.applyTransform(worldInverse);\n            }\n\n            var geometry = renderable.geometry;\n\n            var bbox = isSkinnedMesh ? renderable.skeleton.boundingBox : geometry.boundingBox;\n\n            if (bbox && !ray.intersectBoundingBox(bbox)) {\n                return;\n            }\n            // Use user defined picking algorithm\n            if (geometry.pick) {\n                geometry.pick(\n                    this._ndc.x, this._ndc.y,\n                    this.renderer,\n                    this.camera,\n                    renderable, out\n                );\n                return;\n            }\n            // Use user defined ray picking algorithm\n            else if (geometry.pickByRay) {\n                geometry.pickByRay(ray, renderable, out);\n                return;\n            }\n\n            var cullBack = (renderable.cullFace === __WEBPACK_IMPORTED_MODULE_6__core_glenum__[\"a\" /* default */].BACK && renderable.frontFace === __WEBPACK_IMPORTED_MODULE_6__core_glenum__[\"a\" /* default */].CCW)\n                        || (renderable.cullFace === __WEBPACK_IMPORTED_MODULE_6__core_glenum__[\"a\" /* default */].FRONT && renderable.frontFace === __WEBPACK_IMPORTED_MODULE_6__core_glenum__[\"a\" /* default */].CW);\n\n            var point;\n            var indices = geometry.indices;\n            var positionAttr = geometry.attributes.position;\n            var weightAttr = geometry.attributes.weight;\n            var jointAttr = geometry.attributes.joint;\n            var skinMatricesArray;\n            var skinMatrices = [];\n            // Check if valid.\n            if (!positionAttr || !positionAttr.value || !indices) {\n                return;\n            }\n            if (isSkinnedMesh) {\n                skinMatricesArray = renderable.skeleton.getSubSkinMatrices(renderable.__uid__, renderable.joints);\n                for (var i = 0; i < renderable.joints.length; i++) {\n                    skinMatrices[i] = skinMatrices[i] || [];\n                    for (var k = 0; k < 16; k++) {\n                        skinMatrices[i][k] = skinMatricesArray[i * 16 + k];\n                    }\n                }\n                var pos = [];\n                var weight = [];\n                var joint = [];\n                var skinnedPos = [];\n                var tmp = [];\n                var skinnedPositionAttr = geometry.attributes.skinnedPosition;\n                if (!skinnedPositionAttr || !skinnedPositionAttr.value) {\n                    geometry.createAttribute('skinnedPosition', 'f', 3);\n                    skinnedPositionAttr = geometry.attributes.skinnedPosition;\n                    skinnedPositionAttr.init(geometry.vertexCount);\n                }\n                for (var i = 0; i < geometry.vertexCount; i++) {\n                    positionAttr.get(i, pos);\n                    weightAttr.get(i, weight);\n                    jointAttr.get(i, joint);\n                    weight[3] = 1 - weight[0] - weight[1] - weight[2];\n                    __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__[\"a\" /* default */].set(skinnedPos, 0, 0, 0);\n                    for (var k = 0; k < 4; k++) {\n                        if (joint[k] >= 0 && weight[k] > 1e-4) {\n                            __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__[\"a\" /* default */].transformMat4(tmp, pos, skinMatrices[joint[k]]);\n                            __WEBPACK_IMPORTED_MODULE_7__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(skinnedPos, skinnedPos, tmp, weight[k]);\n                        }\n                    }\n                    skinnedPositionAttr.set(i, skinnedPos);\n                }\n            }\n\n            for (var i = 0; i < indices.length; i += 3) {\n                var i1 = indices[i];\n                var i2 = indices[i + 1];\n                var i3 = indices[i + 2];\n                var finalPosAttr = isSkinnedMesh\n                    ? geometry.attributes.skinnedPosition\n                    : positionAttr;\n                finalPosAttr.get(i1, v1.array);\n                finalPosAttr.get(i2, v2.array);\n                finalPosAttr.get(i3, v3.array);\n\n                if (cullBack) {\n                    point = ray.intersectTriangle(v1, v2, v3, renderable.culling);\n                }\n                else {\n                    point = ray.intersectTriangle(v1, v3, v2, renderable.culling);\n                }\n                if (point) {\n                    var pointW = new __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */]();\n                    if (!isSkinnedMesh) {\n                        __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].transformMat4(pointW, point, renderable.worldTransform);\n                    }\n                    else {\n                        // TODO point maybe not right.\n                        __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].copy(pointW, point);\n                    }\n                    out.push(new RayPicking.Intersection(\n                        point, pointW, renderable, [i1, i2, i3], i / 3,\n                        __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].dist(pointW, this._ray.origin)\n                    ));\n                }\n            }\n        };\n    })(),\n\n    _intersectionCompareFunc: function (a, b) {\n        return a.distance - b.distance;\n    }\n});\n\n/**\n * @constructor clay.picking.RayPicking~Intersection\n * @param {clay.Vector3} point\n * @param {clay.Vector3} pointWorld\n * @param {clay.Node} target\n * @param {Array.<number>} triangle\n * @param {number} triangleIndex\n * @param {number} distance\n */\nRayPicking.Intersection = function (point, pointWorld, target, triangle, triangleIndex, distance) {\n    /**\n     * Intersection point in local transform coordinates\n     * @type {clay.Vector3}\n     */\n    this.point = point;\n    /**\n     * Intersection point in world transform coordinates\n     * @type {clay.Vector3}\n     */\n    this.pointWorld = pointWorld;\n    /**\n     * Intersection scene node\n     * @type {clay.Node}\n     */\n    this.target = target;\n    /**\n     * Intersection triangle, which is an array of vertex index\n     * @type {Array.<number>}\n     */\n    this.triangle = triangle;\n    /**\n     * Index of intersection triangle.\n     */\n    this.triangleIndex = triangleIndex;\n    /**\n     * Distance from intersection point to ray origin\n     * @type {number}\n     */\n    this.distance = distance;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (RayPicking);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///98\n");

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Geometry__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Plane__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_vendor__ = __webpack_require__(5);\n\n\n\n\n\n\n\nvar planeMatrix = new __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */]();\n\n/**\n * @constructor clay.geometry.Cube\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n * @param {number} [opt.depthSegments]\n * @param {boolean} [opt.inside]\n */\nvar Cube = __WEBPACK_IMPORTED_MODULE_0__Geometry__[\"a\" /* default */].extend(\n/**@lends clay.geometry.Cube# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1,\n    /**\n     * @type {number}\n     */\n    depthSegments: 1,\n    /**\n     * @type {boolean}\n     */\n    inside: false\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Cube.prototype */\n{\n    /**\n     * Build cube geometry\n     */\n    build: function() {\n\n        var planes = {\n            'px': createPlane('px', this.depthSegments, this.heightSegments),\n            'nx': createPlane('nx', this.depthSegments, this.heightSegments),\n            'py': createPlane('py', this.widthSegments, this.depthSegments),\n            'ny': createPlane('ny', this.widthSegments, this.depthSegments),\n            'pz': createPlane('pz', this.widthSegments, this.heightSegments),\n            'nz': createPlane('nz', this.widthSegments, this.heightSegments),\n        };\n\n        var attrList = ['position', 'texcoord0', 'normal'];\n        var vertexNumber = 0;\n        var faceNumber = 0;\n        for (var pos in planes) {\n            vertexNumber += planes[pos].vertexCount;\n            faceNumber += planes[pos].indices.length;\n        }\n        for (var k = 0; k < attrList.length; k++) {\n            this.attributes[attrList[k]].init(vertexNumber);\n        }\n        this.indices = new __WEBPACK_IMPORTED_MODULE_5__core_vendor__[\"a\" /* default */].Uint16Array(faceNumber);\n        var faceOffset = 0;\n        var vertexOffset = 0;\n        for (var pos in planes) {\n            var plane = planes[pos];\n            for (var k = 0; k < attrList.length; k++) {\n                var attrName = attrList[k];\n                var attrArray = plane.attributes[attrName].value;\n                var attrSize = plane.attributes[attrName].size;\n                var isNormal = attrName === 'normal';\n                for (var i = 0; i < attrArray.length; i++) {\n                    var value = attrArray[i];\n                    if (this.inside && isNormal) {\n                        value = -value;\n                    }\n                    this.attributes[attrName].value[i + attrSize * vertexOffset] = value;\n                }\n            }\n            var len = plane.indices.length;\n            for (var i = 0; i < plane.indices.length; i++) {\n                this.indices[i + faceOffset] = vertexOffset + plane.indices[this.inside ? (len - i - 1) : i];\n            }\n            faceOffset += plane.indices.length;\n            vertexOffset += plane.vertexCount;\n        }\n\n        this.boundingBox = new __WEBPACK_IMPORTED_MODULE_4__math_BoundingBox__[\"a\" /* default */]();\n        this.boundingBox.max.set(1, 1, 1);\n        this.boundingBox.min.set(-1, -1, -1);\n    }\n});\n\nfunction createPlane(pos, widthSegments, heightSegments) {\n\n    planeMatrix.identity();\n\n    var plane = new __WEBPACK_IMPORTED_MODULE_1__Plane__[\"a\" /* default */]({\n        widthSegments: widthSegments,\n        heightSegments: heightSegments\n    });\n\n    switch(pos) {\n        case 'px':\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].translate(planeMatrix, planeMatrix, __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].POSITIVE_X);\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].rotateY(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'nx':\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].translate(planeMatrix, planeMatrix, __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].NEGATIVE_X);\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].rotateY(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'py':\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].translate(planeMatrix, planeMatrix, __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].POSITIVE_Y);\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].rotateX(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'ny':\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].translate(planeMatrix, planeMatrix, __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].rotateX(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'pz':\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].translate(planeMatrix, planeMatrix, __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].POSITIVE_Z);\n            break;\n        case 'nz':\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].translate(planeMatrix, planeMatrix, __WEBPACK_IMPORTED_MODULE_3__math_Vector3__[\"a\" /* default */].NEGATIVE_Z);\n            __WEBPACK_IMPORTED_MODULE_2__math_Matrix4__[\"a\" /* default */].rotateY(planeMatrix, planeMatrix, Math.PI);\n            break;\n    }\n    plane.applyTransform(planeMatrix);\n    return plane;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Cube);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvZ2VvbWV0cnkvQ3ViZS5qcz8zZDRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHZW9tZXRyeSBmcm9tICcuLi9HZW9tZXRyeSc7XG5pbXBvcnQgUGxhbmUgZnJvbSAnLi9QbGFuZSc7XG5pbXBvcnQgTWF0cml4NCBmcm9tICcuLi9tYXRoL01hdHJpeDQnO1xuaW1wb3J0IFZlY3RvcjMgZnJvbSAnLi4vbWF0aC9WZWN0b3IzJztcbmltcG9ydCBCb3VuZGluZ0JveCBmcm9tICcuLi9tYXRoL0JvdW5kaW5nQm94JztcbmltcG9ydCB2ZW5kb3IgZnJvbSAnLi4vY29yZS92ZW5kb3InO1xuXG52YXIgcGxhbmVNYXRyaXggPSBuZXcgTWF0cml4NCgpO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvciBjbGF5Lmdlb21ldHJ5LkN1YmVcbiAqIEBleHRlbmRzIGNsYXkuR2VvbWV0cnlcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0XVxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHQud2lkdGhTZWdtZW50c11cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0LmhlaWdodFNlZ21lbnRzXVxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHQuZGVwdGhTZWdtZW50c11cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdC5pbnNpZGVdXG4gKi9cbnZhciBDdWJlID0gR2VvbWV0cnkuZXh0ZW5kKFxuLyoqQGxlbmRzIGNsYXkuZ2VvbWV0cnkuQ3ViZSMgKi9cbntcbiAgICBkeW5hbWljOiBmYWxzZSxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIHdpZHRoU2VnbWVudHM6IDEsXG4gICAgLyoqXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBoZWlnaHRTZWdtZW50czogMSxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGRlcHRoU2VnbWVudHM6IDEsXG4gICAgLyoqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgaW5zaWRlOiBmYWxzZVxufSwgZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5idWlsZCgpO1xufSxcbi8qKiBAbGVuZHMgY2xheS5nZW9tZXRyeS5DdWJlLnByb3RvdHlwZSAqL1xue1xuICAgIC8qKlxuICAgICAqIEJ1aWxkIGN1YmUgZ2VvbWV0cnlcbiAgICAgKi9cbiAgICBidWlsZDogZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIHBsYW5lcyA9IHtcbiAgICAgICAgICAgICdweCc6IGNyZWF0ZVBsYW5lKCdweCcsIHRoaXMuZGVwdGhTZWdtZW50cywgdGhpcy5oZWlnaHRTZWdtZW50cyksXG4gICAgICAgICAgICAnbngnOiBjcmVhdGVQbGFuZSgnbngnLCB0aGlzLmRlcHRoU2VnbWVudHMsIHRoaXMuaGVpZ2h0U2VnbWVudHMpLFxuICAgICAgICAgICAgJ3B5JzogY3JlYXRlUGxhbmUoJ3B5JywgdGhpcy53aWR0aFNlZ21lbnRzLCB0aGlzLmRlcHRoU2VnbWVudHMpLFxuICAgICAgICAgICAgJ255JzogY3JlYXRlUGxhbmUoJ255JywgdGhpcy53aWR0aFNlZ21lbnRzLCB0aGlzLmRlcHRoU2VnbWVudHMpLFxuICAgICAgICAgICAgJ3B6JzogY3JlYXRlUGxhbmUoJ3B6JywgdGhpcy53aWR0aFNlZ21lbnRzLCB0aGlzLmhlaWdodFNlZ21lbnRzKSxcbiAgICAgICAgICAgICdueic6IGNyZWF0ZVBsYW5lKCdueicsIHRoaXMud2lkdGhTZWdtZW50cywgdGhpcy5oZWlnaHRTZWdtZW50cyksXG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGF0dHJMaXN0ID0gWydwb3NpdGlvbicsICd0ZXhjb29yZDAnLCAnbm9ybWFsJ107XG4gICAgICAgIHZhciB2ZXJ0ZXhOdW1iZXIgPSAwO1xuICAgICAgICB2YXIgZmFjZU51bWJlciA9IDA7XG4gICAgICAgIGZvciAodmFyIHBvcyBpbiBwbGFuZXMpIHtcbiAgICAgICAgICAgIHZlcnRleE51bWJlciArPSBwbGFuZXNbcG9zXS52ZXJ0ZXhDb3VudDtcbiAgICAgICAgICAgIGZhY2VOdW1iZXIgKz0gcGxhbmVzW3Bvc10uaW5kaWNlcy5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBhdHRyTGlzdC5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW2F0dHJMaXN0W2tdXS5pbml0KHZlcnRleE51bWJlcik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbmRpY2VzID0gbmV3IHZlbmRvci5VaW50MTZBcnJheShmYWNlTnVtYmVyKTtcbiAgICAgICAgdmFyIGZhY2VPZmZzZXQgPSAwO1xuICAgICAgICB2YXIgdmVydGV4T2Zmc2V0ID0gMDtcbiAgICAgICAgZm9yICh2YXIgcG9zIGluIHBsYW5lcykge1xuICAgICAgICAgICAgdmFyIHBsYW5lID0gcGxhbmVzW3Bvc107XG4gICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IGF0dHJMaXN0Lmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGF0dHJOYW1lID0gYXR0ckxpc3Rba107XG4gICAgICAgICAgICAgICAgdmFyIGF0dHJBcnJheSA9IHBsYW5lLmF0dHJpYnV0ZXNbYXR0ck5hbWVdLnZhbHVlO1xuICAgICAgICAgICAgICAgIHZhciBhdHRyU2l6ZSA9IHBsYW5lLmF0dHJpYnV0ZXNbYXR0ck5hbWVdLnNpemU7XG4gICAgICAgICAgICAgICAgdmFyIGlzTm9ybWFsID0gYXR0ck5hbWUgPT09ICdub3JtYWwnO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXR0ckFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGF0dHJBcnJheVtpXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaW5zaWRlICYmIGlzTm9ybWFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IC12YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbYXR0ck5hbWVdLnZhbHVlW2kgKyBhdHRyU2l6ZSAqIHZlcnRleE9mZnNldF0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbGVuID0gcGxhbmUuaW5kaWNlcy5sZW5ndGg7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBsYW5lLmluZGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluZGljZXNbaSArIGZhY2VPZmZzZXRdID0gdmVydGV4T2Zmc2V0ICsgcGxhbmUuaW5kaWNlc1t0aGlzLmluc2lkZSA/IChsZW4gLSBpIC0gMSkgOiBpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZhY2VPZmZzZXQgKz0gcGxhbmUuaW5kaWNlcy5sZW5ndGg7XG4gICAgICAgICAgICB2ZXJ0ZXhPZmZzZXQgKz0gcGxhbmUudmVydGV4Q291bnQ7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmJvdW5kaW5nQm94ID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgICAgIHRoaXMuYm91bmRpbmdCb3gubWF4LnNldCgxLCAxLCAxKTtcbiAgICAgICAgdGhpcy5ib3VuZGluZ0JveC5taW4uc2V0KC0xLCAtMSwgLTEpO1xuICAgIH1cbn0pO1xuXG5mdW5jdGlvbiBjcmVhdGVQbGFuZShwb3MsIHdpZHRoU2VnbWVudHMsIGhlaWdodFNlZ21lbnRzKSB7XG5cbiAgICBwbGFuZU1hdHJpeC5pZGVudGl0eSgpO1xuXG4gICAgdmFyIHBsYW5lID0gbmV3IFBsYW5lKHtcbiAgICAgICAgd2lkdGhTZWdtZW50czogd2lkdGhTZWdtZW50cyxcbiAgICAgICAgaGVpZ2h0U2VnbWVudHM6IGhlaWdodFNlZ21lbnRzXG4gICAgfSk7XG5cbiAgICBzd2l0Y2gocG9zKSB7XG4gICAgICAgIGNhc2UgJ3B4JzpcbiAgICAgICAgICAgIE1hdHJpeDQudHJhbnNsYXRlKHBsYW5lTWF0cml4LCBwbGFuZU1hdHJpeCwgVmVjdG9yMy5QT1NJVElWRV9YKTtcbiAgICAgICAgICAgIE1hdHJpeDQucm90YXRlWShwbGFuZU1hdHJpeCwgcGxhbmVNYXRyaXgsIE1hdGguUEkgLyAyKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdueCc6XG4gICAgICAgICAgICBNYXRyaXg0LnRyYW5zbGF0ZShwbGFuZU1hdHJpeCwgcGxhbmVNYXRyaXgsIFZlY3RvcjMuTkVHQVRJVkVfWCk7XG4gICAgICAgICAgICBNYXRyaXg0LnJvdGF0ZVkocGxhbmVNYXRyaXgsIHBsYW5lTWF0cml4LCAtTWF0aC5QSSAvIDIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3B5JzpcbiAgICAgICAgICAgIE1hdHJpeDQudHJhbnNsYXRlKHBsYW5lTWF0cml4LCBwbGFuZU1hdHJpeCwgVmVjdG9yMy5QT1NJVElWRV9ZKTtcbiAgICAgICAgICAgIE1hdHJpeDQucm90YXRlWChwbGFuZU1hdHJpeCwgcGxhbmVNYXRyaXgsIC1NYXRoLlBJIC8gMik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbnknOlxuICAgICAgICAgICAgTWF0cml4NC50cmFuc2xhdGUocGxhbmVNYXRyaXgsIHBsYW5lTWF0cml4LCBWZWN0b3IzLk5FR0FUSVZFX1kpO1xuICAgICAgICAgICAgTWF0cml4NC5yb3RhdGVYKHBsYW5lTWF0cml4LCBwbGFuZU1hdHJpeCwgTWF0aC5QSSAvIDIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3B6JzpcbiAgICAgICAgICAgIE1hdHJpeDQudHJhbnNsYXRlKHBsYW5lTWF0cml4LCBwbGFuZU1hdHJpeCwgVmVjdG9yMy5QT1NJVElWRV9aKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdueic6XG4gICAgICAgICAgICBNYXRyaXg0LnRyYW5zbGF0ZShwbGFuZU1hdHJpeCwgcGxhbmVNYXRyaXgsIFZlY3RvcjMuTkVHQVRJVkVfWik7XG4gICAgICAgICAgICBNYXRyaXg0LnJvdGF0ZVkocGxhbmVNYXRyaXgsIHBsYW5lTWF0cml4LCBNYXRoLlBJKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBwbGFuZS5hcHBseVRyYW5zZm9ybShwbGFuZU1hdHJpeCk7XG4gICAgcmV0dXJuIHBsYW5lO1xufVxuXG5leHBvcnQgZGVmYXVsdCBDdWJlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvZ2VvbWV0cnkvQ3ViZS5qc1xuLy8gbW9kdWxlIGlkID0gOTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///99\n");

/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__TextureCube__ = __webpack_require__(17);\n\n\n\n\n// http://msdn.microsoft.com/en-us/library/windows/desktop/bb943991(v=vs.85).aspx\n// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\nvar DDS_MAGIC = 0x20534444;\n\nvar DDSD_CAPS = 0x1;\nvar DDSD_HEIGHT = 0x2;\nvar DDSD_WIDTH = 0x4;\nvar DDSD_PITCH = 0x8;\nvar DDSD_PIXELFORMAT = 0x1000;\nvar DDSD_MIPMAPCOUNT = 0x20000;\nvar DDSD_LINEARSIZE = 0x80000;\nvar DDSD_DEPTH = 0x800000;\n\nvar DDSCAPS_COMPLEX = 0x8;\nvar DDSCAPS_MIPMAP = 0x400000;\nvar DDSCAPS_TEXTURE = 0x1000;\n\nvar DDSCAPS2_CUBEMAP = 0x200;\nvar DDSCAPS2_CUBEMAP_POSITIVEX = 0x400;\nvar DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800;\nvar DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000;\nvar DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000;\nvar DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000;\nvar DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000;\nvar DDSCAPS2_VOLUME = 0x200000;\n\nvar DDPF_ALPHAPIXELS = 0x1;\nvar DDPF_ALPHA = 0x2;\nvar DDPF_FOURCC = 0x4;\nvar DDPF_RGB = 0x40;\nvar DDPF_YUV = 0x200;\nvar DDPF_LUMINANCE = 0x20000;\n\nfunction fourCCToInt32(value) {\n    return value.charCodeAt(0) +\n        (value.charCodeAt(1) << 8) +\n        (value.charCodeAt(2) << 16) +\n        (value.charCodeAt(3) << 24);\n}\n\nfunction int32ToFourCC(value) {\n    return String.fromCharCode(\n        value & 0xff,\n        (value >> 8) & 0xff,\n        (value >> 16) & 0xff,\n        (value >> 24) & 0xff\n    );\n}\n\nvar headerLengthInt = 31; // The header length in 32 bit ints\n\nvar FOURCC_DXT1 = fourCCToInt32('DXT1');\nvar FOURCC_DXT3 = fourCCToInt32('DXT3');\nvar FOURCC_DXT5 = fourCCToInt32('DXT5');\n// Offsets into the header array\nvar off_magic = 0;\n\nvar off_size = 1;\nvar off_flags = 2;\nvar off_height = 3;\nvar off_width = 4;\n\nvar off_mipmapCount = 7;\n\nvar off_pfFlags = 20;\nvar off_pfFourCC = 21;\n\nvar off_caps = 27;\nvar off_caps2 = 28;\nvar off_caps3 = 29;\nvar off_caps4 = 30;\n\nvar ret = {\n    parse: function(arrayBuffer, out) {\n        var header = new Int32Array(arrayBuffer, 0, headerLengthInt);\n        if (header[off_magic] !== DDS_MAGIC) {\n            return null;\n        }\n        if (!header(off_pfFlags) & DDPF_FOURCC) {\n            return null;\n        }\n\n        var fourCC = header(off_pfFourCC);\n        var width = header[off_width];\n        var height = header[off_height];\n        var isCubeMap = header[off_caps2] & DDSCAPS2_CUBEMAP;\n        var hasMipmap = header[off_flags] & DDSD_MIPMAPCOUNT;\n        var blockBytes, internalFormat;\n        switch(fourCC) {\n            case FOURCC_DXT1:\n                blockBytes = 8;\n                internalFormat = __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].COMPRESSED_RGB_S3TC_DXT1_EXT;\n                break;\n            case FOURCC_DXT3:\n                blockBytes = 16;\n                internalFormat = __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                break;\n            case FOURCC_DXT5:\n                blockBytes = 16;\n                internalFormat = __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                break;\n            default:\n                return null;\n        }\n        var dataOffset = header[off_size] + 4;\n        // TODO: Suppose all face are existed\n        var faceNumber = isCubeMap ? 6 : 1;\n        var mipmapCount = 1;\n        if (hasMipmap) {\n            mipmapCount = Math.max(1, header[off_mipmapCount]);\n        }\n\n        var textures = [];\n        for (var f = 0; f < faceNumber; f++) {\n            var _width = width;\n            var _height = height;\n            textures[f] = new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */]({\n                width: _width,\n                height: _height,\n                format: internalFormat\n            });\n            var mipmaps = [];\n            for (var i = 0; i < mipmapCount; i++) {\n                var dataLength = Math.max(4, _width) / 4 * Math.max(4, _height) / 4 * blockBytes;\n                var byteArray = new Uint8Array(arrayBuffer, dataOffset, dataLength);\n\n                dataOffset += dataLength;\n                _width *= 0.5;\n                _height *= 0.5;\n                mipmaps[i] = byteArray;\n            }\n            textures[f].pixels = mipmaps[0];\n            if (hasMipmap) {\n                textures[f].mipmaps = mipmaps;\n            }\n        }\n        // TODO\n        // return isCubeMap ? textures : textures[0];\n        if (out) {\n            out.width = textures[0].width;\n            out.height = textures[0].height;\n            out.format = textures[0].format;\n            out.pixels = textures[0].pixels;\n            out.mipmaps = textures[0].mipmaps;\n        }\n        else {\n            return textures[0];\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ret);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3V0aWwvZGRzLmpzP2UwZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRleHR1cmUgZnJvbSAnLi4vVGV4dHVyZSc7XG5pbXBvcnQgVGV4dHVyZTJEIGZyb20gJy4uL1RleHR1cmUyRCc7XG5pbXBvcnQgVGV4dHVyZUN1YmUgZnJvbSAnLi4vVGV4dHVyZUN1YmUnO1xuXG4vLyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvd2luZG93cy9kZXNrdG9wL2JiOTQzOTkxKHY9dnMuODUpLmFzcHhcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90b2ppL3dlYmdsLXRleHR1cmUtdXRpbHMvYmxvYi9tYXN0ZXIvdGV4dHVyZS11dGlsL2Rkcy5qc1xudmFyIEREU19NQUdJQyA9IDB4MjA1MzQ0NDQ7XG5cbnZhciBERFNEX0NBUFMgPSAweDE7XG52YXIgRERTRF9IRUlHSFQgPSAweDI7XG52YXIgRERTRF9XSURUSCA9IDB4NDtcbnZhciBERFNEX1BJVENIID0gMHg4O1xudmFyIEREU0RfUElYRUxGT1JNQVQgPSAweDEwMDA7XG52YXIgRERTRF9NSVBNQVBDT1VOVCA9IDB4MjAwMDA7XG52YXIgRERTRF9MSU5FQVJTSVpFID0gMHg4MDAwMDtcbnZhciBERFNEX0RFUFRIID0gMHg4MDAwMDA7XG5cbnZhciBERFNDQVBTX0NPTVBMRVggPSAweDg7XG52YXIgRERTQ0FQU19NSVBNQVAgPSAweDQwMDAwMDtcbnZhciBERFNDQVBTX1RFWFRVUkUgPSAweDEwMDA7XG5cbnZhciBERFNDQVBTMl9DVUJFTUFQID0gMHgyMDA7XG52YXIgRERTQ0FQUzJfQ1VCRU1BUF9QT1NJVElWRVggPSAweDQwMDtcbnZhciBERFNDQVBTMl9DVUJFTUFQX05FR0FUSVZFWCA9IDB4ODAwO1xudmFyIEREU0NBUFMyX0NVQkVNQVBfUE9TSVRJVkVZID0gMHgxMDAwO1xudmFyIEREU0NBUFMyX0NVQkVNQVBfTkVHQVRJVkVZID0gMHgyMDAwO1xudmFyIEREU0NBUFMyX0NVQkVNQVBfUE9TSVRJVkVaID0gMHg0MDAwO1xudmFyIEREU0NBUFMyX0NVQkVNQVBfTkVHQVRJVkVaID0gMHg4MDAwO1xudmFyIEREU0NBUFMyX1ZPTFVNRSA9IDB4MjAwMDAwO1xuXG52YXIgRERQRl9BTFBIQVBJWEVMUyA9IDB4MTtcbnZhciBERFBGX0FMUEhBID0gMHgyO1xudmFyIEREUEZfRk9VUkNDID0gMHg0O1xudmFyIEREUEZfUkdCID0gMHg0MDtcbnZhciBERFBGX1lVViA9IDB4MjAwO1xudmFyIEREUEZfTFVNSU5BTkNFID0gMHgyMDAwMDtcblxuZnVuY3Rpb24gZm91ckNDVG9JbnQzMih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS5jaGFyQ29kZUF0KDApICtcbiAgICAgICAgKHZhbHVlLmNoYXJDb2RlQXQoMSkgPDwgOCkgK1xuICAgICAgICAodmFsdWUuY2hhckNvZGVBdCgyKSA8PCAxNikgK1xuICAgICAgICAodmFsdWUuY2hhckNvZGVBdCgzKSA8PCAyNCk7XG59XG5cbmZ1bmN0aW9uIGludDMyVG9Gb3VyQ0ModmFsdWUpIHtcbiAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShcbiAgICAgICAgdmFsdWUgJiAweGZmLFxuICAgICAgICAodmFsdWUgPj4gOCkgJiAweGZmLFxuICAgICAgICAodmFsdWUgPj4gMTYpICYgMHhmZixcbiAgICAgICAgKHZhbHVlID4+IDI0KSAmIDB4ZmZcbiAgICApO1xufVxuXG52YXIgaGVhZGVyTGVuZ3RoSW50ID0gMzE7IC8vIFRoZSBoZWFkZXIgbGVuZ3RoIGluIDMyIGJpdCBpbnRzXG5cbnZhciBGT1VSQ0NfRFhUMSA9IGZvdXJDQ1RvSW50MzIoJ0RYVDEnKTtcbnZhciBGT1VSQ0NfRFhUMyA9IGZvdXJDQ1RvSW50MzIoJ0RYVDMnKTtcbnZhciBGT1VSQ0NfRFhUNSA9IGZvdXJDQ1RvSW50MzIoJ0RYVDUnKTtcbi8vIE9mZnNldHMgaW50byB0aGUgaGVhZGVyIGFycmF5XG52YXIgb2ZmX21hZ2ljID0gMDtcblxudmFyIG9mZl9zaXplID0gMTtcbnZhciBvZmZfZmxhZ3MgPSAyO1xudmFyIG9mZl9oZWlnaHQgPSAzO1xudmFyIG9mZl93aWR0aCA9IDQ7XG5cbnZhciBvZmZfbWlwbWFwQ291bnQgPSA3O1xuXG52YXIgb2ZmX3BmRmxhZ3MgPSAyMDtcbnZhciBvZmZfcGZGb3VyQ0MgPSAyMTtcblxudmFyIG9mZl9jYXBzID0gMjc7XG52YXIgb2ZmX2NhcHMyID0gMjg7XG52YXIgb2ZmX2NhcHMzID0gMjk7XG52YXIgb2ZmX2NhcHM0ID0gMzA7XG5cbnZhciByZXQgPSB7XG4gICAgcGFyc2U6IGZ1bmN0aW9uKGFycmF5QnVmZmVyLCBvdXQpIHtcbiAgICAgICAgdmFyIGhlYWRlciA9IG5ldyBJbnQzMkFycmF5KGFycmF5QnVmZmVyLCAwLCBoZWFkZXJMZW5ndGhJbnQpO1xuICAgICAgICBpZiAoaGVhZGVyW29mZl9tYWdpY10gIT09IEREU19NQUdJQykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFoZWFkZXIob2ZmX3BmRmxhZ3MpICYgRERQRl9GT1VSQ0MpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGZvdXJDQyA9IGhlYWRlcihvZmZfcGZGb3VyQ0MpO1xuICAgICAgICB2YXIgd2lkdGggPSBoZWFkZXJbb2ZmX3dpZHRoXTtcbiAgICAgICAgdmFyIGhlaWdodCA9IGhlYWRlcltvZmZfaGVpZ2h0XTtcbiAgICAgICAgdmFyIGlzQ3ViZU1hcCA9IGhlYWRlcltvZmZfY2FwczJdICYgRERTQ0FQUzJfQ1VCRU1BUDtcbiAgICAgICAgdmFyIGhhc01pcG1hcCA9IGhlYWRlcltvZmZfZmxhZ3NdICYgRERTRF9NSVBNQVBDT1VOVDtcbiAgICAgICAgdmFyIGJsb2NrQnl0ZXMsIGludGVybmFsRm9ybWF0O1xuICAgICAgICBzd2l0Y2goZm91ckNDKSB7XG4gICAgICAgICAgICBjYXNlIEZPVVJDQ19EWFQxOlxuICAgICAgICAgICAgICAgIGJsb2NrQnl0ZXMgPSA4O1xuICAgICAgICAgICAgICAgIGludGVybmFsRm9ybWF0ID0gVGV4dHVyZS5DT01QUkVTU0VEX1JHQl9TM1RDX0RYVDFfRVhUO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBGT1VSQ0NfRFhUMzpcbiAgICAgICAgICAgICAgICBibG9ja0J5dGVzID0gMTY7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxGb3JtYXQgPSBUZXh0dXJlLkNPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDNfRVhUO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBGT1VSQ0NfRFhUNTpcbiAgICAgICAgICAgICAgICBibG9ja0J5dGVzID0gMTY7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxGb3JtYXQgPSBUZXh0dXJlLkNPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDVfRVhUO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF0YU9mZnNldCA9IGhlYWRlcltvZmZfc2l6ZV0gKyA0O1xuICAgICAgICAvLyBUT0RPOiBTdXBwb3NlIGFsbCBmYWNlIGFyZSBleGlzdGVkXG4gICAgICAgIHZhciBmYWNlTnVtYmVyID0gaXNDdWJlTWFwID8gNiA6IDE7XG4gICAgICAgIHZhciBtaXBtYXBDb3VudCA9IDE7XG4gICAgICAgIGlmIChoYXNNaXBtYXApIHtcbiAgICAgICAgICAgIG1pcG1hcENvdW50ID0gTWF0aC5tYXgoMSwgaGVhZGVyW29mZl9taXBtYXBDb3VudF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHRleHR1cmVzID0gW107XG4gICAgICAgIGZvciAodmFyIGYgPSAwOyBmIDwgZmFjZU51bWJlcjsgZisrKSB7XG4gICAgICAgICAgICB2YXIgX3dpZHRoID0gd2lkdGg7XG4gICAgICAgICAgICB2YXIgX2hlaWdodCA9IGhlaWdodDtcbiAgICAgICAgICAgIHRleHR1cmVzW2ZdID0gbmV3IFRleHR1cmUyRCh7XG4gICAgICAgICAgICAgICAgd2lkdGg6IF93aWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IF9oZWlnaHQsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBpbnRlcm5hbEZvcm1hdFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB2YXIgbWlwbWFwcyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtaXBtYXBDb3VudDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGFMZW5ndGggPSBNYXRoLm1heCg0LCBfd2lkdGgpIC8gNCAqIE1hdGgubWF4KDQsIF9oZWlnaHQpIC8gNCAqIGJsb2NrQnl0ZXM7XG4gICAgICAgICAgICAgICAgdmFyIGJ5dGVBcnJheSA9IG5ldyBVaW50OEFycmF5KGFycmF5QnVmZmVyLCBkYXRhT2Zmc2V0LCBkYXRhTGVuZ3RoKTtcblxuICAgICAgICAgICAgICAgIGRhdGFPZmZzZXQgKz0gZGF0YUxlbmd0aDtcbiAgICAgICAgICAgICAgICBfd2lkdGggKj0gMC41O1xuICAgICAgICAgICAgICAgIF9oZWlnaHQgKj0gMC41O1xuICAgICAgICAgICAgICAgIG1pcG1hcHNbaV0gPSBieXRlQXJyYXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0ZXh0dXJlc1tmXS5waXhlbHMgPSBtaXBtYXBzWzBdO1xuICAgICAgICAgICAgaWYgKGhhc01pcG1hcCkge1xuICAgICAgICAgICAgICAgIHRleHR1cmVzW2ZdLm1pcG1hcHMgPSBtaXBtYXBzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgLy8gcmV0dXJuIGlzQ3ViZU1hcCA/IHRleHR1cmVzIDogdGV4dHVyZXNbMF07XG4gICAgICAgIGlmIChvdXQpIHtcbiAgICAgICAgICAgIG91dC53aWR0aCA9IHRleHR1cmVzWzBdLndpZHRoO1xuICAgICAgICAgICAgb3V0LmhlaWdodCA9IHRleHR1cmVzWzBdLmhlaWdodDtcbiAgICAgICAgICAgIG91dC5mb3JtYXQgPSB0ZXh0dXJlc1swXS5mb3JtYXQ7XG4gICAgICAgICAgICBvdXQucGl4ZWxzID0gdGV4dHVyZXNbMF0ucGl4ZWxzO1xuICAgICAgICAgICAgb3V0Lm1pcG1hcHMgPSB0ZXh0dXJlc1swXS5taXBtYXBzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRleHR1cmVzWzBdO1xuICAgICAgICB9XG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmV0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvdXRpbC9kZHMuanNcbi8vIG1vZHVsZSBpZCA9IDEwMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///100\n");

/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Texture2D__ = __webpack_require__(4);\n\n\nvar toChar = String.fromCharCode;\n\nvar MINELEN = 8;\nvar MAXELEN = 0x7fff;\nfunction rgbe2float(rgbe, buffer, offset, exposure) {\n    if (rgbe[3] > 0) {\n        var f = Math.pow(2.0, rgbe[3] - 128 - 8 + exposure);\n        buffer[offset + 0] = rgbe[0] * f;\n        buffer[offset + 1] = rgbe[1] * f;\n        buffer[offset + 2] = rgbe[2] * f;\n    }\n    else {\n        buffer[offset + 0] = 0;\n        buffer[offset + 1] = 0;\n        buffer[offset + 2] = 0;\n    }\n    buffer[offset + 3] = 1.0;\n    return buffer;\n}\n\nfunction uint82string(array, offset, size) {\n    var str = '';\n    for (var i = offset; i < size; i++) {\n        str += toChar(array[i]);\n    }\n    return str;\n}\n\nfunction copyrgbe(s, t) {\n    t[0] = s[0];\n    t[1] = s[1];\n    t[2] = s[2];\n    t[3] = s[3];\n}\n\n// TODO : check\nfunction oldReadColors(scan, buffer, offset, xmax) {\n    var rshift = 0, x = 0, len = xmax;\n    while (len > 0) {\n        scan[x][0] = buffer[offset++];\n        scan[x][1] = buffer[offset++];\n        scan[x][2] = buffer[offset++];\n        scan[x][3] = buffer[offset++];\n        if (scan[x][0] === 1 && scan[x][1] === 1 && scan[x][2] === 1) {\n            // exp is count of repeated pixels\n            for (var i = (scan[x][3] << rshift) >>> 0; i > 0; i--) {\n                copyrgbe(scan[x-1], scan[x]);\n                x++;\n                len--;\n            }\n            rshift += 8;\n        } else {\n            x++;\n            len--;\n            rshift = 0;\n        }\n    }\n    return offset;\n}\n\nfunction readColors(scan, buffer, offset, xmax) {\n    if ((xmax < MINELEN) | (xmax > MAXELEN)) {\n        return oldReadColors(scan, buffer, offset, xmax);\n    }\n    var i = buffer[offset++];\n    if (i != 2) {\n        return oldReadColors(scan, buffer, offset - 1, xmax);\n    }\n    scan[0][1] = buffer[offset++];\n    scan[0][2] = buffer[offset++];\n\n    i = buffer[offset++];\n    if ((((scan[0][2] << 8) >>> 0) | i) >>> 0 !== xmax) {\n        return null;\n    }\n    for (var i = 0; i < 4; i++) {\n        for (var x = 0; x < xmax;) {\n            var code = buffer[offset++];\n            if (code > 128) {\n                code = (code & 127) >>> 0;\n                var val = buffer[offset++];\n                while (code--) {\n                    scan[x++][i] = val;\n                }\n            } else {\n                while (code--) {\n                    scan[x++][i] = buffer[offset++];\n                }\n            }\n        }\n    }\n    return offset;\n}\n\n\nvar ret = {\n    // http://www.graphics.cornell.edu/~bjw/rgbe.html\n    // Blender source\n    // http://radsite.lbl.gov/radiance/refer/Notes/picture_format.html\n    parseRGBE: function(arrayBuffer, texture, exposure) {\n        if (exposure == null) {\n            exposure = 0;\n        }\n        var data = new Uint8Array(arrayBuffer);\n        var size = data.length;\n        if (uint82string(data, 0, 2) !== '#?') {\n            return;\n        }\n        // find empty line, next line is resolution info\n        for (var i = 2; i < size; i++) {\n            if (toChar(data[i]) === '\\n' && toChar(data[i+1]) === '\\n') {\n                break;\n            }\n        }\n        if (i >= size) { // not found\n            return;\n        }\n        // find resolution info line\n        i += 2;\n        var str = '';\n        for (; i < size; i++) {\n            var _char = toChar(data[i]);\n            if (_char === '\\n') {\n                break;\n            }\n            str += _char;\n        }\n        // -Y M +X N\n        var tmp = str.split(' ');\n        var height = parseInt(tmp[1]);\n        var width = parseInt(tmp[3]);\n        if (!width || !height) {\n            return;\n        }\n\n        // read and decode actual data\n        var offset = i+1;\n        var scanline = [];\n        // memzero\n        for (var x = 0; x < width; x++) {\n            scanline[x] = [];\n            for (var j = 0; j < 4; j++) {\n                scanline[x][j] = 0;\n            }\n        }\n        var pixels = new Float32Array(width * height * 4);\n        var offset2 = 0;\n        for (var y = 0; y < height; y++) {\n            var offset = readColors(scanline, data, offset, width);\n            if (!offset) {\n                return null;\n            }\n            for (var x = 0; x < width; x++) {\n                rgbe2float(scanline[x], pixels, offset2, exposure);\n                offset2 += 4;\n            }\n        }\n\n        if (!texture) {\n            texture = new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */]();\n        }\n        texture.width = width;\n        texture.height = height;\n        texture.pixels = pixels;\n        // HALF_FLOAT can't use Float32Array\n        texture.type = __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].FLOAT;\n        return texture;\n    },\n\n    parseRGBEFromPNG: function(png) {\n\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ret);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///101\n");

/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_Scene__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_prePass_ShadowMap__ = __webpack_require__(103);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_camera_Perspective__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_camera_Orthographic__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_claygl_src_math_Vector2__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_claygl_src_core_mixin_notifier__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__EffectCompositor__ = __webpack_require__(106);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__TemporalSuperSampling__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__halton__ = __webpack_require__(31);\n// TODO Default parameter of postEffect\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction RenderMain(renderer, enableShadow, projection) {\n\n    this.renderer = renderer;\n\n    projection = projection || 'perspective';\n\n    /**\n     * @type {clay.Scene}\n     */\n    this.scene = new __WEBPACK_IMPORTED_MODULE_0_claygl_src_Scene__[\"a\" /* default */]();\n\n    /**\n     * @type {clay.Node}\n     */\n    this.rootNode = this.scene;\n\n    this.viewport = {\n        x: 0, y: 0, width: 0, height: 0\n    };\n\n    this.preZ = false;\n\n    this.setProjection(projection);\n\n    this._compositor = new __WEBPACK_IMPORTED_MODULE_8__EffectCompositor__[\"a\" /* default */]();\n\n    this._temporalSS = new __WEBPACK_IMPORTED_MODULE_9__TemporalSuperSampling__[\"a\" /* default */]();\n\n    if (enableShadow) {\n        this._shadowMapPass = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_prePass_ShadowMap__[\"a\" /* default */]({\n            lightFrustumBias: 20\n        });\n    }\n\n    var pcfKernels = [];\n    var off = 0;\n    for (var i = 0; i < 30; i++) {\n        var pcfKernel = [];\n        for (var k = 0; k < 6; k++) {\n            pcfKernel.push(Object(__WEBPACK_IMPORTED_MODULE_10__halton__[\"a\" /* default */])(off, 2) * 4.0 - 2.0);\n            pcfKernel.push(Object(__WEBPACK_IMPORTED_MODULE_10__halton__[\"a\" /* default */])(off, 3) * 4.0 - 2.0);\n            off++;\n        }\n        pcfKernels.push(pcfKernel);\n    }\n    this._pcfKernels = pcfKernels;\n\n    this._enableTemporalSS = 'auto';\n\n    this.scene.on('beforerender', function (renderer, scene, camera) {\n        if (this.needsTemporalSS()) {\n            this._temporalSS.jitterProjection(renderer, camera);\n        }\n    }, this);\n}\n\n/**\n * Set camera type of group\n * @param {string} cameraType 'perspective' | 'orthographic'\n */\nRenderMain.prototype.setProjection = function (projection) {\n    var oldCamera = this.camera;\n    oldCamera && oldCamera.update();\n    if (projection === 'perspective') {\n        if (!(this.camera instanceof __WEBPACK_IMPORTED_MODULE_2_claygl_src_camera_Perspective__[\"a\" /* default */])) {\n            this.camera = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_camera_Perspective__[\"a\" /* default */]();\n            if (oldCamera) {\n                this.camera.setLocalTransform(oldCamera.localTransform);\n            }\n        }\n    }\n    else {\n        if (!(this.camera instanceof __WEBPACK_IMPORTED_MODULE_3_claygl_src_camera_Orthographic__[\"a\" /* default */])) {\n            this.camera = new __WEBPACK_IMPORTED_MODULE_3_claygl_src_camera_Orthographic__[\"a\" /* default */]();\n            if (oldCamera) {\n                this.camera.setLocalTransform(oldCamera.localTransform);\n            }\n        }\n    }\n    this.camera.near = 0.1;\n    this.camera.far = 2000;\n};\n\n/**\n * Set viewport of group\n * @param {number} x Viewport left bottom x\n * @param {number} y Viewport left bottom y\n * @param {number} width Viewport height\n * @param {number} height Viewport height\n * @param {number} [dpr=1]\n */\nRenderMain.prototype.setViewport = function (x, y, width, height, dpr) {\n    if (this.camera instanceof __WEBPACK_IMPORTED_MODULE_2_claygl_src_camera_Perspective__[\"a\" /* default */]) {\n        this.camera.aspect = width / height;\n    }\n    dpr = dpr || 1;\n\n    this.viewport.x = x;\n    this.viewport.y = y;\n    this.viewport.width = width;\n    this.viewport.height = height;\n    this.viewport.devicePixelRatio = dpr;\n\n    // Source and output of compositor use high dpr texture.\n    // But the intermediate texture of bloom, dof effects use fixed 1.0 dpr\n    this._compositor.resize(width * dpr, height * dpr);\n    this._temporalSS.resize(width * dpr, height * dpr);\n};\n\n/**\n * If contain screen point x, y\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @return {boolean}\n */\nRenderMain.prototype.containPoint = function (x, y) {\n    var viewport = this.viewport;\n    var height = this.layer.renderer.getHeight();\n    // Flip y;\n    y = height - y;\n    return x >= viewport.x && y >= viewport.y\n        && x <= viewport.x + viewport.width && y <= viewport.y + viewport.height;\n};\n\n/**\n * Cast a ray\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @param {clay.math.Ray} out\n * @return {clay.math.Ray}\n */\nvar ndc = new __WEBPACK_IMPORTED_MODULE_6_claygl_src_math_Vector2__[\"a\" /* default */]();\nRenderMain.prototype.castRay = function (x, y, out) {\n    var renderer = this.layer.renderer;\n\n    var oldViewport = renderer.viewport;\n    renderer.viewport = this.viewport;\n    renderer.screenToNDC(x, y, ndc);\n    this.camera.castRay(ndc, out);\n    renderer.viewport = oldViewport;\n\n    return out;\n};\n\n/**\n * Prepare and update scene before render\n */\nRenderMain.prototype.prepareRender = function () {\n    this.scene.update();\n    this.scene.updateLights();\n    this.scene.updateRenderList(this.camera);\n\n    this.camera.update();\n\n    this._frame = 0;\n    this._temporalSS.resetFrame();\n\n    var lights = this.scene.getLights();\n    for (var i = 0; i < lights.length; i++) {\n        if (lights[i].cubemap) {\n            if (this._compositor && this._compositor.isSSREnabled()) {\n                lights[i].invisible = true;\n            }\n            else {\n                lights[i].invisible = false;\n            }\n        }\n    }\n};\n\nRenderMain.prototype.render = function (accumulating) {\n    this._doRender(accumulating, this._frame);\n    this._frame++;\n};\n\nRenderMain.prototype.needsAccumulate = function () {\n    return this.needsTemporalSS() || this._needsSortProgressively;\n};\n\nRenderMain.prototype.needsTemporalSS = function () {\n    var enableTemporalSS = this._enableTemporalSS;\n    if (enableTemporalSS === 'auto') {\n        enableTemporalSS = this._enablePostEffect;\n    }\n    return enableTemporalSS;\n};\n\nRenderMain.prototype.hasDOF = function () {\n    return this._enableDOF;\n};\n\nRenderMain.prototype.isAccumulateFinished = function () {\n    var frame = this._frame;\n    return !(this.needsTemporalSS() && !this._temporalSS.isFinished(frame))\n        && !(this._compositor && !this._compositor.isSSAOFinished(frame))\n        && !(this._compositor && !this._compositor.isSSRFinished(frame))\n        && !(this._compositor && frame < 30);\n};\n\nRenderMain.prototype._doRender = function (accumulating, accumFrame) {\n\n    var scene = this.scene;\n    var camera = this.camera;\n    var renderer = this.renderer;\n\n    accumFrame = accumFrame || 0;\n\n    if (!accumulating && this._shadowMapPass) {\n        this._shadowMapPass.kernelPCF = this._pcfKernels[0];\n        // Not render shadowmap pass in accumulating frame.\n        this._shadowMapPass.render(renderer, scene, camera, true);\n    }\n\n    this._updateShadowPCFKernel(accumFrame);\n\n    // Shadowmap will set clearColor.\n    renderer.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n\n    if (this._enablePostEffect) {\n        // normal render also needs to be jittered when have edge pass.\n        if (this.needsTemporalSS()) {\n            this._temporalSS.jitterProjection(renderer, camera);\n        }\n        this._compositor.updateGBuffer(renderer, scene, camera, this._temporalSS.getFrame());\n    }\n\n    // Always update SSAO to make sure have correct ssaoMap status\n    // TODO TRANSPARENT OBJECTS.\n    this._updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n\n    var frameBuffer;\n    if (this._enablePostEffect) {\n\n        frameBuffer = this._compositor.getSourceFrameBuffer();\n        frameBuffer.bind(renderer);\n        renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n        // FIXME Enable pre z will make alpha test failed\n        renderer.render(scene, camera, true, this.preZ);\n        this.afterRenderScene(renderer, scene, camera);\n        frameBuffer.unbind(renderer);\n\n        if (this.needsTemporalSS() && accumulating) {\n            this._compositor.composite(renderer, scene, camera, this._temporalSS.getSourceFrameBuffer(), this._temporalSS.getFrame());\n            renderer.setViewport(this.viewport);\n            this._temporalSS.render(renderer);\n        }\n        else {\n            renderer.setViewport(this.viewport);\n            this._compositor.composite(renderer, scene, camera, null, 0);\n        }\n    }\n    else {\n        if (this.needsTemporalSS() && accumulating) {\n            frameBuffer = this._temporalSS.getSourceFrameBuffer();\n            frameBuffer.bind(renderer);\n            renderer.saveClear();\n            renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT;\n            renderer.render(scene, camera, true, this.preZ);\n            this.afterRenderScene(renderer, scene, camera);\n            renderer.restoreClear();\n            frameBuffer.unbind(renderer);\n            renderer.setViewport(this.viewport);\n            this._temporalSS.render(renderer);\n        }\n        else {\n            renderer.setViewport(this.viewport);\n            renderer.render(scene, camera, true, this.preZ);\n            this.afterRenderScene(renderer, scene, camera);\n        }\n    }\n\n    this.afterRenderAll(renderer, scene, camera);\n\n    // this._compositor._gBufferPass.renderDebug(renderer, camera, 'normal');\n    // this._shadowMapPass.renderDebug(renderer);\n};\n\nRenderMain.prototype.afterRenderScene = function (renderer, scene, camera) {};\nRenderMain.prototype.afterRenderAll = function (renderer, scene, camera) {};\n\nRenderMain.prototype._updateSSAO = function (renderer, scene, camera, frame) {\n    var ifEnableSSAO = this._enableSSAO && this._enablePostEffect;\n    var compositor = this._compositor;\n    if (ifEnableSSAO) {\n        this._compositor.updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n    }\n\n    function updateQueue(queue) {\n        for (var i = 0; i < queue.length; i++) {\n            var renderable = queue[i];\n            renderable.material[ifEnableSSAO ? 'enableTexture' : 'disableTexture']('ssaoMap');\n            if (ifEnableSSAO) {\n                renderable.material.set('ssaoMap', compositor.getSSAOTexture());\n            }\n        }\n    }\n    updateQueue(scene.getRenderList(camera).opaque);\n    updateQueue(scene.getRenderList(camera).transparent);\n};\n\nRenderMain.prototype._updateShadowPCFKernel = function (frame) {\n    var pcfKernel = this._pcfKernels[frame % this._pcfKernels.length];\n    function updateQueue(queue) {\n        for (var i = 0; i < queue.length; i++) {\n            if (queue[i].receiveShadow) {\n                queue[i].material.set('pcfKernel', pcfKernel);\n                if (queue[i].material) {\n                    queue[i].material.define('fragment', 'PCF_KERNEL_SIZE', pcfKernel.length / 2);\n                }\n            }\n        }\n    }\n    updateQueue(this.scene.getRenderList(this.camera).opaque);\n    updateQueue(this.scene.getRenderList(this.camera).transparent);\n};\n\nRenderMain.prototype.dispose = function (renderer) {\n    this._compositor.dispose(renderer);\n    this._temporalSS.dispose(renderer);\n    if (this._shadowMapPass) {\n        this._shadowMapPass.dispose(renderer);\n    }\n};\n\nRenderMain.prototype.setPostEffect = function (opts, api) {\n    var compositor = this._compositor;\n    opts = opts || {};\n    this._enablePostEffect = !!opts.enable;\n    var bloomOpts = opts.bloom || {};\n    var edgeOpts = opts.edge || {};\n    var dofOpts = opts.depthOfField || {};\n    var ssaoOpts = opts.screenSpaceAmbientOcclusion || {};\n    var ssrOpts = opts.screenSpaceReflection || {};\n    var fxaaOpts = opts.FXAA || {};\n    var colorCorrOpts = opts.colorCorrection || {};\n    bloomOpts.enable ? compositor.enableBloom() : compositor.disableBloom();\n    dofOpts.enable ? compositor.enableDOF() : compositor.disableDOF();\n    ssrOpts.enable ? compositor.enableSSR() : compositor.disableSSR();\n    colorCorrOpts.enable ? compositor.enableColorCorrection() : compositor.disableColorCorrection();\n    edgeOpts.enable ? compositor.enableEdge() : compositor.disableEdge();\n    fxaaOpts.enable ? compositor.enableFXAA() : compositor.disableFXAA();\n\n    this._enableDOF = dofOpts.enable;\n    this._enableSSAO = ssaoOpts.enable;\n\n    this._enableSSAO ? compositor.enableSSAO() : compositor.disableSSAO();\n\n    compositor.setBloomIntensity(bloomOpts.intensity);\n    compositor.setEdgeColor(edgeOpts.color);\n    compositor.setColorLookupTexture(colorCorrOpts.lookupTexture, api);\n    compositor.setExposure(colorCorrOpts.exposure);\n\n    ['radius', 'quality', 'intensity'].forEach(function (name) {\n        compositor.setSSAOParameter(name, ssaoOpts[name]);\n    });\n    ['quality', 'maxRoughness', 'physical'].forEach(function (name) {\n        compositor.setSSRParameter(name, ssrOpts[name]);\n    });\n    ['quality', 'focalDistance', 'focalRange', 'blurRadius', 'fstop'].forEach(function (name) {\n        compositor.setDOFParameter(name, dofOpts[name]);\n    });\n    ['brightness', 'contrast', 'saturation'].forEach(function (name) {\n        compositor.setColorCorrection(name, colorCorrOpts[name]);\n    });\n};\n\nRenderMain.prototype.isDOFEnabled = function () {\n    return this._enablePostEffect && this._enableDOF;\n}\n\nRenderMain.prototype.setDOFFocusOnPoint = function (depth) {\n    if (this._enablePostEffect) {\n\n        if (depth > this.camera.far || depth < this.camera.near) {\n            return;\n        }\n\n        this._compositor.setDOFParameter('focalDistance', depth);\n        return true;\n    }\n};\n\nRenderMain.prototype.setTemporalSuperSampling = function (temporalSuperSamplingOpt) {\n    temporalSuperSamplingOpt = temporalSuperSamplingOpt || {};\n    this._enableTemporalSS = temporalSuperSamplingOpt.enable;\n};\n\nRenderMain.prototype.isLinearSpace = function () {\n    return this._enablePostEffect;\n};\n\nRenderMain.prototype.setRootNode = function (rootNode) {\n    if (this.rootNode === rootNode) {\n        return;\n    }\n    var children = this.rootNode.children();\n    for (var i = 0; i < children.length; i++) {\n        rootNode.add(children[i]);\n    }\n    if (rootNode !== this.scene) {\n        this.scene.add(rootNode);\n    }\n\n    this.rootNode = rootNode;\n};\n// Proxies\nRenderMain.prototype.add = function (node3D) {\n    this.rootNode.add(node3D);\n};\nRenderMain.prototype.remove = function (node3D) {\n    this.rootNode.remove(node3D);\n};\nRenderMain.prototype.removeAll = function (node3D) {\n    this.rootNode.removeAll(node3D);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (RenderMain);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///102\n");

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__math_Frustum__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Renderer__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__TextureCube__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__camera_Orthographic__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__compositor_TexturePool__ = __webpack_require__(57);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__shader_source_shadowmap_glsl_js__ = __webpack_require__(105);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n\n__WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_18__shader_source_shadowmap_glsl_js__[\"a\" /* default */]);\n\nfunction getDepthMaterialUniform(renderable, depthMaterial, symbol) {\n    if (symbol === 'alphaMap') {\n        return renderable.material.get('diffuseMap');\n    }\n    else if (symbol === 'alphaCutoff') {\n        if (renderable.material.isDefined('fragment', 'ALPHA_TEST')\n            && renderable.material.get('diffuseMap')\n        ) {\n            var alphaCutoff = renderable.material.get('alphaCutoff');\n            return alphaCutoff || 0;\n        }\n        return 0;\n    }\n    else if (symbol === 'uvRepeat') {\n        return renderable.material.get('uvRepeat');\n    }\n    else if (symbol === 'uvOffset') {\n        return renderable.material.get('uvOffset');\n    }\n    else {\n        return depthMaterial.get(symbol);\n    }\n}\n\nfunction isDepthMaterialChanged(renderable, prevRenderable) {\n    var matA = renderable.material;\n    var matB = prevRenderable.material;\n    return matA.get('diffuseMap') !== matB.get('diffuseMap')\n        || (matA.get('alphaCutoff') || 0) !== (matB.get('alphaCutoff') || 0);\n}\n\n/**\n * Pass rendering shadow map.\n *\n * @constructor clay.prePass.ShadowMap\n * @extends clay.core.Base\n * @example\n *     var shadowMapPass = new clay.prePass.ShadowMap({\n *         softShadow: clay.prePass.ShadowMap.VSM\n *     });\n *     ...\n *     animation.on('frame', function (frameTime) {\n *         shadowMapPass.render(renderer, scene, camera);\n *         renderer.render(scene, camera);\n *     });\n */\nvar ShadowMapPass = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.prePass.ShadowMap# */ {\n        /**\n         * Soft shadow technique.\n         * Can be {@link clay.prePass.ShadowMap.PCF} or {@link clay.prePass.ShadowMap.VSM}\n         * @type {number}\n         */\n        softShadow: ShadowMapPass.PCF,\n\n        /**\n         * Soft shadow blur size\n         * @type {number}\n         */\n        shadowBlur: 1.0,\n\n        lightFrustumBias: 'auto',\n\n        kernelPCF: new Float32Array([\n            1, 0,\n            1, 1,\n            -1, 1,\n            0, 1,\n            -1, 0,\n            -1, -1,\n            1, -1,\n            0, -1\n        ]),\n\n        precision: 'highp',\n\n        _lastRenderNotCastShadow: false,\n\n        _frameBuffer: new __WEBPACK_IMPORTED_MODULE_9__FrameBuffer__[\"a\" /* default */](),\n\n        _textures: {},\n        _shadowMapNumber: {\n            'POINT_LIGHT': 0,\n            'DIRECTIONAL_LIGHT': 0,\n            'SPOT_LIGHT': 0\n        },\n\n        _depthMaterials: {},\n        _distanceMaterials: {},\n\n        _receivers: [],\n        _lightsCastShadow: [],\n\n        _lightCameras: {},\n        _lightMaterials: {},\n\n        _texturePool: new __WEBPACK_IMPORTED_MODULE_16__compositor_TexturePool__[\"a\" /* default */]()\n    };\n}, function () {\n    // Gaussian filter pass for VSM\n    this._gaussianPassH = new __WEBPACK_IMPORTED_MODULE_15__compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */].source('clay.compositor.gaussian_blur')\n    });\n    this._gaussianPassV = new __WEBPACK_IMPORTED_MODULE_15__compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */].source('clay.compositor.gaussian_blur')\n    });\n    this._gaussianPassH.setUniform('blurSize', this.shadowBlur);\n    this._gaussianPassH.setUniform('blurDir', 0.0);\n    this._gaussianPassV.setUniform('blurSize', this.shadowBlur);\n    this._gaussianPassV.setUniform('blurDir', 1.0);\n\n    this._outputDepthPass = new __WEBPACK_IMPORTED_MODULE_15__compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */].source('clay.sm.debug_depth')\n    });\n}, {\n    /**\n     * Render scene to shadow textures\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.Scene} scene\n     * @param  {clay.Camera} sceneCamera\n     * @param  {boolean} [notUpdateScene=false]\n     * @memberOf clay.prePass.ShadowMap.prototype\n     */\n    render: function (renderer, scene, sceneCamera, notUpdateScene) {\n        if (!sceneCamera) {\n            sceneCamera = scene.getMainCamera();\n        }\n        this.trigger('beforerender', this, renderer, scene, sceneCamera);\n        this._renderShadowPass(renderer, scene, sceneCamera, notUpdateScene);\n        this.trigger('afterrender', this, renderer, scene, sceneCamera);\n    },\n\n    /**\n     * Debug rendering of shadow textures\n     * @param  {clay.Renderer} renderer\n     * @param  {number} size\n     * @memberOf clay.prePass.ShadowMap.prototype\n     */\n    renderDebug: function (renderer, size) {\n        renderer.saveClear();\n        var viewport = renderer.viewport;\n        var x = 0, y = 0;\n        var width = size || viewport.width / 4;\n        var height = width;\n        if (this.softShadow === ShadowMapPass.VSM) {\n            this._outputDepthPass.material.define('fragment', 'USE_VSM');\n        }\n        else {\n            this._outputDepthPass.material.undefine('fragment', 'USE_VSM');\n        }\n        for (var name in this._textures) {\n            var texture = this._textures[name];\n            renderer.setViewport(x, y, width * texture.width / texture.height, height);\n            this._outputDepthPass.setUniform('depthMap', texture);\n            this._outputDepthPass.render(renderer);\n            x += width * texture.width / texture.height;\n        }\n        renderer.setViewport(viewport);\n        renderer.restoreClear();\n    },\n\n    _updateReceivers: function (renderer, mesh) {\n        if (mesh.receiveShadow) {\n            this._receivers.push(mesh);\n            mesh.material.set('shadowEnabled', 1);\n\n            mesh.material.set('pcfKernel', this.kernelPCF);\n        }\n        else {\n            mesh.material.set('shadowEnabled', 0);\n        }\n\n        if (this.softShadow === ShadowMapPass.VSM) {\n            mesh.material.define('fragment', 'USE_VSM');\n            mesh.material.undefine('fragment', 'PCF_KERNEL_SIZE');\n        }\n        else {\n            mesh.material.undefine('fragment', 'USE_VSM');\n            var kernelPCF = this.kernelPCF;\n            if (kernelPCF && kernelPCF.length) {\n                mesh.material.define('fragment', 'PCF_KERNEL_SIZE', kernelPCF.length / 2);\n            }\n            else {\n                mesh.material.undefine('fragment', 'PCF_KERNEL_SIZE');\n            }\n        }\n    },\n\n    _update: function (renderer, scene) {\n        var self = this;\n        scene.traverse(function (renderable) {\n            if (renderable.isRenderable()) {\n                self._updateReceivers(renderer, renderable);\n            }\n        });\n\n        for (var i = 0; i < scene.lights.length; i++) {\n            var light = scene.lights[i];\n            if (light.castShadow && !light.invisible) {\n                this._lightsCastShadow.push(light);\n            }\n        }\n    },\n\n    _renderShadowPass: function (renderer, scene, sceneCamera, notUpdateScene) {\n        // reset\n        for (var name in this._shadowMapNumber) {\n            this._shadowMapNumber[name] = 0;\n        }\n        this._lightsCastShadow.length = 0;\n        this._receivers.length = 0;\n\n        var _gl = renderer.gl;\n\n        if (!notUpdateScene) {\n            scene.update();\n        }\n        if (sceneCamera) {\n            sceneCamera.update();\n        }\n\n        scene.updateLights();\n        this._update(renderer, scene);\n\n        // Needs to update the receivers again if shadows come from 1 to 0.\n        if (!this._lightsCastShadow.length && this._lastRenderNotCastShadow) {\n            return;\n        }\n\n        this._lastRenderNotCastShadow = this._lightsCastShadow === 0;\n\n        _gl.enable(_gl.DEPTH_TEST);\n        _gl.depthMask(true);\n        _gl.disable(_gl.BLEND);\n\n        // Clear with high-z, so the part not rendered will not been shadowed\n        // TODO\n        // TODO restore\n        _gl.clearColor(1.0, 1.0, 1.0, 1.0);\n\n        // Shadow uniforms\n        var spotLightShadowMaps = [];\n        var spotLightMatrices = [];\n        var directionalLightShadowMaps = [];\n        var directionalLightMatrices = [];\n        var shadowCascadeClips = [];\n        var pointLightShadowMaps = [];\n\n        var dirLightHasCascade;\n        // Create textures for shadow map\n        for (var i = 0; i < this._lightsCastShadow.length; i++) {\n            var light = this._lightsCastShadow[i];\n            if (light.type === 'DIRECTIONAL_LIGHT') {\n\n                if (dirLightHasCascade) {\n                    console.warn('Only one direectional light supported with shadow cascade');\n                    continue;\n                }\n                if (light.shadowCascade > 4) {\n                    console.warn('Support at most 4 cascade');\n                    continue;\n                }\n                if (light.shadowCascade > 1) {\n                    dirLightHasCascade = light;\n                }\n\n                this.renderDirectionalLightShadow(\n                    renderer,\n                    scene,\n                    sceneCamera,\n                    light,\n                    shadowCascadeClips,\n                    directionalLightMatrices,\n                    directionalLightShadowMaps\n                );\n            }\n            else if (light.type === 'SPOT_LIGHT') {\n                this.renderSpotLightShadow(\n                    renderer,\n                    scene,\n                    light,\n                    spotLightMatrices,\n                    spotLightShadowMaps\n                );\n            }\n            else if (light.type === 'POINT_LIGHT') {\n                this.renderPointLightShadow(\n                    renderer,\n                    scene,\n                    light,\n                    pointLightShadowMaps\n                );\n            }\n\n            this._shadowMapNumber[light.type]++;\n        }\n\n        for (var lightType in this._shadowMapNumber) {\n            var number = this._shadowMapNumber[lightType];\n            var key = lightType + '_SHADOWMAP_COUNT';\n            for (var i = 0; i < this._receivers.length; i++) {\n                var mesh = this._receivers[i];\n                var material = mesh.material;\n                if (material.fragmentDefines[key] !== number) {\n                    if (number > 0) {\n                        material.define('fragment', key, number);\n                    }\n                    else if (material.isDefined('fragment', key)) {\n                        material.undefine('fragment', key);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < this._receivers.length; i++) {\n            var mesh = this._receivers[i];\n            var material = mesh.material;\n            if (dirLightHasCascade) {\n                material.define('fragment', 'SHADOW_CASCADE', dirLightHasCascade.shadowCascade);\n            }\n            else {\n                material.undefine('fragment', 'SHADOW_CASCADE');\n            }\n        }\n\n        var shadowUniforms = scene.shadowUniforms;\n\n        function getSize(texture) {\n            return texture.height;\n        }\n        if (directionalLightShadowMaps.length > 0) {\n            var directionalLightShadowMapSizes = directionalLightShadowMaps.map(getSize);\n            shadowUniforms.directionalLightShadowMaps = { value: directionalLightShadowMaps, type: 'tv' };\n            shadowUniforms.directionalLightMatrices = { value: directionalLightMatrices, type: 'm4v' };\n            shadowUniforms.directionalLightShadowMapSizes = { value: directionalLightShadowMapSizes, type: '1fv' };\n            if (dirLightHasCascade) {\n                var shadowCascadeClipsNear = shadowCascadeClips.slice();\n                var shadowCascadeClipsFar = shadowCascadeClips.slice();\n                shadowCascadeClipsNear.pop();\n                shadowCascadeClipsFar.shift();\n\n                // Iterate from far to near\n                shadowCascadeClipsNear.reverse();\n                shadowCascadeClipsFar.reverse();\n                // directionalLightShadowMaps.reverse();\n                directionalLightMatrices.reverse();\n                shadowUniforms.shadowCascadeClipsNear = { value: shadowCascadeClipsNear, type: '1fv' };\n                shadowUniforms.shadowCascadeClipsFar = { value: shadowCascadeClipsFar, type: '1fv' };\n            }\n        }\n\n        if (spotLightShadowMaps.length > 0) {\n            var spotLightShadowMapSizes = spotLightShadowMaps.map(getSize);\n            var shadowUniforms = scene.shadowUniforms;\n            shadowUniforms.spotLightShadowMaps = { value: spotLightShadowMaps, type: 'tv' };\n            shadowUniforms.spotLightMatrices = { value: spotLightMatrices, type: 'm4v' };\n            shadowUniforms.spotLightShadowMapSizes = { value: spotLightShadowMapSizes, type: '1fv' };\n        }\n\n        if (pointLightShadowMaps.length > 0) {\n            shadowUniforms.pointLightShadowMaps = { value: pointLightShadowMaps, type: 'tv' };\n        }\n    },\n\n    renderDirectionalLightShadow: (function () {\n\n        var splitFrustum = new __WEBPACK_IMPORTED_MODULE_4__math_Frustum__[\"a\" /* default */]();\n        var splitProjMatrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n        var cropBBox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n        var cropMatrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n        var lightViewMatrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n        var lightViewProjMatrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n        var lightProjMatrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n\n        return function (renderer, scene, sceneCamera, light, shadowCascadeClips, directionalLightMatrices, directionalLightShadowMaps) {\n\n            var defaultShadowMaterial = this._getDepthMaterial(light);\n            var passConfig = {\n                getMaterial: function (renderable) {\n                    return renderable.shadowDepthMaterial || defaultShadowMaterial;\n                },\n                isMaterialChanged: isDepthMaterialChanged,\n                getUniform: getDepthMaterialUniform,\n                ifRender: function (renderable) {\n                    return renderable.castShadow;\n                },\n                sortCompare: __WEBPACK_IMPORTED_MODULE_6__Renderer__[\"a\" /* default */].opaqueSortCompare\n            };\n\n            // First frame\n            if (!scene.viewBoundingBoxLastFrame.isFinite()) {\n                var boundingBox = scene.getBoundingBox();\n                scene.viewBoundingBoxLastFrame\n                    .copy(boundingBox).applyTransform(sceneCamera.viewMatrix);\n            }\n            // Considering moving speed since the bounding box is from last frame\n            // TODO: add a bias\n            var clippedFar = Math.min(-scene.viewBoundingBoxLastFrame.min.z, sceneCamera.far);\n            var clippedNear = Math.max(-scene.viewBoundingBoxLastFrame.max.z, sceneCamera.near);\n\n            var lightCamera = this._getDirectionalLightCamera(light, scene, sceneCamera);\n\n            var lvpMat4Arr = lightViewProjMatrix.array;\n            lightProjMatrix.copy(lightCamera.projectionMatrix);\n            __WEBPACK_IMPORTED_MODULE_17__glmatrix_mat4__[\"a\" /* default */].invert(lightViewMatrix.array, lightCamera.worldTransform.array);\n            __WEBPACK_IMPORTED_MODULE_17__glmatrix_mat4__[\"a\" /* default */].multiply(lightViewMatrix.array, lightViewMatrix.array, sceneCamera.worldTransform.array);\n            __WEBPACK_IMPORTED_MODULE_17__glmatrix_mat4__[\"a\" /* default */].multiply(lvpMat4Arr, lightProjMatrix.array, lightViewMatrix.array);\n\n            var clipPlanes = [];\n            var isPerspective = sceneCamera instanceof __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */];\n\n            var scaleZ = (sceneCamera.near + sceneCamera.far) / (sceneCamera.near - sceneCamera.far);\n            var offsetZ = 2 * sceneCamera.near * sceneCamera.far / (sceneCamera.near - sceneCamera.far);\n            for (var i = 0; i <= light.shadowCascade; i++) {\n                var clog = clippedNear * Math.pow(clippedFar / clippedNear, i / light.shadowCascade);\n                var cuni = clippedNear + (clippedFar - clippedNear) * i / light.shadowCascade;\n                var c = clog * light.cascadeSplitLogFactor + cuni * (1 - light.cascadeSplitLogFactor);\n                clipPlanes.push(c);\n                shadowCascadeClips.push(-(-c * scaleZ + offsetZ) / -c);\n            }\n            var texture = this._getTexture(light, light.shadowCascade);\n            directionalLightShadowMaps.push(texture);\n\n            var viewport = renderer.viewport;\n\n            var _gl = renderer.gl;\n            this._frameBuffer.attach(texture);\n            this._frameBuffer.bind(renderer);\n            _gl.clear(_gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT);\n\n            for (var i = 0; i < light.shadowCascade; i++) {\n                // Get the splitted frustum\n                var nearPlane = clipPlanes[i];\n                var farPlane = clipPlanes[i + 1];\n                if (isPerspective) {\n                    __WEBPACK_IMPORTED_MODULE_17__glmatrix_mat4__[\"a\" /* default */].perspective(splitProjMatrix.array, sceneCamera.fov / 180 * Math.PI, sceneCamera.aspect, nearPlane, farPlane);\n                }\n                else {\n                    __WEBPACK_IMPORTED_MODULE_17__glmatrix_mat4__[\"a\" /* default */].ortho(\n                        splitProjMatrix.array,\n                        sceneCamera.left, sceneCamera.right, sceneCamera.bottom, sceneCamera.top,\n                        nearPlane, farPlane\n                    );\n                }\n                splitFrustum.setFromProjection(splitProjMatrix);\n                splitFrustum.getTransformedBoundingBox(cropBBox, lightViewMatrix);\n                cropBBox.applyProjection(lightProjMatrix);\n                var _min = cropBBox.min.array;\n                var _max = cropBBox.max.array;\n                _min[0] = Math.max(_min[0], -1);\n                _min[1] = Math.max(_min[1], -1);\n                _max[0] = Math.min(_max[0], 1);\n                _max[1] = Math.min(_max[1], 1);\n                cropMatrix.ortho(_min[0], _max[0], _min[1], _max[1], 1, -1);\n                lightCamera.projectionMatrix.multiplyLeft(cropMatrix);\n\n                var shadowSize = light.shadowResolution || 512;\n\n                // Reversed, left to right => far to near\n                renderer.setViewport((light.shadowCascade - i - 1) * shadowSize, 0, shadowSize, shadowSize, 1);\n\n                var renderList = scene.updateRenderList(lightCamera);\n                renderer.renderPass(renderList.opaque, lightCamera, passConfig);\n\n                // Filter for VSM\n                if (this.softShadow === ShadowMapPass.VSM) {\n                    this._gaussianFilter(renderer, texture, texture.width);\n                }\n\n                var matrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n                matrix.copy(lightCamera.viewMatrix)\n                    .multiplyLeft(lightCamera.projectionMatrix);\n\n                directionalLightMatrices.push(matrix.array);\n\n                lightCamera.projectionMatrix.copy(lightProjMatrix);\n            }\n\n            this._frameBuffer.unbind(renderer);\n\n            renderer.setViewport(viewport);\n        };\n    })(),\n\n    renderSpotLightShadow: function (renderer, scene, light, spotLightMatrices, spotLightShadowMaps) {\n\n        var texture = this._getTexture(light);\n        var lightCamera = this._getSpotLightCamera(light);\n        var _gl = renderer.gl;\n\n        this._frameBuffer.attach(texture);\n        this._frameBuffer.bind(renderer);\n\n        _gl.clear(_gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT);\n\n        var defaultShadowMaterial = this._getDepthMaterial(light);\n        var passConfig = {\n            getMaterial: function (renderable) {\n                return renderable.shadowDepthMaterial || defaultShadowMaterial;\n            },\n            isMaterialChanged: isDepthMaterialChanged,\n            getUniform: getDepthMaterialUniform,\n            ifRender: function (renderable) {\n                return renderable.castShadow;\n            },\n            sortCompare: __WEBPACK_IMPORTED_MODULE_6__Renderer__[\"a\" /* default */].opaqueSortCompare\n        };\n\n        var renderList = scene.updateRenderList(lightCamera);\n        renderer.renderPass(renderList.opaque, lightCamera, passConfig);\n\n        this._frameBuffer.unbind(renderer);\n\n        // Filter for VSM\n        if (this.softShadow === ShadowMapPass.VSM) {\n            this._gaussianFilter(renderer, texture, texture.width);\n        }\n\n        var matrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n        matrix.copy(lightCamera.worldTransform)\n            .invert()\n            .multiplyLeft(lightCamera.projectionMatrix);\n\n        spotLightShadowMaps.push(texture);\n        spotLightMatrices.push(matrix.array);\n    },\n\n    renderPointLightShadow: function (renderer, scene, light, pointLightShadowMaps) {\n        var texture = this._getTexture(light);\n        var _gl = renderer.gl;\n        pointLightShadowMaps.push(texture);\n\n        var defaultShadowMaterial = this._getDepthMaterial(light);\n        var passConfig = {\n            getMaterial: function (renderable) {\n                return renderable.shadowDepthMaterial || defaultShadowMaterial;\n            },\n            getUniform: getDepthMaterialUniform,\n            sortCompare: __WEBPACK_IMPORTED_MODULE_6__Renderer__[\"a\" /* default */].opaqueSortCompare\n        };\n\n        var renderListEachSide = {\n            px: [], py: [], pz: [], nx: [], ny: [], nz: []\n        };\n        var bbox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n        var lightWorldPosition = light.getWorldPosition().array;\n        var lightBBox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n        var range = light.range;\n        lightBBox.min.setArray(lightWorldPosition);\n        lightBBox.max.setArray(lightWorldPosition);\n        var extent = new __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */](range, range, range);\n        lightBBox.max.add(extent);\n        lightBBox.min.sub(extent);\n\n        var targetsNeedRender = { px: false, py: false, pz: false, nx: false, ny: false, nz: false };\n        scene.traverse(function (renderable) {\n            if (renderable.isRenderable() && renderable.castShadow) {\n                var geometry = renderable.geometry;\n                if (!geometry.boundingBox) {\n                    for (var i = 0; i < targets.length; i++) {\n                        renderListEachSide[targets[i]].push(renderable);\n                    }\n                    return;\n                }\n                bbox.transformFrom(geometry.boundingBox, renderable.worldTransform);\n                if (!bbox.intersectBoundingBox(lightBBox)) {\n                    return;\n                }\n\n                bbox.updateVertices();\n                for (var i = 0; i < targets.length; i++) {\n                    targetsNeedRender[targets[i]] = false;\n                }\n                for (var i = 0; i < 8; i++) {\n                    var vtx = bbox.vertices[i];\n                    var x = vtx[0] - lightWorldPosition[0];\n                    var y = vtx[1] - lightWorldPosition[1];\n                    var z = vtx[2] - lightWorldPosition[2];\n                    var absx = Math.abs(x);\n                    var absy = Math.abs(y);\n                    var absz = Math.abs(z);\n                    if (absx > absy) {\n                        if (absx > absz) {\n                            targetsNeedRender[x > 0 ? 'px' : 'nx'] = true;\n                        }\n                        else {\n                            targetsNeedRender[z > 0 ? 'pz' : 'nz'] = true;\n                        }\n                    }\n                    else {\n                        if (absy > absz) {\n                            targetsNeedRender[y > 0 ? 'py' : 'ny'] = true;\n                        }\n                        else {\n                            targetsNeedRender[z > 0 ? 'pz' : 'nz'] = true;\n                        }\n                    }\n                }\n                for (var i = 0; i < targets.length; i++) {\n                    if (targetsNeedRender[targets[i]]) {\n                        renderListEachSide[targets[i]].push(renderable);\n                    }\n                }\n            }\n        });\n\n        for (var i = 0; i < 6; i++) {\n            var target = targets[i];\n            var camera = this._getPointLightCamera(light, target);\n\n            this._frameBuffer.attach(texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n            this._frameBuffer.bind(renderer);\n            _gl.clear(_gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT);\n\n            renderer.renderPass(renderListEachSide[target], camera, passConfig);\n        }\n\n        this._frameBuffer.unbind(renderer);\n    },\n\n    _getDepthMaterial: function (light) {\n        var shadowMaterial = this._lightMaterials[light.__uid__];\n        var isPointLight = light.type === 'POINT_LIGHT';\n        if (!shadowMaterial) {\n            var shaderPrefix = isPointLight ? 'clay.sm.distance.' : 'clay.sm.depth.';\n            shadowMaterial = new __WEBPACK_IMPORTED_MODULE_8__Material__[\"a\" /* default */]({\n                precision: this.precision,\n                shader: new __WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */].source(shaderPrefix + 'vertex'), __WEBPACK_IMPORTED_MODULE_7__Shader__[\"a\" /* default */].source(shaderPrefix + 'fragment'))\n            });\n\n            this._lightMaterials[light.__uid__] = shadowMaterial;\n        }\n        if (light.shadowSlopeScale != null) {\n            shadowMaterial.setUniform('slopeScale', light.shadowSlopeScale);\n        }\n        if (light.shadowBias != null) {\n            shadowMaterial.setUniform('bias', light.shadowBias);\n        }\n        if (this.softShadow === ShadowMapPass.VSM) {\n            shadowMaterial.define('fragment', 'USE_VSM');\n        }\n        else {\n            shadowMaterial.undefine('fragment', 'USE_VSM');\n        }\n\n        if (isPointLight) {\n            shadowMaterial.set('lightPosition', light.getWorldPosition().array);\n            shadowMaterial.set('range', light.range);\n        }\n\n        return shadowMaterial;\n    },\n\n    _gaussianFilter: function (renderer, texture, size) {\n        var parameter = {\n            width: size,\n            height: size,\n            type: __WEBPACK_IMPORTED_MODULE_10__Texture__[\"a\" /* default */].FLOAT\n        };\n        var tmpTexture = this._texturePool.get(parameter);\n\n        this._frameBuffer.attach(tmpTexture);\n        this._frameBuffer.bind(renderer);\n        this._gaussianPassH.setUniform('texture', texture);\n        this._gaussianPassH.setUniform('textureWidth', size);\n        this._gaussianPassH.render(renderer);\n\n        this._frameBuffer.attach(texture);\n        this._gaussianPassV.setUniform('texture', tmpTexture);\n        this._gaussianPassV.setUniform('textureHeight', size);\n        this._gaussianPassV.render(renderer);\n        this._frameBuffer.unbind(renderer);\n\n        this._texturePool.put(tmpTexture);\n    },\n\n    _getTexture: function (light, cascade) {\n        var key = light.__uid__;\n        var texture = this._textures[key];\n        var resolution = light.shadowResolution || 512;\n        cascade = cascade || 1;\n        if (!texture) {\n            if (light.type === 'POINT_LIGHT') {\n                texture = new __WEBPACK_IMPORTED_MODULE_12__TextureCube__[\"a\" /* default */]();\n            }\n            else {\n                texture = new __WEBPACK_IMPORTED_MODULE_11__Texture2D__[\"a\" /* default */]();\n            }\n            // At most 4 cascade\n            // TODO share with height ?\n            texture.width = resolution * cascade;\n            texture.height = resolution;\n            if (this.softShadow === ShadowMapPass.VSM) {\n                texture.type = __WEBPACK_IMPORTED_MODULE_10__Texture__[\"a\" /* default */].FLOAT;\n                texture.anisotropic = 4;\n            }\n            else {\n                texture.minFilter = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST;\n                texture.magFilter = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].NEAREST;\n                texture.useMipmap = false;\n            }\n            this._textures[key] = texture;\n        }\n\n        return texture;\n    },\n\n    _getPointLightCamera: function (light, target) {\n        if (!this._lightCameras.point) {\n            this._lightCameras.point = {\n                px: new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */](),\n                nx: new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */](),\n                py: new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */](),\n                ny: new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */](),\n                pz: new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */](),\n                nz: new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */]()\n            };\n        }\n        var camera = this._lightCameras.point[target];\n\n        camera.far = light.range;\n        camera.fov = 90;\n        camera.position.set(0, 0, 0);\n        switch (target) {\n            case 'px':\n                camera.lookAt(__WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].POSITIVE_X, __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n                break;\n            case 'nx':\n                camera.lookAt(__WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_X, __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n                break;\n            case 'py':\n                camera.lookAt(__WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].POSITIVE_Y, __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].POSITIVE_Z);\n                break;\n            case 'ny':\n                camera.lookAt(__WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_Y, __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_Z);\n                break;\n            case 'pz':\n                camera.lookAt(__WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].POSITIVE_Z, __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n                break;\n            case 'nz':\n                camera.lookAt(__WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_Z, __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */].NEGATIVE_Y);\n                break;\n        }\n        light.getWorldPosition(camera.position);\n        camera.update();\n\n        return camera;\n    },\n\n    _getDirectionalLightCamera: (function () {\n        var lightViewMatrix = new __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */]();\n        var sceneViewBoundingBox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n        var lightViewBBox = new __WEBPACK_IMPORTED_MODULE_3__math_BoundingBox__[\"a\" /* default */]();\n        // Camera of directional light will be adjusted\n        // to contain the view frustum and scene bounding box as tightly as possible\n        return function (light, scene, sceneCamera) {\n            if (!this._lightCameras.directional) {\n                this._lightCameras.directional = new __WEBPACK_IMPORTED_MODULE_14__camera_Orthographic__[\"a\" /* default */]();\n            }\n            var camera = this._lightCameras.directional;\n\n            sceneViewBoundingBox.copy(scene.viewBoundingBoxLastFrame);\n            sceneViewBoundingBox.intersection(sceneCamera.frustum.boundingBox);\n            // Move to the center of frustum(in world space)\n            camera.position\n                .copy(sceneViewBoundingBox.min)\n                .add(sceneViewBoundingBox.max)\n                .scale(0.5)\n                .transformMat4(sceneCamera.worldTransform);\n            camera.rotation.copy(light.rotation);\n            camera.scale.copy(light.scale);\n            camera.updateWorldTransform();\n\n            // Transform to light view space\n            __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */].invert(lightViewMatrix, camera.worldTransform);\n            __WEBPACK_IMPORTED_MODULE_5__math_Matrix4__[\"a\" /* default */].multiply(lightViewMatrix, lightViewMatrix, sceneCamera.worldTransform);\n\n            lightViewBBox.copy(sceneViewBoundingBox).applyTransform(lightViewMatrix);\n\n            var min = lightViewBBox.min.array;\n            var max = lightViewBBox.max.array;\n\n            // Move camera to adjust the near to 0\n            camera.position.set((min[0] + max[0]) / 2, (min[1] + max[1]) / 2, max[2])\n                .transformMat4(camera.worldTransform);\n            camera.near = 0;\n            camera.far = -min[2] + max[2];\n            // Make sure receivers not in the frustum will stil receive the shadow.\n            if (isNaN(this.lightFrustumBias)) {\n                camera.far *= 4;\n            }\n            else {\n                camera.far += this.lightFrustumBias;\n            }\n            camera.left = min[0];\n            camera.right = max[0];\n            camera.top = max[1];\n            camera.bottom = min[1];\n            camera.update(true);\n\n            return camera;\n        };\n    })(),\n\n    _getSpotLightCamera: function (light) {\n        if (!this._lightCameras.spot) {\n            this._lightCameras.spot = new __WEBPACK_IMPORTED_MODULE_13__camera_Perspective__[\"a\" /* default */]();\n        }\n        var camera = this._lightCameras.spot;\n        // Update properties\n        camera.fov = light.penumbraAngle * 2;\n        camera.far = light.range;\n        camera.worldTransform.copy(light.worldTransform);\n        camera.updateProjectionMatrix();\n        __WEBPACK_IMPORTED_MODULE_17__glmatrix_mat4__[\"a\" /* default */].invert(camera.viewMatrix.array, camera.worldTransform.array);\n\n        return camera;\n    },\n\n    /**\n     * @param  {clay.Renderer|WebGLRenderingContext} [renderer]\n     * @memberOf clay.prePass.ShadowMap.prototype\n     */\n    // PENDING Renderer or WebGLRenderingContext\n    dispose: function (renderer) {\n        var _gl = renderer.gl || renderer;\n\n        if (this._frameBuffer) {\n            this._frameBuffer.dispose(_gl);\n        }\n\n        for (var name in this._textures) {\n            this._textures[name].dispose(_gl);\n        }\n\n        this._texturePool.clear(renderer.gl);\n\n        this._depthMaterials = {};\n        this._distanceMaterials = {};\n        this._textures = {};\n        this._lightCameras = {};\n        this._shadowMapNumber = {\n            'POINT_LIGHT': 0,\n            'DIRECTIONAL_LIGHT': 0,\n            'SPOT_LIGHT': 0\n        };\n        this._meshMaterials = {};\n\n        for (var i = 0; i < this._receivers.length; i++) {\n            var mesh = this._receivers[i];\n            // Mesh may be disposed\n            if (mesh.material) {\n                var material = mesh.material;\n                material.undefine('fragment', 'POINT_LIGHT_SHADOW_COUNT');\n                material.undefine('fragment', 'DIRECTIONAL_LIGHT_SHADOW_COUNT');\n                material.undefine('fragment', 'AMBIENT_LIGHT_SHADOW_COUNT');\n                material.set('shadowEnabled', 0);\n            }\n        }\n\n        this._receivers = [];\n        this._lightsCastShadow = [];\n    }\n});\n\n/**\n * @name clay.prePass.ShadowMap.VSM\n * @type {number}\n */\nShadowMapPass.VSM = 1;\n\n/**\n * @name clay.prePass.ShadowMap.PCF\n * @type {number}\n */\nShadowMapPass.PCF = 2;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ShadowMapPass);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///103\n");

/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"\\n@export clay.compositor.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\nvarying vec2 v_Texcoord;\\nvoid main()\\n{\\n v_Texcoord = texcoord;\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci92ZXJ0ZXguZ2xzbC5qcz84ZjM5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiXFxuQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IudmVydGV4XFxudW5pZm9ybSBtYXQ0IHdvcmxkVmlld1Byb2plY3Rpb24gOiBXT1JMRFZJRVdQUk9KRUNUSU9OO1xcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uIDogUE9TSVRJT047XFxuYXR0cmlidXRlIHZlYzIgdGV4Y29vcmQgOiBURVhDT09SRF8wO1xcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnZvaWQgbWFpbigpXFxue1xcbiB2X1RleGNvb3JkID0gdGV4Y29vcmQ7XFxuIGdsX1Bvc2l0aW9uID0gd29ybGRWaWV3UHJvamVjdGlvbiAqIHZlYzQocG9zaXRpb24sIDEuMCk7XFxufVxcbkBlbmRcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci92ZXJ0ZXguZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gMTA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///104\n");

/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.sm.depth.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\nuniform vec2 uvRepeat = vec2(1.0, 1.0);\\nuniform vec2 uvOffset = vec2(0.0, 0.0);\\n@import clay.chunk.skinning_header\\n@import clay.chunk.instancing_header\\nvarying vec4 v_ViewPosition;\\nvarying vec2 v_Texcoord;\\nvoid main(){\\n vec4 P = vec4(position, 1.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n P = skinMatrixWS * P;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n P = instanceMat * P;\\n#endif\\n v_ViewPosition = worldViewProjection * P;\\n gl_Position = v_ViewPosition;\\n v_Texcoord = texcoord * uvRepeat + uvOffset;\\n}\\n@end\\n@export clay.sm.depth.fragment\\nvarying vec4 v_ViewPosition;\\nvarying vec2 v_Texcoord;\\nuniform float bias : 0.001;\\nuniform float slopeScale : 1.0;\\nuniform sampler2D alphaMap;\\nuniform float alphaCutoff: 0.0;\\n@import clay.util.encode_float\\nvoid main(){\\n float depth = v_ViewPosition.z / v_ViewPosition.w;\\n if (alphaCutoff > 0.0) {\\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\\n discard;\\n }\\n }\\n#ifdef USE_VSM\\n depth = depth * 0.5 + 0.5;\\n float moment1 = depth;\\n float moment2 = depth * depth;\\n #ifdef SUPPORT_STANDARD_DERIVATIVES\\n float dx = dFdx(depth);\\n float dy = dFdy(depth);\\n moment2 += 0.25*(dx*dx+dy*dy);\\n #endif\\n gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\\n#else\\n #ifdef SUPPORT_STANDARD_DERIVATIVES\\n float dx = dFdx(depth);\\n float dy = dFdy(depth);\\n depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\\n #else\\n depth += bias;\\n #endif\\n gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\\n#endif\\n}\\n@end\\n@export clay.sm.debug_depth\\nuniform sampler2D depthMap;\\nvarying vec2 v_Texcoord;\\n@import clay.util.decode_float\\nvoid main() {\\n vec4 tex = texture2D(depthMap, v_Texcoord);\\n#ifdef USE_VSM\\n gl_FragColor = vec4(tex.rgb, 1.0);\\n#else\\n float depth = decodeFloat(tex);\\n gl_FragColor = vec4(depth, depth, depth, 1.0);\\n#endif\\n}\\n@end\\n@export clay.sm.distance.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 world : WORLD;\\nattribute vec3 position : POSITION;\\n@import clay.chunk.skinning_header\\nvarying vec3 v_WorldPosition;\\nvoid main (){\\n vec4 P = vec4(position, 1.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n P = skinMatrixWS * P;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n P = instanceMat * P;\\n#endif\\n gl_Position = worldViewProjection * P;\\n v_WorldPosition = (world * P).xyz;\\n}\\n@end\\n@export clay.sm.distance.fragment\\nuniform vec3 lightPosition;\\nuniform float range : 100;\\nvarying vec3 v_WorldPosition;\\n@import clay.util.encode_float\\nvoid main(){\\n float dist = distance(lightPosition, v_WorldPosition);\\n#ifdef USE_VSM\\n gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\\n#else\\n dist = dist / range;\\n gl_FragColor = encodeFloat(dist);\\n#endif\\n}\\n@end\\n@export clay.plugin.shadow_map_common\\n@import clay.util.decode_float\\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\\n vec4 tex = texture2D(map, uv);\\n return step(z, decodeFloat(tex) * 2.0 - 1.0);\\n}\\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\\n float shadowContrib = tapShadowMap(map, uv, z);\\n vec2 offset = vec2(1.0 / textureSize) * scale;\\n#ifdef PCF_KERNEL_SIZE\\n for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\\n shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\\n }}\\n return shadowContrib / float(PCF_KERNEL_SIZE + 1);\\n#else\\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\\n return shadowContrib / 9.0;\\n#endif\\n}\\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\\n return pcf(map, uv, z, textureSize, vec2(1.0));\\n}\\nfloat chebyshevUpperBound(vec2 moments, float z){\\n float p = 0.0;\\n z = z * 0.5 + 0.5;\\n if (z <= moments.x) {\\n p = 1.0;\\n }\\n float variance = moments.y - moments.x * moments.x;\\n variance = max(variance, 0.0000001);\\n float mD = moments.x - z;\\n float pMax = variance / (variance + mD * mD);\\n pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\\n return max(p, pMax);\\n}\\nfloat computeShadowContrib(\\n sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\\n) {\\n vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\\n posInLightSpace.xyz /= posInLightSpace.w;\\n float z = posInLightSpace.z;\\n if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\\n all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\\n vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\\n #ifdef USE_VSM\\n vec2 moments = texture2D(map, uv * scale + offset).xy;\\n return chebyshevUpperBound(moments, z);\\n #else\\n return pcf(map, uv * scale + offset, z, textureSize, scale);\\n #endif\\n }\\n return 1.0;\\n}\\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\\n return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\\n}\\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\\n{\\n float dist = length(direction);\\n vec4 shadowTex = textureCube(map, direction);\\n#ifdef USE_VSM\\n vec2 moments = shadowTex.xy;\\n float variance = moments.y - moments.x * moments.x;\\n float mD = moments.x - dist;\\n float p = variance / (variance + mD * mD);\\n if(moments.x + 0.001 < dist){\\n return clamp(p, 0.0, 1.0);\\n }else{\\n return 1.0;\\n }\\n#else\\n return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\\n#endif\\n}\\n@end\\n@export clay.plugin.compute_shadow_map\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\\n#if defined(SHADOW_CASCADE)\\nuniform sampler2D directionalLightShadowMaps[1]:unconfigurable;\\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE]:unconfigurable;\\nuniform float directionalLightShadowMapSizes[1]:unconfigurable;\\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE]:unconfigurable;\\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE]:unconfigurable;\\n#else\\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\n#endif\\n#endif\\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\n#endif\\nuniform bool shadowEnabled : true;\\n#ifdef PCF_KERNEL_SIZE\\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\\n#endif\\n@import clay.plugin.shadow_map_common\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\\n float shadowContrib;\\n for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\\n shadowContrib = computeShadowContrib(\\n spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\\n spotLightShadowMapSizes[_idx_]\\n );\\n shadowContribs[_idx_] = shadowContrib;\\n }}\\n for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#endif\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n#ifdef SHADOW_CASCADE\\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\\n float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\\n / (gl_DepthRange.far - gl_DepthRange.near);\\n float shadowContrib;\\n shadowContribs[0] = 1.0;\\n for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\\n if (\\n depth >= shadowCascadeClipsNear[_idx_] &&\\n depth <= shadowCascadeClipsFar[_idx_]\\n ) {\\n shadowContrib = computeShadowContrib(\\n directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\\n directionalLightShadowMapSizes[0],\\n vec2(1.0 / float(SHADOW_CASCADE), 1.0),\\n vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\\n );\\n shadowContribs[0] = shadowContrib;\\n }\\n }}\\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#else\\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\\n float shadowContrib;\\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\\n shadowContrib = computeShadowContrib(\\n directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\\n directionalLightShadowMapSizes[_idx_]\\n );\\n shadowContribs[_idx_] = shadowContrib;\\n }}\\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#endif\\n#endif\\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\\n vec3 lightPosition;\\n vec3 direction;\\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\\n lightPosition = pointLightPosition[_idx_];\\n direction = position - lightPosition;\\n shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\\n }}\\n for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#endif\\n#endif\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///105\n");

/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_createCompositor__ = __webpack_require__(107);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__SSAOPass__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__SSRPass__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__poissonKernel__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_claygl_src_deferred_GBuffer__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_claygl_src_math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__helper__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__composite_js__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_claygl_src_shader_source_compositor_blur_glsl_js__ = __webpack_require__(58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_claygl_src_shader_source_compositor_output_glsl_js__ = __webpack_require__(59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_claygl_src_shader_source_compositor_bright_glsl_js__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_claygl_src_shader_source_compositor_downsample_glsl_js__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_claygl_src_shader_source_compositor_upsample_glsl_js__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_claygl_src_shader_source_compositor_hdr_glsl_js__ = __webpack_require__(63);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_claygl_src_shader_source_compositor_blend_glsl_js__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_claygl_src_shader_source_compositor_fxaa_glsl_js__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_claygl_src_shader_source_deferred_gbuffer_glsl_js__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__DOF_glsl_js__ = __webpack_require__(135);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__edge_glsl_js__ = __webpack_require__(136);\n\n\n\n\n\n\n\n\n\n// import EdgePass from './EdgePass';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_12_claygl_src_shader_source_compositor_blur_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_13_claygl_src_shader_source_compositor_output_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_14_claygl_src_shader_source_compositor_bright_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_15_claygl_src_shader_source_compositor_downsample_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_16_claygl_src_shader_source_compositor_upsample_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_17_claygl_src_shader_source_compositor_hdr_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_18_claygl_src_shader_source_compositor_blend_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_19_claygl_src_shader_source_compositor_fxaa_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_20_claygl_src_shader_source_deferred_gbuffer_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_21__DOF_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_22__edge_glsl_js__[\"a\" /* default */]);\n\nvar commonOutputs = {\n    color: {\n        parameters: {\n            width: function (renderer) {\n                return renderer.getWidth();\n            },\n            height: function (renderer) {\n                return renderer.getHeight();\n            }\n        }\n    }\n};\n\nvar FINAL_NODES_CHAIN = ['composite', 'FXAA'];\n\nfunction EffectCompositor() {\n    this._sourceTexture = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_Texture2D__[\"a\" /* default */]({\n        type: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].HALF_FLOAT\n    });\n    this._depthTexture = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_Texture2D__[\"a\" /* default */]({\n        format: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].DEPTH_COMPONENT,\n        type: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].UNSIGNED_INT\n    });\n\n    this._framebuffer = new __WEBPACK_IMPORTED_MODULE_3_claygl_src_FrameBuffer__[\"a\" /* default */]();\n    this._framebuffer.attach(this._sourceTexture);\n    this._framebuffer.attach(this._depthTexture, __WEBPACK_IMPORTED_MODULE_3_claygl_src_FrameBuffer__[\"a\" /* default */].DEPTH_ATTACHMENT);\n\n    this._gBufferPass = new __WEBPACK_IMPORTED_MODULE_8_claygl_src_deferred_GBuffer__[\"a\" /* default */]({\n        renderTransparent: true,\n        enableTargetTexture3: false\n    });\n\n    this._compositor = Object(__WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_createCompositor__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_11__composite_js__[\"a\" /* default */]);\n\n    var sourceNode = this._compositor.getNodeByName('source');\n    sourceNode.texture = this._sourceTexture;\n    var cocNode = this._compositor.getNodeByName('coc');\n\n    this._sourceNode = sourceNode;\n    this._cocNode = cocNode;\n    this._compositeNode = this._compositor.getNodeByName('composite');\n    this._fxaaNode = this._compositor.getNodeByName('FXAA');\n\n    this._dofBlurNodes = ['dof_far_blur', 'dof_near_blur', 'dof_coc_blur'].map(function (name) {\n        return this._compositor.getNodeByName(name);\n    }, this);\n\n    this._dofBlurKernel = null;\n    this._dofBlurKernelSize = new Float32Array(0);\n\n    this._finalNodesChain = FINAL_NODES_CHAIN.map(function (name) {\n        return this._compositor.getNodeByName(name);\n    }, this);\n\n    var gBufferObj = {\n        normalTexture: this._gBufferPass.getTargetTexture1(),\n        depthTexture: this._gBufferPass.getTargetTexture2(),\n        albedoTexture: this._gBufferPass.getTargetTexture3()\n    };\n    this._ssaoPass = new __WEBPACK_IMPORTED_MODULE_5__SSAOPass__[\"a\" /* default */](gBufferObj);\n    this._ssrPass = new __WEBPACK_IMPORTED_MODULE_6__SSRPass__[\"a\" /* default */](gBufferObj);\n}\n\nEffectCompositor.prototype.resize = function (width, height, dpr) {\n    dpr = dpr || 1;\n    width = width * dpr;\n    height = height * dpr;\n    var sourceTexture = this._sourceTexture;\n    var depthTexture = this._depthTexture;\n\n    sourceTexture.width = width;\n    sourceTexture.height = height;\n    depthTexture.width = width;\n    depthTexture.height = height;\n\n    this._gBufferPass.resize(width, height);\n};\n\nEffectCompositor.prototype._ifRenderNormalPass = function () {\n    return this._enableSSAO || this._enableEdge || this._enableSSR;\n};\n\nEffectCompositor.prototype._getPrevNode = function (node) {\n    var idx = FINAL_NODES_CHAIN.indexOf(node.name) - 1;\n    var prevNode = this._finalNodesChain[idx];\n    while (prevNode && !this._compositor.getNodeByName(prevNode.name)) {\n        idx -= 1;\n        prevNode = this._finalNodesChain[idx];\n    }\n    return prevNode;\n};\nEffectCompositor.prototype._getNextNode = function (node) {\n    var idx = FINAL_NODES_CHAIN.indexOf(node.name) + 1;\n    var nextNode = this._finalNodesChain[idx];\n    while (nextNode && !this._compositor.getNodeByName(nextNode.name)) {\n        idx += 1;\n        nextNode = this._finalNodesChain[idx];\n    }\n    return nextNode;\n};\nEffectCompositor.prototype._addChainNode = function (node) {\n    var prevNode = this._getPrevNode(node);\n    var nextNode = this._getNextNode(node);\n    if (!prevNode) {\n        return;\n    }\n\n    prevNode.outputs = commonOutputs;\n    node.inputs.texture = prevNode.name;\n    if (nextNode) {\n        node.outputs = commonOutputs;\n        nextNode.inputs.texture = node.name;\n    }\n    else {\n        node.outputs = null;\n    }\n    this._compositor.addNode(node);\n};\nEffectCompositor.prototype._removeChainNode = function (node) {\n    var prevNode = this._getPrevNode(node);\n    var nextNode = this._getNextNode(node);\n    if (!prevNode) {\n        return;\n    }\n\n    if (nextNode) {\n        prevNode.outputs = commonOutputs;\n        nextNode.inputs.texture = prevNode.name;\n    }\n    else {\n        prevNode.outputs = null;\n    }\n    this._compositor.removeNode(node);\n};\n/**\n * Update normal\n */\nEffectCompositor.prototype.updateGBuffer = function (renderer, scene, camera, frame) {\n    if (this._ifRenderNormalPass()) {\n        this._gBufferPass.update(renderer, scene, camera);\n    }\n};\n\n/**\n * Render SSAO after render the scene, before compositing\n */\nEffectCompositor.prototype.updateSSAO = function (renderer, scene, camera, frame) {\n    this._ssaoPass.update(renderer, camera, frame);\n};\n\n/**\n * Enable SSAO effect\n */\nEffectCompositor.prototype.enableSSAO = function () {\n    this._enableSSAO = true;\n};\n\n/**\n * Disable SSAO effect\n */\nEffectCompositor.prototype.disableSSAO = function () {\n    this._enableSSAO = false;\n};\n\n/**\n * Enable SSR effect\n */\nEffectCompositor.prototype.enableSSR = function () {\n    this._enableSSR = true;\n    this._gBufferPass.enableTargetTexture3 = true;\n};\n/**\n * Disable SSR effect\n */\nEffectCompositor.prototype.disableSSR = function () {\n    this._enableSSR = false;\n    this._gBufferPass.enableTargetTexture3 = false;\n};\n\n/**\n * Render SSAO after render the scene, before compositing\n */\nEffectCompositor.prototype.getSSAOTexture = function () {\n    return this._ssaoPass.getTargetTexture();\n};\n\n/**\n * @return {clay.FrameBuffer}\n */\nEffectCompositor.prototype.getSourceFrameBuffer = function () {\n    return this._framebuffer;\n};\n\n/**\n * @return {clay.Texture2D}\n */\nEffectCompositor.prototype.getSourceTexture = function () {\n    return this._sourceTexture;\n};\n\n/**\n * Disable fxaa effect\n */\nEffectCompositor.prototype.disableFXAA = function () {\n    this._removeChainNode(this._fxaaNode);\n};\n\n/**\n * Enable fxaa effect\n */\nEffectCompositor.prototype.enableFXAA = function () {\n    this._addChainNode(this._fxaaNode);\n};\n\n/**\n * Enable bloom effect\n */\nEffectCompositor.prototype.enableBloom = function () {\n    this._compositeNode.inputs.bloom = 'bloom_composite';\n    this._compositor.dirty();\n};\n\n/**\n * Disable bloom effect\n */\nEffectCompositor.prototype.disableBloom = function () {\n    this._compositeNode.inputs.bloom = null;\n    this._compositor.dirty();\n};\n\n/**\n * Enable depth of field effect\n */\nEffectCompositor.prototype.enableDOF = function () {\n    this._compositeNode.inputs.texture = 'dof_composite';\n    this._compositor.dirty();\n};\n/**\n * Disable depth of field effect\n */\nEffectCompositor.prototype.disableDOF = function () {\n    this._compositeNode.inputs.texture = 'source';\n    this._compositor.dirty();\n};\n\n/**\n * Enable color correction\n */\nEffectCompositor.prototype.enableColorCorrection = function () {\n    this._compositeNode.define('COLOR_CORRECTION');\n    this._enableColorCorrection = true;\n};\n/**\n * Disable color correction\n */\nEffectCompositor.prototype.disableColorCorrection = function () {\n    this._compositeNode.undefine('COLOR_CORRECTION');\n    this._enableColorCorrection = false;\n};\n\n/**\n * Enable edge detection\n */\nEffectCompositor.prototype.enableEdge = function () {\n    this._enableEdge = true;\n};\n\n/**\n * Disable edge detection\n */\nEffectCompositor.prototype.disableEdge = function () {\n    this._enableEdge = false;\n};\n\n/**\n * Set bloom intensity\n * @param {number} value\n */\nEffectCompositor.prototype.setBloomIntensity = function (value) {\n    if (value == null) {\n        return;\n    }\n    this._compositeNode.setParameter('bloomIntensity', value);\n};\n\nEffectCompositor.prototype.setSSAOParameter = function (name, value) {\n    if (value == null) {\n        return;\n    }\n    switch (name) {\n        case 'quality':\n            // PENDING\n            var kernelSize = ({\n                low: 6,\n                medium: 12,\n                high: 32,\n                ultra: 62\n            })[value] || 12;\n            this._ssaoPass.setParameter('kernelSize', kernelSize);\n            break;\n        case 'radius':\n            this._ssaoPass.setParameter(name, value);\n            this._ssaoPass.setParameter('bias', value / 50);\n            break;\n        case 'intensity':\n            this._ssaoPass.setParameter(name, value);\n            break;\n    }\n};\n\nEffectCompositor.prototype.setDOFParameter = function (name, value) {\n    if (value == null) {\n        return;\n    }\n    switch (name) {\n        case 'focalDistance':\n        case 'focalRange':\n        case 'fstop':\n            this._cocNode.setParameter(name, value);\n            break;\n        case 'blurRadius':\n            for (var i = 0; i < this._dofBlurNodes.length; i++) {\n                this._dofBlurNodes[i].setParameter('blurRadius', value);\n            }\n            break;\n        case 'quality':\n            var kernelSize = ({\n                low: 4, medium: 8, high: 16, ultra: 32\n            })[value] || 8;\n            this._dofBlurKernelSize = kernelSize;\n            for (var i = 0; i < this._dofBlurNodes.length; i++) {\n                this._dofBlurNodes[i].define('POISSON_KERNEL_SIZE', kernelSize);\n            }\n            this._dofBlurKernel = new Float32Array(kernelSize * 2);\n            break;\n    }\n};\n\nEffectCompositor.prototype.setSSRParameter = function (name, value) {\n    if (value == null) {\n        return;\n    }\n    switch (name) {\n        case 'quality':\n            // PENDING\n            var maxIteration = ({\n                low: 10,\n                medium: 15,\n                high: 30,\n                ultra: 80\n            })[value] || 20;\n            var pixelStride = ({\n                low: 32,\n                medium: 16,\n                high: 8,\n                ultra: 4\n            })[value] || 16;\n            this._ssrPass.setParameter('maxIteration', maxIteration);\n            this._ssrPass.setParameter('pixelStride', pixelStride);\n            break;\n        case 'maxRoughness':\n            this._ssrPass.setParameter('minGlossiness', Math.max(Math.min(1.0 - value, 1.0), 0.0));\n            break;\n        case 'physical':\n            this.setPhysicallyCorrectSSR(value);\n            break;\n        default:\n            console.warn('Unkown SSR parameter ' + name);\n    }\n};\n\nEffectCompositor.prototype.setPhysicallyCorrectSSR = function (physical) {\n    this._ssrPass.setPhysicallyCorrect(physical);\n};\n/**\n * Set color of edge\n */\nEffectCompositor.prototype.setEdgeColor = function (value) {\n    // if (value == null) {\n    //     return;\n    // }\n    // this._edgePass.setParameter('edgeColor', value);\n};\n\nEffectCompositor.prototype.setExposure = function (value) {\n    if (value == null) {\n        return;\n    }\n    this._compositeNode.setParameter('exposure', Math.pow(2, value));\n};\n\nEffectCompositor.prototype.setColorLookupTexture = function (image, api) {\n    this._compositeNode.pass.material.setTextureImage('lut', this._enableColorCorrection ? image : 'none', api, {\n        minFilter: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].NEAREST,\n        magFilter: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].NEAREST,\n        flipY: false\n    });\n};\nEffectCompositor.prototype.setColorCorrection = function (type, value) {\n    this._compositeNode.setParameter(type, value);\n};\n\nEffectCompositor.prototype.composite = function (renderer, scene, camera, framebuffer, frame) {\n\n    var sourceTexture = this._sourceTexture;\n    var targetTexture = sourceTexture;\n\n    if (this._enableSSR) {\n        this._ssrPass.update(renderer, camera, sourceTexture, frame);\n        targetTexture = this._ssrPass.getTargetTexture();\n\n        this._ssrPass.setSSAOTexture(\n            this._enableSSAO ? this._ssaoPass.getTargetTexture() : null\n        );\n        var lights = scene.getLights();\n        for (var i = 0; i < lights.length; i++) {\n            if (lights[i].cubemap) {\n                this._ssrPass.setAmbientCubemap(\n                    lights[i].cubemap,\n                    // lights[i].getBRDFLookup(),\n                    lights[i]._brdfLookup,\n                    lights[i].intensity\n                );\n            }\n        }\n    }\n    this._sourceNode.texture = targetTexture;\n\n    this._cocNode.setParameter('depth', this._depthTexture);\n\n    var blurKernel = this._dofBlurKernel;\n    var blurKernelSize = this._dofBlurKernelSize;\n    var frameAll = Math.floor(__WEBPACK_IMPORTED_MODULE_7__poissonKernel__[\"a\" /* default */].length / 2 / blurKernelSize);\n    var kernelOffset = frame % frameAll;\n\n    for (var i = 0; i < blurKernelSize * 2; i++) {\n        blurKernel[i] = __WEBPACK_IMPORTED_MODULE_7__poissonKernel__[\"a\" /* default */][i + kernelOffset * blurKernelSize * 2];\n    }\n\n    for (var i = 0; i < this._dofBlurNodes.length; i++) {\n        this._dofBlurNodes[i].setParameter('percent', frame / 30.0);\n        this._dofBlurNodes[i].setParameter('poissonKernel', blurKernel);\n    }\n\n    this._cocNode.setParameter('zNear', camera.near);\n    this._cocNode.setParameter('zFar', camera.far);\n\n    this._compositor.render(renderer, framebuffer);\n};\n\nEffectCompositor.prototype.isSSRFinished = function (frame) {\n    return this._ssrPass ? this._ssrPass.isFinished(frame) : true;\n};\n\nEffectCompositor.prototype.isSSAOFinished = function (frame) {\n    return this._ssaoPass ? this._ssaoPass.isFinished(frame) : true;\n};\n\nEffectCompositor.prototype.isSSREnabled = function () {\n    return this._enableSSR;\n};\n\nEffectCompositor.prototype.dispose = function (renderer) {\n    this._sourceTexture.dispose(renderer);\n    this._depthTexture.dispose(renderer);\n    this._framebuffer.dispose(renderer);\n    this._compositor.dispose(renderer);\n\n    this._gBufferPass.dispose(renderer);\n    this._ssaoPass.dispose(renderer);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (EffectCompositor);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9ncmFwaGljL0VmZmVjdENvbXBvc2l0b3IuanM/MTJkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hhZGVyIGZyb20gJ2NsYXlnbC9zcmMvU2hhZGVyJztcbmltcG9ydCBUZXh0dXJlMkQgZnJvbSAnY2xheWdsL3NyYy9UZXh0dXJlMkQnO1xuaW1wb3J0IFRleHR1cmUgZnJvbSAnY2xheWdsL3NyYy9UZXh0dXJlJztcbmltcG9ydCBGcmFtZUJ1ZmZlciBmcm9tICdjbGF5Z2wvc3JjL0ZyYW1lQnVmZmVyJztcbmltcG9ydCBjcmVhdGVDb21wb3NpdG9yIGZyb20gJ2NsYXlnbC9zcmMvY29tcG9zaXRvci9jcmVhdGVDb21wb3NpdG9yJztcbmltcG9ydCBTU0FPUGFzcyBmcm9tICcuL1NTQU9QYXNzJztcbmltcG9ydCBTU1JQYXNzIGZyb20gJy4vU1NSUGFzcyc7XG5pbXBvcnQgcG9pc3Nvbktlcm5lbCBmcm9tICcuL3BvaXNzb25LZXJuZWwnO1xuaW1wb3J0IEdCdWZmZXIgZnJvbSAnY2xheWdsL3NyYy9kZWZlcnJlZC9HQnVmZmVyJztcbi8vIGltcG9ydCBFZGdlUGFzcyBmcm9tICcuL0VkZ2VQYXNzJztcbmltcG9ydCBNYXRyaXg0IGZyb20gJ2NsYXlnbC9zcmMvbWF0aC9NYXRyaXg0JztcbmltcG9ydCBncmFwaGljSGVscGVyIGZyb20gJy4vaGVscGVyJztcblxuaW1wb3J0IGVmZmVjdEpzb24gZnJvbSAnLi9jb21wb3NpdGUuanMnO1xuXG5pbXBvcnQgYmx1ckdMU0wgZnJvbSAnY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3IvYmx1ci5nbHNsLmpzJztcbmltcG9ydCBvdXRwdXRHTFNMIGZyb20gJ2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL291dHB1dC5nbHNsLmpzJztcbmltcG9ydCBicmlnaHRHTFNMIGZyb20gJ2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2JyaWdodC5nbHNsLmpzJztcbmltcG9ydCBkb3duc2FtcGxlR0xTTCBmcm9tICdjbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9kb3duc2FtcGxlLmdsc2wuanMnO1xuaW1wb3J0IHVwc2FtcGxlR0xTTCBmcm9tICdjbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci91cHNhbXBsZS5nbHNsLmpzJztcbmltcG9ydCBoZHJHTFNMIGZyb20gJ2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2hkci5nbHNsLmpzJztcbmltcG9ydCBibGVuZEdMU0wgZnJvbSAnY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3IvYmxlbmQuZ2xzbC5qcyc7XG5pbXBvcnQgZnhhYUdMU0wgZnJvbSAnY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3IvZnhhYS5nbHNsLmpzJztcblxuaW1wb3J0IGdidWZmZXJHTFNMIGZyb20gJ2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9kZWZlcnJlZC9nYnVmZmVyLmdsc2wuanMnO1xuaW1wb3J0IGRvZkdMU0wgZnJvbSAnLi9ET0YuZ2xzbC5qcyc7XG5pbXBvcnQgZWRnZUdMU0wgZnJvbSAnLi9lZGdlLmdsc2wuanMnO1xuXG5TaGFkZXJbJ2ltcG9ydCddKGJsdXJHTFNMKTtcblNoYWRlclsnaW1wb3J0J10ob3V0cHV0R0xTTCk7XG5TaGFkZXJbJ2ltcG9ydCddKGJyaWdodEdMU0wpO1xuU2hhZGVyWydpbXBvcnQnXShkb3duc2FtcGxlR0xTTCk7XG5TaGFkZXJbJ2ltcG9ydCddKHVwc2FtcGxlR0xTTCk7XG5TaGFkZXJbJ2ltcG9ydCddKGhkckdMU0wpO1xuU2hhZGVyWydpbXBvcnQnXShibGVuZEdMU0wpO1xuU2hhZGVyWydpbXBvcnQnXShmeGFhR0xTTCk7XG5TaGFkZXJbJ2ltcG9ydCddKGdidWZmZXJHTFNMKTtcblNoYWRlclsnaW1wb3J0J10oZG9mR0xTTCk7XG5TaGFkZXJbJ2ltcG9ydCddKGVkZ2VHTFNMKTtcblxudmFyIGNvbW1vbk91dHB1dHMgPSB7XG4gICAgY29sb3I6IHtcbiAgICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICAgICAgd2lkdGg6IGZ1bmN0aW9uIChyZW5kZXJlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXJlci5nZXRXaWR0aCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhlaWdodDogZnVuY3Rpb24gKHJlbmRlcmVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlcmVyLmdldEhlaWdodCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufTtcblxudmFyIEZJTkFMX05PREVTX0NIQUlOID0gWydjb21wb3NpdGUnLCAnRlhBQSddO1xuXG5mdW5jdGlvbiBFZmZlY3RDb21wb3NpdG9yKCkge1xuICAgIHRoaXMuX3NvdXJjZVRleHR1cmUgPSBuZXcgVGV4dHVyZTJEKHtcbiAgICAgICAgdHlwZTogVGV4dHVyZS5IQUxGX0ZMT0FUXG4gICAgfSk7XG4gICAgdGhpcy5fZGVwdGhUZXh0dXJlID0gbmV3IFRleHR1cmUyRCh7XG4gICAgICAgIGZvcm1hdDogVGV4dHVyZS5ERVBUSF9DT01QT05FTlQsXG4gICAgICAgIHR5cGU6IFRleHR1cmUuVU5TSUdORURfSU5UXG4gICAgfSk7XG5cbiAgICB0aGlzLl9mcmFtZWJ1ZmZlciA9IG5ldyBGcmFtZUJ1ZmZlcigpO1xuICAgIHRoaXMuX2ZyYW1lYnVmZmVyLmF0dGFjaCh0aGlzLl9zb3VyY2VUZXh0dXJlKTtcbiAgICB0aGlzLl9mcmFtZWJ1ZmZlci5hdHRhY2godGhpcy5fZGVwdGhUZXh0dXJlLCBGcmFtZUJ1ZmZlci5ERVBUSF9BVFRBQ0hNRU5UKTtcblxuICAgIHRoaXMuX2dCdWZmZXJQYXNzID0gbmV3IEdCdWZmZXIoe1xuICAgICAgICByZW5kZXJUcmFuc3BhcmVudDogdHJ1ZSxcbiAgICAgICAgZW5hYmxlVGFyZ2V0VGV4dHVyZTM6IGZhbHNlXG4gICAgfSk7XG5cbiAgICB0aGlzLl9jb21wb3NpdG9yID0gY3JlYXRlQ29tcG9zaXRvcihlZmZlY3RKc29uKTtcblxuICAgIHZhciBzb3VyY2VOb2RlID0gdGhpcy5fY29tcG9zaXRvci5nZXROb2RlQnlOYW1lKCdzb3VyY2UnKTtcbiAgICBzb3VyY2VOb2RlLnRleHR1cmUgPSB0aGlzLl9zb3VyY2VUZXh0dXJlO1xuICAgIHZhciBjb2NOb2RlID0gdGhpcy5fY29tcG9zaXRvci5nZXROb2RlQnlOYW1lKCdjb2MnKTtcblxuICAgIHRoaXMuX3NvdXJjZU5vZGUgPSBzb3VyY2VOb2RlO1xuICAgIHRoaXMuX2NvY05vZGUgPSBjb2NOb2RlO1xuICAgIHRoaXMuX2NvbXBvc2l0ZU5vZGUgPSB0aGlzLl9jb21wb3NpdG9yLmdldE5vZGVCeU5hbWUoJ2NvbXBvc2l0ZScpO1xuICAgIHRoaXMuX2Z4YWFOb2RlID0gdGhpcy5fY29tcG9zaXRvci5nZXROb2RlQnlOYW1lKCdGWEFBJyk7XG5cbiAgICB0aGlzLl9kb2ZCbHVyTm9kZXMgPSBbJ2RvZl9mYXJfYmx1cicsICdkb2ZfbmVhcl9ibHVyJywgJ2RvZl9jb2NfYmx1ciddLm1hcChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29tcG9zaXRvci5nZXROb2RlQnlOYW1lKG5hbWUpO1xuICAgIH0sIHRoaXMpO1xuXG4gICAgdGhpcy5fZG9mQmx1cktlcm5lbCA9IG51bGw7XG4gICAgdGhpcy5fZG9mQmx1cktlcm5lbFNpemUgPSBuZXcgRmxvYXQzMkFycmF5KDApO1xuXG4gICAgdGhpcy5fZmluYWxOb2Rlc0NoYWluID0gRklOQUxfTk9ERVNfQ0hBSU4ubWFwKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb21wb3NpdG9yLmdldE5vZGVCeU5hbWUobmFtZSk7XG4gICAgfSwgdGhpcyk7XG5cbiAgICB2YXIgZ0J1ZmZlck9iaiA9IHtcbiAgICAgICAgbm9ybWFsVGV4dHVyZTogdGhpcy5fZ0J1ZmZlclBhc3MuZ2V0VGFyZ2V0VGV4dHVyZTEoKSxcbiAgICAgICAgZGVwdGhUZXh0dXJlOiB0aGlzLl9nQnVmZmVyUGFzcy5nZXRUYXJnZXRUZXh0dXJlMigpLFxuICAgICAgICBhbGJlZG9UZXh0dXJlOiB0aGlzLl9nQnVmZmVyUGFzcy5nZXRUYXJnZXRUZXh0dXJlMygpXG4gICAgfTtcbiAgICB0aGlzLl9zc2FvUGFzcyA9IG5ldyBTU0FPUGFzcyhnQnVmZmVyT2JqKTtcbiAgICB0aGlzLl9zc3JQYXNzID0gbmV3IFNTUlBhc3MoZ0J1ZmZlck9iaik7XG59XG5cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLnJlc2l6ZSA9IGZ1bmN0aW9uICh3aWR0aCwgaGVpZ2h0LCBkcHIpIHtcbiAgICBkcHIgPSBkcHIgfHwgMTtcbiAgICB3aWR0aCA9IHdpZHRoICogZHByO1xuICAgIGhlaWdodCA9IGhlaWdodCAqIGRwcjtcbiAgICB2YXIgc291cmNlVGV4dHVyZSA9IHRoaXMuX3NvdXJjZVRleHR1cmU7XG4gICAgdmFyIGRlcHRoVGV4dHVyZSA9IHRoaXMuX2RlcHRoVGV4dHVyZTtcblxuICAgIHNvdXJjZVRleHR1cmUud2lkdGggPSB3aWR0aDtcbiAgICBzb3VyY2VUZXh0dXJlLmhlaWdodCA9IGhlaWdodDtcbiAgICBkZXB0aFRleHR1cmUud2lkdGggPSB3aWR0aDtcbiAgICBkZXB0aFRleHR1cmUuaGVpZ2h0ID0gaGVpZ2h0O1xuXG4gICAgdGhpcy5fZ0J1ZmZlclBhc3MucmVzaXplKHdpZHRoLCBoZWlnaHQpO1xufTtcblxuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuX2lmUmVuZGVyTm9ybWFsUGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fZW5hYmxlU1NBTyB8fCB0aGlzLl9lbmFibGVFZGdlIHx8IHRoaXMuX2VuYWJsZVNTUjtcbn07XG5cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLl9nZXRQcmV2Tm9kZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgdmFyIGlkeCA9IEZJTkFMX05PREVTX0NIQUlOLmluZGV4T2Yobm9kZS5uYW1lKSAtIDE7XG4gICAgdmFyIHByZXZOb2RlID0gdGhpcy5fZmluYWxOb2Rlc0NoYWluW2lkeF07XG4gICAgd2hpbGUgKHByZXZOb2RlICYmICF0aGlzLl9jb21wb3NpdG9yLmdldE5vZGVCeU5hbWUocHJldk5vZGUubmFtZSkpIHtcbiAgICAgICAgaWR4IC09IDE7XG4gICAgICAgIHByZXZOb2RlID0gdGhpcy5fZmluYWxOb2Rlc0NoYWluW2lkeF07XG4gICAgfVxuICAgIHJldHVybiBwcmV2Tm9kZTtcbn07XG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5fZ2V0TmV4dE5vZGUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgIHZhciBpZHggPSBGSU5BTF9OT0RFU19DSEFJTi5pbmRleE9mKG5vZGUubmFtZSkgKyAxO1xuICAgIHZhciBuZXh0Tm9kZSA9IHRoaXMuX2ZpbmFsTm9kZXNDaGFpbltpZHhdO1xuICAgIHdoaWxlIChuZXh0Tm9kZSAmJiAhdGhpcy5fY29tcG9zaXRvci5nZXROb2RlQnlOYW1lKG5leHROb2RlLm5hbWUpKSB7XG4gICAgICAgIGlkeCArPSAxO1xuICAgICAgICBuZXh0Tm9kZSA9IHRoaXMuX2ZpbmFsTm9kZXNDaGFpbltpZHhdO1xuICAgIH1cbiAgICByZXR1cm4gbmV4dE5vZGU7XG59O1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuX2FkZENoYWluTm9kZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgdmFyIHByZXZOb2RlID0gdGhpcy5fZ2V0UHJldk5vZGUobm9kZSk7XG4gICAgdmFyIG5leHROb2RlID0gdGhpcy5fZ2V0TmV4dE5vZGUobm9kZSk7XG4gICAgaWYgKCFwcmV2Tm9kZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcHJldk5vZGUub3V0cHV0cyA9IGNvbW1vbk91dHB1dHM7XG4gICAgbm9kZS5pbnB1dHMudGV4dHVyZSA9IHByZXZOb2RlLm5hbWU7XG4gICAgaWYgKG5leHROb2RlKSB7XG4gICAgICAgIG5vZGUub3V0cHV0cyA9IGNvbW1vbk91dHB1dHM7XG4gICAgICAgIG5leHROb2RlLmlucHV0cy50ZXh0dXJlID0gbm9kZS5uYW1lO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbm9kZS5vdXRwdXRzID0gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5fY29tcG9zaXRvci5hZGROb2RlKG5vZGUpO1xufTtcbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLl9yZW1vdmVDaGFpbk5vZGUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgIHZhciBwcmV2Tm9kZSA9IHRoaXMuX2dldFByZXZOb2RlKG5vZGUpO1xuICAgIHZhciBuZXh0Tm9kZSA9IHRoaXMuX2dldE5leHROb2RlKG5vZGUpO1xuICAgIGlmICghcHJldk5vZGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChuZXh0Tm9kZSkge1xuICAgICAgICBwcmV2Tm9kZS5vdXRwdXRzID0gY29tbW9uT3V0cHV0cztcbiAgICAgICAgbmV4dE5vZGUuaW5wdXRzLnRleHR1cmUgPSBwcmV2Tm9kZS5uYW1lO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJldk5vZGUub3V0cHV0cyA9IG51bGw7XG4gICAgfVxuICAgIHRoaXMuX2NvbXBvc2l0b3IucmVtb3ZlTm9kZShub2RlKTtcbn07XG4vKipcbiAqIFVwZGF0ZSBub3JtYWxcbiAqL1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUudXBkYXRlR0J1ZmZlciA9IGZ1bmN0aW9uIChyZW5kZXJlciwgc2NlbmUsIGNhbWVyYSwgZnJhbWUpIHtcbiAgICBpZiAodGhpcy5faWZSZW5kZXJOb3JtYWxQYXNzKCkpIHtcbiAgICAgICAgdGhpcy5fZ0J1ZmZlclBhc3MudXBkYXRlKHJlbmRlcmVyLCBzY2VuZSwgY2FtZXJhKTtcbiAgICB9XG59O1xuXG4vKipcbiAqIFJlbmRlciBTU0FPIGFmdGVyIHJlbmRlciB0aGUgc2NlbmUsIGJlZm9yZSBjb21wb3NpdGluZ1xuICovXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS51cGRhdGVTU0FPID0gZnVuY3Rpb24gKHJlbmRlcmVyLCBzY2VuZSwgY2FtZXJhLCBmcmFtZSkge1xuICAgIHRoaXMuX3NzYW9QYXNzLnVwZGF0ZShyZW5kZXJlciwgY2FtZXJhLCBmcmFtZSk7XG59O1xuXG4vKipcbiAqIEVuYWJsZSBTU0FPIGVmZmVjdFxuICovXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5lbmFibGVTU0FPID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuX2VuYWJsZVNTQU8gPSB0cnVlO1xufTtcblxuLyoqXG4gKiBEaXNhYmxlIFNTQU8gZWZmZWN0XG4gKi9cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmRpc2FibGVTU0FPID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuX2VuYWJsZVNTQU8gPSBmYWxzZTtcbn07XG5cbi8qKlxuICogRW5hYmxlIFNTUiBlZmZlY3RcbiAqL1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuZW5hYmxlU1NSID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuX2VuYWJsZVNTUiA9IHRydWU7XG4gICAgdGhpcy5fZ0J1ZmZlclBhc3MuZW5hYmxlVGFyZ2V0VGV4dHVyZTMgPSB0cnVlO1xufTtcbi8qKlxuICogRGlzYWJsZSBTU1IgZWZmZWN0XG4gKi9cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmRpc2FibGVTU1IgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5fZW5hYmxlU1NSID0gZmFsc2U7XG4gICAgdGhpcy5fZ0J1ZmZlclBhc3MuZW5hYmxlVGFyZ2V0VGV4dHVyZTMgPSBmYWxzZTtcbn07XG5cbi8qKlxuICogUmVuZGVyIFNTQU8gYWZ0ZXIgcmVuZGVyIHRoZSBzY2VuZSwgYmVmb3JlIGNvbXBvc2l0aW5nXG4gKi9cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmdldFNTQU9UZXh0dXJlID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLl9zc2FvUGFzcy5nZXRUYXJnZXRUZXh0dXJlKCk7XG59O1xuXG4vKipcbiAqIEByZXR1cm4ge2NsYXkuRnJhbWVCdWZmZXJ9XG4gKi9cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmdldFNvdXJjZUZyYW1lQnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLl9mcmFtZWJ1ZmZlcjtcbn07XG5cbi8qKlxuICogQHJldHVybiB7Y2xheS5UZXh0dXJlMkR9XG4gKi9cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmdldFNvdXJjZVRleHR1cmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NvdXJjZVRleHR1cmU7XG59O1xuXG4vKipcbiAqIERpc2FibGUgZnhhYSBlZmZlY3RcbiAqL1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuZGlzYWJsZUZYQUEgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5fcmVtb3ZlQ2hhaW5Ob2RlKHRoaXMuX2Z4YWFOb2RlKTtcbn07XG5cbi8qKlxuICogRW5hYmxlIGZ4YWEgZWZmZWN0XG4gKi9cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmVuYWJsZUZYQUEgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5fYWRkQ2hhaW5Ob2RlKHRoaXMuX2Z4YWFOb2RlKTtcbn07XG5cbi8qKlxuICogRW5hYmxlIGJsb29tIGVmZmVjdFxuICovXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5lbmFibGVCbG9vbSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl9jb21wb3NpdGVOb2RlLmlucHV0cy5ibG9vbSA9ICdibG9vbV9jb21wb3NpdGUnO1xuICAgIHRoaXMuX2NvbXBvc2l0b3IuZGlydHkoKTtcbn07XG5cbi8qKlxuICogRGlzYWJsZSBibG9vbSBlZmZlY3RcbiAqL1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuZGlzYWJsZUJsb29tID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuX2NvbXBvc2l0ZU5vZGUuaW5wdXRzLmJsb29tID0gbnVsbDtcbiAgICB0aGlzLl9jb21wb3NpdG9yLmRpcnR5KCk7XG59O1xuXG4vKipcbiAqIEVuYWJsZSBkZXB0aCBvZiBmaWVsZCBlZmZlY3RcbiAqL1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuZW5hYmxlRE9GID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuX2NvbXBvc2l0ZU5vZGUuaW5wdXRzLnRleHR1cmUgPSAnZG9mX2NvbXBvc2l0ZSc7XG4gICAgdGhpcy5fY29tcG9zaXRvci5kaXJ0eSgpO1xufTtcbi8qKlxuICogRGlzYWJsZSBkZXB0aCBvZiBmaWVsZCBlZmZlY3RcbiAqL1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuZGlzYWJsZURPRiA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl9jb21wb3NpdGVOb2RlLmlucHV0cy50ZXh0dXJlID0gJ3NvdXJjZSc7XG4gICAgdGhpcy5fY29tcG9zaXRvci5kaXJ0eSgpO1xufTtcblxuLyoqXG4gKiBFbmFibGUgY29sb3IgY29ycmVjdGlvblxuICovXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5lbmFibGVDb2xvckNvcnJlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5fY29tcG9zaXRlTm9kZS5kZWZpbmUoJ0NPTE9SX0NPUlJFQ1RJT04nKTtcbiAgICB0aGlzLl9lbmFibGVDb2xvckNvcnJlY3Rpb24gPSB0cnVlO1xufTtcbi8qKlxuICogRGlzYWJsZSBjb2xvciBjb3JyZWN0aW9uXG4gKi9cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmRpc2FibGVDb2xvckNvcnJlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5fY29tcG9zaXRlTm9kZS51bmRlZmluZSgnQ09MT1JfQ09SUkVDVElPTicpO1xuICAgIHRoaXMuX2VuYWJsZUNvbG9yQ29ycmVjdGlvbiA9IGZhbHNlO1xufTtcblxuLyoqXG4gKiBFbmFibGUgZWRnZSBkZXRlY3Rpb25cbiAqL1xuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuZW5hYmxlRWRnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl9lbmFibGVFZGdlID0gdHJ1ZTtcbn07XG5cbi8qKlxuICogRGlzYWJsZSBlZGdlIGRldGVjdGlvblxuICovXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5kaXNhYmxlRWRnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl9lbmFibGVFZGdlID0gZmFsc2U7XG59O1xuXG4vKipcbiAqIFNldCBibG9vbSBpbnRlbnNpdHlcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuICovXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5zZXRCbG9vbUludGVuc2l0eSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5fY29tcG9zaXRlTm9kZS5zZXRQYXJhbWV0ZXIoJ2Jsb29tSW50ZW5zaXR5JywgdmFsdWUpO1xufTtcblxuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuc2V0U1NBT1BhcmFtZXRlciA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICAgIGNhc2UgJ3F1YWxpdHknOlxuICAgICAgICAgICAgLy8gUEVORElOR1xuICAgICAgICAgICAgdmFyIGtlcm5lbFNpemUgPSAoe1xuICAgICAgICAgICAgICAgIGxvdzogNixcbiAgICAgICAgICAgICAgICBtZWRpdW06IDEyLFxuICAgICAgICAgICAgICAgIGhpZ2g6IDMyLFxuICAgICAgICAgICAgICAgIHVsdHJhOiA2MlxuICAgICAgICAgICAgfSlbdmFsdWVdIHx8IDEyO1xuICAgICAgICAgICAgdGhpcy5fc3Nhb1Bhc3Muc2V0UGFyYW1ldGVyKCdrZXJuZWxTaXplJywga2VybmVsU2l6ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncmFkaXVzJzpcbiAgICAgICAgICAgIHRoaXMuX3NzYW9QYXNzLnNldFBhcmFtZXRlcihuYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICB0aGlzLl9zc2FvUGFzcy5zZXRQYXJhbWV0ZXIoJ2JpYXMnLCB2YWx1ZSAvIDUwKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdpbnRlbnNpdHknOlxuICAgICAgICAgICAgdGhpcy5fc3Nhb1Bhc3Muc2V0UGFyYW1ldGVyKG5hbWUsIHZhbHVlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbn07XG5cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLnNldERPRlBhcmFtZXRlciA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICAgIGNhc2UgJ2ZvY2FsRGlzdGFuY2UnOlxuICAgICAgICBjYXNlICdmb2NhbFJhbmdlJzpcbiAgICAgICAgY2FzZSAnZnN0b3AnOlxuICAgICAgICAgICAgdGhpcy5fY29jTm9kZS5zZXRQYXJhbWV0ZXIobmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2JsdXJSYWRpdXMnOlxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9kb2ZCbHVyTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9kb2ZCbHVyTm9kZXNbaV0uc2V0UGFyYW1ldGVyKCdibHVyUmFkaXVzJywgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3F1YWxpdHknOlxuICAgICAgICAgICAgdmFyIGtlcm5lbFNpemUgPSAoe1xuICAgICAgICAgICAgICAgIGxvdzogNCwgbWVkaXVtOiA4LCBoaWdoOiAxNiwgdWx0cmE6IDMyXG4gICAgICAgICAgICB9KVt2YWx1ZV0gfHwgODtcbiAgICAgICAgICAgIHRoaXMuX2RvZkJsdXJLZXJuZWxTaXplID0ga2VybmVsU2l6ZTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fZG9mQmx1ck5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZG9mQmx1ck5vZGVzW2ldLmRlZmluZSgnUE9JU1NPTl9LRVJORUxfU0laRScsIGtlcm5lbFNpemUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fZG9mQmx1cktlcm5lbCA9IG5ldyBGbG9hdDMyQXJyYXkoa2VybmVsU2l6ZSAqIDIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufTtcblxuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuc2V0U1NSUGFyYW1ldGVyID0gZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgICAgY2FzZSAncXVhbGl0eSc6XG4gICAgICAgICAgICAvLyBQRU5ESU5HXG4gICAgICAgICAgICB2YXIgbWF4SXRlcmF0aW9uID0gKHtcbiAgICAgICAgICAgICAgICBsb3c6IDEwLFxuICAgICAgICAgICAgICAgIG1lZGl1bTogMTUsXG4gICAgICAgICAgICAgICAgaGlnaDogMzAsXG4gICAgICAgICAgICAgICAgdWx0cmE6IDgwXG4gICAgICAgICAgICB9KVt2YWx1ZV0gfHwgMjA7XG4gICAgICAgICAgICB2YXIgcGl4ZWxTdHJpZGUgPSAoe1xuICAgICAgICAgICAgICAgIGxvdzogMzIsXG4gICAgICAgICAgICAgICAgbWVkaXVtOiAxNixcbiAgICAgICAgICAgICAgICBoaWdoOiA4LFxuICAgICAgICAgICAgICAgIHVsdHJhOiA0XG4gICAgICAgICAgICB9KVt2YWx1ZV0gfHwgMTY7XG4gICAgICAgICAgICB0aGlzLl9zc3JQYXNzLnNldFBhcmFtZXRlcignbWF4SXRlcmF0aW9uJywgbWF4SXRlcmF0aW9uKTtcbiAgICAgICAgICAgIHRoaXMuX3NzclBhc3Muc2V0UGFyYW1ldGVyKCdwaXhlbFN0cmlkZScsIHBpeGVsU3RyaWRlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdtYXhSb3VnaG5lc3MnOlxuICAgICAgICAgICAgdGhpcy5fc3NyUGFzcy5zZXRQYXJhbWV0ZXIoJ21pbkdsb3NzaW5lc3MnLCBNYXRoLm1heChNYXRoLm1pbigxLjAgLSB2YWx1ZSwgMS4wKSwgMC4wKSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncGh5c2ljYWwnOlxuICAgICAgICAgICAgdGhpcy5zZXRQaHlzaWNhbGx5Q29ycmVjdFNTUih2YWx1ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignVW5rb3duIFNTUiBwYXJhbWV0ZXIgJyArIG5hbWUpO1xuICAgIH1cbn07XG5cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLnNldFBoeXNpY2FsbHlDb3JyZWN0U1NSID0gZnVuY3Rpb24gKHBoeXNpY2FsKSB7XG4gICAgdGhpcy5fc3NyUGFzcy5zZXRQaHlzaWNhbGx5Q29ycmVjdChwaHlzaWNhbCk7XG59O1xuLyoqXG4gKiBTZXQgY29sb3Igb2YgZWRnZVxuICovXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5zZXRFZGdlQ29sb3IgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAvLyBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIC8vICAgICByZXR1cm47XG4gICAgLy8gfVxuICAgIC8vIHRoaXMuX2VkZ2VQYXNzLnNldFBhcmFtZXRlcignZWRnZUNvbG9yJywgdmFsdWUpO1xufTtcblxuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuc2V0RXhwb3N1cmUgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX2NvbXBvc2l0ZU5vZGUuc2V0UGFyYW1ldGVyKCdleHBvc3VyZScsIE1hdGgucG93KDIsIHZhbHVlKSk7XG59O1xuXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5zZXRDb2xvckxvb2t1cFRleHR1cmUgPSBmdW5jdGlvbiAoaW1hZ2UsIGFwaSkge1xuICAgIHRoaXMuX2NvbXBvc2l0ZU5vZGUucGFzcy5tYXRlcmlhbC5zZXRUZXh0dXJlSW1hZ2UoJ2x1dCcsIHRoaXMuX2VuYWJsZUNvbG9yQ29ycmVjdGlvbiA/IGltYWdlIDogJ25vbmUnLCBhcGksIHtcbiAgICAgICAgbWluRmlsdGVyOiBUZXh0dXJlLk5FQVJFU1QsXG4gICAgICAgIG1hZ0ZpbHRlcjogVGV4dHVyZS5ORUFSRVNULFxuICAgICAgICBmbGlwWTogZmFsc2VcbiAgICB9KTtcbn07XG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5zZXRDb2xvckNvcnJlY3Rpb24gPSBmdW5jdGlvbiAodHlwZSwgdmFsdWUpIHtcbiAgICB0aGlzLl9jb21wb3NpdGVOb2RlLnNldFBhcmFtZXRlcih0eXBlLCB2YWx1ZSk7XG59O1xuXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5jb21wb3NpdGUgPSBmdW5jdGlvbiAocmVuZGVyZXIsIHNjZW5lLCBjYW1lcmEsIGZyYW1lYnVmZmVyLCBmcmFtZSkge1xuXG4gICAgdmFyIHNvdXJjZVRleHR1cmUgPSB0aGlzLl9zb3VyY2VUZXh0dXJlO1xuICAgIHZhciB0YXJnZXRUZXh0dXJlID0gc291cmNlVGV4dHVyZTtcblxuICAgIGlmICh0aGlzLl9lbmFibGVTU1IpIHtcbiAgICAgICAgdGhpcy5fc3NyUGFzcy51cGRhdGUocmVuZGVyZXIsIGNhbWVyYSwgc291cmNlVGV4dHVyZSwgZnJhbWUpO1xuICAgICAgICB0YXJnZXRUZXh0dXJlID0gdGhpcy5fc3NyUGFzcy5nZXRUYXJnZXRUZXh0dXJlKCk7XG5cbiAgICAgICAgdGhpcy5fc3NyUGFzcy5zZXRTU0FPVGV4dHVyZShcbiAgICAgICAgICAgIHRoaXMuX2VuYWJsZVNTQU8gPyB0aGlzLl9zc2FvUGFzcy5nZXRUYXJnZXRUZXh0dXJlKCkgOiBudWxsXG4gICAgICAgICk7XG4gICAgICAgIHZhciBsaWdodHMgPSBzY2VuZS5nZXRMaWdodHMoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaWdodHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChsaWdodHNbaV0uY3ViZW1hcCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3NzclBhc3Muc2V0QW1iaWVudEN1YmVtYXAoXG4gICAgICAgICAgICAgICAgICAgIGxpZ2h0c1tpXS5jdWJlbWFwLFxuICAgICAgICAgICAgICAgICAgICAvLyBsaWdodHNbaV0uZ2V0QlJERkxvb2t1cCgpLFxuICAgICAgICAgICAgICAgICAgICBsaWdodHNbaV0uX2JyZGZMb29rdXAsXG4gICAgICAgICAgICAgICAgICAgIGxpZ2h0c1tpXS5pbnRlbnNpdHlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHRoaXMuX3NvdXJjZU5vZGUudGV4dHVyZSA9IHRhcmdldFRleHR1cmU7XG5cbiAgICB0aGlzLl9jb2NOb2RlLnNldFBhcmFtZXRlcignZGVwdGgnLCB0aGlzLl9kZXB0aFRleHR1cmUpO1xuXG4gICAgdmFyIGJsdXJLZXJuZWwgPSB0aGlzLl9kb2ZCbHVyS2VybmVsO1xuICAgIHZhciBibHVyS2VybmVsU2l6ZSA9IHRoaXMuX2RvZkJsdXJLZXJuZWxTaXplO1xuICAgIHZhciBmcmFtZUFsbCA9IE1hdGguZmxvb3IocG9pc3Nvbktlcm5lbC5sZW5ndGggLyAyIC8gYmx1cktlcm5lbFNpemUpO1xuICAgIHZhciBrZXJuZWxPZmZzZXQgPSBmcmFtZSAlIGZyYW1lQWxsO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBibHVyS2VybmVsU2l6ZSAqIDI7IGkrKykge1xuICAgICAgICBibHVyS2VybmVsW2ldID0gcG9pc3Nvbktlcm5lbFtpICsga2VybmVsT2Zmc2V0ICogYmx1cktlcm5lbFNpemUgKiAyXTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2RvZkJsdXJOb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLl9kb2ZCbHVyTm9kZXNbaV0uc2V0UGFyYW1ldGVyKCdwZXJjZW50JywgZnJhbWUgLyAzMC4wKTtcbiAgICAgICAgdGhpcy5fZG9mQmx1ck5vZGVzW2ldLnNldFBhcmFtZXRlcigncG9pc3Nvbktlcm5lbCcsIGJsdXJLZXJuZWwpO1xuICAgIH1cblxuICAgIHRoaXMuX2NvY05vZGUuc2V0UGFyYW1ldGVyKCd6TmVhcicsIGNhbWVyYS5uZWFyKTtcbiAgICB0aGlzLl9jb2NOb2RlLnNldFBhcmFtZXRlcignekZhcicsIGNhbWVyYS5mYXIpO1xuXG4gICAgdGhpcy5fY29tcG9zaXRvci5yZW5kZXIocmVuZGVyZXIsIGZyYW1lYnVmZmVyKTtcbn07XG5cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmlzU1NSRmluaXNoZWQgPSBmdW5jdGlvbiAoZnJhbWUpIHtcbiAgICByZXR1cm4gdGhpcy5fc3NyUGFzcyA/IHRoaXMuX3NzclBhc3MuaXNGaW5pc2hlZChmcmFtZSkgOiB0cnVlO1xufTtcblxuRWZmZWN0Q29tcG9zaXRvci5wcm90b3R5cGUuaXNTU0FPRmluaXNoZWQgPSBmdW5jdGlvbiAoZnJhbWUpIHtcbiAgICByZXR1cm4gdGhpcy5fc3Nhb1Bhc3MgPyB0aGlzLl9zc2FvUGFzcy5pc0ZpbmlzaGVkKGZyYW1lKSA6IHRydWU7XG59O1xuXG5FZmZlY3RDb21wb3NpdG9yLnByb3RvdHlwZS5pc1NTUkVuYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2VuYWJsZVNTUjtcbn07XG5cbkVmZmVjdENvbXBvc2l0b3IucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAocmVuZGVyZXIpIHtcbiAgICB0aGlzLl9zb3VyY2VUZXh0dXJlLmRpc3Bvc2UocmVuZGVyZXIpO1xuICAgIHRoaXMuX2RlcHRoVGV4dHVyZS5kaXNwb3NlKHJlbmRlcmVyKTtcbiAgICB0aGlzLl9mcmFtZWJ1ZmZlci5kaXNwb3NlKHJlbmRlcmVyKTtcbiAgICB0aGlzLl9jb21wb3NpdG9yLmRpc3Bvc2UocmVuZGVyZXIpO1xuXG4gICAgdGhpcy5fZ0J1ZmZlclBhc3MuZGlzcG9zZShyZW5kZXJlcik7XG4gICAgdGhpcy5fc3Nhb1Bhc3MuZGlzcG9zZShyZW5kZXJlcik7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFZmZlY3RDb21wb3NpdG9yO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL3NyYy9ncmFwaGljL0VmZmVjdENvbXBvc2l0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDEwNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///106\n");

/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createCompositor__ = __webpack_require__(108);\n// DEPRECATED\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__createCompositor__[\"a\" /* default */]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvY3JlYXRlQ29tcG9zaXRvci5qcz9lNDM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIERFUFJFQ0FURURcbmltcG9ydCBjcmVhdGVDb21wb3NpdG9yIGZyb20gJy4uL2NyZWF0ZUNvbXBvc2l0b3InO1xuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ29tcG9zaXRvcjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9jb21wb3NpdG9yL2NyZWF0ZUNvbXBvc2l0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDEwN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///107\n");

/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_util__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__compositor_Compositor__ = __webpack_require__(109);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__compositor_SceneNode__ = __webpack_require__(111);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__compositor_TextureNode__ = __webpack_require__(112);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compositor_FilterNode__ = __webpack_require__(113);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__TextureCube__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shader_registerBuiltinCompositor__ = __webpack_require__(114);\n\n\n\n\n\n\n\n\n\n\n\n\nObject(__WEBPACK_IMPORTED_MODULE_9__shader_registerBuiltinCompositor__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */]);\n\nvar shaderSourceReg = /^#source\\((.*?)\\)/;\n\n/**\n * @name clay.createCompositor\n * @function\n * @param {Object} json\n * @param {Object} [opts]\n * @return {clay.compositor.Compositor}\n */\nfunction createCompositor(json, opts) {\n    var compositor = new __WEBPACK_IMPORTED_MODULE_1__compositor_Compositor__[\"a\" /* default */]();\n    opts = opts || {};\n\n    var lib = {\n        textures: {},\n        parameters: {}\n    };\n    var afterLoad = function(shaderLib, textureLib) {\n        for (var i = 0; i < json.nodes.length; i++) {\n            var nodeInfo = json.nodes[i];\n            var node = createNode(nodeInfo, lib, opts);\n            if (node) {\n                compositor.addNode(node);\n            }\n        }\n    };\n\n    for (var name in json.parameters) {\n        var paramInfo = json.parameters[name];\n        lib.parameters[name] = convertParameter(paramInfo);\n    }\n    // TODO load texture asynchronous\n    loadTextures(json, lib, opts, function(textureLib) {\n        lib.textures = textureLib;\n        afterLoad();\n    });\n\n    return compositor;\n}\n\nfunction createNode(nodeInfo, lib, opts) {\n    var type = nodeInfo.type || 'filter';\n    var shaderSource;\n    var inputs;\n    var outputs;\n\n    if (type === 'filter') {\n        var shaderExp = nodeInfo.shader.trim();\n        var res = shaderSourceReg.exec(shaderExp);\n        if (res) {\n            shaderSource = __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source(res[1].trim());\n        }\n        else if (shaderExp.charAt(0) === '#') {\n            shaderSource = lib.shaders[shaderExp.substr(1)];\n        }\n        if (!shaderSource) {\n            shaderSource = shaderExp;\n        }\n        if (!shaderSource) {\n            return;\n        }\n    }\n\n    if (nodeInfo.inputs) {\n        inputs = {};\n        for (var name in nodeInfo.inputs) {\n            if (typeof nodeInfo.inputs[name] === 'string') {\n                inputs[name] = nodeInfo.inputs[name];\n            }\n            else {\n                inputs[name] = {\n                    node: nodeInfo.inputs[name].node,\n                    pin: nodeInfo.inputs[name].pin\n                };\n            }\n        }\n    }\n    if (nodeInfo.outputs) {\n        outputs = {};\n        for (var name in nodeInfo.outputs) {\n            var outputInfo = nodeInfo.outputs[name];\n            outputs[name] = {};\n            if (outputInfo.attachment != null) {\n                outputs[name].attachment = outputInfo.attachment;\n            }\n            if (outputInfo.keepLastFrame != null) {\n                outputs[name].keepLastFrame = outputInfo.keepLastFrame;\n            }\n            if (outputInfo.outputLastFrame != null) {\n                outputs[name].outputLastFrame = outputInfo.outputLastFrame;\n            }\n            if (outputInfo.parameters) {\n                outputs[name].parameters = convertParameter(outputInfo.parameters);\n            }\n        }\n    }\n    var node;\n    if (type === 'scene') {\n        node = new __WEBPACK_IMPORTED_MODULE_2__compositor_SceneNode__[\"a\" /* default */]({\n            name: nodeInfo.name,\n            scene: opts.scene,\n            camera: opts.camera,\n            outputs: outputs\n        });\n    }\n    else if (type === 'texture') {\n        node = new __WEBPACK_IMPORTED_MODULE_3__compositor_TextureNode__[\"a\" /* default */]({\n            name: nodeInfo.name,\n            outputs: outputs\n        });\n    }\n    // Default is filter\n    else {\n        node = new __WEBPACK_IMPORTED_MODULE_4__compositor_FilterNode__[\"a\" /* default */]({\n            name: nodeInfo.name,\n            shader: shaderSource,\n            inputs: inputs,\n            outputs: outputs\n        });\n    }\n    if (node) {\n        if (nodeInfo.parameters) {\n            for (var name in nodeInfo.parameters) {\n                var val = nodeInfo.parameters[name];\n                if (typeof val === 'string') {\n                    val = val.trim();\n                    if (val.charAt(0) === '#') {\n                        val = lib.textures[val.substr(1)];\n                    }\n                    else {\n                        node.on(\n                            'beforerender', createSizeSetHandler(\n                                name, tryConvertExpr(val)\n                            )\n                        );\n                    }\n                }\n                else if (typeof val === 'function') {\n                    node.on('beforerender', val);\n                }\n                node.setParameter(name, val);\n            }\n        }\n        if (nodeInfo.defines && node.pass) {\n            for (var name in nodeInfo.defines) {\n                var val = nodeInfo.defines[name];\n                node.pass.material.define('fragment', name, val);\n            }\n        }\n    }\n    return node;\n}\n\nfunction defaultWidthFunc(width, height) {\n    return width;\n}\nfunction defaultHeightFunc(width, height) {\n    return height;\n}\n\nfunction convertParameter(paramInfo) {\n    var param = {};\n    if (!paramInfo) {\n        return param;\n    }\n    ['type', 'minFilter', 'magFilter', 'wrapS', 'wrapT', 'flipY', 'useMipmap']\n        .forEach(function(name) {\n            var val = paramInfo[name];\n            if (val != null) {\n                // Convert string to enum\n                if (typeof val === 'string') {\n                    val = __WEBPACK_IMPORTED_MODULE_6__Texture__[\"a\" /* default */][val];\n                }\n                param[name] = val;\n            }\n        });\n\n    var sizeScale = paramInfo.scale || 1;\n    ['width', 'height']\n        .forEach(function(name) {\n            if (paramInfo[name] != null) {\n                var val = paramInfo[name];\n                if (typeof val === 'string') {\n                    val = val.trim();\n                    param[name] = createSizeParser(\n                        name, tryConvertExpr(val), sizeScale\n                    );\n                }\n                else {\n                    param[name] = val;\n                }\n            }\n        });\n    if (!param.width) {\n        param.width = defaultWidthFunc;\n    }\n    if (!param.height) {\n        param.height = defaultHeightFunc;\n    }\n\n    if (paramInfo.useMipmap != null) {\n        param.useMipmap = paramInfo.useMipmap;\n    }\n    return param;\n}\n\nfunction loadTextures(json, lib, opts, callback) {\n    if (!json.textures) {\n        callback({});\n        return;\n    }\n    var textures = {};\n    var loading = 0;\n\n    var cbd = false;\n    var textureRootPath = opts.textureRootPath;\n    __WEBPACK_IMPORTED_MODULE_0__core_util__[\"a\" /* default */].each(json.textures, function(textureInfo, name) {\n        var texture;\n        var path = textureInfo.path;\n        var parameters = convertParameter(textureInfo.parameters);\n        if (Array.isArray(path) && path.length === 6) {\n            if (textureRootPath) {\n                path = path.map(function(item) {\n                    return __WEBPACK_IMPORTED_MODULE_0__core_util__[\"a\" /* default */].relative2absolute(item, textureRootPath);\n                });\n            }\n            texture = new __WEBPACK_IMPORTED_MODULE_8__TextureCube__[\"a\" /* default */](parameters);\n        }\n        else if(typeof path === 'string') {\n            if (textureRootPath) {\n                path = __WEBPACK_IMPORTED_MODULE_0__core_util__[\"a\" /* default */].relative2absolute(path, textureRootPath);\n            }\n            texture = new __WEBPACK_IMPORTED_MODULE_7__Texture2D__[\"a\" /* default */](parameters);\n        }\n        else {\n            return;\n        }\n\n        texture.load(path);\n        loading++;\n        texture.once('success', function() {\n            textures[name] = texture;\n            loading--;\n            if (loading === 0) {\n                callback(textures);\n                cbd = true;\n            }\n        });\n    });\n\n    if (loading === 0 && !cbd) {\n        callback(textures);\n    }\n}\n\nfunction createSizeSetHandler(name, exprFunc) {\n    return function (renderer) {\n        // PENDING viewport size or window size\n        var dpr = renderer.getDevicePixelRatio();\n        // PENDING If multiply dpr ?\n        var width = renderer.getWidth();\n        var height = renderer.getHeight();\n        var result = exprFunc(width, height, dpr);\n        this.setParameter(name, result);\n    };\n}\n\nfunction createSizeParser(name, exprFunc, scale) {\n    scale = scale || 1;\n    return function (renderer) {\n        var dpr = renderer.getDevicePixelRatio();\n        var width = renderer.getWidth() * scale;\n        var height = renderer.getHeight() * scale;\n        return exprFunc(width, height, dpr);\n    };\n}\n\nfunction tryConvertExpr(string) {\n    // PENDING\n    var exprRes = /^expr\\((.*)\\)$/.exec(string);\n    if (exprRes) {\n        try {\n            var func = new Function('width', 'height', 'dpr', 'return ' + exprRes[1]);\n            // Try run t\n            func(1, 1);\n\n            return func;\n        }\n        catch (e) {\n            throw new Error('Invalid expression.');\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (createCompositor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///108\n");

/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Graph__ = __webpack_require__(110);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TexturePool__ = __webpack_require__(57);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__FrameBuffer__ = __webpack_require__(11);\n\n\n\n\n/**\n * Compositor provide graph based post processing\n *\n * @constructor clay.compositor.Compositor\n * @extends clay.compositor.Graph\n *\n */\nvar Compositor = __WEBPACK_IMPORTED_MODULE_0__Graph__[\"a\" /* default */].extend(function() {\n    return {\n        // Output node\n        _outputs: [],\n\n        _texturePool: new __WEBPACK_IMPORTED_MODULE_1__TexturePool__[\"a\" /* default */](),\n\n        _frameBuffer: new __WEBPACK_IMPORTED_MODULE_2__FrameBuffer__[\"a\" /* default */]({\n            depthBuffer: false\n        })\n    };\n},\n/** @lends clay.compositor.Compositor.prototype */\n{\n    addNode: function(node) {\n        __WEBPACK_IMPORTED_MODULE_0__Graph__[\"a\" /* default */].prototype.addNode.call(this, node);\n        node._compositor = this;\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    render: function(renderer, frameBuffer) {\n        if (this._dirty) {\n            this.update();\n            this._dirty = false;\n\n            this._outputs.length = 0;\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (!this.nodes[i].outputs) {\n                    this._outputs.push(this.nodes[i]);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.nodes.length; i++) {\n            // Update the reference number of each output texture\n            this.nodes[i].beforeFrame();\n        }\n\n        for (var i = 0; i < this._outputs.length; i++) {\n            this._outputs[i].updateReference();\n        }\n\n        for (var i = 0; i < this._outputs.length; i++) {\n            this._outputs[i].render(renderer, frameBuffer);\n        }\n\n        for (var i = 0; i < this.nodes.length; i++) {\n            // Clear up\n            this.nodes[i].afterFrame();\n        }\n    },\n\n    allocateTexture: function (parameters) {\n        return this._texturePool.get(parameters);\n    },\n\n    releaseTexture: function (parameters) {\n        this._texturePool.put(parameters);\n    },\n\n    getFrameBuffer: function () {\n        return this._frameBuffer;\n    },\n\n    /**\n     * Dispose compositor\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this._texturePool.clear(renderer);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Compositor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvQ29tcG9zaXRvci5qcz8zY2I4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHcmFwaCBmcm9tICcuL0dyYXBoJztcbmltcG9ydCBUZXh0dXJlUG9vbCBmcm9tICcuL1RleHR1cmVQb29sJztcbmltcG9ydCBGcmFtZUJ1ZmZlciBmcm9tICcuLi9GcmFtZUJ1ZmZlcic7XG5cbi8qKlxuICogQ29tcG9zaXRvciBwcm92aWRlIGdyYXBoIGJhc2VkIHBvc3QgcHJvY2Vzc2luZ1xuICpcbiAqIEBjb25zdHJ1Y3RvciBjbGF5LmNvbXBvc2l0b3IuQ29tcG9zaXRvclxuICogQGV4dGVuZHMgY2xheS5jb21wb3NpdG9yLkdyYXBoXG4gKlxuICovXG52YXIgQ29tcG9zaXRvciA9IEdyYXBoLmV4dGVuZChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICAvLyBPdXRwdXQgbm9kZVxuICAgICAgICBfb3V0cHV0czogW10sXG5cbiAgICAgICAgX3RleHR1cmVQb29sOiBuZXcgVGV4dHVyZVBvb2woKSxcblxuICAgICAgICBfZnJhbWVCdWZmZXI6IG5ldyBGcmFtZUJ1ZmZlcih7XG4gICAgICAgICAgICBkZXB0aEJ1ZmZlcjogZmFsc2VcbiAgICAgICAgfSlcbiAgICB9O1xufSxcbi8qKiBAbGVuZHMgY2xheS5jb21wb3NpdG9yLkNvbXBvc2l0b3IucHJvdG90eXBlICovXG57XG4gICAgYWRkTm9kZTogZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBHcmFwaC5wcm90b3R5cGUuYWRkTm9kZS5jYWxsKHRoaXMsIG5vZGUpO1xuICAgICAgICBub2RlLl9jb21wb3NpdG9yID0gdGhpcztcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEBwYXJhbSAge2NsYXkuUmVuZGVyZXJ9IHJlbmRlcmVyXG4gICAgICovXG4gICAgcmVuZGVyOiBmdW5jdGlvbihyZW5kZXJlciwgZnJhbWVCdWZmZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuX2RpcnR5KSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgdGhpcy5fZGlydHkgPSBmYWxzZTtcblxuICAgICAgICAgICAgdGhpcy5fb3V0cHV0cy5sZW5ndGggPSAwO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLm5vZGVzW2ldLm91dHB1dHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fb3V0cHV0cy5wdXNoKHRoaXMubm9kZXNbaV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSByZWZlcmVuY2UgbnVtYmVyIG9mIGVhY2ggb3V0cHV0IHRleHR1cmVcbiAgICAgICAgICAgIHRoaXMubm9kZXNbaV0uYmVmb3JlRnJhbWUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fb3V0cHV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5fb3V0cHV0c1tpXS51cGRhdGVSZWZlcmVuY2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fb3V0cHV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5fb3V0cHV0c1tpXS5yZW5kZXIocmVuZGVyZXIsIGZyYW1lQnVmZmVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgLy8gQ2xlYXIgdXBcbiAgICAgICAgICAgIHRoaXMubm9kZXNbaV0uYWZ0ZXJGcmFtZSgpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGFsbG9jYXRlVGV4dHVyZTogZnVuY3Rpb24gKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RleHR1cmVQb29sLmdldChwYXJhbWV0ZXJzKTtcbiAgICB9LFxuXG4gICAgcmVsZWFzZVRleHR1cmU6IGZ1bmN0aW9uIChwYXJhbWV0ZXJzKSB7XG4gICAgICAgIHRoaXMuX3RleHR1cmVQb29sLnB1dChwYXJhbWV0ZXJzKTtcbiAgICB9LFxuXG4gICAgZ2V0RnJhbWVCdWZmZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZyYW1lQnVmZmVyO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBEaXNwb3NlIGNvbXBvc2l0b3JcbiAgICAgKiBAcGFyYW0ge2NsYXkuUmVuZGVyZXJ9IHJlbmRlcmVyXG4gICAgICovXG4gICAgZGlzcG9zZTogZnVuY3Rpb24gKHJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMuX3RleHR1cmVQb29sLmNsZWFyKHJlbmRlcmVyKTtcbiAgICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9zaXRvcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvQ29tcG9zaXRvci5qc1xuLy8gbW9kdWxlIGlkID0gMTA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///109\n");

/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__CompositorNode__ = __webpack_require__(30);\n\n\n\n/**\n * @constructor clay.compositor.Graph\n * @extends clay.core.Base\n */\nvar Graph = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.compositor.Graph# */ {\n        /**\n         * @type {Array.<clay.compositor.CompositorNode>}\n         */\n        nodes: []\n    };\n},\n/** @lends clay.compositor.Graph.prototype */\n{\n\n    /**\n     * Mark to update\n     */\n    dirty: function () {\n        this._dirty = true;\n    },\n    /**\n     * @param {clay.compositor.CompositorNode} node\n     */\n    addNode: function (node) {\n\n        if (this.nodes.indexOf(node) >= 0) {\n            return;\n        }\n\n        this.nodes.push(node);\n\n        this._dirty = true;\n    },\n    /**\n     * @param  {clay.compositor.CompositorNode|string} node\n     */\n    removeNode: function (node) {\n        if (typeof node === 'string') {\n            node = this.getNodeByName(node);\n        }\n        var idx = this.nodes.indexOf(node);\n        if (idx >= 0) {\n            this.nodes.splice(idx, 1);\n            this._dirty = true;\n        }\n    },\n    /**\n     * @param {string} name\n     * @return {clay.compositor.CompositorNode}\n     */\n    getNodeByName: function (name) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            if (this.nodes[i].name === name) {\n                return this.nodes[i];\n            }\n        }\n    },\n    /**\n     * Update links of graph\n     */\n    update: function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.nodes[i].clear();\n        }\n        // Traverse all the nodes and build the graph\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n\n            if (!node.inputs) {\n                continue;\n            }\n            for (var inputName in node.inputs) {\n                if (!node.inputs[inputName]) {\n                    continue;\n                }\n                if (node.pass && !node.pass.material.isUniformEnabled(inputName)) {\n                    console.warn('Pin '  + node.name + '.' + inputName + ' not used.');\n                    continue;\n                }\n                var fromPinInfo = node.inputs[inputName];\n\n                var fromPin = this.findPin(fromPinInfo);\n                if (fromPin) {\n                    node.link(inputName, fromPin.node, fromPin.pin);\n                }\n                else {\n                    if (typeof fromPinInfo === 'string') {\n                        console.warn('Node ' + fromPinInfo + ' not exist');\n                    }\n                    else {\n                        console.warn('Pin of ' + fromPinInfo.node + '.' + fromPinInfo.pin + ' not exist');\n                    }\n                }\n            }\n        }\n    },\n\n    findPin: function (input) {\n        var node;\n        // Try to take input as a directly a node\n        if (typeof input === 'string' || input instanceof __WEBPACK_IMPORTED_MODULE_1__CompositorNode__[\"a\" /* default */]) {\n            input = {\n                node: input\n            };\n        }\n\n        if (typeof input.node === 'string') {\n            for (var i = 0; i < this.nodes.length; i++) {\n                var tmp = this.nodes[i];\n                if (tmp.name === input.node) {\n                    node = tmp;\n                }\n            }\n        }\n        else {\n            node = input.node;\n        }\n        if (node) {\n            var inputPin = input.pin;\n            if (!inputPin) {\n                // Use first pin defaultly\n                if (node.outputs) {\n                    inputPin = Object.keys(node.outputs)[0];\n                }\n            }\n            if (node.outputs[inputPin]) {\n                return {\n                    node: node,\n                    pin: inputPin\n                };\n            }\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Graph);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvR3JhcGguanM/MjdhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZSBmcm9tICcuLi9jb3JlL0Jhc2UnO1xuaW1wb3J0IEdyYXBoTm9kZSBmcm9tICcuL0NvbXBvc2l0b3JOb2RlJztcblxuLyoqXG4gKiBAY29uc3RydWN0b3IgY2xheS5jb21wb3NpdG9yLkdyYXBoXG4gKiBAZXh0ZW5kcyBjbGF5LmNvcmUuQmFzZVxuICovXG52YXIgR3JhcGggPSBCYXNlLmV4dGVuZChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIC8qKiBAbGVuZHMgY2xheS5jb21wb3NpdG9yLkdyYXBoIyAqLyB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAdHlwZSB7QXJyYXkuPGNsYXkuY29tcG9zaXRvci5Db21wb3NpdG9yTm9kZT59XG4gICAgICAgICAqL1xuICAgICAgICBub2RlczogW11cbiAgICB9O1xufSxcbi8qKiBAbGVuZHMgY2xheS5jb21wb3NpdG9yLkdyYXBoLnByb3RvdHlwZSAqL1xue1xuXG4gICAgLyoqXG4gICAgICogTWFyayB0byB1cGRhdGVcbiAgICAgKi9cbiAgICBkaXJ0eTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9kaXJ0eSA9IHRydWU7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge2NsYXkuY29tcG9zaXRvci5Db21wb3NpdG9yTm9kZX0gbm9kZVxuICAgICAqL1xuICAgIGFkZE5vZGU6IGZ1bmN0aW9uIChub2RlKSB7XG5cbiAgICAgICAgaWYgKHRoaXMubm9kZXMuaW5kZXhPZihub2RlKSA+PSAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm5vZGVzLnB1c2gobm9kZSk7XG5cbiAgICAgICAgdGhpcy5fZGlydHkgPSB0cnVlO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogQHBhcmFtICB7Y2xheS5jb21wb3NpdG9yLkNvbXBvc2l0b3JOb2RlfHN0cmluZ30gbm9kZVxuICAgICAqL1xuICAgIHJlbW92ZU5vZGU6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygbm9kZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIG5vZGUgPSB0aGlzLmdldE5vZGVCeU5hbWUobm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlkeCA9IHRoaXMubm9kZXMuaW5kZXhPZihub2RlKTtcbiAgICAgICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLm5vZGVzLnNwbGljZShpZHgsIDEpO1xuICAgICAgICAgICAgdGhpcy5fZGlydHkgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgICAqIEByZXR1cm4ge2NsYXkuY29tcG9zaXRvci5Db21wb3NpdG9yTm9kZX1cbiAgICAgKi9cbiAgICBnZXROb2RlQnlOYW1lOiBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm5vZGVzW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ub2Rlc1tpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgLyoqXG4gICAgICogVXBkYXRlIGxpbmtzIG9mIGdyYXBoXG4gICAgICovXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5ub2Rlc1tpXS5jbGVhcigpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRyYXZlcnNlIGFsbCB0aGUgbm9kZXMgYW5kIGJ1aWxkIHRoZSBncmFwaFxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gdGhpcy5ub2Rlc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFub2RlLmlucHV0cykge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgaW5wdXROYW1lIGluIG5vZGUuaW5wdXRzKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFub2RlLmlucHV0c1tpbnB1dE5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobm9kZS5wYXNzICYmICFub2RlLnBhc3MubWF0ZXJpYWwuaXNVbmlmb3JtRW5hYmxlZChpbnB1dE5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignUGluICcgICsgbm9kZS5uYW1lICsgJy4nICsgaW5wdXROYW1lICsgJyBub3QgdXNlZC4nKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBmcm9tUGluSW5mbyA9IG5vZGUuaW5wdXRzW2lucHV0TmFtZV07XG5cbiAgICAgICAgICAgICAgICB2YXIgZnJvbVBpbiA9IHRoaXMuZmluZFBpbihmcm9tUGluSW5mbyk7XG4gICAgICAgICAgICAgICAgaWYgKGZyb21QaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5saW5rKGlucHV0TmFtZSwgZnJvbVBpbi5ub2RlLCBmcm9tUGluLnBpbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGZyb21QaW5JbmZvID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdOb2RlICcgKyBmcm9tUGluSW5mbyArICcgbm90IGV4aXN0Jyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ1BpbiBvZiAnICsgZnJvbVBpbkluZm8ubm9kZSArICcuJyArIGZyb21QaW5JbmZvLnBpbiArICcgbm90IGV4aXN0Jyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZmluZFBpbjogZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgIHZhciBub2RlO1xuICAgICAgICAvLyBUcnkgdG8gdGFrZSBpbnB1dCBhcyBhIGRpcmVjdGx5IGEgbm9kZVxuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIEdyYXBoTm9kZSkge1xuICAgICAgICAgICAgaW5wdXQgPSB7XG4gICAgICAgICAgICAgICAgbm9kZTogaW5wdXRcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGlucHV0Lm5vZGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgdG1wID0gdGhpcy5ub2Rlc1tpXTtcbiAgICAgICAgICAgICAgICBpZiAodG1wLm5hbWUgPT09IGlucHV0Lm5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHRtcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBub2RlID0gaW5wdXQubm9kZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgdmFyIGlucHV0UGluID0gaW5wdXQucGluO1xuICAgICAgICAgICAgaWYgKCFpbnB1dFBpbikge1xuICAgICAgICAgICAgICAgIC8vIFVzZSBmaXJzdCBwaW4gZGVmYXVsdGx5XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUub3V0cHV0cykge1xuICAgICAgICAgICAgICAgICAgICBpbnB1dFBpbiA9IE9iamVjdC5rZXlzKG5vZGUub3V0cHV0cylbMF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5vZGUub3V0cHV0c1tpbnB1dFBpbl0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBub2RlOiBub2RlLFxuICAgICAgICAgICAgICAgICAgICBwaW46IGlucHV0UGluXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBHcmFwaDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvR3JhcGguanNcbi8vIG1vZHVsZSBpZCA9IDExMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///110\n");

/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__CompositorNode__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_glenum__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__FrameBuffer__ = __webpack_require__(11);\n\n\n\n\n/**\n * @constructor clay.compositor.SceneNode\n * @extends clay.compositor.CompositorNode\n */\nvar SceneNode = __WEBPACK_IMPORTED_MODULE_0__CompositorNode__[\"a\" /* default */].extend(\n/** @lends clay.compositor.SceneNode# */\n{\n    name: 'scene',\n    /**\n     * @type {clay.Scene}\n     */\n    scene: null,\n    /**\n     * @type {clay.Camera}\n     */\n    camera: null,\n    /**\n     * @type {boolean}\n     */\n    autoUpdateScene: true,\n    /**\n     * @type {boolean}\n     */\n    preZ: false\n\n}, function() {\n    this.frameBuffer = new __WEBPACK_IMPORTED_MODULE_2__FrameBuffer__[\"a\" /* default */]();\n}, {\n    render: function(renderer) {\n\n        this._rendering = true;\n        var _gl = renderer.gl;\n\n        this.trigger('beforerender');\n\n        var renderInfo;\n\n        if (!this.outputs) {\n\n            renderInfo = renderer.render(this.scene, this.camera, !this.autoUpdateScene, this.preZ);\n\n        }\n        else {\n\n            var frameBuffer = this.frameBuffer;\n            for (var name in this.outputs) {\n                var parameters = this.updateParameter(name, renderer);\n                var outputInfo = this.outputs[name];\n                var texture = this._compositor.allocateTexture(parameters);\n                this._outputTextures[name] = texture;\n\n                var attachment = outputInfo.attachment || _gl.COLOR_ATTACHMENT0;\n                if (typeof(attachment) == 'string') {\n                    attachment = _gl[attachment];\n                }\n                frameBuffer.attach(texture, attachment);\n            }\n            frameBuffer.bind(renderer);\n\n            // MRT Support in chrome\n            // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n            var ext = renderer.getGLExtension('EXT_draw_buffers');\n            if (ext) {\n                var bufs = [];\n                for (var attachment in this.outputs) {\n                    attachment = parseInt(attachment);\n                    if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n                        bufs.push(attachment);\n                    }\n                }\n                ext.drawBuffersEXT(bufs);\n            }\n\n            // Always clear\n            // PENDING\n            renderer.saveClear();\n            renderer.clearBit = __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].DEPTH_BUFFER_BIT | __WEBPACK_IMPORTED_MODULE_1__core_glenum__[\"a\" /* default */].COLOR_BUFFER_BIT;\n            renderInfo = renderer.render(this.scene, this.camera, !this.autoUpdateScene, this.preZ);\n            renderer.restoreClear();\n\n            frameBuffer.unbind(renderer);\n        }\n\n        this.trigger('afterrender', renderInfo);\n\n        this._rendering = false;\n        this._rendered = true;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (SceneNode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTExLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvU2NlbmVOb2RlLmpzPzNmOWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbXBvc2l0b3JOb2RlIGZyb20gJy4vQ29tcG9zaXRvck5vZGUnO1xuaW1wb3J0IGdsZW51bSBmcm9tICcuLi9jb3JlL2dsZW51bSc7XG5pbXBvcnQgRnJhbWVCdWZmZXIgZnJvbSAnLi4vRnJhbWVCdWZmZXInO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvciBjbGF5LmNvbXBvc2l0b3IuU2NlbmVOb2RlXG4gKiBAZXh0ZW5kcyBjbGF5LmNvbXBvc2l0b3IuQ29tcG9zaXRvck5vZGVcbiAqL1xudmFyIFNjZW5lTm9kZSA9IENvbXBvc2l0b3JOb2RlLmV4dGVuZChcbi8qKiBAbGVuZHMgY2xheS5jb21wb3NpdG9yLlNjZW5lTm9kZSMgKi9cbntcbiAgICBuYW1lOiAnc2NlbmUnLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtjbGF5LlNjZW5lfVxuICAgICAqL1xuICAgIHNjZW5lOiBudWxsLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtjbGF5LkNhbWVyYX1cbiAgICAgKi9cbiAgICBjYW1lcmE6IG51bGwsXG4gICAgLyoqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgYXV0b1VwZGF0ZVNjZW5lOiB0cnVlLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIHByZVo6IGZhbHNlXG5cbn0sIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuZnJhbWVCdWZmZXIgPSBuZXcgRnJhbWVCdWZmZXIoKTtcbn0sIHtcbiAgICByZW5kZXI6IGZ1bmN0aW9uKHJlbmRlcmVyKSB7XG5cbiAgICAgICAgdGhpcy5fcmVuZGVyaW5nID0gdHJ1ZTtcbiAgICAgICAgdmFyIF9nbCA9IHJlbmRlcmVyLmdsO1xuXG4gICAgICAgIHRoaXMudHJpZ2dlcignYmVmb3JlcmVuZGVyJyk7XG5cbiAgICAgICAgdmFyIHJlbmRlckluZm87XG5cbiAgICAgICAgaWYgKCF0aGlzLm91dHB1dHMpIHtcblxuICAgICAgICAgICAgcmVuZGVySW5mbyA9IHJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLCB0aGlzLmNhbWVyYSwgIXRoaXMuYXV0b1VwZGF0ZVNjZW5lLCB0aGlzLnByZVopO1xuXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG5cbiAgICAgICAgICAgIHZhciBmcmFtZUJ1ZmZlciA9IHRoaXMuZnJhbWVCdWZmZXI7XG4gICAgICAgICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMub3V0cHV0cykge1xuICAgICAgICAgICAgICAgIHZhciBwYXJhbWV0ZXJzID0gdGhpcy51cGRhdGVQYXJhbWV0ZXIobmFtZSwgcmVuZGVyZXIpO1xuICAgICAgICAgICAgICAgIHZhciBvdXRwdXRJbmZvID0gdGhpcy5vdXRwdXRzW25hbWVdO1xuICAgICAgICAgICAgICAgIHZhciB0ZXh0dXJlID0gdGhpcy5fY29tcG9zaXRvci5hbGxvY2F0ZVRleHR1cmUocGFyYW1ldGVycyk7XG4gICAgICAgICAgICAgICAgdGhpcy5fb3V0cHV0VGV4dHVyZXNbbmFtZV0gPSB0ZXh0dXJlO1xuXG4gICAgICAgICAgICAgICAgdmFyIGF0dGFjaG1lbnQgPSBvdXRwdXRJbmZvLmF0dGFjaG1lbnQgfHwgX2dsLkNPTE9SX0FUVEFDSE1FTlQwO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YoYXR0YWNobWVudCkgPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgYXR0YWNobWVudCA9IF9nbFthdHRhY2htZW50XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZnJhbWVCdWZmZXIuYXR0YWNoKHRleHR1cmUsIGF0dGFjaG1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnJhbWVCdWZmZXIuYmluZChyZW5kZXJlcik7XG5cbiAgICAgICAgICAgIC8vIE1SVCBTdXBwb3J0IGluIGNocm9tZVxuICAgICAgICAgICAgLy8gaHR0cHM6Ly93d3cua2hyb25vcy5vcmcvcmVnaXN0cnkvd2ViZ2wvc2RrL3Rlc3RzL2NvbmZvcm1hbmNlL2V4dGVuc2lvbnMvZXh0LWRyYXctYnVmZmVycy5odG1sXG4gICAgICAgICAgICB2YXIgZXh0ID0gcmVuZGVyZXIuZ2V0R0xFeHRlbnNpb24oJ0VYVF9kcmF3X2J1ZmZlcnMnKTtcbiAgICAgICAgICAgIGlmIChleHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgYnVmcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGF0dGFjaG1lbnQgaW4gdGhpcy5vdXRwdXRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGF0dGFjaG1lbnQgPSBwYXJzZUludChhdHRhY2htZW50KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dGFjaG1lbnQgPj0gX2dsLkNPTE9SX0FUVEFDSE1FTlQwICYmIGF0dGFjaG1lbnQgPD0gX2dsLkNPTE9SX0FUVEFDSE1FTlQwICsgOCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmcy5wdXNoKGF0dGFjaG1lbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGV4dC5kcmF3QnVmZmVyc0VYVChidWZzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQWx3YXlzIGNsZWFyXG4gICAgICAgICAgICAvLyBQRU5ESU5HXG4gICAgICAgICAgICByZW5kZXJlci5zYXZlQ2xlYXIoKTtcbiAgICAgICAgICAgIHJlbmRlcmVyLmNsZWFyQml0ID0gZ2xlbnVtLkRFUFRIX0JVRkZFUl9CSVQgfCBnbGVudW0uQ09MT1JfQlVGRkVSX0JJVDtcbiAgICAgICAgICAgIHJlbmRlckluZm8gPSByZW5kZXJlci5yZW5kZXIodGhpcy5zY2VuZSwgdGhpcy5jYW1lcmEsICF0aGlzLmF1dG9VcGRhdGVTY2VuZSwgdGhpcy5wcmVaKTtcbiAgICAgICAgICAgIHJlbmRlcmVyLnJlc3RvcmVDbGVhcigpO1xuXG4gICAgICAgICAgICBmcmFtZUJ1ZmZlci51bmJpbmQocmVuZGVyZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50cmlnZ2VyKCdhZnRlcnJlbmRlcicsIHJlbmRlckluZm8pO1xuXG4gICAgICAgIHRoaXMuX3JlbmRlcmluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yZW5kZXJlZCA9IHRydWU7XG4gICAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFNjZW5lTm9kZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvU2NlbmVOb2RlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///111\n");

/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__CompositorNode__ = __webpack_require__(30);\n\n\n/**\n * @constructor clay.compositor.TextureNode\n * @extends clay.compositor.CompositorNode\n */\nvar TextureNode = __WEBPACK_IMPORTED_MODULE_0__CompositorNode__[\"a\" /* default */].extend(function() {\n    return /** @lends clay.compositor.TextureNode# */ {\n        /**\n         * @type {clay.Texture2D}\n         */\n        texture: null,\n\n        // Texture node must have output without parameters\n        outputs: {\n            color: {}\n        }\n    };\n}, function () {\n}, {\n\n    getOutput: function (renderer, name) {\n        return this.texture;\n    },\n\n    // Do nothing\n    beforeFrame: function () {},\n    afterFrame: function () {}\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextureNode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvVGV4dHVyZU5vZGUuanM/ZDE3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tcG9zaXRvck5vZGUgZnJvbSAnLi9Db21wb3NpdG9yTm9kZSc7XG5cbi8qKlxuICogQGNvbnN0cnVjdG9yIGNsYXkuY29tcG9zaXRvci5UZXh0dXJlTm9kZVxuICogQGV4dGVuZHMgY2xheS5jb21wb3NpdG9yLkNvbXBvc2l0b3JOb2RlXG4gKi9cbnZhciBUZXh0dXJlTm9kZSA9IENvbXBvc2l0b3JOb2RlLmV4dGVuZChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gLyoqIEBsZW5kcyBjbGF5LmNvbXBvc2l0b3IuVGV4dHVyZU5vZGUjICovIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEB0eXBlIHtjbGF5LlRleHR1cmUyRH1cbiAgICAgICAgICovXG4gICAgICAgIHRleHR1cmU6IG51bGwsXG5cbiAgICAgICAgLy8gVGV4dHVyZSBub2RlIG11c3QgaGF2ZSBvdXRwdXQgd2l0aG91dCBwYXJhbWV0ZXJzXG4gICAgICAgIG91dHB1dHM6IHtcbiAgICAgICAgICAgIGNvbG9yOiB7fVxuICAgICAgICB9XG4gICAgfTtcbn0sIGZ1bmN0aW9uICgpIHtcbn0sIHtcblxuICAgIGdldE91dHB1dDogZnVuY3Rpb24gKHJlbmRlcmVyLCBuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHR1cmU7XG4gICAgfSxcblxuICAgIC8vIERvIG5vdGhpbmdcbiAgICBiZWZvcmVGcmFtZTogZnVuY3Rpb24gKCkge30sXG4gICAgYWZ0ZXJGcmFtZTogZnVuY3Rpb24gKCkge31cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBUZXh0dXJlTm9kZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2NvbXBvc2l0b3IvVGV4dHVyZU5vZGUuanNcbi8vIG1vZHVsZSBpZCA9IDExMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///112\n");

/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__CompositorNode__ = __webpack_require__(30);\n// TODO Shader library\n\n\n\n// TODO curlnoise demo wrong\n\n// PENDING\n// Use topological sort ?\n\n/**\n * Filter node\n *\n * @constructor clay.compositor.FilterNode\n * @extends clay.compositor.CompositorNode\n *\n * @example\n    var node = new clay.compositor.FilterNode({\n        name: 'fxaa',\n        shader: clay.Shader.source('clay.compositor.fxaa'),\n        inputs: {\n            texture: {\n                    node: 'scene',\n                    pin: 'color'\n            }\n        },\n        // Multiple outputs is preserved for MRT support in WebGL2.0\n        outputs: {\n            color: {\n                attachment: clay.FrameBuffer.COLOR_ATTACHMENT0\n                parameters: {\n                    format: clay.Texture.RGBA,\n                    width: 512,\n                    height: 512\n                },\n                // Node will keep the RTT rendered in last frame\n                keepLastFrame: true,\n                // Force the node output the RTT rendered in last frame\n                outputLastFrame: true\n            }\n        }\n    });\n    *\n    */\nvar FilterNode = __WEBPACK_IMPORTED_MODULE_1__CompositorNode__[\"a\" /* default */].extend(function () {\n    return /** @lends clay.compositor.FilterNode# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * @type {Object}\n         */\n        inputs: {},\n\n        /**\n         * @type {Object}\n         */\n        outputs: null,\n\n        /**\n         * @type {string}\n         */\n        shader: '',\n\n        /**\n         * Input links, will be updated by the graph\n         * @example:\n         *     inputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        inputLinks: {},\n\n        /**\n         * Output links, will be updated by the graph\n         * @example:\n         *     outputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        outputLinks: {},\n\n        /**\n         * @type {clay.compositor.Pass}\n         */\n        pass: null,\n\n        // Save the output texture of previous frame\n        // Will be used when there exist a circular reference\n        _prevOutputTextures: {},\n        _outputTextures: {},\n\n        // Example: { name: 2 }\n        _outputReferences: {},\n\n        _rendering: false,\n        // If rendered in this frame\n        _rendered: false,\n\n        _compositor: null\n    };\n}, function () {\n\n    var pass = new __WEBPACK_IMPORTED_MODULE_0__Pass__[\"a\" /* default */]({\n        fragment: this.shader\n    });\n    this.pass = pass;\n},\n/** @lends clay.compositor.FilterNode.prototype */\n{\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    render: function (renderer, frameBuffer) {\n        this.trigger('beforerender', renderer);\n\n        this._rendering = true;\n\n        var _gl = renderer.gl;\n\n        for (var inputName in this.inputLinks) {\n            var link = this.inputLinks[inputName];\n            var inputTexture = link.node.getOutput(renderer, link.pin);\n            this.pass.setUniform(inputName, inputTexture);\n        }\n        // Output\n        if (!this.outputs) {\n            this.pass.outputs = null;\n\n            this._compositor.getFrameBuffer().unbind(renderer);\n\n            this.pass.render(renderer, frameBuffer);\n        }\n        else {\n            this.pass.outputs = {};\n\n            var attachedTextures = {};\n            for (var name in this.outputs) {\n                var parameters = this.updateParameter(name, renderer);\n                if (isNaN(parameters.width)) {\n                    this.updateParameter(name, renderer);\n                }\n                var outputInfo = this.outputs[name];\n                var texture = this._compositor.allocateTexture(parameters);\n                this._outputTextures[name] = texture;\n                var attachment = outputInfo.attachment || _gl.COLOR_ATTACHMENT0;\n                if (typeof(attachment) === 'string') {\n                    attachment = _gl[attachment];\n                }\n                attachedTextures[attachment] = texture;\n            }\n            this._compositor.getFrameBuffer().bind(renderer);\n\n            for (var attachment in attachedTextures) {\n                // FIXME attachment changes in different nodes\n                this._compositor.getFrameBuffer().attach(\n                    attachedTextures[attachment], attachment\n                );\n            }\n\n            this.pass.render(renderer);\n\n            // Because the data of texture is changed over time,\n            // Here update the mipmaps of texture each time after rendered;\n            this._compositor.getFrameBuffer().updateMipmap(renderer);\n        }\n\n        for (var inputName in this.inputLinks) {\n            var link = this.inputLinks[inputName];\n            link.node.removeReference(link.pin);\n        }\n\n        this._rendering = false;\n        this._rendered = true;\n\n        this.trigger('afterrender', renderer);\n    },\n\n    // TODO Remove parameter function callback\n    updateParameter: function (outputName, renderer) {\n        var outputInfo = this.outputs[outputName];\n        var parameters = outputInfo.parameters;\n        var parametersCopy = outputInfo._parametersCopy;\n        if (!parametersCopy) {\n            parametersCopy = outputInfo._parametersCopy = {};\n        }\n        if (parameters) {\n            for (var key in parameters) {\n                if (key !== 'width' && key !== 'height') {\n                    parametersCopy[key] = parameters[key];\n                }\n            }\n        }\n        var width, height;\n        if (typeof parameters.width === 'function') {\n            width = parameters.width.call(this, renderer);\n        }\n        else {\n            width = parameters.width;\n        }\n        if (typeof parameters.height === 'function') {\n            height = parameters.height.call(this, renderer);\n        }\n        else {\n            height = parameters.height;\n        }\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n        if (\n            parametersCopy.width !== width\n            || parametersCopy.height !== height\n        ) {\n            if (this._outputTextures[outputName]) {\n                this._outputTextures[outputName].dispose(renderer);\n            }\n        }\n        parametersCopy.width = width;\n        parametersCopy.height = height;\n\n        return parametersCopy;\n    },\n\n    /**\n     * Set parameter\n     * @param {string} name\n     * @param {} value\n     */\n    setParameter: function (name, value) {\n        this.pass.setUniform(name, value);\n    },\n    /**\n     * Get parameter value\n     * @param  {string} name\n     * @return {}\n     */\n    getParameter: function (name) {\n        return this.pass.getUniform(name);\n    },\n    /**\n     * Set parameters\n     * @param {Object} obj\n     */\n    setParameters: function (obj) {\n        for (var name in obj) {\n            this.setParameter(name, obj[name]);\n        }\n    },\n    // /**\n    //  * Set shader code\n    //  * @param {string} shaderStr\n    //  */\n    // setShader: function (shaderStr) {\n    //     var material = this.pass.material;\n    //     material.shader.setFragment(shaderStr);\n    //     material.attachShader(material.shader, true);\n    // },\n    /**\n     * Proxy of pass.material.define('fragment', xxx);\n     * @param  {string} symbol\n     * @param  {number} [val]\n     */\n    define: function (symbol, val) {\n        this.pass.material.define('fragment', symbol, val);\n    },\n\n    /**\n     * Proxy of pass.material.undefine('fragment', xxx)\n     * @param  {string} symbol\n     */\n    undefine: function (symbol) {\n        this.pass.material.undefine('fragment', symbol);\n    },\n\n    removeReference: function (outputName) {\n        this._outputReferences[outputName]--;\n        if (this._outputReferences[outputName] === 0) {\n            var outputInfo = this.outputs[outputName];\n            if (outputInfo.keepLastFrame) {\n                if (this._prevOutputTextures[outputName]) {\n                    this._compositor.releaseTexture(this._prevOutputTextures[outputName]);\n                }\n                this._prevOutputTextures[outputName] = this._outputTextures[outputName];\n            }\n            else {\n                // Output of this node have alreay been used by all other nodes\n                // Put the texture back to the pool.\n                this._compositor.releaseTexture(this._outputTextures[outputName]);\n            }\n        }\n    },\n\n    clear: function () {\n        __WEBPACK_IMPORTED_MODULE_1__CompositorNode__[\"a\" /* default */].prototype.clear.call(this);\n\n        // Default disable all texture\n        this.pass.material.disableTexturesAll();\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FilterNode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///113\n");

/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = register;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__source_compositor_coloradjust_glsl_js__ = __webpack_require__(115);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__source_compositor_blur_glsl_js__ = __webpack_require__(58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__source_compositor_lum_glsl_js__ = __webpack_require__(116);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__source_compositor_lut_glsl_js__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__source_compositor_vignette_glsl_js__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__source_compositor_output_glsl_js__ = __webpack_require__(59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__source_compositor_bright_glsl_js__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__source_compositor_downsample_glsl_js__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__source_compositor_upsample_glsl_js__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__source_compositor_hdr_glsl_js__ = __webpack_require__(63);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__source_compositor_lensflare_glsl_js__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__source_compositor_blend_glsl_js__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__source_compositor_fxaa_glsl_js__ = __webpack_require__(65);\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import fxaa3Essl from './source/compositor/fxaa3.glsl.js';\n\n// TODO Must export a module and be used in the other modules. Or it will be tree shaked\nfunction register(Shader) {\n    // Some build in shaders\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_0__source_compositor_coloradjust_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_1__source_compositor_blur_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_2__source_compositor_lum_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_3__source_compositor_lut_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_4__source_compositor_vignette_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_5__source_compositor_output_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_6__source_compositor_bright_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_7__source_compositor_downsample_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_8__source_compositor_upsample_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_9__source_compositor_hdr_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_10__source_compositor_lensflare_glsl_js__[\"a\" /* default */]);\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_11__source_compositor_blend_glsl_js__[\"a\" /* default */]);\n\n    Shader['import'](__WEBPACK_IMPORTED_MODULE_12__source_compositor_fxaa_glsl_js__[\"a\" /* default */]);\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9yZWdpc3RlckJ1aWx0aW5Db21wb3NpdG9yLmpzP2U3YWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbG9yYWRqdXN0RXNzbCBmcm9tICcuL3NvdXJjZS9jb21wb3NpdG9yL2NvbG9yYWRqdXN0Lmdsc2wuanMnO1xuaW1wb3J0IGJsdXJFc3NsIGZyb20gJy4vc291cmNlL2NvbXBvc2l0b3IvYmx1ci5nbHNsLmpzJztcbmltcG9ydCBsdW1Fc3NsIGZyb20gJy4vc291cmNlL2NvbXBvc2l0b3IvbHVtLmdsc2wuanMnO1xuaW1wb3J0IGx1dEVzc2wgZnJvbSAnLi9zb3VyY2UvY29tcG9zaXRvci9sdXQuZ2xzbC5qcyc7XG5pbXBvcnQgdmlnZW50dGVFc3NsIGZyb20gJy4vc291cmNlL2NvbXBvc2l0b3IvdmlnbmV0dGUuZ2xzbC5qcyc7XG5pbXBvcnQgb3V0cHV0RXNzbCBmcm9tICcuL3NvdXJjZS9jb21wb3NpdG9yL291dHB1dC5nbHNsLmpzJztcbmltcG9ydCBicmlnaHRFc3NsIGZyb20gJy4vc291cmNlL2NvbXBvc2l0b3IvYnJpZ2h0Lmdsc2wuanMnO1xuaW1wb3J0IGRvd25zYW1wbGVFc3NsIGZyb20gJy4vc291cmNlL2NvbXBvc2l0b3IvZG93bnNhbXBsZS5nbHNsLmpzJztcbmltcG9ydCB1cHNhbXBsZUVzc2wgZnJvbSAnLi9zb3VyY2UvY29tcG9zaXRvci91cHNhbXBsZS5nbHNsLmpzJztcbmltcG9ydCBoZHJFc3NsIGZyb20gJy4vc291cmNlL2NvbXBvc2l0b3IvaGRyLmdsc2wuanMnO1xuaW1wb3J0IGxlbnNmbGFyZUVzc2wgZnJvbSAnLi9zb3VyY2UvY29tcG9zaXRvci9sZW5zZmxhcmUuZ2xzbC5qcyc7XG5pbXBvcnQgYmxlbmRFc3NsIGZyb20gJy4vc291cmNlL2NvbXBvc2l0b3IvYmxlbmQuZ2xzbC5qcyc7XG5pbXBvcnQgZnhhYUVzc2wgZnJvbSAnLi9zb3VyY2UvY29tcG9zaXRvci9meGFhLmdsc2wuanMnO1xuLy8gaW1wb3J0IGZ4YWEzRXNzbCBmcm9tICcuL3NvdXJjZS9jb21wb3NpdG9yL2Z4YWEzLmdsc2wuanMnO1xuXG4vLyBUT0RPIE11c3QgZXhwb3J0IGEgbW9kdWxlIGFuZCBiZSB1c2VkIGluIHRoZSBvdGhlciBtb2R1bGVzLiBPciBpdCB3aWxsIGJlIHRyZWUgc2hha2VkXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWdpc3RlcihTaGFkZXIpIHtcbiAgICAvLyBTb21lIGJ1aWxkIGluIHNoYWRlcnNcbiAgICBTaGFkZXJbJ2ltcG9ydCddKGNvbG9yYWRqdXN0RXNzbCk7XG4gICAgU2hhZGVyWydpbXBvcnQnXShibHVyRXNzbCk7XG4gICAgU2hhZGVyWydpbXBvcnQnXShsdW1Fc3NsKTtcbiAgICBTaGFkZXJbJ2ltcG9ydCddKGx1dEVzc2wpO1xuICAgIFNoYWRlclsnaW1wb3J0J10odmlnZW50dGVFc3NsKTtcbiAgICBTaGFkZXJbJ2ltcG9ydCddKG91dHB1dEVzc2wpO1xuICAgIFNoYWRlclsnaW1wb3J0J10oYnJpZ2h0RXNzbCk7XG4gICAgU2hhZGVyWydpbXBvcnQnXShkb3duc2FtcGxlRXNzbCk7XG4gICAgU2hhZGVyWydpbXBvcnQnXSh1cHNhbXBsZUVzc2wpO1xuICAgIFNoYWRlclsnaW1wb3J0J10oaGRyRXNzbCk7XG4gICAgU2hhZGVyWydpbXBvcnQnXShsZW5zZmxhcmVFc3NsKTtcbiAgICBTaGFkZXJbJ2ltcG9ydCddKGJsZW5kRXNzbCk7XG5cbiAgICBTaGFkZXJbJ2ltcG9ydCddKGZ4YWFFc3NsKTtcblxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9yZWdpc3RlckJ1aWx0aW5Db21wb3NpdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///114\n");

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.coloradjust\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float brightness : 0.0;\\nuniform float contrast : 1.0;\\nuniform float exposure : 0.0;\\nuniform float gamma : 1.0;\\nuniform float saturation : 1.0;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord);\\n vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\\n color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\\n color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\\n color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\\n float luminance = dot( color, w );\\n color = mix(vec3(luminance), color, saturation);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.brightness\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float brightness : 0.0;\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord);\\n vec3 color = tex.rgb + vec3(brightness);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.contrast\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float contrast : 1.0;\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord);\\n vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.exposure\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float exposure : 0.0;\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n vec3 color = tex.rgb * pow(2.0, exposure);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.gamma\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float gamma : 1.0;\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n vec3 color = pow(tex.rgb, vec3(gamma));\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.saturation\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float saturation : 1.0;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n vec3 color = tex.rgb;\\n float luminance = dot(color, w);\\n color = mix(vec3(luminance), color, saturation);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9jb2xvcmFkanVzdC5nbHNsLmpzPzdhNzEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IGNsYXkuY29tcG9zaXRvci5jb2xvcmFkanVzdFxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSBmbG9hdCBicmlnaHRuZXNzIDogMC4wO1xcbnVuaWZvcm0gZmxvYXQgY29udHJhc3QgOiAxLjA7XFxudW5pZm9ybSBmbG9hdCBleHBvc3VyZSA6IDAuMDtcXG51bmlmb3JtIGZsb2F0IGdhbW1hIDogMS4wO1xcbnVuaWZvcm0gZmxvYXQgc2F0dXJhdGlvbiA6IDEuMDtcXG5jb25zdCB2ZWMzIHcgPSB2ZWMzKDAuMjEyNSwgMC43MTU0LCAwLjA3MjEpO1xcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWM0IHRleCA9IHRleHR1cmUyRCggdGV4dHVyZSwgdl9UZXhjb29yZCk7XFxuIHZlYzMgY29sb3IgPSBjbGFtcCh0ZXgucmdiICsgdmVjMyhicmlnaHRuZXNzKSwgMC4wLCAxLjApO1xcbiBjb2xvciA9IGNsYW1wKCAoY29sb3ItdmVjMygwLjUpKSpjb250cmFzdCt2ZWMzKDAuNSksIDAuMCwgMS4wKTtcXG4gY29sb3IgPSBjbGFtcCggY29sb3IgKiBwb3coMi4wLCBleHBvc3VyZSksIDAuMCwgMS4wKTtcXG4gY29sb3IgPSBjbGFtcCggcG93KGNvbG9yLCB2ZWMzKGdhbW1hKSksIDAuMCwgMS4wKTtcXG4gZmxvYXQgbHVtaW5hbmNlID0gZG90KCBjb2xvciwgdyApO1xcbiBjb2xvciA9IG1peCh2ZWMzKGx1bWluYW5jZSksIGNvbG9yLCBzYXR1cmF0aW9uKTtcXG4gZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgdGV4LmEpO1xcbn1cXG5AZW5kXFxuQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IuYnJpZ2h0bmVzc1xcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSBmbG9hdCBicmlnaHRuZXNzIDogMC4wO1xcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWM0IHRleCA9IHRleHR1cmUyRCggdGV4dHVyZSwgdl9UZXhjb29yZCk7XFxuIHZlYzMgY29sb3IgPSB0ZXgucmdiICsgdmVjMyhicmlnaHRuZXNzKTtcXG4gZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgdGV4LmEpO1xcbn1cXG5AZW5kXFxuQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IuY29udHJhc3RcXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcbnVuaWZvcm0gZmxvYXQgY29udHJhc3QgOiAxLjA7XFxudm9pZCBtYWluKClcXG57XFxuIHZlYzQgdGV4ID0gdGV4dHVyZTJEKCB0ZXh0dXJlLCB2X1RleGNvb3JkKTtcXG4gdmVjMyBjb2xvciA9ICh0ZXgucmdiLXZlYzMoMC41KSkqY29udHJhc3QrdmVjMygwLjUpO1xcbiBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLCB0ZXguYSk7XFxufVxcbkBlbmRcXG5AZXhwb3J0IGNsYXkuY29tcG9zaXRvci5leHBvc3VyZVxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSBmbG9hdCBleHBvc3VyZSA6IDAuMDtcXG52b2lkIG1haW4oKVxcbntcXG4gdmVjNCB0ZXggPSB0ZXh0dXJlMkQodGV4dHVyZSwgdl9UZXhjb29yZCk7XFxuIHZlYzMgY29sb3IgPSB0ZXgucmdiICogcG93KDIuMCwgZXhwb3N1cmUpO1xcbiBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLCB0ZXguYSk7XFxufVxcbkBlbmRcXG5AZXhwb3J0IGNsYXkuY29tcG9zaXRvci5nYW1tYVxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSBmbG9hdCBnYW1tYSA6IDEuMDtcXG52b2lkIG1haW4oKVxcbntcXG4gdmVjNCB0ZXggPSB0ZXh0dXJlMkQodGV4dHVyZSwgdl9UZXhjb29yZCk7XFxuIHZlYzMgY29sb3IgPSBwb3codGV4LnJnYiwgdmVjMyhnYW1tYSkpO1xcbiBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLCB0ZXguYSk7XFxufVxcbkBlbmRcXG5AZXhwb3J0IGNsYXkuY29tcG9zaXRvci5zYXR1cmF0aW9uXFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTtcXG51bmlmb3JtIGZsb2F0IHNhdHVyYXRpb24gOiAxLjA7XFxuY29uc3QgdmVjMyB3ID0gdmVjMygwLjIxMjUsIDAuNzE1NCwgMC4wNzIxKTtcXG52b2lkIG1haW4oKVxcbntcXG4gdmVjNCB0ZXggPSB0ZXh0dXJlMkQodGV4dHVyZSwgdl9UZXhjb29yZCk7XFxuIHZlYzMgY29sb3IgPSB0ZXgucmdiO1xcbiBmbG9hdCBsdW1pbmFuY2UgPSBkb3QoY29sb3IsIHcpO1xcbiBjb2xvciA9IG1peCh2ZWMzKGx1bWluYW5jZSksIGNvbG9yLCBzYXR1cmF0aW9uKTtcXG4gZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgdGV4LmEpO1xcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2NvbXBvc2l0b3IvY29sb3JhZGp1c3QuZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gMTE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///115\n");

/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.hdr.log_lum\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\\n float luminance = dot(tex.rgb, w);\\n luminance = log(luminance + 0.001);\\n gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\\n}\\n@end\\n@export clay.compositor.hdr.lum_adaption\\nvarying vec2 v_Texcoord;\\nuniform sampler2D adaptedLum;\\nuniform sampler2D currentLum;\\nuniform float frameTime : 0.02;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\\n float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\\n fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\\n gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\\n}\\n@end\\n@export clay.compositor.lum\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord );\\n float luminance = dot(tex.rgb, w);\\n gl_FragColor = vec4(vec3(luminance), 1.0);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9sdW0uZ2xzbC5qcz9jNzFhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IuaGRyLmxvZ19sdW1cXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcbmNvbnN0IHZlYzMgdyA9IHZlYzMoMC4yMTI1LCAwLjcxNTQsIDAuMDcyMSk7XFxuQGltcG9ydCBjbGF5LnV0aWwucmdibVxcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWM0IHRleCA9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZSwgdl9UZXhjb29yZCkpO1xcbiBmbG9hdCBsdW1pbmFuY2UgPSBkb3QodGV4LnJnYiwgdyk7XFxuIGx1bWluYW5jZSA9IGxvZyhsdW1pbmFuY2UgKyAwLjAwMSk7XFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUih2ZWM0KHZlYzMobHVtaW5hbmNlKSwgMS4wKSk7XFxufVxcbkBlbmRcXG5AZXhwb3J0IGNsYXkuY29tcG9zaXRvci5oZHIubHVtX2FkYXB0aW9uXFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxudW5pZm9ybSBzYW1wbGVyMkQgYWRhcHRlZEx1bTtcXG51bmlmb3JtIHNhbXBsZXIyRCBjdXJyZW50THVtO1xcbnVuaWZvcm0gZmxvYXQgZnJhbWVUaW1lIDogMC4wMjtcXG5AaW1wb3J0IGNsYXkudXRpbC5yZ2JtXFxudm9pZCBtYWluKClcXG57XFxuIGZsb2F0IGZBZGFwdGVkTHVtID0gZGVjb2RlSERSKHRleHR1cmUyRChhZGFwdGVkTHVtLCB2ZWMyKDAuNSwgMC41KSkpLnI7XFxuIGZsb2F0IGZDdXJyZW50THVtID0gZXhwKGVuY29kZUhEUih0ZXh0dXJlMkQoY3VycmVudEx1bSwgdmVjMigwLjUsIDAuNSkpKS5yKTtcXG4gZkFkYXB0ZWRMdW0gKz0gKGZDdXJyZW50THVtIC0gZkFkYXB0ZWRMdW0pICogKDEuMCAtIHBvdygwLjk4LCAzMC4wICogZnJhbWVUaW1lKSk7XFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUih2ZWM0KHZlYzMoZkFkYXB0ZWRMdW0pLCAxLjApKTtcXG59XFxuQGVuZFxcbkBleHBvcnQgY2xheS5jb21wb3NpdG9yLmx1bVxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxuY29uc3QgdmVjMyB3ID0gdmVjMygwLjIxMjUsIDAuNzE1NCwgMC4wNzIxKTtcXG52b2lkIG1haW4oKVxcbntcXG4gdmVjNCB0ZXggPSB0ZXh0dXJlMkQoIHRleHR1cmUsIHZfVGV4Y29vcmQgKTtcXG4gZmxvYXQgbHVtaW5hbmNlID0gZG90KHRleC5yZ2IsIHcpO1xcbiBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZlYzMobHVtaW5hbmNlKSwgMS4wKTtcXG59XFxuQGVuZFwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2x1bS5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///116\n");

/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"\\n@export clay.compositor.lut\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform sampler2D lookup;\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n float blueColor = tex.b * 63.0;\\n vec2 quad1;\\n quad1.y = floor(floor(blueColor) / 8.0);\\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\\n vec2 quad2;\\n quad2.y = floor(ceil(blueColor) / 8.0);\\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\\n vec2 texPos1;\\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\\n vec2 texPos2;\\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\\n vec4 newColor1 = texture2D(lookup, texPos1);\\n vec4 newColor2 = texture2D(lookup, texPos2);\\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\\n gl_FragColor = vec4(newColor.rgb, tex.w);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9sdXQuZ2xzbC5qcz9kMmM3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiXFxuQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IubHV0XFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTtcXG51bmlmb3JtIHNhbXBsZXIyRCBsb29rdXA7XFxudm9pZCBtYWluKClcXG57XFxuIHZlYzQgdGV4ID0gdGV4dHVyZTJEKHRleHR1cmUsIHZfVGV4Y29vcmQpO1xcbiBmbG9hdCBibHVlQ29sb3IgPSB0ZXguYiAqIDYzLjA7XFxuIHZlYzIgcXVhZDE7XFxuIHF1YWQxLnkgPSBmbG9vcihmbG9vcihibHVlQ29sb3IpIC8gOC4wKTtcXG4gcXVhZDEueCA9IGZsb29yKGJsdWVDb2xvcikgLSAocXVhZDEueSAqIDguMCk7XFxuIHZlYzIgcXVhZDI7XFxuIHF1YWQyLnkgPSBmbG9vcihjZWlsKGJsdWVDb2xvcikgLyA4LjApO1xcbiBxdWFkMi54ID0gY2VpbChibHVlQ29sb3IpIC0gKHF1YWQyLnkgKiA4LjApO1xcbiB2ZWMyIHRleFBvczE7XFxuIHRleFBvczEueCA9IChxdWFkMS54ICogMC4xMjUpICsgMC41LzUxMi4wICsgKCgwLjEyNSAtIDEuMC81MTIuMCkgKiB0ZXgucik7XFxuIHRleFBvczEueSA9IChxdWFkMS55ICogMC4xMjUpICsgMC41LzUxMi4wICsgKCgwLjEyNSAtIDEuMC81MTIuMCkgKiB0ZXguZyk7XFxuIHZlYzIgdGV4UG9zMjtcXG4gdGV4UG9zMi54ID0gKHF1YWQyLnggKiAwLjEyNSkgKyAwLjUvNTEyLjAgKyAoKDAuMTI1IC0gMS4wLzUxMi4wKSAqIHRleC5yKTtcXG4gdGV4UG9zMi55ID0gKHF1YWQyLnkgKiAwLjEyNSkgKyAwLjUvNTEyLjAgKyAoKDAuMTI1IC0gMS4wLzUxMi4wKSAqIHRleC5nKTtcXG4gdmVjNCBuZXdDb2xvcjEgPSB0ZXh0dXJlMkQobG9va3VwLCB0ZXhQb3MxKTtcXG4gdmVjNCBuZXdDb2xvcjIgPSB0ZXh0dXJlMkQobG9va3VwLCB0ZXhQb3MyKTtcXG4gdmVjNCBuZXdDb2xvciA9IG1peChuZXdDb2xvcjEsIG5ld0NvbG9yMiwgZnJhY3QoYmx1ZUNvbG9yKSk7XFxuIGdsX0ZyYWdDb2xvciA9IHZlYzQobmV3Q29sb3IucmdiLCB0ZXgudyk7XFxufVxcbkBlbmRcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9sdXQuZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gMTE3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///117\n");

/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.vignette\\n#define OUTPUT_ALPHA\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float darkness: 1;\\nuniform float offset: 1;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\\n gl_FragColor.rgb = texel.rgb;\\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\\n gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci92aWduZXR0ZS5nbHNsLmpzP2NhMDkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IGNsYXkuY29tcG9zaXRvci52aWduZXR0ZVxcbiNkZWZpbmUgT1VUUFVUX0FMUEhBXFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxudW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZTtcXG51bmlmb3JtIGZsb2F0IGRhcmtuZXNzOiAxO1xcbnVuaWZvcm0gZmxvYXQgb2Zmc2V0OiAxO1xcbkBpbXBvcnQgY2xheS51dGlsLnJnYm1cXG52b2lkIG1haW4oKVxcbntcXG4gdmVjNCB0ZXhlbCA9IGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZSwgdl9UZXhjb29yZCkpO1xcbiBnbF9GcmFnQ29sb3IucmdiID0gdGV4ZWwucmdiO1xcbiB2ZWMyIHV2ID0gKHZfVGV4Y29vcmQgLSB2ZWMyKDAuNSkpICogdmVjMihvZmZzZXQpO1xcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIodmVjNChtaXgodGV4ZWwucmdiLCB2ZWMzKDEuMCAtIGRhcmtuZXNzKSwgZG90KHV2LCB1dikpLCB0ZXhlbC5hKSk7XFxufVxcbkBlbmRcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci92aWduZXR0ZS5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///118\n");

/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.compositor.lensflare\\n#define SAMPLE_NUMBER 8\\nuniform sampler2D texture;\\nuniform sampler2D lenscolor;\\nuniform vec2 textureSize : [512, 512];\\nuniform float dispersal : 0.3;\\nuniform float haloWidth : 0.4;\\nuniform float distortion : 1.0;\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\nvec4 textureDistorted(\\n in vec2 texcoord,\\n in vec2 direction,\\n in vec3 distortion\\n) {\\n return vec4(\\n decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\\n decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\\n decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\\n 1.0\\n );\\n}\\nvoid main()\\n{\\n vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;\\n vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\\n vec2 haloVec = normalize(ghostVec) * haloWidth;\\n vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\\n vec4 result = vec4(0.0);\\n for (int i = 0; i < SAMPLE_NUMBER; i++)\\n {\\n vec2 offset = fract(texcoord + ghostVec * float(i));\\n float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\\n weight = pow(1.0 - weight, 10.0);\\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\\n }\\n result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\\n float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\\n weight = pow(1.0 - weight, 10.0);\\n vec2 offset = fract(texcoord + haloVec);\\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\\n gl_FragColor = result;\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvY29tcG9zaXRvci9sZW5zZmxhcmUuZ2xzbC5qcz84ODY5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LmNvbXBvc2l0b3IubGVuc2ZsYXJlXFxuI2RlZmluZSBTQU1QTEVfTlVNQkVSIDhcXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcbnVuaWZvcm0gc2FtcGxlcjJEIGxlbnNjb2xvcjtcXG51bmlmb3JtIHZlYzIgdGV4dHVyZVNpemUgOiBbNTEyLCA1MTJdO1xcbnVuaWZvcm0gZmxvYXQgZGlzcGVyc2FsIDogMC4zO1xcbnVuaWZvcm0gZmxvYXQgaGFsb1dpZHRoIDogMC40O1xcbnVuaWZvcm0gZmxvYXQgZGlzdG9ydGlvbiA6IDEuMDtcXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG5AaW1wb3J0IGNsYXkudXRpbC5yZ2JtXFxudmVjNCB0ZXh0dXJlRGlzdG9ydGVkKFxcbiBpbiB2ZWMyIHRleGNvb3JkLFxcbiBpbiB2ZWMyIGRpcmVjdGlvbixcXG4gaW4gdmVjMyBkaXN0b3J0aW9uXFxuKSB7XFxuIHJldHVybiB2ZWM0KFxcbiBkZWNvZGVIRFIodGV4dHVyZTJEKHRleHR1cmUsIHRleGNvb3JkICsgZGlyZWN0aW9uICogZGlzdG9ydGlvbi5yKSkucixcXG4gZGVjb2RlSERSKHRleHR1cmUyRCh0ZXh0dXJlLCB0ZXhjb29yZCArIGRpcmVjdGlvbiAqIGRpc3RvcnRpb24uZykpLmcsXFxuIGRlY29kZUhEUih0ZXh0dXJlMkQodGV4dHVyZSwgdGV4Y29vcmQgKyBkaXJlY3Rpb24gKiBkaXN0b3J0aW9uLmIpKS5iLFxcbiAxLjBcXG4gKTtcXG59XFxudm9pZCBtYWluKClcXG57XFxuIHZlYzIgdGV4Y29vcmQgPSAtdl9UZXhjb29yZCArIHZlYzIoMS4wKTsgdmVjMiB0ZXh0dXJlT2Zmc2V0ID0gMS4wIC8gdGV4dHVyZVNpemU7XFxuIHZlYzIgZ2hvc3RWZWMgPSAodmVjMigwLjUpIC0gdGV4Y29vcmQpICogZGlzcGVyc2FsO1xcbiB2ZWMyIGhhbG9WZWMgPSBub3JtYWxpemUoZ2hvc3RWZWMpICogaGFsb1dpZHRoO1xcbiB2ZWMzIGRpc3RvcnRpb24gPSB2ZWMzKC10ZXh0dXJlT2Zmc2V0LnggKiBkaXN0b3J0aW9uLCAwLjAsIHRleHR1cmVPZmZzZXQueCAqIGRpc3RvcnRpb24pO1xcbiB2ZWM0IHJlc3VsdCA9IHZlYzQoMC4wKTtcXG4gZm9yIChpbnQgaSA9IDA7IGkgPCBTQU1QTEVfTlVNQkVSOyBpKyspXFxuIHtcXG4gdmVjMiBvZmZzZXQgPSBmcmFjdCh0ZXhjb29yZCArIGdob3N0VmVjICogZmxvYXQoaSkpO1xcbiBmbG9hdCB3ZWlnaHQgPSBsZW5ndGgodmVjMigwLjUpIC0gb2Zmc2V0KSAvIGxlbmd0aCh2ZWMyKDAuNSkpO1xcbiB3ZWlnaHQgPSBwb3coMS4wIC0gd2VpZ2h0LCAxMC4wKTtcXG4gcmVzdWx0ICs9IHRleHR1cmVEaXN0b3J0ZWQob2Zmc2V0LCBub3JtYWxpemUoZ2hvc3RWZWMpLCBkaXN0b3J0aW9uKSAqIHdlaWdodDtcXG4gfVxcbiByZXN1bHQgKj0gdGV4dHVyZTJEKGxlbnNjb2xvciwgdmVjMihsZW5ndGgodmVjMigwLjUpIC0gdGV4Y29vcmQpKSAvIGxlbmd0aCh2ZWMyKDAuNSkpKTtcXG4gZmxvYXQgd2VpZ2h0ID0gbGVuZ3RoKHZlYzIoMC41KSAtIGZyYWN0KHRleGNvb3JkICsgaGFsb1ZlYykpIC8gbGVuZ3RoKHZlYzIoMC41KSk7XFxuIHdlaWdodCA9IHBvdygxLjAgLSB3ZWlnaHQsIDEwLjApO1xcbiB2ZWMyIG9mZnNldCA9IGZyYWN0KHRleGNvb3JkICsgaGFsb1ZlYyk7XFxuIHJlc3VsdCArPSB0ZXh0dXJlRGlzdG9ydGVkKG9mZnNldCwgbm9ybWFsaXplKGdob3N0VmVjKSwgZGlzdG9ydGlvbikgKiB3ZWlnaHQ7XFxuIGdsX0ZyYWdDb2xvciA9IHJlc3VsdDtcXG59XFxuQGVuZFwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvc2hhZGVyL3NvdXJjZS9jb21wb3NpdG9yL2xlbnNmbGFyZS5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///119\n");

/***/ }),
/* 120 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_claygl_src_FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__halton__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__SSAO_glsl_js__ = __webpack_require__(121);\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].import(__WEBPACK_IMPORTED_MODULE_8__SSAO_glsl_js__[\"a\" /* default */]);\n\nfunction generateNoiseData(size) {\n    var data = new Uint8Array(size * size * 4);\n    var n = 0;\n    var v3 = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_math_Vector3__[\"a\" /* default */]();\n\n    for (var i = 0; i < size; i++) {\n        for (var j = 0; j < size; j++) {\n            v3.set(Math.random() * 2 - 1, Math.random() * 2 - 1, 0).normalize();\n            data[n++] = (v3.x * 0.5 + 0.5) * 255;\n            data[n++] = (v3.y * 0.5 + 0.5) * 255;\n            data[n++] = 0;\n            data[n++] = 255;\n        }\n    }\n    return data;\n}\n\nfunction generateNoiseTexture(size) {\n    return new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]({\n        pixels: generateNoiseData(size),\n        wrapS: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__[\"a\" /* default */].REPEAT,\n        wrapT: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__[\"a\" /* default */].REPEAT,\n        width: size,\n        height: size\n    });\n}\n\nfunction generateKernel(size, offset, hemisphere) {\n    var kernel = new Float32Array(size * 3);\n    offset = offset || 0;\n    for (var i = 0; i < size; i++) {\n        var phi = Object(__WEBPACK_IMPORTED_MODULE_7__halton__[\"a\" /* default */])(i + offset, 2) * (hemisphere ? 1 : 2) * Math.PI;\n        var theta = Object(__WEBPACK_IMPORTED_MODULE_7__halton__[\"a\" /* default */])(i + offset, 3) * Math.PI;\n        var r = Math.random();\n        var x = Math.cos(phi) * Math.sin(theta) * r;\n        var y = Math.cos(theta) * r;\n        var z = Math.sin(phi) * Math.sin(theta) * r;\n\n        kernel[i * 3] = x;\n        kernel[i * 3 + 1] = y;\n        kernel[i * 3 + 2] = z;\n    }\n    return kernel;\n}\n\nfunction SSAOPass(opt) {\n    opt = opt || {};\n\n    this._ssaoPass = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].source('ecgl.ssao.estimate')\n    });\n    this._blurPass = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].source('ecgl.ssao.blur')\n    });\n    this._framebuffer = new __WEBPACK_IMPORTED_MODULE_6_claygl_src_FrameBuffer__[\"a\" /* default */]();\n\n    this._ssaoTexture = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]();\n    this._blurTexture = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]();\n\n    this._depthTex = opt.depthTexture;\n    this._normalTex = opt.normalTexture;\n\n    this.setNoiseSize(4);\n    this.setKernelSize(opt.kernelSize || 12);\n    if (opt.radius != null) {\n        this.setParameter('radius', opt.radius);\n    }\n    if (opt.power != null) {\n        this.setParameter('power', opt.power);\n    }\n\n    if (!this._normalTex) {\n        this._ssaoPass.material.disableTexture('normalTex');\n        this._blurPass.material.disableTexture('normalTex');\n    }\n    if (!this._depthTex) {\n        this._blurPass.material.disableTexture('depthTex');\n    }\n\n    this._blurPass.material.setUniform('normalTex', this._normalTex);\n    this._blurPass.material.setUniform('depthTex', this._depthTex);\n}\n\nSSAOPass.prototype.setDepthTexture = function (depthTex) {\n    this._depthTex = depthTex;\n};\n\nSSAOPass.prototype.setNormalTexture = function (normalTex) {\n    this._normalTex = normalTex;\n    this._ssaoPass.material[normalTex ? 'enableTexture' : 'disableTexture']('normalTex');\n    // Switch between hemisphere and shere kernel.\n    this.setKernelSize(this._kernelSize);\n};\n\nSSAOPass.prototype.update = function (renderer, camera, frame) {\n    var width = renderer.getWidth();\n    var height = renderer.getHeight();\n\n    var ssaoPass = this._ssaoPass;\n    var blurPass = this._blurPass;\n\n    ssaoPass.setUniform('kernel', this._kernels[frame % this._kernels.length]);\n    ssaoPass.setUniform('depthTex', this._depthTex);\n    if (this._normalTex != null) {\n        ssaoPass.setUniform('normalTex', this._normalTex);\n    }\n    ssaoPass.setUniform('depthTexSize', [this._depthTex.width, this._depthTex.height]);\n\n    var viewInverseTranspose = new __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__[\"a\" /* default */]();\n    __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__[\"a\" /* default */].transpose(viewInverseTranspose, camera.worldTransform);\n\n    ssaoPass.setUniform('projection', camera.projectionMatrix.array);\n    ssaoPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n    ssaoPass.setUniform('viewInverseTranspose', viewInverseTranspose.array);\n\n    var ssaoTexture = this._ssaoTexture;\n    var blurTexture = this._blurTexture;\n\n    ssaoTexture.width = width;\n    ssaoTexture.height = height;\n    blurTexture.width = width;\n    blurTexture.height = height;\n\n    this._framebuffer.attach(ssaoTexture);\n    this._framebuffer.bind(renderer);\n    renderer.gl.clearColor(1, 1, 1, 1);\n    renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT);\n    ssaoPass.render(renderer);\n\n    blurPass.setUniform('textureSize', [width, height]);\n    blurPass.setUniform('projection', camera.projectionMatrix.array);\n    this._framebuffer.attach(blurTexture);\n    blurPass.setUniform('direction', 0);\n    blurPass.setUniform('ssaoTexture', ssaoTexture);\n    blurPass.render(renderer);\n\n    this._framebuffer.attach(ssaoTexture);\n    blurPass.setUniform('direction', 1);\n    blurPass.setUniform('ssaoTexture', blurTexture);\n    blurPass.render(renderer);\n\n    this._framebuffer.unbind(renderer);\n\n    // Restore clear\n    var clearColor = renderer.clearColor;\n    renderer.gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n};\n\nSSAOPass.prototype.getTargetTexture = function () {\n    return this._ssaoTexture;\n};\n\nSSAOPass.prototype.setParameter = function (name, val) {\n    if (name === 'noiseTexSize') {\n        this.setNoiseSize(val);\n    }\n    else if (name === 'kernelSize') {\n        this.setKernelSize(val);\n    }\n    else if (name === 'intensity') {\n        this._ssaoPass.material.set('intensity', val);\n    }\n    else {\n        this._ssaoPass.setUniform(name, val);\n    }\n};\n\nSSAOPass.prototype.setKernelSize = function (size) {\n    this._kernelSize = size;\n    this._ssaoPass.material.define('fragment', 'KERNEL_SIZE', size);\n    this._kernels = this._kernels || [];\n    for (var i = 0; i < 30; i++) {\n        this._kernels[i] = generateKernel(size, i * size, !!this._normalTex);\n    }\n};\n\nSSAOPass.prototype.setNoiseSize = function (size) {\n    var texture = this._ssaoPass.getUniform('noiseTex');\n    if (!texture) {\n        texture = generateNoiseTexture(size);\n        this._ssaoPass.setUniform('noiseTex', generateNoiseTexture(size));\n    }\n    else {\n        texture.data = generateNoiseData(size);\n        texture.width = texture.height = size;\n        texture.dirty();\n    }\n\n    this._ssaoPass.setUniform('noiseTexSize', [size, size]);\n};\n\nSSAOPass.prototype.dispose = function (renderer) {\n    this._blurTexture.dispose(renderer);\n    this._ssaoTexture.dispose(renderer);\n};\n\nSSAOPass.prototype.isFinished = function (frame) {\n    return frame > 30;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (SSAOPass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9ncmFwaGljL1NTQU9QYXNzLmpzP2NhYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hdHJpeDQgZnJvbSAnY2xheWdsL3NyYy9tYXRoL01hdHJpeDQnO1xuaW1wb3J0IFZlY3RvcjMgZnJvbSAnY2xheWdsL3NyYy9tYXRoL1ZlY3RvcjMnO1xuaW1wb3J0IFRleHR1cmUyRCBmcm9tICdjbGF5Z2wvc3JjL1RleHR1cmUyRCc7XG5pbXBvcnQgVGV4dHVyZSBmcm9tICdjbGF5Z2wvc3JjL1RleHR1cmUnO1xuaW1wb3J0IFBhc3MgZnJvbSAnY2xheWdsL3NyYy9jb21wb3NpdG9yL1Bhc3MnO1xuaW1wb3J0IFNoYWRlciBmcm9tICdjbGF5Z2wvc3JjL1NoYWRlcic7XG5pbXBvcnQgRnJhbWVCdWZmZXIgZnJvbSAnY2xheWdsL3NyYy9GcmFtZUJ1ZmZlcic7XG5pbXBvcnQgaGFsdG9uIGZyb20gJy4vaGFsdG9uJztcblxuaW1wb3J0IFNTQU9HTFNMQ29kZSBmcm9tICcuL1NTQU8uZ2xzbC5qcyc7XG5cblNoYWRlci5pbXBvcnQoU1NBT0dMU0xDb2RlKTtcblxuZnVuY3Rpb24gZ2VuZXJhdGVOb2lzZURhdGEoc2l6ZSkge1xuICAgIHZhciBkYXRhID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSAqIHNpemUgKiA0KTtcbiAgICB2YXIgbiA9IDA7XG4gICAgdmFyIHYzID0gbmV3IFZlY3RvcjMoKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgc2l6ZTsgaisrKSB7XG4gICAgICAgICAgICB2My5zZXQoTWF0aC5yYW5kb20oKSAqIDIgLSAxLCBNYXRoLnJhbmRvbSgpICogMiAtIDEsIDApLm5vcm1hbGl6ZSgpO1xuICAgICAgICAgICAgZGF0YVtuKytdID0gKHYzLnggKiAwLjUgKyAwLjUpICogMjU1O1xuICAgICAgICAgICAgZGF0YVtuKytdID0gKHYzLnkgKiAwLjUgKyAwLjUpICogMjU1O1xuICAgICAgICAgICAgZGF0YVtuKytdID0gMDtcbiAgICAgICAgICAgIGRhdGFbbisrXSA9IDI1NTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVOb2lzZVRleHR1cmUoc2l6ZSkge1xuICAgIHJldHVybiBuZXcgVGV4dHVyZTJEKHtcbiAgICAgICAgcGl4ZWxzOiBnZW5lcmF0ZU5vaXNlRGF0YShzaXplKSxcbiAgICAgICAgd3JhcFM6IFRleHR1cmUuUkVQRUFULFxuICAgICAgICB3cmFwVDogVGV4dHVyZS5SRVBFQVQsXG4gICAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgICBoZWlnaHQ6IHNpemVcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVLZXJuZWwoc2l6ZSwgb2Zmc2V0LCBoZW1pc3BoZXJlKSB7XG4gICAgdmFyIGtlcm5lbCA9IG5ldyBGbG9hdDMyQXJyYXkoc2l6ZSAqIDMpO1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgICAgIHZhciBwaGkgPSBoYWx0b24oaSArIG9mZnNldCwgMikgKiAoaGVtaXNwaGVyZSA/IDEgOiAyKSAqIE1hdGguUEk7XG4gICAgICAgIHZhciB0aGV0YSA9IGhhbHRvbihpICsgb2Zmc2V0LCAzKSAqIE1hdGguUEk7XG4gICAgICAgIHZhciByID0gTWF0aC5yYW5kb20oKTtcbiAgICAgICAgdmFyIHggPSBNYXRoLmNvcyhwaGkpICogTWF0aC5zaW4odGhldGEpICogcjtcbiAgICAgICAgdmFyIHkgPSBNYXRoLmNvcyh0aGV0YSkgKiByO1xuICAgICAgICB2YXIgeiA9IE1hdGguc2luKHBoaSkgKiBNYXRoLnNpbih0aGV0YSkgKiByO1xuXG4gICAgICAgIGtlcm5lbFtpICogM10gPSB4O1xuICAgICAgICBrZXJuZWxbaSAqIDMgKyAxXSA9IHk7XG4gICAgICAgIGtlcm5lbFtpICogMyArIDJdID0gejtcbiAgICB9XG4gICAgcmV0dXJuIGtlcm5lbDtcbn1cblxuZnVuY3Rpb24gU1NBT1Bhc3Mob3B0KSB7XG4gICAgb3B0ID0gb3B0IHx8IHt9O1xuXG4gICAgdGhpcy5fc3Nhb1Bhc3MgPSBuZXcgUGFzcyh7XG4gICAgICAgIGZyYWdtZW50OiBTaGFkZXIuc291cmNlKCdlY2dsLnNzYW8uZXN0aW1hdGUnKVxuICAgIH0pO1xuICAgIHRoaXMuX2JsdXJQYXNzID0gbmV3IFBhc3Moe1xuICAgICAgICBmcmFnbWVudDogU2hhZGVyLnNvdXJjZSgnZWNnbC5zc2FvLmJsdXInKVxuICAgIH0pO1xuICAgIHRoaXMuX2ZyYW1lYnVmZmVyID0gbmV3IEZyYW1lQnVmZmVyKCk7XG5cbiAgICB0aGlzLl9zc2FvVGV4dHVyZSA9IG5ldyBUZXh0dXJlMkQoKTtcbiAgICB0aGlzLl9ibHVyVGV4dHVyZSA9IG5ldyBUZXh0dXJlMkQoKTtcblxuICAgIHRoaXMuX2RlcHRoVGV4ID0gb3B0LmRlcHRoVGV4dHVyZTtcbiAgICB0aGlzLl9ub3JtYWxUZXggPSBvcHQubm9ybWFsVGV4dHVyZTtcblxuICAgIHRoaXMuc2V0Tm9pc2VTaXplKDQpO1xuICAgIHRoaXMuc2V0S2VybmVsU2l6ZShvcHQua2VybmVsU2l6ZSB8fCAxMik7XG4gICAgaWYgKG9wdC5yYWRpdXMgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnNldFBhcmFtZXRlcigncmFkaXVzJywgb3B0LnJhZGl1cyk7XG4gICAgfVxuICAgIGlmIChvcHQucG93ZXIgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnNldFBhcmFtZXRlcigncG93ZXInLCBvcHQucG93ZXIpO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5fbm9ybWFsVGV4KSB7XG4gICAgICAgIHRoaXMuX3NzYW9QYXNzLm1hdGVyaWFsLmRpc2FibGVUZXh0dXJlKCdub3JtYWxUZXgnKTtcbiAgICAgICAgdGhpcy5fYmx1clBhc3MubWF0ZXJpYWwuZGlzYWJsZVRleHR1cmUoJ25vcm1hbFRleCcpO1xuICAgIH1cbiAgICBpZiAoIXRoaXMuX2RlcHRoVGV4KSB7XG4gICAgICAgIHRoaXMuX2JsdXJQYXNzLm1hdGVyaWFsLmRpc2FibGVUZXh0dXJlKCdkZXB0aFRleCcpO1xuICAgIH1cblxuICAgIHRoaXMuX2JsdXJQYXNzLm1hdGVyaWFsLnNldFVuaWZvcm0oJ25vcm1hbFRleCcsIHRoaXMuX25vcm1hbFRleCk7XG4gICAgdGhpcy5fYmx1clBhc3MubWF0ZXJpYWwuc2V0VW5pZm9ybSgnZGVwdGhUZXgnLCB0aGlzLl9kZXB0aFRleCk7XG59XG5cblNTQU9QYXNzLnByb3RvdHlwZS5zZXREZXB0aFRleHR1cmUgPSBmdW5jdGlvbiAoZGVwdGhUZXgpIHtcbiAgICB0aGlzLl9kZXB0aFRleCA9IGRlcHRoVGV4O1xufTtcblxuU1NBT1Bhc3MucHJvdG90eXBlLnNldE5vcm1hbFRleHR1cmUgPSBmdW5jdGlvbiAobm9ybWFsVGV4KSB7XG4gICAgdGhpcy5fbm9ybWFsVGV4ID0gbm9ybWFsVGV4O1xuICAgIHRoaXMuX3NzYW9QYXNzLm1hdGVyaWFsW25vcm1hbFRleCA/ICdlbmFibGVUZXh0dXJlJyA6ICdkaXNhYmxlVGV4dHVyZSddKCdub3JtYWxUZXgnKTtcbiAgICAvLyBTd2l0Y2ggYmV0d2VlbiBoZW1pc3BoZXJlIGFuZCBzaGVyZSBrZXJuZWwuXG4gICAgdGhpcy5zZXRLZXJuZWxTaXplKHRoaXMuX2tlcm5lbFNpemUpO1xufTtcblxuU1NBT1Bhc3MucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChyZW5kZXJlciwgY2FtZXJhLCBmcmFtZSkge1xuICAgIHZhciB3aWR0aCA9IHJlbmRlcmVyLmdldFdpZHRoKCk7XG4gICAgdmFyIGhlaWdodCA9IHJlbmRlcmVyLmdldEhlaWdodCgpO1xuXG4gICAgdmFyIHNzYW9QYXNzID0gdGhpcy5fc3Nhb1Bhc3M7XG4gICAgdmFyIGJsdXJQYXNzID0gdGhpcy5fYmx1clBhc3M7XG5cbiAgICBzc2FvUGFzcy5zZXRVbmlmb3JtKCdrZXJuZWwnLCB0aGlzLl9rZXJuZWxzW2ZyYW1lICUgdGhpcy5fa2VybmVscy5sZW5ndGhdKTtcbiAgICBzc2FvUGFzcy5zZXRVbmlmb3JtKCdkZXB0aFRleCcsIHRoaXMuX2RlcHRoVGV4KTtcbiAgICBpZiAodGhpcy5fbm9ybWFsVGV4ICE9IG51bGwpIHtcbiAgICAgICAgc3Nhb1Bhc3Muc2V0VW5pZm9ybSgnbm9ybWFsVGV4JywgdGhpcy5fbm9ybWFsVGV4KTtcbiAgICB9XG4gICAgc3Nhb1Bhc3Muc2V0VW5pZm9ybSgnZGVwdGhUZXhTaXplJywgW3RoaXMuX2RlcHRoVGV4LndpZHRoLCB0aGlzLl9kZXB0aFRleC5oZWlnaHRdKTtcblxuICAgIHZhciB2aWV3SW52ZXJzZVRyYW5zcG9zZSA9IG5ldyBNYXRyaXg0KCk7XG4gICAgTWF0cml4NC50cmFuc3Bvc2Uodmlld0ludmVyc2VUcmFuc3Bvc2UsIGNhbWVyYS53b3JsZFRyYW5zZm9ybSk7XG5cbiAgICBzc2FvUGFzcy5zZXRVbmlmb3JtKCdwcm9qZWN0aW9uJywgY2FtZXJhLnByb2plY3Rpb25NYXRyaXguYXJyYXkpO1xuICAgIHNzYW9QYXNzLnNldFVuaWZvcm0oJ3Byb2plY3Rpb25JbnYnLCBjYW1lcmEuaW52UHJvamVjdGlvbk1hdHJpeC5hcnJheSk7XG4gICAgc3Nhb1Bhc3Muc2V0VW5pZm9ybSgndmlld0ludmVyc2VUcmFuc3Bvc2UnLCB2aWV3SW52ZXJzZVRyYW5zcG9zZS5hcnJheSk7XG5cbiAgICB2YXIgc3Nhb1RleHR1cmUgPSB0aGlzLl9zc2FvVGV4dHVyZTtcbiAgICB2YXIgYmx1clRleHR1cmUgPSB0aGlzLl9ibHVyVGV4dHVyZTtcblxuICAgIHNzYW9UZXh0dXJlLndpZHRoID0gd2lkdGg7XG4gICAgc3Nhb1RleHR1cmUuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgIGJsdXJUZXh0dXJlLndpZHRoID0gd2lkdGg7XG4gICAgYmx1clRleHR1cmUuaGVpZ2h0ID0gaGVpZ2h0O1xuXG4gICAgdGhpcy5fZnJhbWVidWZmZXIuYXR0YWNoKHNzYW9UZXh0dXJlKTtcbiAgICB0aGlzLl9mcmFtZWJ1ZmZlci5iaW5kKHJlbmRlcmVyKTtcbiAgICByZW5kZXJlci5nbC5jbGVhckNvbG9yKDEsIDEsIDEsIDEpO1xuICAgIHJlbmRlcmVyLmdsLmNsZWFyKHJlbmRlcmVyLmdsLkNPTE9SX0JVRkZFUl9CSVQpO1xuICAgIHNzYW9QYXNzLnJlbmRlcihyZW5kZXJlcik7XG5cbiAgICBibHVyUGFzcy5zZXRVbmlmb3JtKCd0ZXh0dXJlU2l6ZScsIFt3aWR0aCwgaGVpZ2h0XSk7XG4gICAgYmx1clBhc3Muc2V0VW5pZm9ybSgncHJvamVjdGlvbicsIGNhbWVyYS5wcm9qZWN0aW9uTWF0cml4LmFycmF5KTtcbiAgICB0aGlzLl9mcmFtZWJ1ZmZlci5hdHRhY2goYmx1clRleHR1cmUpO1xuICAgIGJsdXJQYXNzLnNldFVuaWZvcm0oJ2RpcmVjdGlvbicsIDApO1xuICAgIGJsdXJQYXNzLnNldFVuaWZvcm0oJ3NzYW9UZXh0dXJlJywgc3Nhb1RleHR1cmUpO1xuICAgIGJsdXJQYXNzLnJlbmRlcihyZW5kZXJlcik7XG5cbiAgICB0aGlzLl9mcmFtZWJ1ZmZlci5hdHRhY2goc3Nhb1RleHR1cmUpO1xuICAgIGJsdXJQYXNzLnNldFVuaWZvcm0oJ2RpcmVjdGlvbicsIDEpO1xuICAgIGJsdXJQYXNzLnNldFVuaWZvcm0oJ3NzYW9UZXh0dXJlJywgYmx1clRleHR1cmUpO1xuICAgIGJsdXJQYXNzLnJlbmRlcihyZW5kZXJlcik7XG5cbiAgICB0aGlzLl9mcmFtZWJ1ZmZlci51bmJpbmQocmVuZGVyZXIpO1xuXG4gICAgLy8gUmVzdG9yZSBjbGVhclxuICAgIHZhciBjbGVhckNvbG9yID0gcmVuZGVyZXIuY2xlYXJDb2xvcjtcbiAgICByZW5kZXJlci5nbC5jbGVhckNvbG9yKGNsZWFyQ29sb3JbMF0sIGNsZWFyQ29sb3JbMV0sIGNsZWFyQ29sb3JbMl0sIGNsZWFyQ29sb3JbM10pO1xufTtcblxuU1NBT1Bhc3MucHJvdG90eXBlLmdldFRhcmdldFRleHR1cmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NzYW9UZXh0dXJlO1xufTtcblxuU1NBT1Bhc3MucHJvdG90eXBlLnNldFBhcmFtZXRlciA9IGZ1bmN0aW9uIChuYW1lLCB2YWwpIHtcbiAgICBpZiAobmFtZSA9PT0gJ25vaXNlVGV4U2l6ZScpIHtcbiAgICAgICAgdGhpcy5zZXROb2lzZVNpemUodmFsKTtcbiAgICB9XG4gICAgZWxzZSBpZiAobmFtZSA9PT0gJ2tlcm5lbFNpemUnKSB7XG4gICAgICAgIHRoaXMuc2V0S2VybmVsU2l6ZSh2YWwpO1xuICAgIH1cbiAgICBlbHNlIGlmIChuYW1lID09PSAnaW50ZW5zaXR5Jykge1xuICAgICAgICB0aGlzLl9zc2FvUGFzcy5tYXRlcmlhbC5zZXQoJ2ludGVuc2l0eScsIHZhbCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aGlzLl9zc2FvUGFzcy5zZXRVbmlmb3JtKG5hbWUsIHZhbCk7XG4gICAgfVxufTtcblxuU1NBT1Bhc3MucHJvdG90eXBlLnNldEtlcm5lbFNpemUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICAgIHRoaXMuX2tlcm5lbFNpemUgPSBzaXplO1xuICAgIHRoaXMuX3NzYW9QYXNzLm1hdGVyaWFsLmRlZmluZSgnZnJhZ21lbnQnLCAnS0VSTkVMX1NJWkUnLCBzaXplKTtcbiAgICB0aGlzLl9rZXJuZWxzID0gdGhpcy5fa2VybmVscyB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDMwOyBpKyspIHtcbiAgICAgICAgdGhpcy5fa2VybmVsc1tpXSA9IGdlbmVyYXRlS2VybmVsKHNpemUsIGkgKiBzaXplLCAhIXRoaXMuX25vcm1hbFRleCk7XG4gICAgfVxufTtcblxuU1NBT1Bhc3MucHJvdG90eXBlLnNldE5vaXNlU2l6ZSA9IGZ1bmN0aW9uIChzaXplKSB7XG4gICAgdmFyIHRleHR1cmUgPSB0aGlzLl9zc2FvUGFzcy5nZXRVbmlmb3JtKCdub2lzZVRleCcpO1xuICAgIGlmICghdGV4dHVyZSkge1xuICAgICAgICB0ZXh0dXJlID0gZ2VuZXJhdGVOb2lzZVRleHR1cmUoc2l6ZSk7XG4gICAgICAgIHRoaXMuX3NzYW9QYXNzLnNldFVuaWZvcm0oJ25vaXNlVGV4JywgZ2VuZXJhdGVOb2lzZVRleHR1cmUoc2l6ZSkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGV4dHVyZS5kYXRhID0gZ2VuZXJhdGVOb2lzZURhdGEoc2l6ZSk7XG4gICAgICAgIHRleHR1cmUud2lkdGggPSB0ZXh0dXJlLmhlaWdodCA9IHNpemU7XG4gICAgICAgIHRleHR1cmUuZGlydHkoKTtcbiAgICB9XG5cbiAgICB0aGlzLl9zc2FvUGFzcy5zZXRVbmlmb3JtKCdub2lzZVRleFNpemUnLCBbc2l6ZSwgc2l6ZV0pO1xufTtcblxuU1NBT1Bhc3MucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAocmVuZGVyZXIpIHtcbiAgICB0aGlzLl9ibHVyVGV4dHVyZS5kaXNwb3NlKHJlbmRlcmVyKTtcbiAgICB0aGlzLl9zc2FvVGV4dHVyZS5kaXNwb3NlKHJlbmRlcmVyKTtcbn07XG5cblNTQU9QYXNzLnByb3RvdHlwZS5pc0ZpbmlzaGVkID0gZnVuY3Rpb24gKGZyYW1lKSB7XG4gICAgcmV0dXJuIGZyYW1lID4gMzA7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTU0FPUGFzcztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9zcmMvZ3JhcGhpYy9TU0FPUGFzcy5qc1xuLy8gbW9kdWxlIGlkID0gMTIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///120\n");

/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export ecgl.ssao.estimate\\n\\n#define SHADER_NAME SSAO\\n\\nuniform sampler2D depthTex;\\n\\nuniform sampler2D normalTex;\\n\\nuniform sampler2D noiseTex;\\n\\nuniform vec2 depthTexSize;\\n\\nuniform vec2 noiseTexSize;\\n\\nuniform mat4 projection;\\n\\nuniform mat4 projectionInv;\\n\\nuniform mat4 viewInverseTranspose;\\n\\nuniform vec3 kernel[KERNEL_SIZE];\\n\\nuniform float radius : 1;\\n\\nuniform float power : 1;\\n\\nuniform float bias: 0.01;\\n\\nuniform float intensity: 1.0;\\n\\nvarying vec2 v_Texcoord;\\n\\nfloat ssaoEstimator(in vec3 originPos, in vec3 N, in mat3 kernelBasis) {\\n float occlusion = 0.0;\\n\\n for (int i = 0; i < KERNEL_SIZE; i++) {\\n vec3 samplePos = kernel[i];\\n#ifdef NORMALTEX_ENABLED\\n samplePos = kernelBasis * samplePos;\\n#endif\\n samplePos = samplePos * radius + originPos;\\n\\n vec4 texCoord = projection * vec4(samplePos, 1.0);\\n texCoord.xy /= texCoord.w;\\n texCoord.xy = texCoord.xy * 0.5 + 0.5;\\n\\n vec4 depthTexel = texture2D(depthTex, texCoord.xy);\\n float z = depthTexel.r * 2.0 - 1.0;\\n#ifdef ALCHEMY\\n vec4 projectedPos = vec4(texCoord.xy * 2.0 - 1.0, z, 1.0);\\n vec4 p4 = projectionInv * projectedPos;\\n p4.xyz /= p4.w;\\n vec3 cDir = p4.xyz - originPos;\\n\\n float vv = dot(cDir, cDir);\\n float vn = dot(cDir, N);\\n\\n float radius2 = radius * radius;\\n\\n vn = max(vn + p4.z * bias, 0.0);\\n float f = max(radius2 - vv, 0.0) / radius2;\\n occlusion += f * f * f * max(vn / (0.01 + vv), 0.0);\\n#else\\n if (projection[3][3] == 0.0) {\\n z = projection[3][2] / (z * projection[2][3] - projection[2][2]);\\n }\\n else {\\n z = (z - projection[3][2]) / projection[2][2];\\n }\\n float factor = step(samplePos.z, z - bias);\\n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - z));\\n occlusion += rangeCheck * factor;\\n#endif\\n }\\n#ifdef NORMALTEX_ENABLED\\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\\n#else\\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\\n#endif\\n return pow(occlusion, power);\\n}\\n\\nvoid main()\\n{\\n\\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\\n\\n#ifdef NORMALTEX_ENABLED\\n vec4 tex = texture2D(normalTex, v_Texcoord);\\n if (dot(tex.rgb, tex.rgb) == 0.0) {\\n gl_FragColor = vec4(1.0);\\n return;\\n }\\n vec3 N = tex.rgb * 2.0 - 1.0;\\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\\n\\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\\n vec3 T = normalize(rvec - N * dot(rvec, N));\\n vec3 BT = normalize(cross(N, T));\\n mat3 kernelBasis = mat3(T, BT, N);\\n#else\\n if (depthTexel.r > 0.99999) {\\n gl_FragColor = vec4(1.0);\\n return;\\n }\\n mat3 kernelBasis;\\n#endif\\n\\n float z = depthTexel.r * 2.0 - 1.0;\\n\\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\\n vec4 p4 = projectionInv * projectedPos;\\n\\n vec3 position = p4.xyz / p4.w;\\n\\n float ao = ssaoEstimator(position, N, kernelBasis);\\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\\n gl_FragColor = vec4(vec3(ao), 1.0);\\n}\\n\\n@end\\n\\n\\n@export ecgl.ssao.blur\\n#define SHADER_NAME SSAO_BLUR\\n\\nuniform sampler2D ssaoTexture;\\n\\n#ifdef NORMALTEX_ENABLED\\nuniform sampler2D normalTex;\\n#endif\\n\\nvarying vec2 v_Texcoord;\\n\\nuniform vec2 textureSize;\\nuniform float blurSize : 1.0;\\n\\nuniform int direction: 0.0;\\n\\n#ifdef DEPTHTEX_ENABLED\\nuniform sampler2D depthTex;\\nuniform mat4 projection;\\nuniform float depthRange : 0.05;\\n\\nfloat getLinearDepth(vec2 coord)\\n{\\n float depth = texture2D(depthTex, coord).r * 2.0 - 1.0;\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n}\\n#endif\\n\\nvoid main()\\n{\\n float kernel[5];\\n kernel[0] = 0.122581;\\n kernel[1] = 0.233062;\\n kernel[2] = 0.288713;\\n kernel[3] = 0.233062;\\n kernel[4] = 0.122581;\\n\\n vec2 off = vec2(0.0);\\n if (direction == 0) {\\n off[0] = blurSize / textureSize.x;\\n }\\n else {\\n off[1] = blurSize / textureSize.y;\\n }\\n\\n vec2 coord = v_Texcoord;\\n\\n float sum = 0.0;\\n float weightAll = 0.0;\\n\\n#ifdef NORMALTEX_ENABLED\\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\\n#endif\\n#if defined(DEPTHTEX_ENABLED)\\n float centerDepth = getLinearDepth(v_Texcoord);\\n#endif\\n\\n for (int i = 0; i < 5; i++) {\\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 2.0) * off, vec2(0.0), vec2(1.0));\\n\\n float w = kernel[i];\\n#ifdef NORMALTEX_ENABLED\\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\\n w *= clamp(dot(normal, centerNormal), 0.0, 1.0);\\n#endif\\n#ifdef DEPTHTEX_ENABLED\\n float d = getLinearDepth(coord);\\n w *= (1.0 - smoothstep(0.0, 1.0, abs(centerDepth - d) / depthRange));\\n#endif\\n\\n weightAll += w;\\n sum += texture2D(ssaoTexture, coord).r * w;\\n }\\n\\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\\n}\\n@end\\n\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9ncmFwaGljL1NTQU8uZ2xzbC5qcz9iMTViIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBlY2dsLnNzYW8uZXN0aW1hdGVcXG5cXG4jZGVmaW5lIFNIQURFUl9OQU1FIFNTQU9cXG5cXG51bmlmb3JtIHNhbXBsZXIyRCBkZXB0aFRleDtcXG5cXG51bmlmb3JtIHNhbXBsZXIyRCBub3JtYWxUZXg7XFxuXFxudW5pZm9ybSBzYW1wbGVyMkQgbm9pc2VUZXg7XFxuXFxudW5pZm9ybSB2ZWMyIGRlcHRoVGV4U2l6ZTtcXG5cXG51bmlmb3JtIHZlYzIgbm9pc2VUZXhTaXplO1xcblxcbnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uO1xcblxcbnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uSW52O1xcblxcbnVuaWZvcm0gbWF0NCB2aWV3SW52ZXJzZVRyYW5zcG9zZTtcXG5cXG51bmlmb3JtIHZlYzMga2VybmVsW0tFUk5FTF9TSVpFXTtcXG5cXG51bmlmb3JtIGZsb2F0IHJhZGl1cyA6IDE7XFxuXFxudW5pZm9ybSBmbG9hdCBwb3dlciA6IDE7XFxuXFxudW5pZm9ybSBmbG9hdCBiaWFzOiAwLjAxO1xcblxcbnVuaWZvcm0gZmxvYXQgaW50ZW5zaXR5OiAxLjA7XFxuXFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxuXFxuZmxvYXQgc3Nhb0VzdGltYXRvcihpbiB2ZWMzIG9yaWdpblBvcywgaW4gdmVjMyBOLCBpbiBtYXQzIGtlcm5lbEJhc2lzKSB7XFxuIGZsb2F0IG9jY2x1c2lvbiA9IDAuMDtcXG5cXG4gZm9yIChpbnQgaSA9IDA7IGkgPCBLRVJORUxfU0laRTsgaSsrKSB7XFxuIHZlYzMgc2FtcGxlUG9zID0ga2VybmVsW2ldO1xcbiNpZmRlZiBOT1JNQUxURVhfRU5BQkxFRFxcbiBzYW1wbGVQb3MgPSBrZXJuZWxCYXNpcyAqIHNhbXBsZVBvcztcXG4jZW5kaWZcXG4gc2FtcGxlUG9zID0gc2FtcGxlUG9zICogcmFkaXVzICsgb3JpZ2luUG9zO1xcblxcbiB2ZWM0IHRleENvb3JkID0gcHJvamVjdGlvbiAqIHZlYzQoc2FtcGxlUG9zLCAxLjApO1xcbiB0ZXhDb29yZC54eSAvPSB0ZXhDb29yZC53O1xcbiB0ZXhDb29yZC54eSA9IHRleENvb3JkLnh5ICogMC41ICsgMC41O1xcblxcbiB2ZWM0IGRlcHRoVGV4ZWwgPSB0ZXh0dXJlMkQoZGVwdGhUZXgsIHRleENvb3JkLnh5KTtcXG4gZmxvYXQgeiA9IGRlcHRoVGV4ZWwuciAqIDIuMCAtIDEuMDtcXG4jaWZkZWYgQUxDSEVNWVxcbiB2ZWM0IHByb2plY3RlZFBvcyA9IHZlYzQodGV4Q29vcmQueHkgKiAyLjAgLSAxLjAsIHosIDEuMCk7XFxuIHZlYzQgcDQgPSBwcm9qZWN0aW9uSW52ICogcHJvamVjdGVkUG9zO1xcbiBwNC54eXogLz0gcDQudztcXG4gdmVjMyBjRGlyID0gcDQueHl6IC0gb3JpZ2luUG9zO1xcblxcbiBmbG9hdCB2diA9IGRvdChjRGlyLCBjRGlyKTtcXG4gZmxvYXQgdm4gPSBkb3QoY0RpciwgTik7XFxuXFxuIGZsb2F0IHJhZGl1czIgPSByYWRpdXMgKiByYWRpdXM7XFxuXFxuIHZuID0gbWF4KHZuICsgcDQueiAqIGJpYXMsIDAuMCk7XFxuIGZsb2F0IGYgPSBtYXgocmFkaXVzMiAtIHZ2LCAwLjApIC8gcmFkaXVzMjtcXG4gb2NjbHVzaW9uICs9IGYgKiBmICogZiAqIG1heCh2biAvICgwLjAxICsgdnYpLCAwLjApO1xcbiNlbHNlXFxuIGlmIChwcm9qZWN0aW9uWzNdWzNdID09IDAuMCkge1xcbiB6ID0gcHJvamVjdGlvblszXVsyXSAvICh6ICogcHJvamVjdGlvblsyXVszXSAtIHByb2plY3Rpb25bMl1bMl0pO1xcbiB9XFxuIGVsc2Uge1xcbiB6ID0gKHogLSBwcm9qZWN0aW9uWzNdWzJdKSAvIHByb2plY3Rpb25bMl1bMl07XFxuIH1cXG4gZmxvYXQgZmFjdG9yID0gc3RlcChzYW1wbGVQb3MueiwgeiAtIGJpYXMpO1xcbiBmbG9hdCByYW5nZUNoZWNrID0gc21vb3Roc3RlcCgwLjAsIDEuMCwgcmFkaXVzIC8gYWJzKG9yaWdpblBvcy56IC0geikpO1xcbiBvY2NsdXNpb24gKz0gcmFuZ2VDaGVjayAqIGZhY3RvcjtcXG4jZW5kaWZcXG4gfVxcbiNpZmRlZiBOT1JNQUxURVhfRU5BQkxFRFxcbiBvY2NsdXNpb24gPSAxLjAgLSBvY2NsdXNpb24gLyBmbG9hdChLRVJORUxfU0laRSk7XFxuI2Vsc2VcXG4gb2NjbHVzaW9uID0gMS4wIC0gY2xhbXAoKG9jY2x1c2lvbiAvIGZsb2F0KEtFUk5FTF9TSVpFKSAtIDAuNikgKiAyLjUsIDAuMCwgMS4wKTtcXG4jZW5kaWZcXG4gcmV0dXJuIHBvdyhvY2NsdXNpb24sIHBvd2VyKTtcXG59XFxuXFxudm9pZCBtYWluKClcXG57XFxuXFxuIHZlYzQgZGVwdGhUZXhlbCA9IHRleHR1cmUyRChkZXB0aFRleCwgdl9UZXhjb29yZCk7XFxuXFxuI2lmZGVmIE5PUk1BTFRFWF9FTkFCTEVEXFxuIHZlYzQgdGV4ID0gdGV4dHVyZTJEKG5vcm1hbFRleCwgdl9UZXhjb29yZCk7XFxuIGlmIChkb3QodGV4LnJnYiwgdGV4LnJnYikgPT0gMC4wKSB7XFxuIGdsX0ZyYWdDb2xvciA9IHZlYzQoMS4wKTtcXG4gcmV0dXJuO1xcbiB9XFxuIHZlYzMgTiA9IHRleC5yZ2IgKiAyLjAgLSAxLjA7XFxuIE4gPSAodmlld0ludmVyc2VUcmFuc3Bvc2UgKiB2ZWM0KE4sIDAuMCkpLnh5ejtcXG5cXG4gdmVjMiBub2lzZVRleENvb3JkID0gZGVwdGhUZXhTaXplIC8gdmVjMihub2lzZVRleFNpemUpICogdl9UZXhjb29yZDtcXG4gdmVjMyBydmVjID0gdGV4dHVyZTJEKG5vaXNlVGV4LCBub2lzZVRleENvb3JkKS5yZ2IgKiAyLjAgLSAxLjA7XFxuIHZlYzMgVCA9IG5vcm1hbGl6ZShydmVjIC0gTiAqIGRvdChydmVjLCBOKSk7XFxuIHZlYzMgQlQgPSBub3JtYWxpemUoY3Jvc3MoTiwgVCkpO1xcbiBtYXQzIGtlcm5lbEJhc2lzID0gbWF0MyhULCBCVCwgTik7XFxuI2Vsc2VcXG4gaWYgKGRlcHRoVGV4ZWwuciA+IDAuOTk5OTkpIHtcXG4gZ2xfRnJhZ0NvbG9yID0gdmVjNCgxLjApO1xcbiByZXR1cm47XFxuIH1cXG4gbWF0MyBrZXJuZWxCYXNpcztcXG4jZW5kaWZcXG5cXG4gZmxvYXQgeiA9IGRlcHRoVGV4ZWwuciAqIDIuMCAtIDEuMDtcXG5cXG4gdmVjNCBwcm9qZWN0ZWRQb3MgPSB2ZWM0KHZfVGV4Y29vcmQgKiAyLjAgLSAxLjAsIHosIDEuMCk7XFxuIHZlYzQgcDQgPSBwcm9qZWN0aW9uSW52ICogcHJvamVjdGVkUG9zO1xcblxcbiB2ZWMzIHBvc2l0aW9uID0gcDQueHl6IC8gcDQudztcXG5cXG4gZmxvYXQgYW8gPSBzc2FvRXN0aW1hdG9yKHBvc2l0aW9uLCBOLCBrZXJuZWxCYXNpcyk7XFxuIGFvID0gY2xhbXAoMS4wIC0gKDEuMCAtIGFvKSAqIGludGVuc2l0eSwgMC4wLCAxLjApO1xcbiBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZlYzMoYW8pLCAxLjApO1xcbn1cXG5cXG5AZW5kXFxuXFxuXFxuQGV4cG9ydCBlY2dsLnNzYW8uYmx1clxcbiNkZWZpbmUgU0hBREVSX05BTUUgU1NBT19CTFVSXFxuXFxudW5pZm9ybSBzYW1wbGVyMkQgc3Nhb1RleHR1cmU7XFxuXFxuI2lmZGVmIE5PUk1BTFRFWF9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgbm9ybWFsVGV4O1xcbiNlbmRpZlxcblxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcblxcbnVuaWZvcm0gdmVjMiB0ZXh0dXJlU2l6ZTtcXG51bmlmb3JtIGZsb2F0IGJsdXJTaXplIDogMS4wO1xcblxcbnVuaWZvcm0gaW50IGRpcmVjdGlvbjogMC4wO1xcblxcbiNpZmRlZiBERVBUSFRFWF9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgZGVwdGhUZXg7XFxudW5pZm9ybSBtYXQ0IHByb2plY3Rpb247XFxudW5pZm9ybSBmbG9hdCBkZXB0aFJhbmdlIDogMC4wNTtcXG5cXG5mbG9hdCBnZXRMaW5lYXJEZXB0aCh2ZWMyIGNvb3JkKVxcbntcXG4gZmxvYXQgZGVwdGggPSB0ZXh0dXJlMkQoZGVwdGhUZXgsIGNvb3JkKS5yICogMi4wIC0gMS4wO1xcbiByZXR1cm4gcHJvamVjdGlvblszXVsyXSAvIChkZXB0aCAqIHByb2plY3Rpb25bMl1bM10gLSBwcm9qZWN0aW9uWzJdWzJdKTtcXG59XFxuI2VuZGlmXFxuXFxudm9pZCBtYWluKClcXG57XFxuIGZsb2F0IGtlcm5lbFs1XTtcXG4ga2VybmVsWzBdID0gMC4xMjI1ODE7XFxuIGtlcm5lbFsxXSA9IDAuMjMzMDYyO1xcbiBrZXJuZWxbMl0gPSAwLjI4ODcxMztcXG4ga2VybmVsWzNdID0gMC4yMzMwNjI7XFxuIGtlcm5lbFs0XSA9IDAuMTIyNTgxO1xcblxcbiB2ZWMyIG9mZiA9IHZlYzIoMC4wKTtcXG4gaWYgKGRpcmVjdGlvbiA9PSAwKSB7XFxuIG9mZlswXSA9IGJsdXJTaXplIC8gdGV4dHVyZVNpemUueDtcXG4gfVxcbiBlbHNlIHtcXG4gb2ZmWzFdID0gYmx1clNpemUgLyB0ZXh0dXJlU2l6ZS55O1xcbiB9XFxuXFxuIHZlYzIgY29vcmQgPSB2X1RleGNvb3JkO1xcblxcbiBmbG9hdCBzdW0gPSAwLjA7XFxuIGZsb2F0IHdlaWdodEFsbCA9IDAuMDtcXG5cXG4jaWZkZWYgTk9STUFMVEVYX0VOQUJMRURcXG4gdmVjMyBjZW50ZXJOb3JtYWwgPSB0ZXh0dXJlMkQobm9ybWFsVGV4LCB2X1RleGNvb3JkKS5yZ2IgKiAyLjAgLSAxLjA7XFxuI2VuZGlmXFxuI2lmIGRlZmluZWQoREVQVEhURVhfRU5BQkxFRClcXG4gZmxvYXQgY2VudGVyRGVwdGggPSBnZXRMaW5lYXJEZXB0aCh2X1RleGNvb3JkKTtcXG4jZW5kaWZcXG5cXG4gZm9yIChpbnQgaSA9IDA7IGkgPCA1OyBpKyspIHtcXG4gdmVjMiBjb29yZCA9IGNsYW1wKHZfVGV4Y29vcmQgKyB2ZWMyKGZsb2F0KGkpIC0gMi4wKSAqIG9mZiwgdmVjMigwLjApLCB2ZWMyKDEuMCkpO1xcblxcbiBmbG9hdCB3ID0ga2VybmVsW2ldO1xcbiNpZmRlZiBOT1JNQUxURVhfRU5BQkxFRFxcbiB2ZWMzIG5vcm1hbCA9IHRleHR1cmUyRChub3JtYWxUZXgsIGNvb3JkKS5yZ2IgKiAyLjAgLSAxLjA7XFxuIHcgKj0gY2xhbXAoZG90KG5vcm1hbCwgY2VudGVyTm9ybWFsKSwgMC4wLCAxLjApO1xcbiNlbmRpZlxcbiNpZmRlZiBERVBUSFRFWF9FTkFCTEVEXFxuIGZsb2F0IGQgPSBnZXRMaW5lYXJEZXB0aChjb29yZCk7XFxuIHcgKj0gKDEuMCAtIHNtb290aHN0ZXAoMC4wLCAxLjAsIGFicyhjZW50ZXJEZXB0aCAtIGQpIC8gZGVwdGhSYW5nZSkpO1xcbiNlbmRpZlxcblxcbiB3ZWlnaHRBbGwgKz0gdztcXG4gc3VtICs9IHRleHR1cmUyRChzc2FvVGV4dHVyZSwgY29vcmQpLnIgKiB3O1xcbiB9XFxuXFxuIGdsX0ZyYWdDb2xvciA9IHZlYzQodmVjMyhzdW0gLyB3ZWlnaHRBbGwpLCAxLjApO1xcbn1cXG5AZW5kXFxuXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9zcmMvZ3JhcGhpYy9TU0FPLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDEyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///121\n");

/***/ }),
/* 122 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_claygl_src_FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__halton__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_claygl_src_util_cubemap__ = __webpack_require__(66);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__SSR_glsl_js__ = __webpack_require__(125);\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].import(__WEBPACK_IMPORTED_MODULE_9__SSR_glsl_js__[\"a\" /* default */]);\n\n// function generateNormals(size, offset, hemisphere) {\n//     var kernel = new Float32Array(size * 3);\n//     offset = offset || 0;\n//     for (var i = 0; i < size; i++) {\n//         var phi = halton(i + offset, 2) * (hemisphere ? 1 : 2) * Math.PI / 2;\n//         var theta = halton(i + offset, 3) * 2 * Math.PI;\n//         var x = Math.cos(theta) * Math.sin(phi);\n//         var y = Math.sin(theta) * Math.sin(phi);\n//         var z = Math.cos(phi);\n//         kernel[i * 3] = x;\n//         kernel[i * 3 + 1] = y;\n//         kernel[i * 3 + 2] = z;\n//     }\n//     return kernel;\n// }\n\nfunction SSRPass(opt) {\n    opt = opt || {};\n\n    this._ssrPass = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].source('ecgl.ssr.main'),\n        clearColor: [0, 0, 0, 0]\n    });\n    this._blurPass1 = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].source('ecgl.ssr.blur'),\n        clearColor: [0, 0, 0, 0]\n    });\n    this._blurPass2 = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].source('ecgl.ssr.blur'),\n        clearColor: [0, 0, 0, 0]\n    });\n    this._blendPass = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_5_claygl_src_Shader__[\"a\" /* default */].source('clay.compositor.blend')\n    });\n    this._blendPass.material.disableTexturesAll();\n    this._blendPass.material.enableTexture(['texture1', 'texture2']);\n\n    this._ssrPass.setUniform('gBufferTexture1', opt.normalTexture);\n    this._ssrPass.setUniform('gBufferTexture2', opt.depthTexture);\n    this._ssrPass.setUniform('gBufferTexture3', opt.albedoTexture);\n\n    this._blurPass1.setUniform('gBufferTexture1', opt.normalTexture);\n    this._blurPass1.setUniform('gBufferTexture2', opt.depthTexture);\n\n    this._blurPass2.setUniform('gBufferTexture1', opt.normalTexture);\n    this._blurPass2.setUniform('gBufferTexture2', opt.depthTexture);\n\n    this._blurPass2.material.define('fragment', 'VERTICAL');\n    this._blurPass2.material.define('fragment', 'BLEND');\n\n    this._ssrTexture = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]({\n        type: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__[\"a\" /* default */].HALF_FLOAT\n    });\n    this._texture2 = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]({\n        type: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__[\"a\" /* default */].HALF_FLOAT\n    });\n    this._texture3 = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]({\n        type: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__[\"a\" /* default */].HALF_FLOAT\n    });\n    this._prevTexture = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]({\n        type: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__[\"a\" /* default */].HALF_FLOAT\n    });\n    this._currentTexture = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture2D__[\"a\" /* default */]({\n        type: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture__[\"a\" /* default */].HALF_FLOAT\n    });\n\n    this._frameBuffer = new __WEBPACK_IMPORTED_MODULE_6_claygl_src_FrameBuffer__[\"a\" /* default */]({\n        depthBuffer: false\n    });\n\n    this._normalDistribution = null;\n\n    this._totalSamples = 256;\n    this._samplePerFrame = 4;\n\n    this._ssrPass.material.define('fragment', 'SAMPLE_PER_FRAME', this._samplePerFrame);\n    this._ssrPass.material.define('fragment', 'TOTAL_SAMPLES', this._totalSamples);\n\n    this._downScale = 1;\n}\n\nSSRPass.prototype.setAmbientCubemap = function (specularCubemap, brdfLookup, specularIntensity) {\n    this._ssrPass.material.set('specularCubemap', specularCubemap);\n    this._ssrPass.material.set('brdfLookup', brdfLookup);\n    this._ssrPass.material.set('specularIntensity', specularIntensity);\n\n    var enableSpecularMap = specularCubemap && specularIntensity;\n    this._ssrPass.material[enableSpecularMap ? 'enableTexture' : 'disableTexture']('specularCubemap');\n};\n\nSSRPass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n    var width = renderer.getWidth();\n    var height = renderer.getHeight();\n    var ssrTexture = this._ssrTexture;\n    var texture2 = this._texture2;\n    var texture3 = this._texture3;\n    ssrTexture.width = this._prevTexture.width = this._currentTexture.width = width / this._downScale;\n    ssrTexture.height = this._prevTexture.height = this._currentTexture.height = height / this._downScale;\n\n    texture2.width = texture3.width = width;\n    texture2.height = texture3.height = height;\n\n    var frameBuffer = this._frameBuffer;\n\n    var ssrPass = this._ssrPass;\n    var blurPass1 = this._blurPass1;\n    var blurPass2 = this._blurPass2;\n    var blendPass = this._blendPass;\n\n    var toViewSpace = new __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__[\"a\" /* default */]();\n    var toWorldSpace = new __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__[\"a\" /* default */]();\n    __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__[\"a\" /* default */].transpose(toViewSpace, camera.worldTransform);\n    __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_Matrix4__[\"a\" /* default */].transpose(toWorldSpace, camera.viewMatrix);\n\n    ssrPass.setUniform('sourceTexture', sourceTexture);\n    ssrPass.setUniform('projection', camera.projectionMatrix.array);\n    ssrPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n    ssrPass.setUniform('toViewSpace', toViewSpace.array);\n    ssrPass.setUniform('toWorldSpace', toWorldSpace.array);\n    ssrPass.setUniform('nearZ', camera.near);\n\n    var percent = frame / this._totalSamples * this._samplePerFrame;\n    ssrPass.setUniform('jitterOffset', percent);\n    ssrPass.setUniform('sampleOffset', frame * this._samplePerFrame);\n    // ssrPass.setUniform('lambertNormals', this._diffuseSampleNormals[frame % this._totalSamples]);\n\n    blurPass1.setUniform('textureSize', [ssrTexture.width, ssrTexture.height]);\n    blurPass2.setUniform('textureSize', [width, height]);\n    blurPass2.setUniform('sourceTexture', sourceTexture);\n\n    blurPass1.setUniform('projection', camera.projectionMatrix.array);\n    blurPass2.setUniform('projection', camera.projectionMatrix.array);\n\n    frameBuffer.attach(ssrTexture);\n    frameBuffer.bind(renderer);\n    ssrPass.render(renderer);\n\n    if (this._physicallyCorrect) {\n        frameBuffer.attach(this._currentTexture);\n        blendPass.setUniform('texture1', this._prevTexture);\n        blendPass.setUniform('texture2', ssrTexture);\n        blendPass.material.set({\n            'weight1': frame >= 1 ? 0.95 : 0,\n            'weight2': frame >= 1 ? 0.05 : 1\n            // weight1: frame >= 1 ? 1 : 0,\n            // weight2: 1\n        });\n        blendPass.render(renderer);\n    }\n\n    frameBuffer.attach(texture2);\n    blurPass1.setUniform('texture', this._physicallyCorrect ? this._currentTexture : ssrTexture);\n    blurPass1.render(renderer);\n\n    frameBuffer.attach(texture3);\n    blurPass2.setUniform('texture', texture2);\n    blurPass2.render(renderer);\n    frameBuffer.unbind(renderer);\n\n    if (this._physicallyCorrect) {\n        var tmp = this._prevTexture;\n        this._prevTexture = this._currentTexture;\n        this._currentTexture = tmp;\n    }\n};\n\nSSRPass.prototype.getTargetTexture = function () {\n    return this._texture3;\n};\n\nSSRPass.prototype.setParameter = function (name, val) {\n    if (name === 'maxIteration') {\n        this._ssrPass.material.define('fragment', 'MAX_ITERATION', val);\n    }\n    else {\n        this._ssrPass.setUniform(name, val);\n    }\n};\n\nSSRPass.prototype.setPhysicallyCorrect = function (isPhysicallyCorrect) {\n    if (isPhysicallyCorrect) {\n        if (!this._normalDistribution) {\n            this._normalDistribution = __WEBPACK_IMPORTED_MODULE_8_claygl_src_util_cubemap__[\"a\" /* default */].generateNormalDistribution(64, this._totalSamples);\n        }\n        this._ssrPass.material.define('fragment', 'PHYSICALLY_CORRECT');\n        this._ssrPass.material.set('normalDistribution', this._normalDistribution);\n        this._ssrPass.material.set('normalDistributionSize', [64, this._totalSamples]);\n    }\n    else {\n        this._ssrPass.material.undefine('fragment', 'PHYSICALLY_CORRECT');\n    }\n\n    this._physicallyCorrect = isPhysicallyCorrect;\n};\n\nSSRPass.prototype.setSSAOTexture = function (texture) {\n    var blendPass = this._blurPass2;\n    if (texture) {\n        blendPass.material.enableTexture('ssaoTex');\n        blendPass.material.set('ssaoTex', texture);\n    }\n    else {\n        blendPass.material.disableTexture('ssaoTex');\n    }\n};\n\nSSRPass.prototype.isFinished = function (frame) {\n    if (this._physicallyCorrect) {\n        return frame > (this._totalSamples / this._samplePerFrame);\n    }\n    else {\n        return true;\n    }\n};\n\nSSRPass.prototype.dispose = function (renderer) {\n    this._ssrTexture.dispose(renderer);\n    this._texture2.dispose(renderer);\n    this._texture3.dispose(renderer);\n    this._prevTexture.dispose(renderer);\n    this._currentTexture.dispose(renderer);\n    this._frameBuffer.dispose(renderer);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (SSRPass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///122\n");

/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"#define SAMPLE_NUMBER 1024\\n#define PI 3.14159265358979\\nuniform sampler2D normalDistribution;\\nuniform vec2 viewportSize : [512, 256];\\nconst vec3 N = vec3(0.0, 0.0, 1.0);\\nconst float fSampleNumber = float(SAMPLE_NUMBER);\\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\\n vec3 tangentX = normalize(cross(N, upVector));\\n vec3 tangentZ = cross(N, tangentX);\\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\\n}\\nfloat G_Smith(float roughness, float NoV, float NoL) {\\n float k = roughness * roughness / 2.0;\\n float G1V = NoV / (NoV * (1.0 - k) + k);\\n float G1L = NoL / (NoL * (1.0 - k) + k);\\n return G1L * G1V;\\n}\\nvoid main() {\\n vec2 uv = gl_FragCoord.xy / viewportSize;\\n float NoV = uv.x;\\n float roughness = uv.y;\\n vec3 V;\\n V.x = sqrt(1.0 - NoV * NoV);\\n V.y = 0.0;\\n V.z = NoV;\\n float A = 0.0;\\n float B = 0.0;\\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\\n vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\\n vec3 L = reflect(-V, H);\\n float NoL = clamp(L.z, 0.0, 1.0);\\n float NoH = clamp(H.z, 0.0, 1.0);\\n float VoH = clamp(dot(V, H), 0.0, 1.0);\\n if (NoL > 0.0) {\\n float G = G_Smith(roughness, NoV, NoL);\\n float G_Vis = G * VoH / (NoH * NoV);\\n float Fc = pow(1.0 - VoH, 5.0);\\n A += (1.0 - Fc) * G_Vis;\\n B += Fc * G_Vis;\\n }\\n }\\n gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\\n}\\n\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3V0aWwvc2hhZGVyL2ludGVncmF0ZUJSREYuZ2xzbC5qcz8wNWY2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTQU1QTEVfTlVNQkVSIDEwMjRcXG4jZGVmaW5lIFBJIDMuMTQxNTkyNjUzNTg5NzlcXG51bmlmb3JtIHNhbXBsZXIyRCBub3JtYWxEaXN0cmlidXRpb247XFxudW5pZm9ybSB2ZWMyIHZpZXdwb3J0U2l6ZSA6IFs1MTIsIDI1Nl07XFxuY29uc3QgdmVjMyBOID0gdmVjMygwLjAsIDAuMCwgMS4wKTtcXG5jb25zdCBmbG9hdCBmU2FtcGxlTnVtYmVyID0gZmxvYXQoU0FNUExFX05VTUJFUik7XFxudmVjMyBpbXBvcnRhbmNlU2FtcGxlTm9ybWFsKGZsb2F0IGksIGZsb2F0IHJvdWdobmVzcywgdmVjMyBOKSB7XFxuIHZlYzMgSCA9IHRleHR1cmUyRChub3JtYWxEaXN0cmlidXRpb24sIHZlYzIocm91Z2huZXNzLCBpKSkucmdiO1xcbiB2ZWMzIHVwVmVjdG9yID0gYWJzKE4ueSkgPiAwLjk5OSA/IHZlYzMoMS4wLCAwLjAsIDAuMCkgOiB2ZWMzKDAuMCwgMS4wLCAwLjApO1xcbiB2ZWMzIHRhbmdlbnRYID0gbm9ybWFsaXplKGNyb3NzKE4sIHVwVmVjdG9yKSk7XFxuIHZlYzMgdGFuZ2VudFogPSBjcm9zcyhOLCB0YW5nZW50WCk7XFxuIHJldHVybiBub3JtYWxpemUodGFuZ2VudFggKiBILnggKyBOICogSC55ICsgdGFuZ2VudFogKiBILnopO1xcbn1cXG5mbG9hdCBHX1NtaXRoKGZsb2F0IHJvdWdobmVzcywgZmxvYXQgTm9WLCBmbG9hdCBOb0wpIHtcXG4gZmxvYXQgayA9IHJvdWdobmVzcyAqIHJvdWdobmVzcyAvIDIuMDtcXG4gZmxvYXQgRzFWID0gTm9WIC8gKE5vViAqICgxLjAgLSBrKSArIGspO1xcbiBmbG9hdCBHMUwgPSBOb0wgLyAoTm9MICogKDEuMCAtIGspICsgayk7XFxuIHJldHVybiBHMUwgKiBHMVY7XFxufVxcbnZvaWQgbWFpbigpIHtcXG4gdmVjMiB1diA9IGdsX0ZyYWdDb29yZC54eSAvIHZpZXdwb3J0U2l6ZTtcXG4gZmxvYXQgTm9WID0gdXYueDtcXG4gZmxvYXQgcm91Z2huZXNzID0gdXYueTtcXG4gdmVjMyBWO1xcbiBWLnggPSBzcXJ0KDEuMCAtIE5vViAqIE5vVik7XFxuIFYueSA9IDAuMDtcXG4gVi56ID0gTm9WO1xcbiBmbG9hdCBBID0gMC4wO1xcbiBmbG9hdCBCID0gMC4wO1xcbiBmb3IgKGludCBpID0gMDsgaSA8IFNBTVBMRV9OVU1CRVI7IGkrKykge1xcbiB2ZWMzIEggPSBpbXBvcnRhbmNlU2FtcGxlTm9ybWFsKGZsb2F0KGkpIC8gZlNhbXBsZU51bWJlciwgcm91Z2huZXNzLCBOKTtcXG4gdmVjMyBMID0gcmVmbGVjdCgtViwgSCk7XFxuIGZsb2F0IE5vTCA9IGNsYW1wKEwueiwgMC4wLCAxLjApO1xcbiBmbG9hdCBOb0ggPSBjbGFtcChILnosIDAuMCwgMS4wKTtcXG4gZmxvYXQgVm9IID0gY2xhbXAoZG90KFYsIEgpLCAwLjAsIDEuMCk7XFxuIGlmIChOb0wgPiAwLjApIHtcXG4gZmxvYXQgRyA9IEdfU21pdGgocm91Z2huZXNzLCBOb1YsIE5vTCk7XFxuIGZsb2F0IEdfVmlzID0gRyAqIFZvSCAvIChOb0ggKiBOb1YpO1xcbiBmbG9hdCBGYyA9IHBvdygxLjAgLSBWb0gsIDUuMCk7XFxuIEEgKz0gKDEuMCAtIEZjKSAqIEdfVmlzO1xcbiBCICs9IEZjICogR19WaXM7XFxuIH1cXG4gfVxcbiBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZlYzIoQSwgQikgLyBmU2FtcGxlTnVtYmVyLCAwLjAsIDEuMCk7XFxufVxcblwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvdXRpbC9zaGFkZXIvaW50ZWdyYXRlQlJERi5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///123\n");

/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"#define SHADER_NAME prefilter\\n#define SAMPLE_NUMBER 1024\\n#define PI 3.14159265358979\\nuniform mat4 viewInverse : VIEWINVERSE;\\nuniform samplerCube environmentMap;\\nuniform sampler2D normalDistribution;\\nuniform float roughness : 0.5;\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_WorldPosition;\\n@import clay.util.rgbm\\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\\n vec3 tangentX = normalize(cross(N, upVector));\\n vec3 tangentZ = cross(N, tangentX);\\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\\n}\\nvoid main() {\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(v_WorldPosition - eyePos);\\n vec3 N = V;\\n vec3 prefilteredColor = vec3(0.0);\\n float totalWeight = 0.0;\\n float fMaxSampleNumber = float(SAMPLE_NUMBER);\\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\\n vec3 H = importanceSampleNormal(float(i) / fMaxSampleNumber, roughness, N);\\n vec3 L = reflect(-V, H);\\n float NoL = clamp(dot(N, L), 0.0, 1.0);\\n if (NoL > 0.0) {\\n prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\\n totalWeight += NoL;\\n }\\n }\\n gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\\n}\\n\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3V0aWwvc2hhZGVyL3ByZWZpbHRlci5nbHNsLmpzPzg5NTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjZGVmaW5lIFNIQURFUl9OQU1FIHByZWZpbHRlclxcbiNkZWZpbmUgU0FNUExFX05VTUJFUiAxMDI0XFxuI2RlZmluZSBQSSAzLjE0MTU5MjY1MzU4OTc5XFxudW5pZm9ybSBtYXQ0IHZpZXdJbnZlcnNlIDogVklFV0lOVkVSU0U7XFxudW5pZm9ybSBzYW1wbGVyQ3ViZSBlbnZpcm9ubWVudE1hcDtcXG51bmlmb3JtIHNhbXBsZXIyRCBub3JtYWxEaXN0cmlidXRpb247XFxudW5pZm9ybSBmbG9hdCByb3VnaG5lc3MgOiAwLjU7XFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxudmFyeWluZyB2ZWMzIHZfV29ybGRQb3NpdGlvbjtcXG5AaW1wb3J0IGNsYXkudXRpbC5yZ2JtXFxudmVjMyBpbXBvcnRhbmNlU2FtcGxlTm9ybWFsKGZsb2F0IGksIGZsb2F0IHJvdWdobmVzcywgdmVjMyBOKSB7XFxuIHZlYzMgSCA9IHRleHR1cmUyRChub3JtYWxEaXN0cmlidXRpb24sIHZlYzIocm91Z2huZXNzLCBpKSkucmdiO1xcbiB2ZWMzIHVwVmVjdG9yID0gYWJzKE4ueSkgPiAwLjk5OSA/IHZlYzMoMS4wLCAwLjAsIDAuMCkgOiB2ZWMzKDAuMCwgMS4wLCAwLjApO1xcbiB2ZWMzIHRhbmdlbnRYID0gbm9ybWFsaXplKGNyb3NzKE4sIHVwVmVjdG9yKSk7XFxuIHZlYzMgdGFuZ2VudFogPSBjcm9zcyhOLCB0YW5nZW50WCk7XFxuIHJldHVybiBub3JtYWxpemUodGFuZ2VudFggKiBILnggKyBOICogSC55ICsgdGFuZ2VudFogKiBILnopO1xcbn1cXG52b2lkIG1haW4oKSB7XFxuIHZlYzMgZXllUG9zID0gdmlld0ludmVyc2VbM10ueHl6O1xcbiB2ZWMzIFYgPSBub3JtYWxpemUodl9Xb3JsZFBvc2l0aW9uIC0gZXllUG9zKTtcXG4gdmVjMyBOID0gVjtcXG4gdmVjMyBwcmVmaWx0ZXJlZENvbG9yID0gdmVjMygwLjApO1xcbiBmbG9hdCB0b3RhbFdlaWdodCA9IDAuMDtcXG4gZmxvYXQgZk1heFNhbXBsZU51bWJlciA9IGZsb2F0KFNBTVBMRV9OVU1CRVIpO1xcbiBmb3IgKGludCBpID0gMDsgaSA8IFNBTVBMRV9OVU1CRVI7IGkrKykge1xcbiB2ZWMzIEggPSBpbXBvcnRhbmNlU2FtcGxlTm9ybWFsKGZsb2F0KGkpIC8gZk1heFNhbXBsZU51bWJlciwgcm91Z2huZXNzLCBOKTtcXG4gdmVjMyBMID0gcmVmbGVjdCgtViwgSCk7XFxuIGZsb2F0IE5vTCA9IGNsYW1wKGRvdChOLCBMKSwgMC4wLCAxLjApO1xcbiBpZiAoTm9MID4gMC4wKSB7XFxuIHByZWZpbHRlcmVkQ29sb3IgKz0gZGVjb2RlSERSKHRleHR1cmVDdWJlKGVudmlyb25tZW50TWFwLCBMKSkucmdiICogTm9MO1xcbiB0b3RhbFdlaWdodCArPSBOb0w7XFxuIH1cXG4gfVxcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIodmVjNChwcmVmaWx0ZXJlZENvbG9yIC8gdG90YWxXZWlnaHQsIDEuMCkpO1xcbn1cXG5cIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3V0aWwvc2hhZGVyL3ByZWZpbHRlci5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///124\n");

/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export ecgl.ssr.main\\n\\n#define SHADER_NAME SSR\\n#define MAX_ITERATION 20;\\n#define SAMPLE_PER_FRAME 5;\\n#define TOTAL_SAMPLES 128;\\n\\nuniform sampler2D sourceTexture;\\nuniform sampler2D gBufferTexture1;\\nuniform sampler2D gBufferTexture2;\\nuniform sampler2D gBufferTexture3;\\nuniform samplerCube specularCubemap;\\nuniform sampler2D brdfLookup;\\nuniform float specularIntensity: 1;\\n\\nuniform mat4 projection;\\nuniform mat4 projectionInv;\\nuniform mat4 toViewSpace;\\nuniform mat4 toWorldSpace;\\n\\nuniform float maxRayDistance: 200;\\n\\nuniform float pixelStride: 16;\\nuniform float pixelStrideZCutoff: 50; \\nuniform float screenEdgeFadeStart: 0.9; \\nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \\nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 1;\\n\\nuniform float nearZ;\\nuniform vec2 viewportSize : VIEWPORT_SIZE;\\n\\nuniform float jitterOffset: 0;\\n\\nvarying vec2 v_Texcoord;\\n\\n#ifdef DEPTH_DECODE\\n@import clay.util.decode_float\\n#endif\\n\\n#ifdef PHYSICALLY_CORRECT\\nuniform sampler2D normalDistribution;\\nuniform float sampleOffset: 0;\\nuniform vec2 normalDistributionSize;\\n\\nvec3 transformNormal(vec3 H, vec3 N) {\\n vec3 upVector = N.y > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\\n vec3 tangentX = normalize(cross(N, upVector));\\n vec3 tangentZ = cross(N, tangentX);\\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\\n}\\nvec3 importanceSampleNormalGGX(float i, float roughness, vec3 N) {\\n float p = fract((i + sampleOffset) / float(TOTAL_SAMPLES));\\n vec3 H = texture2D(normalDistribution,vec2(roughness, p)).rgb;\\n return transformNormal(H, N);\\n}\\nfloat G_Smith(float g, float ndv, float ndl) {\\n float roughness = 1.0 - g;\\n float k = roughness * roughness / 2.0;\\n float G1V = ndv / (ndv * (1.0 - k) + k);\\n float G1L = ndl / (ndl * (1.0 - k) + k);\\n return G1L * G1V;\\n}\\nvec3 F_Schlick(float ndv, vec3 spec) {\\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\\n}\\n#endif\\n\\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\\n{\\n vec4 depthTexel = texture2D(depthTexture, uv);\\n return depthTexel.r * 2.0 - 1.0;\\n}\\n\\nfloat linearDepth(float depth)\\n{\\n if (projection[3][3] == 0.0) {\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n }\\n else {\\n return (depth - projection[3][2]) / projection[2][2];\\n }\\n}\\n\\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\\n{\\n if (rayZFar > rayZNear)\\n {\\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\\n }\\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\\n}\\n\\n\\nbool traceScreenSpaceRay(\\n vec3 rayOrigin, vec3 rayDir, float jitter,\\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\\n)\\n{\\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\\n\\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\\n\\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\\n vec4 H1 = projection * vec4(rayEnd, 1.0);\\n\\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\\n\\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\\n\\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\\n\\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\\n vec2 delta = P1 - P0;\\n\\n bool permute = false;\\n if (abs(delta.x) < abs(delta.y)) {\\n permute = true;\\n delta = delta.yx;\\n P0 = P0.yx;\\n P1 = P1.yx;\\n }\\n float stepDir = sign(delta.x);\\n float invdx = stepDir / delta.x;\\n\\n vec3 dQ = (Q1 - Q0) * invdx;\\n float dk = (k1 - k0) * invdx;\\n\\n vec2 dP = vec2(stepDir, delta.y * invdx);\\n\\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\\n float pixStride = 1.0 + strideScaler * pixelStride;\\n\\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\\n\\n vec4 pqk = vec4(P0, Q0.z, k0);\\n vec4 dPQK = vec4(dP, dQ.z, dk);\\n\\n pqk += dPQK * jitter;\\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\\n float rayZNear;\\n\\n bool intersect = false;\\n\\n vec2 texelSize = 1.0 / viewportSize;\\n\\n iterationCount = 0.0;\\n\\n for (int i = 0; i < MAX_ITERATION; i++)\\n {\\n pqk += dPQK;\\n\\n rayZNear = rayZFar;\\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\\n\\n hitPixel = permute ? pqk.yx : pqk.xy;\\n hitPixel *= texelSize;\\n\\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\\n\\n iterationCount += 1.0;\\n\\n dPQK *= 1.2;\\n\\n if (intersect) {\\n break;\\n }\\n }\\n\\n Q0.xy += dQ.xy * iterationCount;\\n Q0.z = pqk.z;\\n hitPoint = Q0 / pqk.w;\\n\\n return intersect;\\n}\\n\\nfloat calculateAlpha(\\n float iterationCount, float reflectivity,\\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\\n)\\n{\\n float alpha = clamp(reflectivity, 0.0, 1.0);\\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\\n\\n float _eyeFadeStart = eyeFadeStart;\\n float _eyeFadeEnd = eyeFadeEnd;\\n if (_eyeFadeStart > _eyeFadeEnd) {\\n float tmp = _eyeFadeEnd;\\n _eyeFadeEnd = _eyeFadeStart;\\n _eyeFadeStart = tmp;\\n }\\n\\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\\n\\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\\n\\n return alpha;\\n}\\n\\n@import clay.util.rand\\n\\n@import clay.util.rgbm\\n\\nvoid main()\\n{\\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\\n\\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\\n discard;\\n }\\n\\n float g = normalAndGloss.a;\\n#if !defined(PHYSICALLY_CORRECT)\\n if (g <= minGlossiness) {\\n discard;\\n }\\n#endif\\n\\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\\n\\n vec3 N = normalize(normalAndGloss.rgb * 2.0 - 1.0);\\n N = normalize((toViewSpace * vec4(N, 0.0)).xyz);\\n\\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\\n vec4 pos = projectionInv * projectedPos;\\n vec3 rayOrigin = pos.xyz / pos.w;\\n vec3 V = -normalize(rayOrigin);\\n\\n float ndv = clamp(dot(N, V), 0.0, 1.0);\\n float iterationCount;\\n float jitter = rand(fract(v_Texcoord + jitterOffset));\\n\\n vec4 albedoMetalness = texture2D(gBufferTexture3, v_Texcoord);\\n vec3 albedo = albedoMetalness.rgb;\\n float m = albedoMetalness.a;\\n vec3 diffuseColor = albedo * (1.0 - m);\\n vec3 spec = mix(vec3(0.04), albedo, m);\\n\\n#ifdef PHYSICALLY_CORRECT\\n vec4 color = vec4(vec3(0.0), 1.0);\\n\\n float jitter2 = rand(fract(v_Texcoord)) * float(TOTAL_SAMPLES);\\n\\n for (int i = 0; i < SAMPLE_PER_FRAME; i++) {\\n vec3 H = importanceSampleNormalGGX(float(i) + jitter2, 1.0 - g, N);\\n vec3 rayDir = normalize(reflect(-V, H));\\n#else\\n vec3 rayDir = normalize(reflect(-V, N));\\n#endif\\n vec2 hitPixel;\\n vec3 hitPoint;\\n\\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\\n\\n float dist = distance(rayOrigin, hitPoint);\\n\\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\\n hitNormal = normalize((toViewSpace * vec4(hitNormal, 0.0)).xyz);\\n#ifdef PHYSICALLY_CORRECT\\n float ndl = clamp(dot(N, rayDir), 0.0, 1.0);\\n float vdh = clamp(dot(V, H), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n vec3 litTexel = vec3(0.0);\\n if (dot(hitNormal, rayDir) < 0.0 && intersect) {\\n litTexel = texture2D(sourceTexture, hitPixel).rgb;\\n litTexel *= pow(clamp(1.0 - dist / 200.0, 0.0, 1.0), 3.0);\\n\\n }\\n else {\\n #ifdef SPECULARCUBEMAP_ENABLED\\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\\n litTexel = RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, 0.0), 8.12).rgb * specularIntensity;\\n#endif\\n }\\n color.rgb += ndl * litTexel * (\\n F_Schlick(ndl, spec) * G_Smith(g, ndv, ndl) * vdh / (ndh * ndv + 0.001)\\n );\\n }\\n color.rgb /= float(SAMPLE_PER_FRAME);\\n#else\\n #if !defined(SPECULARCUBEMAP_ENABLED)\\n if (dot(hitNormal, rayDir) >= 0.0) {\\n discard;\\n }\\n if (!intersect) {\\n discard;\\n }\\n#endif\\n float alpha = clamp(calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir), 0.0, 1.0);\\n vec4 color = texture2D(sourceTexture, hitPixel);\\n color.rgb *= alpha;\\n\\n#ifdef SPECULARCUBEMAP_ENABLED\\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\\n alpha = alpha * (intersect ? 1.0 : 0.0);\\n float bias = (1.0 - g) * 5.0;\\n vec2 brdfParam2 = texture2D(brdfLookup, vec2(1.0 - g, ndv)).xy;\\n color.rgb += (1.0 - alpha)\\n * RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, bias), 8.12).rgb\\n * (spec * brdfParam2.x + brdfParam2.y)\\n * specularIntensity;\\n#endif\\n\\n#endif\\n\\n gl_FragColor = encodeHDR(color);\\n}\\n@end\\n\\n@export ecgl.ssr.blur\\n\\nuniform sampler2D texture;\\nuniform sampler2D gBufferTexture1;\\nuniform sampler2D gBufferTexture2;\\nuniform mat4 projection;\\nuniform float depthRange : 0.05;\\n\\nvarying vec2 v_Texcoord;\\n\\nuniform vec2 textureSize;\\nuniform float blurSize : 1.0;\\n\\n#ifdef BLEND\\n #ifdef SSAOTEX_ENABLED\\nuniform sampler2D ssaoTex;\\n #endif\\nuniform sampler2D sourceTexture;\\n#endif\\n\\nfloat getLinearDepth(vec2 coord)\\n{\\n float depth = texture2D(gBufferTexture2, coord).r * 2.0 - 1.0;\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n}\\n\\n@import clay.util.rgbm\\n\\n\\nvoid main()\\n{\\n @import clay.compositor.kernel.gaussian_9\\n\\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\\n float g = centerNTexel.a;\\n float maxBlurSize = clamp(1.0 - g, 0.0, 1.0) * blurSize;\\n#ifdef VERTICAL\\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\\n#else\\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\\n#endif\\n\\n vec2 coord = v_Texcoord;\\n\\n vec4 sum = vec4(0.0);\\n float weightAll = 0.0;\\n\\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\\n float cD = getLinearDepth(v_Texcoord);\\n for (int i = 0; i < 9; i++) {\\n vec2 coord = clamp((float(i) - 4.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\\n float w = gaussianKernel[i]\\n * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\\n float d = getLinearDepth(coord);\\n w *= (1.0 - smoothstep(abs(cD - d) / depthRange, 0.0, 1.0));\\n\\n weightAll += w;\\n sum += decodeHDR(texture2D(texture, coord)) * w;\\n }\\n\\n#ifdef BLEND\\n float aoFactor = 1.0;\\n #ifdef SSAOTEX_ENABLED\\n aoFactor = texture2D(ssaoTex, v_Texcoord).r;\\n #endif\\n gl_FragColor = encodeHDR(\\n sum / weightAll * aoFactor + decodeHDR(texture2D(sourceTexture, v_Texcoord))\\n );\\n#else\\n gl_FragColor = encodeHDR(sum / weightAll);\\n#endif\\n}\\n\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///125\n");

/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// Based on https://bl.ocks.org/mbostock/19168c663618b707158\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ([\n0.0, 0.0,\n-0.321585265978, -0.154972575841,\n0.458126042375, 0.188473391593,\n0.842080129861, 0.527766490688,\n0.147304551086, -0.659453822776,\n-0.331943915203, -0.940619700594,\n0.0479226680259, 0.54812163202,\n0.701581552186, -0.709825561388,\n-0.295436780218, 0.940589268233,\n-0.901489676764, 0.237713156085,\n0.973570876096, -0.109899459384,\n-0.866792314779, -0.451805525005,\n0.330975007087, 0.800048655954,\n-0.344275183665, 0.381779221166,\n-0.386139432542, -0.437418421534,\n-0.576478634965, -0.0148463392551,\n0.385798197415, -0.262426961053,\n-0.666302061145, 0.682427250835,\n-0.628010632582, -0.732836215494,\n0.10163141741, -0.987658134403,\n0.711995289051, -0.320024291314,\n0.0296005138058, 0.950296523438,\n0.0130612307608, -0.351024443122,\n-0.879596633704, -0.10478487883,\n0.435712737232, 0.504254490347,\n0.779203817497, 0.206477676721,\n0.388264289969, -0.896736162545,\n-0.153106280781, -0.629203242522,\n-0.245517550697, 0.657969239148,\n0.126830499058, 0.26862328493,\n-0.634888119007, -0.302301223431,\n0.617074219636, 0.779817204925\n]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9ncmFwaGljL3BvaXNzb25LZXJuZWwuanM/MDI3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlZCBvbiBodHRwczovL2JsLm9ja3Mub3JnL21ib3N0b2NrLzE5MTY4YzY2MzYxOGI3MDcxNThcblxuZXhwb3J0IGRlZmF1bHQgW1xuMC4wLCAwLjAsXG4tMC4zMjE1ODUyNjU5NzgsIC0wLjE1NDk3MjU3NTg0MSxcbjAuNDU4MTI2MDQyMzc1LCAwLjE4ODQ3MzM5MTU5MyxcbjAuODQyMDgwMTI5ODYxLCAwLjUyNzc2NjQ5MDY4OCxcbjAuMTQ3MzA0NTUxMDg2LCAtMC42NTk0NTM4MjI3NzYsXG4tMC4zMzE5NDM5MTUyMDMsIC0wLjk0MDYxOTcwMDU5NCxcbjAuMDQ3OTIyNjY4MDI1OSwgMC41NDgxMjE2MzIwMixcbjAuNzAxNTgxNTUyMTg2LCAtMC43MDk4MjU1NjEzODgsXG4tMC4yOTU0MzY3ODAyMTgsIDAuOTQwNTg5MjY4MjMzLFxuLTAuOTAxNDg5Njc2NzY0LCAwLjIzNzcxMzE1NjA4NSxcbjAuOTczNTcwODc2MDk2LCAtMC4xMDk4OTk0NTkzODQsXG4tMC44NjY3OTIzMTQ3NzksIC0wLjQ1MTgwNTUyNTAwNSxcbjAuMzMwOTc1MDA3MDg3LCAwLjgwMDA0ODY1NTk1NCxcbi0wLjM0NDI3NTE4MzY2NSwgMC4zODE3NzkyMjExNjYsXG4tMC4zODYxMzk0MzI1NDIsIC0wLjQzNzQxODQyMTUzNCxcbi0wLjU3NjQ3ODYzNDk2NSwgLTAuMDE0ODQ2MzM5MjU1MSxcbjAuMzg1Nzk4MTk3NDE1LCAtMC4yNjI0MjY5NjEwNTMsXG4tMC42NjYzMDIwNjExNDUsIDAuNjgyNDI3MjUwODM1LFxuLTAuNjI4MDEwNjMyNTgyLCAtMC43MzI4MzYyMTU0OTQsXG4wLjEwMTYzMTQxNzQxLCAtMC45ODc2NTgxMzQ0MDMsXG4wLjcxMTk5NTI4OTA1MSwgLTAuMzIwMDI0MjkxMzE0LFxuMC4wMjk2MDA1MTM4MDU4LCAwLjk1MDI5NjUyMzQzOCxcbjAuMDEzMDYxMjMwNzYwOCwgLTAuMzUxMDI0NDQzMTIyLFxuLTAuODc5NTk2NjMzNzA0LCAtMC4xMDQ3ODQ4Nzg4MyxcbjAuNDM1NzEyNzM3MjMyLCAwLjUwNDI1NDQ5MDM0NyxcbjAuNzc5MjAzODE3NDk3LCAwLjIwNjQ3NzY3NjcyMSxcbjAuMzg4MjY0Mjg5OTY5LCAtMC44OTY3MzYxNjI1NDUsXG4tMC4xNTMxMDYyODA3ODEsIC0wLjYyOTIwMzI0MjUyMixcbi0wLjI0NTUxNzU1MDY5NywgMC42NTc5NjkyMzkxNDgsXG4wLjEyNjgzMDQ5OTA1OCwgMC4yNjg2MjMyODQ5Myxcbi0wLjYzNDg4ODExOTAwNywgLTAuMzAyMzAxMjIzNDMxLFxuMC42MTcwNzQyMTk2MzYsIDAuNzc5ODE3MjA0OTI1XG5dO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL3NyYy9ncmFwaGljL3BvaXNzb25LZXJuZWwuanNcbi8vIG1vZHVsZSBpZCA9IDEyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///126\n");

/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__math_Matrix4__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__glmatrix_mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shader_source_deferred_gbuffer_glsl_js__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shader_source_deferred_chunk_glsl_js__ = __webpack_require__(128);\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].import(__WEBPACK_IMPORTED_MODULE_9__shader_source_deferred_gbuffer_glsl_js__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].import(__WEBPACK_IMPORTED_MODULE_10__shader_source_deferred_chunk_glsl_js__[\"a\" /* default */]);\n\nfunction createFillCanvas(color) {\n    var canvas = document.createElement('canvas');\n    canvas.width = canvas.height = 1;\n    var ctx = canvas.getContext('2d');\n    ctx.fillStyle = color || '#000';\n    ctx.fillRect(0, 0, 1, 1);\n\n    return canvas;\n}\n\n// TODO specularColor\n// TODO Performance improvement\nfunction getGetUniformHook1(defaultNormalMap, defaultRoughnessMap, defaultDiffuseMap) {\n\n    return function (renderable, gBufferMat, symbol) {\n        var standardMaterial = renderable.material;\n        if (symbol === 'doubleSided') {\n            return standardMaterial.isDefined('fragment', 'DOUBLE_SIDED');\n        }\n        else if (symbol === 'uvRepeat' || symbol === 'uvOffset' || symbol === 'alpha') {\n            return standardMaterial.get(symbol);\n        }\n        else if (symbol === 'normalMap') {\n            return standardMaterial.get(symbol) || defaultNormalMap;\n        }\n        else if (symbol === 'diffuseMap') {\n            return standardMaterial.get(symbol) || defaultDiffuseMap;\n        }\n        else if (symbol === 'alphaCutoff') {\n            // TODO DIFFUSEMAP_ALPHA_ALPHA\n            if (standardMaterial.isDefined('fragment', 'ALPHA_TEST')) {\n                var alphaCutoff = standardMaterial.get('alphaCutoff');\n                return alphaCutoff || 0;\n            }\n            return 0;\n        }\n        else {\n            var useRoughnessWorkflow = standardMaterial.isDefined('fragment', 'USE_ROUGHNESS');\n            var roughGlossMap = useRoughnessWorkflow ? standardMaterial.get('roughnessMap') : standardMaterial.get('glossinessMap');\n            switch (symbol) {\n                case 'glossiness':\n                    return useRoughnessWorkflow ? (1.0 - standardMaterial.get('roughness')) : standardMaterial.get('glossiness');\n                case 'roughGlossMap':\n                    return roughGlossMap;\n                case 'useRoughGlossMap':\n                    return !!roughGlossMap;\n                case 'useRoughness':\n                    return useRoughnessWorkflow;\n                case 'roughGlossChannel':\n                    return useRoughnessWorkflow\n                        ? standardMaterial.getDefine('fragment', 'ROUGHNESS_CHANNEL')\n                        : standardMaterial.getDefine('fragment', 'GLOSSINESS_CHANNEL');\n            }\n        }\n    };\n}\n\nfunction getGetUniformHook2(defaultDiffuseMap, defaultMetalnessMap) {\n    return function (renderable, gBufferMat, symbol) {\n        var standardMaterial = renderable.material;\n        switch (symbol) {\n            case 'color':\n            case 'uvRepeat':\n            case 'uvOffset':\n            case 'alpha':\n                return standardMaterial.get(symbol);\n            case 'metalness':\n                return standardMaterial.get('metalness') || 0;\n            case 'diffuseMap':\n                return standardMaterial.get(symbol) || defaultDiffuseMap;\n            case 'metalnessMap':\n                return standardMaterial.get(symbol) || defaultMetalnessMap;\n            case 'useMetalnessMap':\n                return !!standardMaterial.get('metalnessMap');\n            case 'linear':\n                return standardMaterial.isDefined('SRGB_DECODE');\n            case 'alphaCutoff':\n                // TODO DIFFUSEMAP_ALPHA_ALPHA\n                if (standardMaterial.isDefined('fragment', 'ALPHA_TEST')) {\n                    var alphaCutoff = standardMaterial.get('alphaCutoff');\n                    return alphaCutoff || 0.0;\n                }\n                return 0.0;\n        }\n    };\n}\n\n/**\n * GBuffer is provided for deferred rendering and SSAO, SSR pass.\n * It will do three passes rendering to four target textures. See\n * + {@link clay.deferred.GBuffer#getTargetTexture1}\n * + {@link clay.deferred.GBuffer#getTargetTexture2}\n * + {@link clay.deferred.GBuffer#getTargetTexture3}\n * + {@link clay.deferred.GBuffer#getTargetTexture4}\n * @constructor\n * @alias clay.deferred.GBuffer\n * @extends clay.core.Base\n */\nvar GBuffer = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n\n    var commonTextureOpts = {\n        minFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n        magFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n        wrapS: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].CLAMP_TO_EDGE,\n        wrapT: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].CLAMP_TO_EDGE,\n    };\n\n    return /** @lends clay.deferred.GBuffer# */ {\n\n        /**\n         * If enable gbuffer texture 1.\n         * @type {boolean}\n         */\n        enableTargetTexture1: true,\n\n        /**\n         * If enable gbuffer texture 2.\n         * @type {boolean}\n         */\n        enableTargetTexture2: true,\n\n        /**\n         * If enable gbuffer texture 3.\n         * @type {boolean}\n         */\n        enableTargetTexture3: true,\n\n        /**\n         * If enable gbuffer texture 4.\n         * @type {boolean}\n         */\n        enableTargetTexture4: false,\n\n        renderTransparent: false,\n\n        _gBufferRenderList: [],\n        // - R: normal.x\n        // - G: normal.y\n        // - B: normal.z\n        // - A: glossiness\n        _gBufferTex1: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */](Object.assign({\n            // PENDING\n            type: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].HALF_FLOAT\n        }, commonTextureOpts)),\n\n        // - R: depth\n        _gBufferTex2: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */](Object.assign({\n            // format: Texture.DEPTH_COMPONENT,\n            // type: Texture.UNSIGNED_INT\n\n            format: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].DEPTH_STENCIL,\n            type: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].UNSIGNED_INT_24_8_WEBGL\n        }, commonTextureOpts)),\n\n        // - R: albedo.r\n        // - G: albedo.g\n        // - B: albedo.b\n        // - A: metalness\n        _gBufferTex3: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */](commonTextureOpts),\n\n        _gBufferTex4: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */](Object.assign({\n            // FLOAT Texture has bug on iOS. is HALF_FLOAT enough?\n            type: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].HALF_FLOAT\n        }, commonTextureOpts)),\n\n        _defaultNormalMap: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */]({\n            image: createFillCanvas('#000')\n        }),\n        _defaultRoughnessMap: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */]({\n            image: createFillCanvas('#fff')\n        }),\n        _defaultMetalnessMap: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */]({\n            image: createFillCanvas('#fff')\n        }),\n        _defaultDiffuseMap: new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */]({\n            image: createFillCanvas('#fff')\n        }),\n\n        _frameBuffer: new __WEBPACK_IMPORTED_MODULE_4__FrameBuffer__[\"a\" /* default */](),\n\n        _gBufferMaterial1: new __WEBPACK_IMPORTED_MODULE_3__Material__[\"a\" /* default */]({\n            shader: new __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */](\n                __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source('clay.deferred.gbuffer.vertex'),\n                __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source('clay.deferred.gbuffer1.fragment')\n            ),\n            vertexDefines: {\n                FIRST_PASS: null\n            },\n            fragmentDefines: {\n                FIRST_PASS: null\n            }\n        }),\n        _gBufferMaterial2: new __WEBPACK_IMPORTED_MODULE_3__Material__[\"a\" /* default */]({\n            shader: new __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */](\n                __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source('clay.deferred.gbuffer.vertex'),\n                __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source('clay.deferred.gbuffer2.fragment')\n            ),\n            vertexDefines: {\n                SECOND_PASS: null\n            },\n            fragmentDefines: {\n                SECOND_PASS: null\n            }\n        }),\n        _gBufferMaterial3: new __WEBPACK_IMPORTED_MODULE_3__Material__[\"a\" /* default */]({\n            shader: new __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */](\n                __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source('clay.deferred.gbuffer.vertex'),\n                __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source('clay.deferred.gbuffer3.fragment')\n            ),\n            vertexDefines: {\n                THIRD_PASS: null\n            },\n            fragmentDefines: {\n                THIRD_PASS: null\n            }\n        }),\n\n        _debugPass: new __WEBPACK_IMPORTED_MODULE_6__compositor_Pass__[\"a\" /* default */]({\n            fragment: __WEBPACK_IMPORTED_MODULE_5__Shader__[\"a\" /* default */].source('clay.deferred.gbuffer.debug')\n        })\n    };\n}, /** @lends clay.deferred.GBuffer# */{\n\n    /**\n     * Set G Buffer size.\n     * @param {number} width\n     * @param {number} height\n     */\n    resize: function (width, height) {\n        if (this._gBufferTex1.width === width\n            && this._gBufferTex1.height === height\n        ) {\n            return;\n        }\n        this._gBufferTex1.width = width;\n        this._gBufferTex1.height = height;\n\n        this._gBufferTex2.width = width;\n        this._gBufferTex2.height = height;\n\n        this._gBufferTex3.width = width;\n        this._gBufferTex3.height = height;\n\n        this._gBufferTex4.width = width;\n        this._gBufferTex4.height = height;\n    },\n\n    // TODO is dpr needed?\n    setViewport: function (x, y, width, height, dpr) {\n        var viewport;\n        if (typeof x === 'object') {\n            viewport = x;\n        }\n        else {\n            viewport = {\n                x: x, y: y,\n                width: width, height: height,\n                devicePixelRatio: dpr || 1\n            };\n        }\n        this._frameBuffer.viewport = viewport;\n    },\n\n    getViewport: function () {\n        if (this._frameBuffer.viewport) {\n            return this._frameBuffer.viewport;\n        }\n        else {\n            return {\n                x: 0, y: 0,\n                width: this._gBufferTex1.width,\n                height: this._gBufferTex1.height,\n                devicePixelRatio: 1\n            };\n        }\n    },\n\n    /**\n     * Update GBuffer\n     * @param {clay.Renderer} renderer\n     * @param {clay.Scene} scene\n     * @param {clay.Camera} camera\n     * @param {Object} opts\n     */\n    update: function (renderer, scene, camera, opts) {\n        opts = opts || {};\n\n        var gl = renderer.gl;\n\n        var frameBuffer = this._frameBuffer;\n        var viewport = frameBuffer.viewport;\n\n        var renderList = scene.updateRenderList(camera, true);\n\n        var opaqueList = renderList.opaque;\n        var transparentList = renderList.transparent;\n\n        var offset = 0;\n        var gBufferRenderList = this._gBufferRenderList;\n        for (var i = 0; i < opaqueList.length; i++) {\n            if (!opaqueList[i].ignoreGBuffer) {\n                gBufferRenderList[offset++] = opaqueList[i];\n            }\n        }\n        if (this.renderTransparent) {\n            for (var i = 0; i < transparentList.length; i++) {\n                if (!transparentList[i].ignoreGBuffer) {\n                    gBufferRenderList[offset++] = transparentList[i];\n                }\n            }\n        }\n        gBufferRenderList.length = offset;\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.depthMask(true);\n        gl.colorMask(true, true, true, true);\n        gl.disable(gl.BLEND);\n\n        var enableTargetTexture1 = this.enableTargetTexture1;\n        var enableTargetTexture2 = this.enableTargetTexture2;\n        var enableTargetTexture3 = this.enableTargetTexture3;\n        var enableTargetTexture4 = this.enableTargetTexture4;\n        if (!enableTargetTexture1 && !enableTargetTexture3 && !enableTargetTexture4) {\n            console.warn('Can\\'t disable targetTexture1, targetTexture3, targetTexture4 both');\n            enableTargetTexture1 = true;\n        }\n\n        if (enableTargetTexture2) {\n            frameBuffer.attach(opts.targetTexture2 || this._gBufferTex2, renderer.gl.DEPTH_STENCIL_ATTACHMENT);\n        }\n\n        function clearViewport() {\n            if (viewport) {\n                var dpr = viewport.devicePixelRatio;\n                // use scissor to make sure only clear the viewport\n                gl.enable(gl.SCISSOR_TEST);\n                gl.scissor(viewport.x * dpr, viewport.y * dpr, viewport.width * dpr, viewport.height * dpr);\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            if (viewport) {\n                gl.disable(gl.SCISSOR_TEST);\n            }\n        }\n\n        function isMaterialChanged(renderable, prevRenderable) {\n            return renderable.material !== prevRenderable.material;\n        }\n\n        // PENDING, scene.boundingBoxLastFrame needs be updated if have shadow\n        renderer.bindSceneRendering(scene);\n        if (enableTargetTexture1) {\n            // Pass 1\n            frameBuffer.attach(opts.targetTexture1 || this._gBufferTex1);\n            frameBuffer.bind(renderer);\n\n            clearViewport();\n\n            var gBufferMaterial1 = this._gBufferMaterial1;\n            var passConfig = {\n                getMaterial: function () {\n                    return gBufferMaterial1;\n                },\n                getUniform: getGetUniformHook1(this._defaultNormalMap, this._defaultRoughnessMap, this._defaultDiffuseMap),\n                isMaterialChanged: isMaterialChanged,\n                sortCompare: renderer.opaqueSortCompare\n            };\n            // FIXME Use MRT if possible\n            renderer.renderPass(gBufferRenderList, camera, passConfig);\n\n        }\n        if (enableTargetTexture3) {\n\n            // Pass 2\n            frameBuffer.attach(opts.targetTexture3 || this._gBufferTex3);\n            frameBuffer.bind(renderer);\n\n            clearViewport();\n\n            var gBufferMaterial2 = this._gBufferMaterial2;\n            var passConfig = {\n                getMaterial: function () {\n                    return gBufferMaterial2;\n                },\n                getUniform: getGetUniformHook2(this._defaultDiffuseMap, this._defaultMetalnessMap),\n                isMaterialChanged: isMaterialChanged,\n                sortCompare: renderer.opaqueSortCompare\n            };\n            renderer.renderPass(gBufferRenderList, camera, passConfig);\n        }\n\n        if (enableTargetTexture4) {\n            frameBuffer.bind(renderer);\n            frameBuffer.attach(opts.targetTexture4 || this._gBufferTex4);\n\n            clearViewport();\n\n            // Remove jittering in temporal aa.\n            // PENDING. Better solution?\n            camera.update();\n\n            var gBufferMaterial3 = this._gBufferMaterial3;\n            var cameraViewProj = __WEBPACK_IMPORTED_MODULE_8__glmatrix_mat4__[\"a\" /* default */].create();\n            __WEBPACK_IMPORTED_MODULE_8__glmatrix_mat4__[\"a\" /* default */].multiply(cameraViewProj, camera.projectionMatrix.array, camera.viewMatrix.array);\n            var passConfig = {\n                getMaterial: function () {\n                    return gBufferMaterial3;\n                },\n                afterRender: function (renderer, renderable) {\n                    var isSkinnedMesh = renderable.isSkinnedMesh();\n                    if (isSkinnedMesh) {\n                        var skeleton = renderable.skeleton;\n                        var joints = renderable.joints;\n                        if (joints.length > renderer.getMaxJointNumber()) {\n                            var skinMatricesTexture = skeleton.getSubSkinMatricesTexture(renderable.__uid__, joints);\n                            var prevSkinMatricesTexture = renderable.__prevSkinMatricesTexture;\n                            if (!prevSkinMatricesTexture) {\n                                prevSkinMatricesTexture = renderable.__prevSkinMatricesTexture = new __WEBPACK_IMPORTED_MODULE_1__Texture2D__[\"a\" /* default */]({\n                                    type: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].FLOAT,\n                                    minFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n                                    magFilter: __WEBPACK_IMPORTED_MODULE_2__Texture__[\"a\" /* default */].NEAREST,\n                                    useMipmap: false,\n                                    flipY: false\n                                });\n                            }\n                            if (!prevSkinMatricesTexture.pixels\n                                || prevSkinMatricesTexture.pixels.length !== skinMatricesTexture.pixels.length\n                            ) {\n                                prevSkinMatricesTexture.pixels = new Float32Array(skinMatricesTexture.pixels);\n                            }\n                            else {\n                                for (var i = 0; i < skinMatricesTexture.pixels.length; i++) {\n                                    prevSkinMatricesTexture.pixels[i] = skinMatricesTexture.pixels[i];\n                                }\n                            }\n                            prevSkinMatricesTexture.width = skinMatricesTexture.width;\n                            prevSkinMatricesTexture.height = skinMatricesTexture.height;\n                        }\n                        else {\n                            var skinMatricesArray = skeleton.getSubSkinMatrices(renderable.__uid__, joints);\n                            if (!renderable.__prevSkinMatricesArray || renderable.__prevSkinMatricesArray.length !== skinMatricesArray.length) {\n                                renderable.__prevSkinMatricesArray = new Float32Array(skinMatricesArray.length);\n                            }\n                            renderable.__prevSkinMatricesArray.set(skinMatricesArray);\n                        }\n                    }\n                    renderable.__prevWorldViewProjection = renderable.__prevWorldViewProjection || __WEBPACK_IMPORTED_MODULE_8__glmatrix_mat4__[\"a\" /* default */].create();\n                    if (isSkinnedMesh) {\n                        // Ignore world transform of skinned mesh.\n                        __WEBPACK_IMPORTED_MODULE_8__glmatrix_mat4__[\"a\" /* default */].copy(renderable.__prevWorldViewProjection, cameraViewProj);\n                    }\n                    else {\n                        __WEBPACK_IMPORTED_MODULE_8__glmatrix_mat4__[\"a\" /* default */].multiply(renderable.__prevWorldViewProjection, cameraViewProj, renderable.worldTransform.array);\n                    }\n                },\n                getUniform: function (renderable, gBufferMat, symbol) {\n                    if (symbol === 'prevWorldViewProjection') {\n                        return renderable.__prevWorldViewProjection;\n                    }\n                    else if (symbol === 'prevSkinMatrix') {\n                        return renderable.__prevSkinMatricesArray;\n                    }\n                    else if (symbol === 'prevSkinMatricesTexture') {\n                        return renderable.__prevSkinMatricesTexture;\n                    }\n                    else if (symbol === 'firstRender') {\n                        return !renderable.__prevWorldViewProjection;\n                    }\n                    else {\n                        return gBufferMat.get(symbol);\n                    }\n                },\n                isMaterialChanged: function () {\n                    // Always update prevWorldViewProjection\n                    return true;\n                },\n                sortCompare: renderer.opaqueSortCompare\n            };\n\n            renderer.renderPass(gBufferRenderList, camera, passConfig);\n        }\n\n        renderer.bindSceneRendering(null);\n        frameBuffer.unbind(renderer);\n    },\n\n    /**\n     * Debug output of gBuffer. Use `type` parameter to choos the debug output type, which can be:\n     *\n     * + 'normal'\n     * + 'depth'\n     * + 'position'\n     * + 'glossiness'\n     * + 'metalness'\n     * + 'albedo'\n     * + 'velocity'\n     *\n     * @param {clay.Renderer} renderer\n     * @param {clay.Camera} camera\n     * @param {string} [type='normal']\n     */\n    renderDebug: function (renderer, camera, type, viewport) {\n        var debugTypes = {\n            normal: 0,\n            depth: 1,\n            position: 2,\n            glossiness: 3,\n            metalness: 4,\n            albedo: 5,\n            velocity: 6\n        };\n        if (debugTypes[type] == null) {\n            console.warn('Unkown type \"' + type + '\"');\n            // Default use normal\n            type = 'normal';\n        }\n\n        renderer.saveClear();\n        renderer.saveViewport();\n        renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT;\n\n        if (viewport) {\n            renderer.setViewport(viewport);\n        }\n        var viewProjectionInv = new __WEBPACK_IMPORTED_MODULE_7__math_Matrix4__[\"a\" /* default */]();\n        __WEBPACK_IMPORTED_MODULE_7__math_Matrix4__[\"a\" /* default */].multiply(viewProjectionInv, camera.worldTransform, camera.invProjectionMatrix);\n\n        var debugPass = this._debugPass;\n        debugPass.setUniform('viewportSize', [renderer.getWidth(), renderer.getHeight()]);\n        debugPass.setUniform('gBufferTexture1', this._gBufferTex1);\n        debugPass.setUniform('gBufferTexture2', this._gBufferTex2);\n        debugPass.setUniform('gBufferTexture3', this._gBufferTex3);\n        debugPass.setUniform('gBufferTexture4', this._gBufferTex4);\n        debugPass.setUniform('debug', debugTypes[type]);\n        debugPass.setUniform('viewProjectionInv', viewProjectionInv.array);\n        debugPass.render(renderer);\n\n        renderer.restoreViewport();\n        renderer.restoreClear();\n    },\n\n    /**\n     * Get first target texture.\n     * Channel storage:\n     * + R: normal.x * 0.5 + 0.5\n     * + G: normal.y * 0.5 + 0.5\n     * + B: normal.z * 0.5 + 0.5\n     * + A: glossiness\n     * @return {clay.Texture2D}\n     */\n    getTargetTexture1: function () {\n        return this._gBufferTex1;\n    },\n\n    /**\n     * Get second target texture.\n     * Channel storage:\n     * + R: depth\n     * @return {clay.Texture2D}\n     */\n    getTargetTexture2: function () {\n        return this._gBufferTex2;\n    },\n\n    /**\n     * Get third target texture.\n     * Channel storage:\n     * + R: albedo.r\n     * + G: albedo.g\n     * + B: albedo.b\n     * + A: metalness\n     * @return {clay.Texture2D}\n     */\n    getTargetTexture3: function () {\n        return this._gBufferTex3;\n    },\n\n    /**\n     * Get fourth target texture.\n     * Channel storage:\n     * + R: velocity.r\n     * + G: velocity.g\n     * @return {clay.Texture2D}\n     */\n    getTargetTexture4: function () {\n        return this._gBufferTex4;\n    },\n\n\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this._gBufferTex1.dispose(renderer);\n        this._gBufferTex2.dispose(renderer);\n        this._gBufferTex3.dispose(renderer);\n\n        this._defaultNormalMap.dispose(renderer);\n        this._defaultRoughnessMap.dispose(renderer);\n        this._defaultMetalnessMap.dispose(renderer);\n        this._defaultDiffuseMap.dispose(renderer);\n        this._frameBuffer.dispose(renderer);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GBuffer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///127\n");

/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export clay.deferred.chunk.light_head\\nuniform sampler2D gBufferTexture1;\\nuniform sampler2D gBufferTexture2;\\nuniform sampler2D gBufferTexture3;\\nuniform vec2 windowSize: WINDOW_SIZE;\\nuniform vec4 viewport: VIEWPORT;\\nuniform mat4 viewProjectionInv;\\n#ifdef DEPTH_ENCODED\\n@import clay.util.decode_float\\n#endif\\n@end\\n@export clay.deferred.chunk.gbuffer_read\\n vec2 uv = gl_FragCoord.xy / windowSize;\\n vec2 uv2 = (gl_FragCoord.xy - viewport.xy) / viewport.zw;\\n vec4 texel1 = texture2D(gBufferTexture1, uv);\\n vec4 texel3 = texture2D(gBufferTexture3, uv);\\n if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\\n discard;\\n }\\n float glossiness = texel1.a;\\n float metalness = texel3.a;\\n vec3 N = texel1.rgb * 2.0 - 1.0;\\n float z = texture2D(gBufferTexture2, uv).r * 2.0 - 1.0;\\n vec2 xy = uv2 * 2.0 - 1.0;\\n vec4 projectedPos = vec4(xy, z, 1.0);\\n vec4 p4 = viewProjectionInv * projectedPos;\\n vec3 position = p4.xyz / p4.w;\\n vec3 albedo = texel3.rgb;\\n vec3 diffuseColor = albedo * (1.0 - metalness);\\n vec3 specularColor = mix(vec3(0.04), albedo, metalness);\\n@end\\n@export clay.deferred.chunk.light_equation\\nfloat D_Phong(in float g, in float ndh) {\\n float a = pow(8192.0, g);\\n return (a + 2.0) / 8.0 * pow(ndh, a);\\n}\\nfloat D_GGX(in float g, in float ndh) {\\n float r = 1.0 - g;\\n float a = r * r;\\n float tmp = ndh * ndh * (a - 1.0) + 1.0;\\n return a / (3.1415926 * tmp * tmp);\\n}\\nvec3 F_Schlick(in float ndv, vec3 spec) {\\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\\n}\\nvec3 lightEquation(\\n in vec3 lightColor, in vec3 diffuseColor, in vec3 specularColor,\\n in float ndl, in float ndh, in float ndv, in float g\\n)\\n{\\n return ndl * lightColor\\n * (diffuseColor + D_Phong(g, ndh) * F_Schlick(ndv, specularColor));\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3NoYWRlci9zb3VyY2UvZGVmZXJyZWQvY2h1bmsuZ2xzbC5qcz81MmVkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBjbGF5LmRlZmVycmVkLmNodW5rLmxpZ2h0X2hlYWRcXG51bmlmb3JtIHNhbXBsZXIyRCBnQnVmZmVyVGV4dHVyZTE7XFxudW5pZm9ybSBzYW1wbGVyMkQgZ0J1ZmZlclRleHR1cmUyO1xcbnVuaWZvcm0gc2FtcGxlcjJEIGdCdWZmZXJUZXh0dXJlMztcXG51bmlmb3JtIHZlYzIgd2luZG93U2l6ZTogV0lORE9XX1NJWkU7XFxudW5pZm9ybSB2ZWM0IHZpZXdwb3J0OiBWSUVXUE9SVDtcXG51bmlmb3JtIG1hdDQgdmlld1Byb2plY3Rpb25JbnY7XFxuI2lmZGVmIERFUFRIX0VOQ09ERURcXG5AaW1wb3J0IGNsYXkudXRpbC5kZWNvZGVfZmxvYXRcXG4jZW5kaWZcXG5AZW5kXFxuQGV4cG9ydCBjbGF5LmRlZmVycmVkLmNodW5rLmdidWZmZXJfcmVhZFxcbiB2ZWMyIHV2ID0gZ2xfRnJhZ0Nvb3JkLnh5IC8gd2luZG93U2l6ZTtcXG4gdmVjMiB1djIgPSAoZ2xfRnJhZ0Nvb3JkLnh5IC0gdmlld3BvcnQueHkpIC8gdmlld3BvcnQuenc7XFxuIHZlYzQgdGV4ZWwxID0gdGV4dHVyZTJEKGdCdWZmZXJUZXh0dXJlMSwgdXYpO1xcbiB2ZWM0IHRleGVsMyA9IHRleHR1cmUyRChnQnVmZmVyVGV4dHVyZTMsIHV2KTtcXG4gaWYgKGRvdCh0ZXhlbDEucmdiLCB2ZWMzKDEuMCkpID09IDAuMCkge1xcbiBkaXNjYXJkO1xcbiB9XFxuIGZsb2F0IGdsb3NzaW5lc3MgPSB0ZXhlbDEuYTtcXG4gZmxvYXQgbWV0YWxuZXNzID0gdGV4ZWwzLmE7XFxuIHZlYzMgTiA9IHRleGVsMS5yZ2IgKiAyLjAgLSAxLjA7XFxuIGZsb2F0IHogPSB0ZXh0dXJlMkQoZ0J1ZmZlclRleHR1cmUyLCB1dikuciAqIDIuMCAtIDEuMDtcXG4gdmVjMiB4eSA9IHV2MiAqIDIuMCAtIDEuMDtcXG4gdmVjNCBwcm9qZWN0ZWRQb3MgPSB2ZWM0KHh5LCB6LCAxLjApO1xcbiB2ZWM0IHA0ID0gdmlld1Byb2plY3Rpb25JbnYgKiBwcm9qZWN0ZWRQb3M7XFxuIHZlYzMgcG9zaXRpb24gPSBwNC54eXogLyBwNC53O1xcbiB2ZWMzIGFsYmVkbyA9IHRleGVsMy5yZ2I7XFxuIHZlYzMgZGlmZnVzZUNvbG9yID0gYWxiZWRvICogKDEuMCAtIG1ldGFsbmVzcyk7XFxuIHZlYzMgc3BlY3VsYXJDb2xvciA9IG1peCh2ZWMzKDAuMDQpLCBhbGJlZG8sIG1ldGFsbmVzcyk7XFxuQGVuZFxcbkBleHBvcnQgY2xheS5kZWZlcnJlZC5jaHVuay5saWdodF9lcXVhdGlvblxcbmZsb2F0IERfUGhvbmcoaW4gZmxvYXQgZywgaW4gZmxvYXQgbmRoKSB7XFxuIGZsb2F0IGEgPSBwb3coODE5Mi4wLCBnKTtcXG4gcmV0dXJuIChhICsgMi4wKSAvIDguMCAqIHBvdyhuZGgsIGEpO1xcbn1cXG5mbG9hdCBEX0dHWChpbiBmbG9hdCBnLCBpbiBmbG9hdCBuZGgpIHtcXG4gZmxvYXQgciA9IDEuMCAtIGc7XFxuIGZsb2F0IGEgPSByICogcjtcXG4gZmxvYXQgdG1wID0gbmRoICogbmRoICogKGEgLSAxLjApICsgMS4wO1xcbiByZXR1cm4gYSAvICgzLjE0MTU5MjYgKiB0bXAgKiB0bXApO1xcbn1cXG52ZWMzIEZfU2NobGljayhpbiBmbG9hdCBuZHYsIHZlYzMgc3BlYykge1xcbiByZXR1cm4gc3BlYyArICgxLjAgLSBzcGVjKSAqIHBvdygxLjAgLSBuZHYsIDUuMCk7XFxufVxcbnZlYzMgbGlnaHRFcXVhdGlvbihcXG4gaW4gdmVjMyBsaWdodENvbG9yLCBpbiB2ZWMzIGRpZmZ1c2VDb2xvciwgaW4gdmVjMyBzcGVjdWxhckNvbG9yLFxcbiBpbiBmbG9hdCBuZGwsIGluIGZsb2F0IG5kaCwgaW4gZmxvYXQgbmR2LCBpbiBmbG9hdCBnXFxuKVxcbntcXG4gcmV0dXJuIG5kbCAqIGxpZ2h0Q29sb3JcXG4gKiAoZGlmZnVzZUNvbG9yICsgRF9QaG9uZyhnLCBuZGgpICogRl9TY2hsaWNrKG5kdiwgc3BlY3VsYXJDb2xvcikpO1xcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9zaGFkZXIvc291cmNlL2RlZmVycmVkL2NodW5rLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDEyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///128\n");

/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Light__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_cubemap__ = __webpack_require__(66);\n// https://docs.unrealengine.com/latest/INT/Engine/Rendering/LightingAndShadows/AmbientCubemap/\n\n\n\n/**\n * Ambient cubemap light provides specular parts of Image Based Lighting.\n * Which is a basic requirement for Physically Based Rendering\n * @constructor clay.light.AmbientCubemap\n * @extends clay.Light\n */\nvar AmbientCubemapLight = __WEBPACK_IMPORTED_MODULE_0__Light__[\"a\" /* default */].extend({\n\n    /**\n     * @type {clay.TextureCube}\n     * @memberOf clay.light.AmbientCubemap#\n     */\n    cubemap: null,\n\n    // TODO\n    // range: 100,\n\n    castShadow: false,\n\n    _normalDistribution: null,\n    _brdfLookup: null\n\n}, /** @lends clay.light.AmbientCubemap# */ {\n\n    type: 'AMBIENT_CUBEMAP_LIGHT',\n\n    /**\n     * Do prefitering the cubemap\n     * @param {clay.Renderer} renderer\n     * @param {number} [size=32]\n     */\n    prefilter: function (renderer, size) {\n        if (!renderer.getGLExtension('EXT_shader_texture_lod')) {\n            console.warn('Device not support textureCubeLodEXT');\n            return;\n        }\n        if (!this._brdfLookup) {\n            this._normalDistribution = __WEBPACK_IMPORTED_MODULE_1__util_cubemap__[\"a\" /* default */].generateNormalDistribution();\n            this._brdfLookup = __WEBPACK_IMPORTED_MODULE_1__util_cubemap__[\"a\" /* default */].integrateBRDF(renderer, this._normalDistribution);\n        }\n        var cubemap = this.cubemap;\n        if (cubemap.__prefiltered) {\n            return;\n        }\n\n        var result = __WEBPACK_IMPORTED_MODULE_1__util_cubemap__[\"a\" /* default */].prefilterEnvironmentMap(\n            renderer, cubemap, {\n                encodeRGBM: true,\n                width: size,\n                height: size\n            }, this._normalDistribution, this._brdfLookup\n        );\n        this.cubemap = result.environmentMap;\n        this.cubemap.__prefiltered = true;\n\n        cubemap.dispose(renderer);\n    },\n\n    getBRDFLookup: function () {\n        return this._brdfLookup;\n    },\n\n    uniformTemplates: {\n        ambientCubemapLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0]*intensity, color[1]*intensity, color[2]*intensity];\n            }\n        },\n\n        ambientCubemapLightCubemap: {\n            type: 't',\n            value: function (instance) {\n                return instance.cubemap;\n            }\n        },\n\n        ambientCubemapLightBRDFLookup: {\n            type: 't',\n            value: function (instance) {\n                return instance._brdfLookup;\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.AmbientCubemap}\n     * @memberOf clay.light.AmbientCubemap.prototype\n     */\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (AmbientCubemapLight);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2xpZ2h0L0FtYmllbnRDdWJlbWFwLmpzPzllMzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vbGF0ZXN0L0lOVC9FbmdpbmUvUmVuZGVyaW5nL0xpZ2h0aW5nQW5kU2hhZG93cy9BbWJpZW50Q3ViZW1hcC9cbmltcG9ydCBMaWdodCBmcm9tICcuLi9MaWdodCc7XG5pbXBvcnQgY3ViZW1hcFV0aWwgZnJvbSAnLi4vdXRpbC9jdWJlbWFwJztcblxuLyoqXG4gKiBBbWJpZW50IGN1YmVtYXAgbGlnaHQgcHJvdmlkZXMgc3BlY3VsYXIgcGFydHMgb2YgSW1hZ2UgQmFzZWQgTGlnaHRpbmcuXG4gKiBXaGljaCBpcyBhIGJhc2ljIHJlcXVpcmVtZW50IGZvciBQaHlzaWNhbGx5IEJhc2VkIFJlbmRlcmluZ1xuICogQGNvbnN0cnVjdG9yIGNsYXkubGlnaHQuQW1iaWVudEN1YmVtYXBcbiAqIEBleHRlbmRzIGNsYXkuTGlnaHRcbiAqL1xudmFyIEFtYmllbnRDdWJlbWFwTGlnaHQgPSBMaWdodC5leHRlbmQoe1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge2NsYXkuVGV4dHVyZUN1YmV9XG4gICAgICogQG1lbWJlck9mIGNsYXkubGlnaHQuQW1iaWVudEN1YmVtYXAjXG4gICAgICovXG4gICAgY3ViZW1hcDogbnVsbCxcblxuICAgIC8vIFRPRE9cbiAgICAvLyByYW5nZTogMTAwLFxuXG4gICAgY2FzdFNoYWRvdzogZmFsc2UsXG5cbiAgICBfbm9ybWFsRGlzdHJpYnV0aW9uOiBudWxsLFxuICAgIF9icmRmTG9va3VwOiBudWxsXG5cbn0sIC8qKiBAbGVuZHMgY2xheS5saWdodC5BbWJpZW50Q3ViZW1hcCMgKi8ge1xuXG4gICAgdHlwZTogJ0FNQklFTlRfQ1VCRU1BUF9MSUdIVCcsXG5cbiAgICAvKipcbiAgICAgKiBEbyBwcmVmaXRlcmluZyB0aGUgY3ViZW1hcFxuICAgICAqIEBwYXJhbSB7Y2xheS5SZW5kZXJlcn0gcmVuZGVyZXJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW3NpemU9MzJdXG4gICAgICovXG4gICAgcHJlZmlsdGVyOiBmdW5jdGlvbiAocmVuZGVyZXIsIHNpemUpIHtcbiAgICAgICAgaWYgKCFyZW5kZXJlci5nZXRHTEV4dGVuc2lvbignRVhUX3NoYWRlcl90ZXh0dXJlX2xvZCcpKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0RldmljZSBub3Qgc3VwcG9ydCB0ZXh0dXJlQ3ViZUxvZEVYVCcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5fYnJkZkxvb2t1cCkge1xuICAgICAgICAgICAgdGhpcy5fbm9ybWFsRGlzdHJpYnV0aW9uID0gY3ViZW1hcFV0aWwuZ2VuZXJhdGVOb3JtYWxEaXN0cmlidXRpb24oKTtcbiAgICAgICAgICAgIHRoaXMuX2JyZGZMb29rdXAgPSBjdWJlbWFwVXRpbC5pbnRlZ3JhdGVCUkRGKHJlbmRlcmVyLCB0aGlzLl9ub3JtYWxEaXN0cmlidXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjdWJlbWFwID0gdGhpcy5jdWJlbWFwO1xuICAgICAgICBpZiAoY3ViZW1hcC5fX3ByZWZpbHRlcmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVzdWx0ID0gY3ViZW1hcFV0aWwucHJlZmlsdGVyRW52aXJvbm1lbnRNYXAoXG4gICAgICAgICAgICByZW5kZXJlciwgY3ViZW1hcCwge1xuICAgICAgICAgICAgICAgIGVuY29kZVJHQk06IHRydWUsXG4gICAgICAgICAgICAgICAgd2lkdGg6IHNpemUsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBzaXplXG4gICAgICAgICAgICB9LCB0aGlzLl9ub3JtYWxEaXN0cmlidXRpb24sIHRoaXMuX2JyZGZMb29rdXBcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5jdWJlbWFwID0gcmVzdWx0LmVudmlyb25tZW50TWFwO1xuICAgICAgICB0aGlzLmN1YmVtYXAuX19wcmVmaWx0ZXJlZCA9IHRydWU7XG5cbiAgICAgICAgY3ViZW1hcC5kaXNwb3NlKHJlbmRlcmVyKTtcbiAgICB9LFxuXG4gICAgZ2V0QlJERkxvb2t1cDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYnJkZkxvb2t1cDtcbiAgICB9LFxuXG4gICAgdW5pZm9ybVRlbXBsYXRlczoge1xuICAgICAgICBhbWJpZW50Q3ViZW1hcExpZ2h0Q29sb3I6IHtcbiAgICAgICAgICAgIHR5cGU6ICczZicsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbG9yID0gaW5zdGFuY2UuY29sb3I7XG4gICAgICAgICAgICAgICAgdmFyIGludGVuc2l0eSA9IGluc3RhbmNlLmludGVuc2l0eTtcbiAgICAgICAgICAgICAgICByZXR1cm4gW2NvbG9yWzBdKmludGVuc2l0eSwgY29sb3JbMV0qaW50ZW5zaXR5LCBjb2xvclsyXSppbnRlbnNpdHldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGFtYmllbnRDdWJlbWFwTGlnaHRDdWJlbWFwOiB7XG4gICAgICAgICAgICB0eXBlOiAndCcsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGluc3RhbmNlLmN1YmVtYXA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgYW1iaWVudEN1YmVtYXBMaWdodEJSREZMb29rdXA6IHtcbiAgICAgICAgICAgIHR5cGU6ICd0JyxcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5zdGFuY2UuX2JyZGZMb29rdXA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQG5hbWUgY2xvbmVcbiAgICAgKiBAcmV0dXJuIHtjbGF5LmxpZ2h0LkFtYmllbnRDdWJlbWFwfVxuICAgICAqIEBtZW1iZXJPZiBjbGF5LmxpZ2h0LkFtYmllbnRDdWJlbWFwLnByb3RvdHlwZVxuICAgICAqL1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEFtYmllbnRDdWJlbWFwTGlnaHQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9saWdodC9BbWJpZW50Q3ViZW1hcC5qc1xuLy8gbW9kdWxlIGlkID0gMTI5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///129\n");

/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Light__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_vendor__ = __webpack_require__(5);\n\n\n\n/**\n * Spherical Harmonic Ambient Light\n * @constructor clay.light.AmbientSH\n * @extends clay.Light\n */\nvar AmbientSHLight = __WEBPACK_IMPORTED_MODULE_0__Light__[\"a\" /* default */].extend({\n\n    castShadow: false,\n\n    /**\n     * Spherical Harmonic Coefficients\n     * @type {Array.<number>}\n     * @memberOf clay.light.AmbientSH#\n     */\n    coefficients: [],\n\n}, function () {\n    this._coefficientsTmpArr = new __WEBPACK_IMPORTED_MODULE_1__core_vendor__[\"a\" /* default */].Float32Array(9 * 3);\n}, {\n\n    type: 'AMBIENT_SH_LIGHT',\n\n    uniformTemplates: {\n        ambientSHLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        },\n\n        ambientSHLightCoefficients: {\n            type: '3f',\n            value: function (instance) {\n                var coefficientsTmpArr = instance._coefficientsTmpArr;\n                for (var i = 0; i < instance.coefficients.length; i++) {\n                    coefficientsTmpArr[i] = instance.coefficients[i];\n                }\n                return coefficientsTmpArr;\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.Ambient}\n     * @memberOf clay.light.Ambient.prototype\n     */\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (AmbientSHLight);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2xpZ2h0L0FtYmllbnRTSC5qcz8yNjU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaWdodCBmcm9tICcuLi9MaWdodCc7XG5pbXBvcnQgdmVuZG9yIGZyb20gJy4uL2NvcmUvdmVuZG9yJztcblxuLyoqXG4gKiBTcGhlcmljYWwgSGFybW9uaWMgQW1iaWVudCBMaWdodFxuICogQGNvbnN0cnVjdG9yIGNsYXkubGlnaHQuQW1iaWVudFNIXG4gKiBAZXh0ZW5kcyBjbGF5LkxpZ2h0XG4gKi9cbnZhciBBbWJpZW50U0hMaWdodCA9IExpZ2h0LmV4dGVuZCh7XG5cbiAgICBjYXN0U2hhZG93OiBmYWxzZSxcblxuICAgIC8qKlxuICAgICAqIFNwaGVyaWNhbCBIYXJtb25pYyBDb2VmZmljaWVudHNcbiAgICAgKiBAdHlwZSB7QXJyYXkuPG51bWJlcj59XG4gICAgICogQG1lbWJlck9mIGNsYXkubGlnaHQuQW1iaWVudFNII1xuICAgICAqL1xuICAgIGNvZWZmaWNpZW50czogW10sXG5cbn0sIGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLl9jb2VmZmljaWVudHNUbXBBcnIgPSBuZXcgdmVuZG9yLkZsb2F0MzJBcnJheSg5ICogMyk7XG59LCB7XG5cbiAgICB0eXBlOiAnQU1CSUVOVF9TSF9MSUdIVCcsXG5cbiAgICB1bmlmb3JtVGVtcGxhdGVzOiB7XG4gICAgICAgIGFtYmllbnRTSExpZ2h0Q29sb3I6IHtcbiAgICAgICAgICAgIHR5cGU6ICczZicsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbG9yID0gaW5zdGFuY2UuY29sb3I7XG4gICAgICAgICAgICAgICAgdmFyIGludGVuc2l0eSA9IGluc3RhbmNlLmludGVuc2l0eTtcbiAgICAgICAgICAgICAgICByZXR1cm4gW2NvbG9yWzBdICogaW50ZW5zaXR5LCBjb2xvclsxXSAqIGludGVuc2l0eSwgY29sb3JbMl0gKiBpbnRlbnNpdHldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGFtYmllbnRTSExpZ2h0Q29lZmZpY2llbnRzOiB7XG4gICAgICAgICAgICB0eXBlOiAnM2YnLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgICAgICAgICAgIHZhciBjb2VmZmljaWVudHNUbXBBcnIgPSBpbnN0YW5jZS5fY29lZmZpY2llbnRzVG1wQXJyO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW5zdGFuY2UuY29lZmZpY2llbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvZWZmaWNpZW50c1RtcEFycltpXSA9IGluc3RhbmNlLmNvZWZmaWNpZW50c1tpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvZWZmaWNpZW50c1RtcEFycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAbmFtZSBjbG9uZVxuICAgICAqIEByZXR1cm4ge2NsYXkubGlnaHQuQW1iaWVudH1cbiAgICAgKiBAbWVtYmVyT2YgY2xheS5saWdodC5BbWJpZW50LnByb3RvdHlwZVxuICAgICAqL1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEFtYmllbnRTSExpZ2h0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvbGlnaHQvQW1iaWVudFNILmpzXG4vLyBtb2R1bGUgaWQgPSAxMzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///130\n");

/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__plugin_Skybox__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__plugin_Skydome__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__prePass_EnvironmentMap__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Scene__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shader_projectEnvMap_glsl_js__ = __webpack_require__(132);\n// Spherical Harmonic Helpers\n\n\n\n\n\n\n\n\n\n\nvar sh = {};\n\n\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// Project on gpu, but needs browser to support readPixels as Float32Array.\nfunction projectEnvironmentMapGPU(renderer, envMap) {\n    var shTexture = new __WEBPACK_IMPORTED_MODULE_2__Texture2D__[\"a\" /* default */]({\n        width: 9,\n        height: 1,\n        type: __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].FLOAT\n    });\n    var pass = new __WEBPACK_IMPORTED_MODULE_3__compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_10__shader_projectEnvMap_glsl_js__[\"a\" /* default */]\n    });\n    pass.material.define('fragment', 'TEXTURE_SIZE', envMap.width);\n    pass.setUniform('environmentMap', envMap);\n\n    var framebuffer = new __WEBPACK_IMPORTED_MODULE_1__FrameBuffer__[\"a\" /* default */]();\n    framebuffer.attach(shTexture);\n    pass.render(renderer, framebuffer);\n\n    framebuffer.bind(renderer);\n    // TODO Only chrome and firefox support Float32Array\n    var pixels = new __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].Float32Array(9 * 4);\n    renderer.gl.readPixels(0, 0, 9, 1, __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].RGBA, __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].FLOAT, pixels);\n\n    var coeff = new __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].Float32Array(9 * 3);\n    for (var i = 0; i < 9; i++) {\n        coeff[i * 3] = pixels[i * 4];\n        coeff[i * 3 + 1] = pixels[i * 4 + 1];\n        coeff[i * 3 + 2] = pixels[i * 4 + 2];\n    }\n    framebuffer.unbind(renderer);\n\n    framebuffer.dispose(renderer);\n    pass.dispose(renderer);\n    return coeff;\n}\n\nfunction harmonics(normal, index){\n    var x = normal[0];\n    var y = normal[1];\n    var z = normal[2];\n\n    if (index === 0) {\n        return 1.0;\n    }\n    else if (index === 1) {\n        return x;\n    }\n    else if (index === 2) {\n        return y;\n    }\n    else if (index === 3) {\n        return z;\n    }\n    else if (index === 4) {\n        return x * z;\n    }\n    else if (index === 5) {\n        return y * z;\n    }\n    else if (index === 6) {\n        return x * y;\n    }\n    else if (index === 7) {\n        return 3.0 * z * z - 1.0;\n    }\n    else {\n        return x * x - y * y;\n    }\n}\n\nvar normalTransform = {\n    px: [2, 1, 0, -1, -1, 1],\n    nx: [2, 1, 0, 1, -1, -1],\n    py: [0, 2, 1, 1, -1, -1],\n    ny: [0, 2, 1, 1, 1, 1],\n    pz: [0, 1, 2, -1, -1, -1],\n    nz: [0, 1, 2, 1, -1, 1]\n};\n\n// Project on cpu.\nfunction projectEnvironmentMapCPU(renderer, cubePixels, width, height) {\n    var coeff = new __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].Float32Array(9 * 3);\n    var normal = __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].create();\n    var texel = __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].create();\n    var fetchNormal = __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].create();\n    for (var m = 0; m < 9; m++) {\n        var result = __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].create();\n        for (var k = 0; k < targets.length; k++) {\n            var pixels = cubePixels[targets[k]];\n\n            var sideResult = __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].create();\n            var divider = 0;\n            var i = 0;\n            var transform = normalTransform[targets[k]];\n            for (var y = 0; y < height; y++) {\n                for (var x = 0; x < width; x++) {\n\n                    normal[0] = x / (width - 1.0) * 2.0 - 1.0;\n                    // TODO Flip y?\n                    normal[1] = y / (height - 1.0) * 2.0 - 1.0;\n                    normal[2] = -1.0;\n                    __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].normalize(normal, normal);\n\n                    fetchNormal[0] = normal[transform[0]] * transform[3];\n                    fetchNormal[1] = normal[transform[1]] * transform[4];\n                    fetchNormal[2] = normal[transform[2]] * transform[5];\n\n                    texel[0] = pixels[i++] / 255;\n                    texel[1] = pixels[i++] / 255;\n                    texel[2] = pixels[i++] / 255;\n                    // RGBM Decode\n                    var scale = pixels[i++] / 255 * 8.12;\n                    texel[0] *= scale;\n                    texel[1] *= scale;\n                    texel[2] *= scale;\n\n                    __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(sideResult, sideResult, texel, harmonics(fetchNormal, m) * -normal[2]);\n                    // -normal.z equals cos(theta) of Lambertian\n                    divider += -normal[2];\n                }\n            }\n            __WEBPACK_IMPORTED_MODULE_9__glmatrix_vec3__[\"a\" /* default */].scaleAndAdd(result, result, sideResult, 1 / divider);\n        }\n\n        coeff[m * 3] = result[0] / 6.0;\n        coeff[m * 3 + 1] = result[1] / 6.0;\n        coeff[m * 3 + 2] = result[2] / 6.0;\n    }\n    return coeff;\n}\n\n/**\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {Object} [textureOpts.lod]\n * @param  {boolean} [textureOpts.decodeRGBM]\n */\nsh.projectEnvironmentMap = function (renderer, envMap, opts) {\n\n    // TODO sRGB\n\n    opts = opts || {};\n    opts.lod = opts.lod || 0;\n\n    var skybox;\n    var dummyScene = new __WEBPACK_IMPORTED_MODULE_8__Scene__[\"a\" /* default */]();\n    var size = 64;\n    if (envMap.textureType === 'texture2D') {\n        skybox = new __WEBPACK_IMPORTED_MODULE_6__plugin_Skydome__[\"a\" /* default */]({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    else {\n        size = (envMap.image && envMap.image.px) ? envMap.image.px.width : envMap.width;\n        skybox = new __WEBPACK_IMPORTED_MODULE_5__plugin_Skybox__[\"a\" /* default */]({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    // Convert to rgbm\n    var width = Math.ceil(size / Math.pow(2, opts.lod));\n    var height = Math.ceil(size / Math.pow(2, opts.lod));\n    var rgbmTexture = new __WEBPACK_IMPORTED_MODULE_2__Texture2D__[\"a\" /* default */]({\n        width: width,\n        height: height\n    });\n    var framebuffer = new __WEBPACK_IMPORTED_MODULE_1__FrameBuffer__[\"a\" /* default */]();\n    skybox.material.define('fragment', 'RGBM_ENCODE');\n    if (opts.decodeRGBM) {\n        skybox.material.define('fragment', 'RGBM_DECODE');\n    }\n    skybox.material.set('lod', opts.lod);\n    var envMapPass = new __WEBPACK_IMPORTED_MODULE_7__prePass_EnvironmentMap__[\"a\" /* default */]({\n        texture: rgbmTexture\n    });\n    var cubePixels = {};\n    for (var i = 0; i < targets.length; i++) {\n        cubePixels[targets[i]] = new Uint8Array(width * height * 4);\n        var camera = envMapPass.getCamera(targets[i]);\n        camera.fov = 90;\n        framebuffer.attach(rgbmTexture);\n        framebuffer.bind(renderer);\n        renderer.render(dummyScene, camera);\n        renderer.gl.readPixels(\n            0, 0, width, height,\n            __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].RGBA, __WEBPACK_IMPORTED_MODULE_0__Texture__[\"a\" /* default */].UNSIGNED_BYTE, cubePixels[targets[i]]\n        );\n        framebuffer.unbind(renderer);\n    }\n\n    skybox.dispose(renderer);\n    framebuffer.dispose(renderer);\n    rgbmTexture.dispose(renderer);\n\n    return projectEnvironmentMapCPU(renderer, cubePixels, width, height);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (sh);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///131\n");

/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"uniform samplerCube environmentMap;\\nvarying vec2 v_Texcoord;\\n#define TEXTURE_SIZE 16\\nmat3 front = mat3(\\n 1.0, 0.0, 0.0,\\n 0.0, 1.0, 0.0,\\n 0.0, 0.0, 1.0\\n);\\nmat3 back = mat3(\\n -1.0, 0.0, 0.0,\\n 0.0, 1.0, 0.0,\\n 0.0, 0.0, -1.0\\n);\\nmat3 left = mat3(\\n 0.0, 0.0, -1.0,\\n 0.0, 1.0, 0.0,\\n 1.0, 0.0, 0.0\\n);\\nmat3 right = mat3(\\n 0.0, 0.0, 1.0,\\n 0.0, 1.0, 0.0,\\n -1.0, 0.0, 0.0\\n);\\nmat3 up = mat3(\\n 1.0, 0.0, 0.0,\\n 0.0, 0.0, 1.0,\\n 0.0, -1.0, 0.0\\n);\\nmat3 down = mat3(\\n 1.0, 0.0, 0.0,\\n 0.0, 0.0, -1.0,\\n 0.0, 1.0, 0.0\\n);\\nfloat harmonics(vec3 normal){\\n int index = int(gl_FragCoord.x);\\n float x = normal.x;\\n float y = normal.y;\\n float z = normal.z;\\n if(index==0){\\n return 1.0;\\n }\\n else if(index==1){\\n return x;\\n }\\n else if(index==2){\\n return y;\\n }\\n else if(index==3){\\n return z;\\n }\\n else if(index==4){\\n return x*z;\\n }\\n else if(index==5){\\n return y*z;\\n }\\n else if(index==6){\\n return x*y;\\n }\\n else if(index==7){\\n return 3.0*z*z - 1.0;\\n }\\n else{\\n return x*x - y*y;\\n }\\n}\\nvec3 sampleSide(mat3 rot)\\n{\\n vec3 result = vec3(0.0);\\n float divider = 0.0;\\n for (int i = 0; i < TEXTURE_SIZE * TEXTURE_SIZE; i++) {\\n float x = mod(float(i), float(TEXTURE_SIZE));\\n float y = float(i / TEXTURE_SIZE);\\n vec2 sidecoord = ((vec2(x, y) + vec2(0.5, 0.5)) / vec2(TEXTURE_SIZE)) * 2.0 - 1.0;\\n vec3 normal = normalize(vec3(sidecoord, -1.0));\\n vec3 fetchNormal = rot * normal;\\n vec3 texel = textureCube(environmentMap, fetchNormal).rgb;\\n result += harmonics(fetchNormal) * texel * -normal.z;\\n divider += -normal.z;\\n }\\n return result / divider;\\n}\\nvoid main()\\n{\\n vec3 result = (\\n sampleSide(front) +\\n sampleSide(back) +\\n sampleSide(left) +\\n sampleSide(right) +\\n sampleSide(up) +\\n sampleSide(down)\\n ) / 6.0;\\n gl_FragColor = vec4(result, 1.0);\\n}\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3V0aWwvc2hhZGVyL3Byb2plY3RFbnZNYXAuZ2xzbC5qcz9jY2JkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwidW5pZm9ybSBzYW1wbGVyQ3ViZSBlbnZpcm9ubWVudE1hcDtcXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG4jZGVmaW5lIFRFWFRVUkVfU0laRSAxNlxcbm1hdDMgZnJvbnQgPSBtYXQzKFxcbiAxLjAsIDAuMCwgMC4wLFxcbiAwLjAsIDEuMCwgMC4wLFxcbiAwLjAsIDAuMCwgMS4wXFxuKTtcXG5tYXQzIGJhY2sgPSBtYXQzKFxcbiAtMS4wLCAwLjAsIDAuMCxcXG4gMC4wLCAxLjAsIDAuMCxcXG4gMC4wLCAwLjAsIC0xLjBcXG4pO1xcbm1hdDMgbGVmdCA9IG1hdDMoXFxuIDAuMCwgMC4wLCAtMS4wLFxcbiAwLjAsIDEuMCwgMC4wLFxcbiAxLjAsIDAuMCwgMC4wXFxuKTtcXG5tYXQzIHJpZ2h0ID0gbWF0MyhcXG4gMC4wLCAwLjAsIDEuMCxcXG4gMC4wLCAxLjAsIDAuMCxcXG4gLTEuMCwgMC4wLCAwLjBcXG4pO1xcbm1hdDMgdXAgPSBtYXQzKFxcbiAxLjAsIDAuMCwgMC4wLFxcbiAwLjAsIDAuMCwgMS4wLFxcbiAwLjAsIC0xLjAsIDAuMFxcbik7XFxubWF0MyBkb3duID0gbWF0MyhcXG4gMS4wLCAwLjAsIDAuMCxcXG4gMC4wLCAwLjAsIC0xLjAsXFxuIDAuMCwgMS4wLCAwLjBcXG4pO1xcbmZsb2F0IGhhcm1vbmljcyh2ZWMzIG5vcm1hbCl7XFxuIGludCBpbmRleCA9IGludChnbF9GcmFnQ29vcmQueCk7XFxuIGZsb2F0IHggPSBub3JtYWwueDtcXG4gZmxvYXQgeSA9IG5vcm1hbC55O1xcbiBmbG9hdCB6ID0gbm9ybWFsLno7XFxuIGlmKGluZGV4PT0wKXtcXG4gcmV0dXJuIDEuMDtcXG4gfVxcbiBlbHNlIGlmKGluZGV4PT0xKXtcXG4gcmV0dXJuIHg7XFxuIH1cXG4gZWxzZSBpZihpbmRleD09Mil7XFxuIHJldHVybiB5O1xcbiB9XFxuIGVsc2UgaWYoaW5kZXg9PTMpe1xcbiByZXR1cm4gejtcXG4gfVxcbiBlbHNlIGlmKGluZGV4PT00KXtcXG4gcmV0dXJuIHgqejtcXG4gfVxcbiBlbHNlIGlmKGluZGV4PT01KXtcXG4gcmV0dXJuIHkqejtcXG4gfVxcbiBlbHNlIGlmKGluZGV4PT02KXtcXG4gcmV0dXJuIHgqeTtcXG4gfVxcbiBlbHNlIGlmKGluZGV4PT03KXtcXG4gcmV0dXJuIDMuMCp6KnogLSAxLjA7XFxuIH1cXG4gZWxzZXtcXG4gcmV0dXJuIHgqeCAtIHkqeTtcXG4gfVxcbn1cXG52ZWMzIHNhbXBsZVNpZGUobWF0MyByb3QpXFxue1xcbiB2ZWMzIHJlc3VsdCA9IHZlYzMoMC4wKTtcXG4gZmxvYXQgZGl2aWRlciA9IDAuMDtcXG4gZm9yIChpbnQgaSA9IDA7IGkgPCBURVhUVVJFX1NJWkUgKiBURVhUVVJFX1NJWkU7IGkrKykge1xcbiBmbG9hdCB4ID0gbW9kKGZsb2F0KGkpLCBmbG9hdChURVhUVVJFX1NJWkUpKTtcXG4gZmxvYXQgeSA9IGZsb2F0KGkgLyBURVhUVVJFX1NJWkUpO1xcbiB2ZWMyIHNpZGVjb29yZCA9ICgodmVjMih4LCB5KSArIHZlYzIoMC41LCAwLjUpKSAvIHZlYzIoVEVYVFVSRV9TSVpFKSkgKiAyLjAgLSAxLjA7XFxuIHZlYzMgbm9ybWFsID0gbm9ybWFsaXplKHZlYzMoc2lkZWNvb3JkLCAtMS4wKSk7XFxuIHZlYzMgZmV0Y2hOb3JtYWwgPSByb3QgKiBub3JtYWw7XFxuIHZlYzMgdGV4ZWwgPSB0ZXh0dXJlQ3ViZShlbnZpcm9ubWVudE1hcCwgZmV0Y2hOb3JtYWwpLnJnYjtcXG4gcmVzdWx0ICs9IGhhcm1vbmljcyhmZXRjaE5vcm1hbCkgKiB0ZXhlbCAqIC1ub3JtYWwuejtcXG4gZGl2aWRlciArPSAtbm9ybWFsLno7XFxuIH1cXG4gcmV0dXJuIHJlc3VsdCAvIGRpdmlkZXI7XFxufVxcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWMzIHJlc3VsdCA9IChcXG4gc2FtcGxlU2lkZShmcm9udCkgK1xcbiBzYW1wbGVTaWRlKGJhY2spICtcXG4gc2FtcGxlU2lkZShsZWZ0KSArXFxuIHNhbXBsZVNpZGUocmlnaHQpICtcXG4gc2FtcGxlU2lkZSh1cCkgK1xcbiBzYW1wbGVTaWRlKGRvd24pXFxuICkgLyA2LjA7XFxuIGdsX0ZyYWdDb2xvciA9IHZlYzQocmVzdWx0LCAxLjApO1xcbn1cIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3V0aWwvc2hhZGVyL3Byb2plY3RFbnZNYXAuZ2xzbC5qc1xuLy8gbW9kdWxlIGlkID0gMTMyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///132\n");

/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parse;\n/* unused harmony export lift */\n/* unused harmony export toHex */\n/* unused harmony export fastLerp */\n/* unused harmony export fastMapToColor */\n/* unused harmony export lerp */\n/* unused harmony export mapToColor */\n/* unused harmony export modifyHSL */\n/* unused harmony export modifyAlpha */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = stringify;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_LRU__ = __webpack_require__(68);\n\n\nvar kCSSColorTable = {\n    'transparent': [0, 0, 0, 0], 'aliceblue': [240, 248, 255, 1],\n    'antiquewhite': [250, 235, 215, 1], 'aqua': [0, 255, 255, 1],\n    'aquamarine': [127, 255, 212, 1], 'azure': [240, 255, 255, 1],\n    'beige': [245, 245, 220, 1], 'bisque': [255, 228, 196, 1],\n    'black': [0, 0, 0, 1], 'blanchedalmond': [255, 235, 205, 1],\n    'blue': [0, 0, 255, 1], 'blueviolet': [138, 43, 226, 1],\n    'brown': [165, 42, 42, 1], 'burlywood': [222, 184, 135, 1],\n    'cadetblue': [95, 158, 160, 1], 'chartreuse': [127, 255, 0, 1],\n    'chocolate': [210, 105, 30, 1], 'coral': [255, 127, 80, 1],\n    'cornflowerblue': [100, 149, 237, 1], 'cornsilk': [255, 248, 220, 1],\n    'crimson': [220, 20, 60, 1], 'cyan': [0, 255, 255, 1],\n    'darkblue': [0, 0, 139, 1], 'darkcyan': [0, 139, 139, 1],\n    'darkgoldenrod': [184, 134, 11, 1], 'darkgray': [169, 169, 169, 1],\n    'darkgreen': [0, 100, 0, 1], 'darkgrey': [169, 169, 169, 1],\n    'darkkhaki': [189, 183, 107, 1], 'darkmagenta': [139, 0, 139, 1],\n    'darkolivegreen': [85, 107, 47, 1], 'darkorange': [255, 140, 0, 1],\n    'darkorchid': [153, 50, 204, 1], 'darkred': [139, 0, 0, 1],\n    'darksalmon': [233, 150, 122, 1], 'darkseagreen': [143, 188, 143, 1],\n    'darkslateblue': [72, 61, 139, 1], 'darkslategray': [47, 79, 79, 1],\n    'darkslategrey': [47, 79, 79, 1], 'darkturquoise': [0, 206, 209, 1],\n    'darkviolet': [148, 0, 211, 1], 'deeppink': [255, 20, 147, 1],\n    'deepskyblue': [0, 191, 255, 1], 'dimgray': [105, 105, 105, 1],\n    'dimgrey': [105, 105, 105, 1], 'dodgerblue': [30, 144, 255, 1],\n    'firebrick': [178, 34, 34, 1], 'floralwhite': [255, 250, 240, 1],\n    'forestgreen': [34, 139, 34, 1], 'fuchsia': [255, 0, 255, 1],\n    'gainsboro': [220, 220, 220, 1], 'ghostwhite': [248, 248, 255, 1],\n    'gold': [255, 215, 0, 1], 'goldenrod': [218, 165, 32, 1],\n    'gray': [128, 128, 128, 1], 'green': [0, 128, 0, 1],\n    'greenyellow': [173, 255, 47, 1], 'grey': [128, 128, 128, 1],\n    'honeydew': [240, 255, 240, 1], 'hotpink': [255, 105, 180, 1],\n    'indianred': [205, 92, 92, 1], 'indigo': [75, 0, 130, 1],\n    'ivory': [255, 255, 240, 1], 'khaki': [240, 230, 140, 1],\n    'lavender': [230, 230, 250, 1], 'lavenderblush': [255, 240, 245, 1],\n    'lawngreen': [124, 252, 0, 1], 'lemonchiffon': [255, 250, 205, 1],\n    'lightblue': [173, 216, 230, 1], 'lightcoral': [240, 128, 128, 1],\n    'lightcyan': [224, 255, 255, 1], 'lightgoldenrodyellow': [250, 250, 210, 1],\n    'lightgray': [211, 211, 211, 1], 'lightgreen': [144, 238, 144, 1],\n    'lightgrey': [211, 211, 211, 1], 'lightpink': [255, 182, 193, 1],\n    'lightsalmon': [255, 160, 122, 1], 'lightseagreen': [32, 178, 170, 1],\n    'lightskyblue': [135, 206, 250, 1], 'lightslategray': [119, 136, 153, 1],\n    'lightslategrey': [119, 136, 153, 1], 'lightsteelblue': [176, 196, 222, 1],\n    'lightyellow': [255, 255, 224, 1], 'lime': [0, 255, 0, 1],\n    'limegreen': [50, 205, 50, 1], 'linen': [250, 240, 230, 1],\n    'magenta': [255, 0, 255, 1], 'maroon': [128, 0, 0, 1],\n    'mediumaquamarine': [102, 205, 170, 1], 'mediumblue': [0, 0, 205, 1],\n    'mediumorchid': [186, 85, 211, 1], 'mediumpurple': [147, 112, 219, 1],\n    'mediumseagreen': [60, 179, 113, 1], 'mediumslateblue': [123, 104, 238, 1],\n    'mediumspringgreen': [0, 250, 154, 1], 'mediumturquoise': [72, 209, 204, 1],\n    'mediumvioletred': [199, 21, 133, 1], 'midnightblue': [25, 25, 112, 1],\n    'mintcream': [245, 255, 250, 1], 'mistyrose': [255, 228, 225, 1],\n    'moccasin': [255, 228, 181, 1], 'navajowhite': [255, 222, 173, 1],\n    'navy': [0, 0, 128, 1], 'oldlace': [253, 245, 230, 1],\n    'olive': [128, 128, 0, 1], 'olivedrab': [107, 142, 35, 1],\n    'orange': [255, 165, 0, 1], 'orangered': [255, 69, 0, 1],\n    'orchid': [218, 112, 214, 1], 'palegoldenrod': [238, 232, 170, 1],\n    'palegreen': [152, 251, 152, 1], 'paleturquoise': [175, 238, 238, 1],\n    'palevioletred': [219, 112, 147, 1], 'papayawhip': [255, 239, 213, 1],\n    'peachpuff': [255, 218, 185, 1], 'peru': [205, 133, 63, 1],\n    'pink': [255, 192, 203, 1], 'plum': [221, 160, 221, 1],\n    'powderblue': [176, 224, 230, 1], 'purple': [128, 0, 128, 1],\n    'red': [255, 0, 0, 1], 'rosybrown': [188, 143, 143, 1],\n    'royalblue': [65, 105, 225, 1], 'saddlebrown': [139, 69, 19, 1],\n    'salmon': [250, 128, 114, 1], 'sandybrown': [244, 164, 96, 1],\n    'seagreen': [46, 139, 87, 1], 'seashell': [255, 245, 238, 1],\n    'sienna': [160, 82, 45, 1], 'silver': [192, 192, 192, 1],\n    'skyblue': [135, 206, 235, 1], 'slateblue': [106, 90, 205, 1],\n    'slategray': [112, 128, 144, 1], 'slategrey': [112, 128, 144, 1],\n    'snow': [255, 250, 250, 1], 'springgreen': [0, 255, 127, 1],\n    'steelblue': [70, 130, 180, 1], 'tan': [210, 180, 140, 1],\n    'teal': [0, 128, 128, 1], 'thistle': [216, 191, 216, 1],\n    'tomato': [255, 99, 71, 1], 'turquoise': [64, 224, 208, 1],\n    'violet': [238, 130, 238, 1], 'wheat': [245, 222, 179, 1],\n    'white': [255, 255, 255, 1], 'whitesmoke': [245, 245, 245, 1],\n    'yellow': [255, 255, 0, 1], 'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {  // Clamp to integer 0 .. 255.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {  // int or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssByte(parseFloat(str) / 100 * 255);\n    }\n    return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {  // float or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssFloat(parseFloat(str) / 100);\n    }\n    return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n    if (h < 0) {\n        h += 1;\n    }\n    else if (h > 1) {\n        h -= 1;\n    }\n\n    if (h * 6 < 1) {\n        return m1 + (m2 - m1) * h * 6;\n    }\n    if (h * 2 < 1) {\n        return m2;\n    }\n    if (h * 3 < 2) {\n        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    }\n    return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n    return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n    out[0] = r;\n    out[1] = g;\n    out[2] = b;\n    out[3] = a;\n    return out;\n}\nfunction copyRgba(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\nvar colorCache = new __WEBPACK_IMPORTED_MODULE_0__core_LRU__[\"a\" /* default */](20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n    // Reuse removed array\n    if (lastRemovedArr) {\n        copyRgba(lastRemovedArr, rgbaArr);\n    }\n    lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n}\n\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\nfunction parse(colorStr, rgbaArr) {\n    if (!colorStr) {\n        return;\n    }\n    rgbaArr = rgbaArr || [];\n\n    var cached = colorCache.get(colorStr);\n    if (cached) {\n        return copyRgba(rgbaArr, cached);\n    }\n\n    // colorStr may be not string\n    colorStr = colorStr + '';\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = colorStr.replace(/ /g, '').toLowerCase();\n\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable) {\n        copyRgba(rgbaArr, kCSSColorTable[str]);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n    }\n\n    // #abc and #abc123 syntax.\n    if (str.charAt(0) === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xfff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                (iv & 0xf) | ((iv & 0xf) << 4),\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n        else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xffffff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                (iv & 0xff0000) >> 16,\n                (iv & 0xff00) >> 8,\n                iv & 0xff,\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        return;\n    }\n    var op = str.indexOf('(');\n    var ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;  // To allow case fallthrough.\n        switch (fname) {\n            case 'rgba':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                alpha = parseCssFloat(params.pop()); // jshint ignore:line\n            // Fall through.\n            case 'rgb':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                setRgba(rgbaArr,\n                    parseCssInt(params[0]),\n                    parseCssInt(params[1]),\n                    parseCssInt(params[2]),\n                    alpha\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsla':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                params[3] = parseCssFloat(params[3]);\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsl':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            default:\n                return;\n        }\n    }\n\n    setRgba(rgbaArr, 0, 0, 0, 1);\n    return;\n}\n\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\nfunction hsla2rgba(hsla, rgba) {\n    var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n    // NOTE(deanm): According to the CSS spec s/l should only be\n    // percentages, but we don't bother and let float or percentage.\n    var s = parseCssFloat(hsla[1]);\n    var l = parseCssFloat(hsla[2]);\n    var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n    var m1 = l * 2 - m2;\n\n    rgba = rgba || [];\n    setRgba(rgba,\n        clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n        1\n    );\n\n    if (hsla.length === 4) {\n        rgba[3] = hsla[3];\n    }\n\n    return rgba;\n}\n\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\nfunction rgba2hsla(rgba) {\n    if (!rgba) {\n        return;\n    }\n\n    // RGB from 0 to 255\n    var R = rgba[0] / 255;\n    var G = rgba[1] / 255;\n    var B = rgba[2] / 255;\n\n    var vMin = Math.min(R, G, B); // Min. value of RGB\n    var vMax = Math.max(R, G, B); // Max. value of RGB\n    var delta = vMax - vMin; // Delta RGB value\n\n    var L = (vMax + vMin) / 2;\n    var H;\n    var S;\n    // HSL results from 0 to 1\n    if (delta === 0) {\n        H = 0;\n        S = 0;\n    }\n    else {\n        if (L < 0.5) {\n            S = delta / (vMax + vMin);\n        }\n        else {\n            S = delta / (2 - vMax - vMin);\n        }\n\n        var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n        var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n        var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n        if (R === vMax) {\n            H = deltaB - deltaG;\n        }\n        else if (G === vMax) {\n            H = (1 / 3) + deltaR - deltaB;\n        }\n        else if (B === vMax) {\n            H = (2 / 3) + deltaG - deltaR;\n        }\n\n        if (H < 0) {\n            H += 1;\n        }\n\n        if (H > 1) {\n            H -= 1;\n        }\n    }\n\n    var hsla = [H * 360, S, L];\n\n    if (rgba[3] != null) {\n        hsla.push(rgba[3]);\n    }\n\n    return hsla;\n}\n\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\nfunction lift(color, level) {\n    var colorArr = parse(color);\n    if (colorArr) {\n        for (var i = 0; i < 3; i++) {\n            if (level < 0) {\n                colorArr[i] = colorArr[i] * (1 - level) | 0;\n            }\n            else {\n                colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n            }\n            if (colorArr[i] > 255) {\n                colorArr[i] = 255;\n            }\n            else if (color[i] < 0) {\n                colorArr[i] = 0;\n            }\n        }\n        return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n    }\n}\n\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\nfunction toHex(color) {\n    var colorArr = parse(color);\n    if (colorArr) {\n        return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n    }\n}\n\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\nfunction fastLerp(normalizedValue, colors, out) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    out = out || [];\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = colors[leftIndex];\n    var rightColor = colors[rightIndex];\n    var dv = value - leftIndex;\n    out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n    out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n    out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n    out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n    return out;\n}\n\n/**\n * @deprecated\n */\nvar fastMapToColor = fastLerp;\n\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\nfunction lerp(normalizedValue, colors, fullOutput) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = parse(colors[leftIndex]);\n    var rightColor = parse(colors[rightIndex]);\n    var dv = value - leftIndex;\n\n    var color = stringify(\n        [\n            clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n            clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n            clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n            clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n        ],\n        'rgba'\n    );\n\n    return fullOutput\n        ? {\n            color: color,\n            leftIndex: leftIndex,\n            rightIndex: rightIndex,\n            value: value\n        }\n        : color;\n}\n\n/**\n * @deprecated\n */\nvar mapToColor = lerp;\n\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\nfunction modifyHSL(color, h, s, l) {\n    color = parse(color);\n\n    if (color) {\n        color = rgba2hsla(color);\n        h != null && (color[0] = clampCssAngle(h));\n        s != null && (color[1] = parseCssFloat(s));\n        l != null && (color[2] = parseCssFloat(l));\n\n        return stringify(hsla2rgba(color), 'rgba');\n    }\n}\n\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\nfunction modifyAlpha(color, alpha) {\n    color = parse(color);\n\n    if (color && alpha != null) {\n        color[3] = clampCssFloat(alpha);\n        return stringify(color, 'rgba');\n    }\n}\n\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\nfunction stringify(arrColor, type) {\n    if (!arrColor || !arrColor.length) {\n        return;\n    }\n    var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n    if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n        colorStr += ',' + arrColor[3];\n    }\n    return type + '(' + colorStr + ')';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///133\n");

/***/ }),
/* 134 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    'type' : 'compositor',\n    'nodes' : [\n        {\n            'name': 'source',\n            'type': 'texture',\n            'outputs': {\n                'color': {}\n            }\n        },\n        {\n            'name': 'source_half',\n            'shader': '#source(clay.compositor.downsample)',\n            'inputs': {\n                'texture': 'source'\n            },\n            'outputs': {\n                'color': {\n                    'parameters': {\n                        'width': 'expr(width * 1.0 / 2)',\n                        'height': 'expr(height * 1.0 / 2)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n            }\n        },\n\n\n        {\n            'name' : 'bright',\n            'shader' : '#source(clay.compositor.bright)',\n            'inputs' : {\n                'texture' : 'source_half'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 2)',\n                        'height' : 'expr(height * 1.0 / 2)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'threshold' : 2,\n                'scale': 4,\n                'textureSize': 'expr([width * 1.0 / 2, height / 2])'\n            }\n        },\n\n        {\n            'name': 'bright_downsample_4',\n            'shader' : '#source(clay.compositor.downsample)',\n            'inputs' : {\n                'texture' : 'bright'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 4)',\n                        'height' : 'expr(height * 1.0 / 4)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'textureSize': 'expr( [width * 1.0 / 2, height / 2] )'\n            }\n        },\n        {\n            'name': 'bright_downsample_8',\n            'shader' : '#source(clay.compositor.downsample)',\n            'inputs' : {\n                'texture' : 'bright_downsample_4'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 8)',\n                        'height' : 'expr(height * 1.0 / 8)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'textureSize': 'expr( [width * 1.0 / 4, height / 4] )'\n            }\n        },\n        {\n            'name': 'bright_downsample_16',\n            'shader' : '#source(clay.compositor.downsample)',\n            'inputs' : {\n                'texture' : 'bright_downsample_8'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 16)',\n                        'height' : 'expr(height * 1.0 / 16)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'textureSize': 'expr( [width * 1.0 / 8, height / 8] )'\n            }\n        },\n        {\n            'name': 'bright_downsample_32',\n            'shader' : '#source(clay.compositor.downsample)',\n            'inputs' : {\n                'texture' : 'bright_downsample_16'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 32)',\n                        'height' : 'expr(height * 1.0 / 32)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'textureSize': 'expr( [width * 1.0 / 16, height / 16] )'\n            }\n        },\n\n\n        {\n            'name' : 'bright_upsample_16_blur_h',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_downsample_32'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 16)',\n                        'height' : 'expr(height * 1.0 / 16)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 0.0,\n                'textureSize': 'expr( [width * 1.0 / 32, height / 32] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_16_blur_v',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_upsample_16_blur_h'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 16)',\n                        'height' : 'expr(height * 1.0 / 16)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 1.0,\n                'textureSize': 'expr( [width * 1.0 / 32, height * 1.0 / 32] )'\n            }\n        },\n\n\n\n        {\n            'name' : 'bright_upsample_8_blur_h',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_downsample_16'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 8)',\n                        'height' : 'expr(height * 1.0 / 8)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 0.0,\n                'textureSize': 'expr( [width * 1.0 / 16, height * 1.0 / 16] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_8_blur_v',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_upsample_8_blur_h'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 8)',\n                        'height' : 'expr(height * 1.0 / 8)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 1.0,\n                'textureSize': 'expr( [width * 1.0 / 16, height * 1.0 / 16] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_8_blend',\n            'shader' : '#source(clay.compositor.blend)',\n            'inputs' : {\n                'texture1' : 'bright_upsample_8_blur_v',\n                'texture2' : 'bright_upsample_16_blur_v'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 8)',\n                        'height' : 'expr(height * 1.0 / 8)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'weight1' : 0.3,\n                'weight2' : 0.7\n            }\n        },\n\n\n        {\n            'name' : 'bright_upsample_4_blur_h',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_downsample_8'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 4)',\n                        'height' : 'expr(height * 1.0 / 4)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 0.0,\n                'textureSize': 'expr( [width * 1.0 / 8, height * 1.0 / 8] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_4_blur_v',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_upsample_4_blur_h'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 4)',\n                        'height' : 'expr(height * 1.0 / 4)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 1.0,\n                'textureSize': 'expr( [width * 1.0 / 8, height * 1.0 / 8] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_4_blend',\n            'shader' : '#source(clay.compositor.blend)',\n            'inputs' : {\n                'texture1' : 'bright_upsample_4_blur_v',\n                'texture2' : 'bright_upsample_8_blend'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 4)',\n                        'height' : 'expr(height * 1.0 / 4)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'weight1' : 0.3,\n                'weight2' : 0.7\n            }\n        },\n\n\n\n\n\n        {\n            'name' : 'bright_upsample_2_blur_h',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_downsample_4'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 2)',\n                        'height' : 'expr(height * 1.0 / 2)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 0.0,\n                'textureSize': 'expr( [width * 1.0 / 4, height * 1.0 / 4] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_2_blur_v',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_upsample_2_blur_h'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 2)',\n                        'height' : 'expr(height * 1.0 / 2)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 1.0,\n                'textureSize': 'expr( [width * 1.0 / 4, height * 1.0 / 4] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_2_blend',\n            'shader' : '#source(clay.compositor.blend)',\n            'inputs' : {\n                'texture1' : 'bright_upsample_2_blur_v',\n                'texture2' : 'bright_upsample_4_blend'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0 / 2)',\n                        'height' : 'expr(height * 1.0 / 2)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'weight1' : 0.3,\n                'weight2' : 0.7\n            }\n        },\n\n\n\n        {\n            'name' : 'bright_upsample_full_blur_h',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0)',\n                        'height' : 'expr(height * 1.0)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 0.0,\n                'textureSize': 'expr( [width * 1.0 / 2, height * 1.0 / 2] )'\n            }\n        },\n        {\n            'name' : 'bright_upsample_full_blur_v',\n            'shader' : '#source(clay.compositor.gaussian_blur)',\n            'inputs' : {\n                'texture' : 'bright_upsample_full_blur_h'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0)',\n                        'height' : 'expr(height * 1.0)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'blurSize' : 1,\n                'blurDir': 1.0,\n                'textureSize': 'expr( [width * 1.0 / 2, height * 1.0 / 2] )'\n            }\n        },\n        {\n            'name' : 'bloom_composite',\n            'shader' : '#source(clay.compositor.blend)',\n            'inputs' : {\n                'texture1' : 'bright_upsample_full_blur_v',\n                'texture2' : 'bright_upsample_2_blend'\n            },\n            'outputs' : {\n                'color' : {\n                    'parameters' : {\n                        'width' : 'expr(width * 1.0)',\n                        'height' : 'expr(height * 1.0)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters' : {\n                'weight1' : 0.3,\n                'weight2' : 0.7\n            }\n        },\n\n\n        {\n            'name': 'coc',\n            'shader': '#source(ecgl.dof.coc)',\n            'outputs': {\n                'color': {\n                    'parameters': {\n                        'minFilter': 'NEAREST',\n                        'magFilter': 'NEAREST',\n                        'width': 'expr(width * 1.0)',\n                        'height': 'expr(height * 1.0)'\n                    }\n                }\n            },\n            'parameters': {\n                'focalDist': 50,\n                'focalRange': 30\n            }\n        },\n\n        {\n            'name': 'dof_far_blur',\n            'shader': '#source(ecgl.dof.diskBlur)',\n            'inputs': {\n                'texture': 'source',\n                'coc': 'coc'\n            },\n            'outputs': {\n                'color': {\n                    'parameters': {\n                        'width': 'expr(width * 1.0)',\n                        'height': 'expr(height * 1.0)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters': {\n                'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n            }\n        },\n        {\n            'name': 'dof_near_blur',\n            'shader': '#source(ecgl.dof.diskBlur)',\n            'inputs': {\n                'texture': 'source',\n                'coc': 'coc'\n            },\n            'outputs': {\n                'color': {\n                    'parameters': {\n                        'width': 'expr(width * 1.0)',\n                        'height': 'expr(height * 1.0)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            },\n            'parameters': {\n                'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n            },\n            'defines': {\n                'BLUR_NEARFIELD': null\n            }\n        },\n\n\n        {\n            'name': 'dof_coc_blur',\n            'shader': '#source(ecgl.dof.diskBlur)',\n            'inputs': {\n                'texture': 'coc'\n            },\n            'outputs': {\n                'color': {\n                    'parameters': {\n                        'minFilter': 'NEAREST',\n                        'magFilter': 'NEAREST',\n                        'width': 'expr(width * 1.0)',\n                        'height': 'expr(height * 1.0)'\n                    }\n                }\n            },\n            'parameters': {\n                'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n            },\n            'defines': {\n                'BLUR_COC': null\n            }\n        },\n\n        {\n            'name': 'dof_composite',\n            'shader': '#source(ecgl.dof.composite)',\n            'inputs': {\n                'original': 'source',\n                'blurred': 'dof_far_blur',\n                'nearfield': 'dof_near_blur',\n                'coc': 'coc',\n                'nearcoc': 'dof_coc_blur'\n            },\n            'outputs': {\n                'color': {\n                    'parameters': {\n                        'width': 'expr(width * 1.0)',\n                        'height': 'expr(height * 1.0)',\n                        'type': 'HALF_FLOAT'\n                    }\n                }\n            }\n        },\n        {\n            'name' : 'composite',\n            'shader' : '#source(clay.compositor.hdr.composite)',\n            'inputs' : {\n                'texture': 'source',\n                'bloom' : 'bloom_composite'\n            },\n            'defines': {\n                // Images are all premultiplied alpha before composite because of blending.\n                // 'PREMULTIPLY_ALPHA': null,\n                // 'DEBUG': 1\n            }\n        },\n        {\n            'name' : 'FXAA',\n            'shader' : '#source(clay.compositor.fxaa)',\n            'inputs' : {\n                'texture' : 'composite'\n            }\n        }\n    ]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///134\n");

/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export ecgl.dof.coc\\n\\nuniform sampler2D depth;\\n\\nuniform float zNear: 0.1;\\nuniform float zFar: 2000;\\n\\nuniform float focalDistance: 3;\\nuniform float focalRange: 1;\\nuniform float focalLength: 30;\\nuniform float fstop: 2.8;\\n\\nvarying vec2 v_Texcoord;\\n\\n@import clay.util.encode_float\\n\\nvoid main()\\n{\\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\\n\\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\\n\\n float aperture = focalLength / fstop;\\n\\n float coc;\\n\\n float uppper = focalDistance + focalRange;\\n float lower = focalDistance - focalRange;\\n if (dist <= uppper && dist >= lower) {\\n coc = 0.5;\\n }\\n else {\\n float focalAdjusted = dist > uppper ? uppper : lower;\\n\\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\\n\\n if (dist < lower) {\\n coc = -coc;\\n }\\n coc = coc * 0.5 + 0.5;\\n }\\n\\n gl_FragColor = encodeFloat(coc);\\n}\\n@end\\n\\n\\n@export ecgl.dof.composite\\n\\n#define DEBUG 0\\n\\nuniform sampler2D original;\\nuniform sampler2D blurred;\\nuniform sampler2D nearfield;\\nuniform sampler2D coc;\\nuniform sampler2D nearcoc;\\nvarying vec2 v_Texcoord;\\n\\n@import clay.util.rgbm\\n@import clay.util.float\\n\\nvoid main()\\n{\\n vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\\n vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\\n\\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\\n\\n fCoc = abs(fCoc * 2.0 - 1.0);\\n\\n float weight = smoothstep(0.0, 1.0, fCoc);\\n \\n#ifdef NEARFIELD_ENABLED\\n vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\\n\\n gl_FragColor = encodeHDR(\\n mix(\\n nearfieldColor, mix(originalColor, blurredColor, weight),\\n pow(1.0 - fNearCoc, 4.0)\\n )\\n );\\n#else\\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\\n#endif\\n\\n}\\n\\n@end\\n\\n\\n\\n@export ecgl.dof.diskBlur\\n\\n#define POISSON_KERNEL_SIZE 16;\\n\\nuniform sampler2D texture;\\nuniform sampler2D coc;\\nvarying vec2 v_Texcoord;\\n\\nuniform float blurRadius : 10.0;\\nuniform vec2 textureSize : [512.0, 512.0];\\n\\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\\n\\nuniform float percent;\\n\\nfloat nrand(const in vec2 n) {\\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\n@import clay.util.rgbm\\n@import clay.util.float\\n\\n\\nvoid main()\\n{\\n vec2 offset = blurRadius / textureSize;\\n\\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\\n float cosa = cos(rnd);\\n float sina = sin(rnd);\\n vec4 basis = vec4(cosa, -sina, sina, cosa);\\n\\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\\n#endif\\n\\n#ifdef BLUR_COC\\n float cocSum = 0.0;\\n#else\\n vec4 color = vec4(0.0);\\n#endif\\n\\n\\n float weightSum = 0.0;\\n\\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\\n vec2 ofs = poissonKernel[i];\\n\\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\\n\\n vec2 uv = v_Texcoord + ofs * offset;\\n vec4 texel = texture2D(texture, uv);\\n\\n float w = 1.0;\\n#ifdef BLUR_COC\\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\\n#else\\n texel = decodeHDR(texel);\\n #if !defined(BLUR_NEARFIELD)\\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\\n w *= abs(fCoc);\\n #endif\\n color += texel * w;\\n#endif\\n\\n weightSum += w;\\n }\\n\\n#ifdef BLUR_COC\\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\\n#else\\n color /= weightSum;\\n gl_FragColor = encodeHDR(color);\\n#endif\\n}\\n\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9ncmFwaGljL0RPRi5nbHNsLmpzPzdhMTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IGVjZ2wuZG9mLmNvY1xcblxcbnVuaWZvcm0gc2FtcGxlcjJEIGRlcHRoO1xcblxcbnVuaWZvcm0gZmxvYXQgek5lYXI6IDAuMTtcXG51bmlmb3JtIGZsb2F0IHpGYXI6IDIwMDA7XFxuXFxudW5pZm9ybSBmbG9hdCBmb2NhbERpc3RhbmNlOiAzO1xcbnVuaWZvcm0gZmxvYXQgZm9jYWxSYW5nZTogMTtcXG51bmlmb3JtIGZsb2F0IGZvY2FsTGVuZ3RoOiAzMDtcXG51bmlmb3JtIGZsb2F0IGZzdG9wOiAyLjg7XFxuXFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxuXFxuQGltcG9ydCBjbGF5LnV0aWwuZW5jb2RlX2Zsb2F0XFxuXFxudm9pZCBtYWluKClcXG57XFxuIGZsb2F0IHogPSB0ZXh0dXJlMkQoZGVwdGgsIHZfVGV4Y29vcmQpLnIgKiAyLjAgLSAxLjA7XFxuXFxuIGZsb2F0IGRpc3QgPSAyLjAgKiB6TmVhciAqIHpGYXIgLyAoekZhciArIHpOZWFyIC0geiAqICh6RmFyIC0gek5lYXIpKTtcXG5cXG4gZmxvYXQgYXBlcnR1cmUgPSBmb2NhbExlbmd0aCAvIGZzdG9wO1xcblxcbiBmbG9hdCBjb2M7XFxuXFxuIGZsb2F0IHVwcHBlciA9IGZvY2FsRGlzdGFuY2UgKyBmb2NhbFJhbmdlO1xcbiBmbG9hdCBsb3dlciA9IGZvY2FsRGlzdGFuY2UgLSBmb2NhbFJhbmdlO1xcbiBpZiAoZGlzdCA8PSB1cHBwZXIgJiYgZGlzdCA+PSBsb3dlcikge1xcbiBjb2MgPSAwLjU7XFxuIH1cXG4gZWxzZSB7XFxuIGZsb2F0IGZvY2FsQWRqdXN0ZWQgPSBkaXN0ID4gdXBwcGVyID8gdXBwcGVyIDogbG93ZXI7XFxuXFxuIGNvYyA9IGFicyhhcGVydHVyZSAqIChmb2NhbExlbmd0aCAqIChkaXN0IC0gZm9jYWxBZGp1c3RlZCkpIC8gKGRpc3QgKiAoZm9jYWxBZGp1c3RlZCAtIGZvY2FsTGVuZ3RoKSkpO1xcbiBjb2MgPSBjbGFtcChjb2MsIDAuMCwgMi4wKSAvIDIuMDAwMDE7XFxuXFxuIGlmIChkaXN0IDwgbG93ZXIpIHtcXG4gY29jID0gLWNvYztcXG4gfVxcbiBjb2MgPSBjb2MgKiAwLjUgKyAwLjU7XFxuIH1cXG5cXG4gZ2xfRnJhZ0NvbG9yID0gZW5jb2RlRmxvYXQoY29jKTtcXG59XFxuQGVuZFxcblxcblxcbkBleHBvcnQgZWNnbC5kb2YuY29tcG9zaXRlXFxuXFxuI2RlZmluZSBERUJVRyAwXFxuXFxudW5pZm9ybSBzYW1wbGVyMkQgb3JpZ2luYWw7XFxudW5pZm9ybSBzYW1wbGVyMkQgYmx1cnJlZDtcXG51bmlmb3JtIHNhbXBsZXIyRCBuZWFyZmllbGQ7XFxudW5pZm9ybSBzYW1wbGVyMkQgY29jO1xcbnVuaWZvcm0gc2FtcGxlcjJEIG5lYXJjb2M7XFxudmFyeWluZyB2ZWMyIHZfVGV4Y29vcmQ7XFxuXFxuQGltcG9ydCBjbGF5LnV0aWwucmdibVxcbkBpbXBvcnQgY2xheS51dGlsLmZsb2F0XFxuXFxudm9pZCBtYWluKClcXG57XFxuIHZlYzQgYmx1cnJlZENvbG9yID0gZGVjb2RlSERSKHRleHR1cmUyRChibHVycmVkLCB2X1RleGNvb3JkKSk7XFxuIHZlYzQgb3JpZ2luYWxDb2xvciA9IGRlY29kZUhEUih0ZXh0dXJlMkQob3JpZ2luYWwsIHZfVGV4Y29vcmQpKTtcXG5cXG4gZmxvYXQgZkNvYyA9IGRlY29kZUZsb2F0KHRleHR1cmUyRChjb2MsIHZfVGV4Y29vcmQpKTtcXG5cXG4gZkNvYyA9IGFicyhmQ29jICogMi4wIC0gMS4wKTtcXG5cXG4gZmxvYXQgd2VpZ2h0ID0gc21vb3Roc3RlcCgwLjAsIDEuMCwgZkNvYyk7XFxuIFxcbiNpZmRlZiBORUFSRklFTERfRU5BQkxFRFxcbiB2ZWM0IG5lYXJmaWVsZENvbG9yID0gZGVjb2RlSERSKHRleHR1cmUyRChuZWFyZmllbGQsIHZfVGV4Y29vcmQpKTtcXG4gZmxvYXQgZk5lYXJDb2MgPSBkZWNvZGVGbG9hdCh0ZXh0dXJlMkQobmVhcmNvYywgdl9UZXhjb29yZCkpO1xcbiBmTmVhckNvYyA9IGFicyhmTmVhckNvYyAqIDIuMCAtIDEuMCk7XFxuXFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUihcXG4gbWl4KFxcbiBuZWFyZmllbGRDb2xvciwgbWl4KG9yaWdpbmFsQ29sb3IsIGJsdXJyZWRDb2xvciwgd2VpZ2h0KSxcXG4gcG93KDEuMCAtIGZOZWFyQ29jLCA0LjApXFxuIClcXG4gKTtcXG4jZWxzZVxcbiBnbF9GcmFnQ29sb3IgPSBlbmNvZGVIRFIobWl4KG9yaWdpbmFsQ29sb3IsIGJsdXJyZWRDb2xvciwgd2VpZ2h0KSk7XFxuI2VuZGlmXFxuXFxufVxcblxcbkBlbmRcXG5cXG5cXG5cXG5AZXhwb3J0IGVjZ2wuZG9mLmRpc2tCbHVyXFxuXFxuI2RlZmluZSBQT0lTU09OX0tFUk5FTF9TSVpFIDE2O1xcblxcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSBzYW1wbGVyMkQgY29jO1xcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcblxcbnVuaWZvcm0gZmxvYXQgYmx1clJhZGl1cyA6IDEwLjA7XFxudW5pZm9ybSB2ZWMyIHRleHR1cmVTaXplIDogWzUxMi4wLCA1MTIuMF07XFxuXFxudW5pZm9ybSB2ZWMyIHBvaXNzb25LZXJuZWxbUE9JU1NPTl9LRVJORUxfU0laRV07XFxuXFxudW5pZm9ybSBmbG9hdCBwZXJjZW50O1xcblxcbmZsb2F0IG5yYW5kKGNvbnN0IGluIHZlYzIgbikge1xcbiByZXR1cm4gZnJhY3Qoc2luKGRvdChuLnh5ICx2ZWMyKDEyLjk4OTgsNzguMjMzKSkpICogNDM3NTguNTQ1Myk7XFxufVxcblxcbkBpbXBvcnQgY2xheS51dGlsLnJnYm1cXG5AaW1wb3J0IGNsYXkudXRpbC5mbG9hdFxcblxcblxcbnZvaWQgbWFpbigpXFxue1xcbiB2ZWMyIG9mZnNldCA9IGJsdXJSYWRpdXMgLyB0ZXh0dXJlU2l6ZTtcXG5cXG4gZmxvYXQgcm5kID0gNi4yODMxOCAqIG5yYW5kKHZfVGV4Y29vcmQgKyAwLjA3ICogcGVyY2VudCApO1xcbiBmbG9hdCBjb3NhID0gY29zKHJuZCk7XFxuIGZsb2F0IHNpbmEgPSBzaW4ocm5kKTtcXG4gdmVjNCBiYXNpcyA9IHZlYzQoY29zYSwgLXNpbmEsIHNpbmEsIGNvc2EpO1xcblxcbiNpZiAhZGVmaW5lZChCTFVSX05FQVJGSUVMRCkgJiYgIWRlZmluZWQoQkxVUl9DT0MpXFxuIG9mZnNldCAqPSBhYnMoZGVjb2RlRmxvYXQodGV4dHVyZTJEKGNvYywgdl9UZXhjb29yZCkpICogMi4wIC0gMS4wKTtcXG4jZW5kaWZcXG5cXG4jaWZkZWYgQkxVUl9DT0NcXG4gZmxvYXQgY29jU3VtID0gMC4wO1xcbiNlbHNlXFxuIHZlYzQgY29sb3IgPSB2ZWM0KDAuMCk7XFxuI2VuZGlmXFxuXFxuXFxuIGZsb2F0IHdlaWdodFN1bSA9IDAuMDtcXG5cXG4gZm9yIChpbnQgaSA9IDA7IGkgPCBQT0lTU09OX0tFUk5FTF9TSVpFOyBpKyspIHtcXG4gdmVjMiBvZnMgPSBwb2lzc29uS2VybmVsW2ldO1xcblxcbiBvZnMgPSB2ZWMyKGRvdChvZnMsIGJhc2lzLnh5KSwgZG90KG9mcywgYmFzaXMuencpKTtcXG5cXG4gdmVjMiB1diA9IHZfVGV4Y29vcmQgKyBvZnMgKiBvZmZzZXQ7XFxuIHZlYzQgdGV4ZWwgPSB0ZXh0dXJlMkQodGV4dHVyZSwgdXYpO1xcblxcbiBmbG9hdCB3ID0gMS4wO1xcbiNpZmRlZiBCTFVSX0NPQ1xcbiBmbG9hdCBmQ29jID0gZGVjb2RlRmxvYXQodGV4ZWwpICogMi4wIC0gMS4wO1xcbiBjb2NTdW0gKz0gY2xhbXAoZkNvYywgLTEuMCwgMC4wKSAqIHc7XFxuI2Vsc2VcXG4gdGV4ZWwgPSBkZWNvZGVIRFIodGV4ZWwpO1xcbiAjaWYgIWRlZmluZWQoQkxVUl9ORUFSRklFTEQpXFxuIGZsb2F0IGZDb2MgPSBkZWNvZGVGbG9hdCh0ZXh0dXJlMkQoY29jLCB1dikpICogMi4wIC0gMS4wO1xcbiB3ICo9IGFicyhmQ29jKTtcXG4gI2VuZGlmXFxuIGNvbG9yICs9IHRleGVsICogdztcXG4jZW5kaWZcXG5cXG4gd2VpZ2h0U3VtICs9IHc7XFxuIH1cXG5cXG4jaWZkZWYgQkxVUl9DT0NcXG4gZ2xfRnJhZ0NvbG9yID0gZW5jb2RlRmxvYXQoY2xhbXAoY29jU3VtIC8gd2VpZ2h0U3VtLCAtMS4wLCAwLjApICogMC41ICsgMC41KTtcXG4jZWxzZVxcbiBjb2xvciAvPSB3ZWlnaHRTdW07XFxuIGdsX0ZyYWdDb2xvciA9IGVuY29kZUhEUihjb2xvcik7XFxuI2VuZGlmXFxufVxcblxcbkBlbmRcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL3NyYy9ncmFwaGljL0RPRi5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///135\n");

/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export ecgl.edge\\n\\nuniform sampler2D texture;\\n\\nuniform sampler2D normalTexture;\\nuniform sampler2D depthTexture;\\n\\nuniform mat4 projectionInv;\\n\\nuniform vec2 textureSize;\\n\\nuniform vec4 edgeColor: [0,0,0,0.8];\\n\\nvarying vec2 v_Texcoord;\\n\\nvec3 packColor(vec2 coord) {\\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\\n vec4 p4 = projectionInv * p;\\n\\n return vec3(\\n texture2D(normalTexture, coord).rg,\\n -p4.z / p4.w / 5.0\\n );\\n}\\n\\nvoid main() {\\n vec2 cc = v_Texcoord;\\n vec3 center = packColor(cc);\\n\\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\\n float dx = size / textureSize.x;\\n float dy = size / textureSize.y;\\n\\n vec2 coord;\\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\\n vec3 top = packColor(cc+vec2(0.0, -dy));\\n vec3 topRight = packColor(cc+vec2(dx, -dy));\\n vec3 left = packColor(cc+vec2(-dx, 0.0));\\n vec3 right = packColor(cc+vec2(dx, 0.0));\\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\\n vec3 bottom = packColor(cc+vec2(0.0, dy));\\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\\n\\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\\n\\n float edge = sqrt(dot(h, h) + dot(v, v));\\n\\n edge = smoothstep(0.8, 1.0, edge);\\n\\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9ncmFwaGljL2VkZ2UuZ2xzbC5qcz85ZjI1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBlY2dsLmVkZ2VcXG5cXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcblxcbnVuaWZvcm0gc2FtcGxlcjJEIG5vcm1hbFRleHR1cmU7XFxudW5pZm9ybSBzYW1wbGVyMkQgZGVwdGhUZXh0dXJlO1xcblxcbnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uSW52O1xcblxcbnVuaWZvcm0gdmVjMiB0ZXh0dXJlU2l6ZTtcXG5cXG51bmlmb3JtIHZlYzQgZWRnZUNvbG9yOiBbMCwwLDAsMC44XTtcXG5cXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG5cXG52ZWMzIHBhY2tDb2xvcih2ZWMyIGNvb3JkKSB7XFxuIGZsb2F0IHogPSB0ZXh0dXJlMkQoZGVwdGhUZXh0dXJlLCBjb29yZCkuciAqIDIuMCAtIDEuMDtcXG4gdmVjNCBwID0gdmVjNCh2X1RleGNvb3JkICogMi4wIC0gMS4wLCB6LCAxLjApO1xcbiB2ZWM0IHA0ID0gcHJvamVjdGlvbkludiAqIHA7XFxuXFxuIHJldHVybiB2ZWMzKFxcbiB0ZXh0dXJlMkQobm9ybWFsVGV4dHVyZSwgY29vcmQpLnJnLFxcbiAtcDQueiAvIHA0LncgLyA1LjBcXG4gKTtcXG59XFxuXFxudm9pZCBtYWluKCkge1xcbiB2ZWMyIGNjID0gdl9UZXhjb29yZDtcXG4gdmVjMyBjZW50ZXIgPSBwYWNrQ29sb3IoY2MpO1xcblxcbiBmbG9hdCBzaXplID0gY2xhbXAoMS4wIC0gKGNlbnRlci56IC0gMTAuMCkgLyAxMDAuMCwgMC4wLCAxLjApICogMC41O1xcbiBmbG9hdCBkeCA9IHNpemUgLyB0ZXh0dXJlU2l6ZS54O1xcbiBmbG9hdCBkeSA9IHNpemUgLyB0ZXh0dXJlU2l6ZS55O1xcblxcbiB2ZWMyIGNvb3JkO1xcbiB2ZWMzIHRvcExlZnQgPSBwYWNrQ29sb3IoY2MrdmVjMigtZHgsIC1keSkpO1xcbiB2ZWMzIHRvcCA9IHBhY2tDb2xvcihjYyt2ZWMyKDAuMCwgLWR5KSk7XFxuIHZlYzMgdG9wUmlnaHQgPSBwYWNrQ29sb3IoY2MrdmVjMihkeCwgLWR5KSk7XFxuIHZlYzMgbGVmdCA9IHBhY2tDb2xvcihjYyt2ZWMyKC1keCwgMC4wKSk7XFxuIHZlYzMgcmlnaHQgPSBwYWNrQ29sb3IoY2MrdmVjMihkeCwgMC4wKSk7XFxuIHZlYzMgYm90dG9tTGVmdCA9IHBhY2tDb2xvcihjYyt2ZWMyKC1keCwgZHkpKTtcXG4gdmVjMyBib3R0b20gPSBwYWNrQ29sb3IoY2MrdmVjMigwLjAsIGR5KSk7XFxuIHZlYzMgYm90dG9tUmlnaHQgPSBwYWNrQ29sb3IoY2MrdmVjMihkeCwgZHkpKTtcXG5cXG4gdmVjMyB2ID0gLXRvcExlZnQtMi4wKnRvcC10b3BSaWdodCtib3R0b21MZWZ0KzIuMCpib3R0b20rYm90dG9tUmlnaHQ7XFxuIHZlYzMgaCA9IC1ib3R0b21MZWZ0LTIuMCpsZWZ0LXRvcExlZnQrYm90dG9tUmlnaHQrMi4wKnJpZ2h0K3RvcFJpZ2h0O1xcblxcbiBmbG9hdCBlZGdlID0gc3FydChkb3QoaCwgaCkgKyBkb3QodiwgdikpO1xcblxcbiBlZGdlID0gc21vb3Roc3RlcCgwLjgsIDEuMCwgZWRnZSk7XFxuXFxuIGdsX0ZyYWdDb2xvciA9IG1peCh0ZXh0dXJlMkQodGV4dHVyZSwgdl9UZXhjb29yZCksIHZlYzQoZWRnZUNvbG9yLnJnYiwgMS4wKSwgZWRnZUNvbG9yLmEgKiBlZGdlKTtcXG59XFxuQGVuZFwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vc3JjL2dyYXBoaWMvZWRnZS5nbHNsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///136\n");

/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__halton__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_math_Matrix4__ = __webpack_require__(8);\n// Temporal Super Sample for static Scene\n\n\n\n\n\n\n\nfunction TemporalSuperSampling () {\n    var haltonSequence = [];\n\n    for (var i = 0; i < 30; i++) {\n        haltonSequence.push([\n            Object(__WEBPACK_IMPORTED_MODULE_0__halton__[\"a\" /* default */])(i, 2), Object(__WEBPACK_IMPORTED_MODULE_0__halton__[\"a\" /* default */])(i, 3)\n        ]);\n    }\n\n    this._haltonSequence = haltonSequence;\n\n    this._frame = 0;\n\n    this._sourceTex = new __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture2D__[\"a\" /* default */]();\n    this._sourceFb = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_FrameBuffer__[\"a\" /* default */]();\n    this._sourceFb.attach(this._sourceTex);\n\n    // Frame texture before temporal supersampling\n    this._prevFrameTex = new __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture2D__[\"a\" /* default */]();\n    this._outputTex = new __WEBPACK_IMPORTED_MODULE_3_claygl_src_Texture2D__[\"a\" /* default */]();\n\n    var blendPass = this._blendPass = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_4_claygl_src_Shader__[\"a\" /* default */].source('clay.compositor.blend')\n    });\n    blendPass.material.disableTexturesAll();\n    blendPass.material.enableTexture(['texture1', 'texture2']);\n\n    this._blendFb = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_FrameBuffer__[\"a\" /* default */]({\n        depthBuffer: false\n    });\n\n    this._outputPass = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_compositor_Pass__[\"a\" /* default */]({\n        fragment: __WEBPACK_IMPORTED_MODULE_4_claygl_src_Shader__[\"a\" /* default */].source('clay.compositor.output'),\n        // TODO, alpha is premultiplied?\n        blendWithPrevious: true\n    });\n    this._outputPass.material.define('fragment', 'OUTPUT_ALPHA');\n    this._outputPass.material.blend = function (_gl) {\n        // FIXME.\n        // Output is premultiplied alpha when BLEND is enabled ?\n        // http://stackoverflow.com/questions/2171085/opengl-blending-with-previous-contents-of-framebuffer\n        _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n        _gl.blendFuncSeparate(_gl.ONE, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n    }\n}\n\nTemporalSuperSampling.prototype = {\n\n    constructor: TemporalSuperSampling,\n\n    /**\n     * Jitter camera projectionMatrix\n     * @parma {clay.Renderer} renderer\n     * @param {clay.Camera} camera\n     */\n    jitterProjection: function (renderer, camera) {\n        var viewport = renderer.viewport;\n        var dpr = viewport.devicePixelRatio || renderer.getDevicePixelRatio();\n        var width = viewport.width * dpr;\n        var height = viewport.height * dpr;\n\n        var offset = this._haltonSequence[this._frame % this._haltonSequence.length];\n\n        var translationMat = new __WEBPACK_IMPORTED_MODULE_5_claygl_src_math_Matrix4__[\"a\" /* default */]();\n        translationMat.array[12] = (offset[0] * 2.0 - 1.0) / width;\n        translationMat.array[13] = (offset[1] * 2.0 - 1.0) / height;\n\n        __WEBPACK_IMPORTED_MODULE_5_claygl_src_math_Matrix4__[\"a\" /* default */].mul(camera.projectionMatrix, translationMat, camera.projectionMatrix);\n\n        __WEBPACK_IMPORTED_MODULE_5_claygl_src_math_Matrix4__[\"a\" /* default */].invert(camera.invProjectionMatrix, camera.projectionMatrix);\n    },\n\n    /**\n     * Reset accumulating frame\n     */\n    resetFrame: function () {\n        this._frame = 0;\n    },\n\n    /**\n     * Return current frame\n     */\n    getFrame: function () {\n        return this._frame;\n    },\n\n    /**\n     * Get source framebuffer for usage\n     */\n    getSourceFrameBuffer: function () {\n        return this._sourceFb;\n    },\n\n    resize: function (width, height) {\n        if (this._sourceTex.width !== width || this._sourceTex.height !== height) {\n\n            this._prevFrameTex.width = width;\n            this._prevFrameTex.height = height;\n\n            this._outputTex.width = width;\n            this._outputTex.height = height;\n\n            this._sourceTex.width = width;\n            this._sourceTex.height = height;\n\n            this._prevFrameTex.dirty();\n            this._outputTex.dirty();\n            this._sourceTex.dirty();\n        }\n    },\n\n    isFinished: function () {\n        return this._frame >= this._haltonSequence.length;\n    },\n\n    render: function (renderer) {\n        var blendPass = this._blendPass;\n        if (this._frame === 0) {\n            // Direct output\n            blendPass.setUniform('weight1', 0);\n            blendPass.setUniform('weight2', 1);\n        }\n        else {\n            blendPass.setUniform('weight1', 0.9);\n            blendPass.setUniform('weight2', 0.1);\n        }\n        blendPass.setUniform('texture1', this._prevFrameTex);\n        blendPass.setUniform('texture2', this._sourceTex);\n\n        this._blendFb.attach(this._outputTex);\n        this._blendFb.bind(renderer);\n        blendPass.render(renderer);\n        this._blendFb.unbind(renderer);\n\n        this._outputPass.setUniform('texture', this._outputTex);\n        this._outputPass.render(renderer);\n\n        // Swap texture\n        var tmp = this._prevFrameTex;\n        this._prevFrameTex = this._outputTex;\n        this._outputTex = tmp;\n\n        this._frame++;\n    },\n\n    dispose: function (renderer) {\n        this._sourceFb.dispose(renderer);\n        this._blendFb.dispose(renderer);\n        this._prevFrameTex.dispose(renderer);\n        this._outputTex.dispose(renderer);\n        this._sourceTex.dispose(renderer);\n        this._outputPass.dispose(renderer);\n        this._blendPass.dispose(renderer);\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TemporalSuperSampling);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///137\n");

/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helper__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_plugin_Skybox__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_plugin_Skydome__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_light_Directional__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_light_Ambient__ = __webpack_require__(140);\n\n\n\n\n\n\n\nfunction SceneHelper(scene) {\n    this.setScene(scene);\n}\n\nSceneHelper.prototype = {\n    constructor: SceneHelper,\n\n    setScene: function (scene) {\n        this._scene = scene;\n\n        if (this._skybox) {\n            this._skybox.attachScene(this._scene);\n        }\n\n    },\n\n    initLight: function (rootNode) {\n        this._lightRoot = rootNode;\n        /**\n         * @type {clay.light.Directional}\n         */\n        this.mainLight = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_light_Directional__[\"a\" /* default */]({\n            shadowBias: 0.005\n        });\n        /**\n         * @type {clay.light.Directional}\n         */\n        this.secondaryLight = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_light_Directional__[\"a\" /* default */]({\n            shadowBias: 0.005\n        });\n        /**\n         * @type {clay.light.Directional}\n         */\n        this.tertiaryLight = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_light_Directional__[\"a\" /* default */]({\n            shadowBias: 0.005\n        });\n\n        /**\n         * @type {clay.light.Ambient}\n         */\n        this.ambientLight = new __WEBPACK_IMPORTED_MODULE_5_claygl_src_light_Ambient__[\"a\" /* default */]();\n    },\n\n    dispose: function (renderer) {\n        if (this._lightRoot) {\n            this._lightRoot.remove(this.mainLight);\n            this._lightRoot.remove(this.secondaryLight);\n            this._lightRoot.remove(this.tertiaryLight);\n            this._lightRoot.remove(this.ambientLight);\n        }\n        if (this._currentCubemapLights) {\n            this._lightRoot.remove(this._currentCubemapLights.diffuse);\n            if (this._currentCubemapLights.specular) {\n                this._lightRoot.remove(this._currentCubemapLights.specular);\n                this._currentCubemapLights.specular.cubemap.dispose(renderer);\n            }\n        }\n    },\n\n    updateMainLight: function (opts, app) {\n        this._updateDirectionalLight(this.mainLight, opts, app);\n    },\n\n    updateSecondaryLight: function (opts, app) {\n        this._updateDirectionalLight(this.secondaryLight, opts, app);\n    },\n\n    updateTertiaryLight: function (opts, app) {\n        this._updateDirectionalLight(this.tertiaryLight, opts, app);\n    },\n\n    _updateDirectionalLight: function (light, opts, app) {\n        opts = opts || {};\n        if (opts.intensity != null) {\n            light.intensity = opts.intensity;\n            this._lightRoot[opts.intensity ? 'add' : 'remove'](light);\n        }\n        if (opts.color != null) {\n            light.color = __WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].parseColor(opts.color).slice(0, 3);\n        }\n        var alpha = __WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].firstNotNull(opts.alpha, 45);\n        var beta = __WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].firstNotNull(opts.beta, 45);\n\n        light.position.setArray(__WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].directionFromAlphaBeta(alpha, beta));\n        light.lookAt(__WEBPACK_IMPORTED_MODULE_3_claygl_src_math_Vector3__[\"a\" /* default */].ZERO);\n\n        var shadowResolution = ({\n            'low': 512,\n            'medium': 1024,\n            'high': 2048,\n            'ultra': 4096\n        })[opts.quality] || 1024;\n\n        light.castShadow = __WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].firstNotNull(opts.shadow, true);\n        light.shadowResolution = shadowResolution;\n    },\n\n    updateAmbientLight: function (opts, app) {\n        opts = opts || {};\n        if (opts.intensity != null) {\n            this.ambientLight.intensity = opts.intensity;\n            this._lightRoot[opts.intensity ? 'add' : 'remove'](this.ambientLight);\n        }\n        if (opts.color != null) {\n            this.ambientLight.color = __WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].parseColor(opts.color).slice(0, 3);\n        }\n    },\n\n    updateAmbientCubemapLight: function (opts, app) {\n        opts = opts || {};\n        var renderer = app.getRenderer();\n        var textureUrl = opts.texture;\n        var self = this;\n\n        // TODO Change exposure\n        if ('texture' in opts) {\n            if (!this._currentCubemapLights || textureUrl !== this._currentCubemapLights.textureUrl) {\n                if (this._currentCubemapLights) {\n                    this._lightRoot.remove(this._currentCubemapLights.diffuse);\n                    if (this._currentCubemapLights.specular) {\n                        this._lightRoot.remove(this._currentCubemapLights.specular);\n                        this._currentCubemapLights.specular.cubemap.dispose(renderer.gl);\n                    }\n                }\n                if (textureUrl) {\n                    var lights = __WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].createAmbientCubemap(opts, app, function () {\n                        // Use prefitered cubemap\n                        if (lights.specular && (self._skybox instanceof __WEBPACK_IMPORTED_MODULE_1_claygl_src_plugin_Skybox__[\"a\" /* default */])) {\n                            self._skybox.setEnvironmentMap(lights.specular.cubemap);\n                        }\n                        app.refresh();\n                    });\n                    if (lights.diffuse) {\n                        this._lightRoot.add(lights.diffuse);\n                    }\n                    if (lights.specular) {\n                        this._lightRoot.add(lights.specular);\n                    }\n\n                    this._currentCubemapLights = lights;\n                    this._currentCubemapLights.textureUrl = textureUrl;\n                }\n                else if (this._currentCubemapLights) {\n                    this._lightRoot.remove(this._currentCubemapLights.diffuse);\n                    this._lightRoot.remove(this._currentCubemapLights.specular);\n                    this._currentCubemapLights = null;\n                }\n            }\n        }\n\n        if (this._currentCubemapLights) {\n            if (opts.specularIntensity != null && this._currentCubemapLights.specular) {\n                this._currentCubemapLights.specular.intensity = opts.specularIntensity;\n            }\n            if (opts.diffuseIntensity != null && this._currentCubemapLights.diffuse) {\n                this._currentCubemapLights.diffuse.intensity = opts.diffuseIntensity;\n            }\n        }\n    },\n\n    updateSkybox: function (environmentUrl, isLinearSpace, app) {\n        var renderer = app.getRenderer();\n        var self = this;\n\n        function getSkybox() {\n            if (!(self._skybox instanceof __WEBPACK_IMPORTED_MODULE_1_claygl_src_plugin_Skybox__[\"a\" /* default */])) {\n                if (self._skybox) {\n                    self._skybox.dispose(renderer);\n                }\n                self._skybox = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_plugin_Skybox__[\"a\" /* default */]();\n            }\n            return self._skybox;\n        }\n        function getSkydome() {\n            if (!(self._skybox instanceof __WEBPACK_IMPORTED_MODULE_2_claygl_src_plugin_Skydome__[\"a\" /* default */])) {\n                if (self._skybox) {\n                    self._skybox.dispose(renderer);\n                }\n                self._skybox = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_plugin_Skydome__[\"a\" /* default */]();\n            }\n            return self._skybox;\n        }\n\n        if (environmentUrl && environmentUrl !== 'none') {\n            if (environmentUrl === 'auto') {\n                // Use environment in ambient cubemap\n                if (this._currentCubemapLights) {\n                    var skybox = getSkybox();\n                    if (this._currentCubemapLights.specular) {\n                        var cubemap = this._currentCubemapLights.specular.cubemap;\n                        skybox.setEnvironmentMap(cubemap);\n                    }\n                    if (this._scene) {\n                        skybox.attachScene(this._scene);\n                    }\n                    skybox.material.set('lod', 2);\n                }\n                else if (this._skybox) {\n                    this._skybox.detachScene();\n                }\n            }\n            else  {\n                // Panorama\n                var skydome = getSkydome();\n                var texture = __WEBPACK_IMPORTED_MODULE_0__helper__[\"a\" /* default */].loadTexture(environmentUrl, app, {\n                    flipY: false\n                }, function () {\n                    app.refresh();\n                });\n                skydome.setEnvironmentMap(texture);\n\n                skydome.attachScene(this._scene);\n            }\n        }\n        else {\n            if (this._skybox) {\n                this._skybox.detachScene(this._scene);\n            }\n            this._skybox = null;\n        }\n\n        if (this._skybox) {\n            if (environmentUrl !== 'auto'\n                && !(environmentUrl.match && environmentUrl.match(/.hdr$/))\n            ) {\n                var srgbDefineMethod = isLinearSpace ? 'define' : 'undefine';\n                this._skybox.material[srgbDefineMethod]('fragment', 'SRGB_DECODE');\n            }\n            else {\n                this._skybox.material.undefine('fragment', 'SRGB_DECODE');\n            }\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (SceneHelper);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///138\n");

/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Light__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math_Vector3__ = __webpack_require__(6);\n\n\n\n/**\n * @constructor clay.light.Directional\n * @extends clay.Light\n *\n * @example\n *     var light = new clay.light.Directional({\n *         intensity: 0.5,\n *         color: [1.0, 0.0, 0.0]\n *     });\n *     light.position.set(10, 10, 10);\n *     light.lookAt(clay.Vector3.ZERO);\n *     scene.add(light);\n */\nvar DirectionalLight = __WEBPACK_IMPORTED_MODULE_0__Light__[\"a\" /* default */].extend(/** @lends clay.light.Directional# */ {\n    /**\n     * @type {number}\n     */\n    shadowBias: 0.001,\n    /**\n     * @type {number}\n     */\n    shadowSlopeScale: 2.0,\n    /**\n     * Shadow cascade.\n     * Use PSSM technique when it is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    shadowCascade: 1,\n\n    /**\n     * Available when shadowCascade is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    cascadeSplitLogFactor: 0.2\n}, {\n\n    type: 'DIRECTIONAL_LIGHT',\n\n    uniformTemplates: {\n        directionalLightDirection: {\n            type: '3f',\n            value: function (instance) {\n                instance.__dir = instance.__dir || new __WEBPACK_IMPORTED_MODULE_1__math_Vector3__[\"a\" /* default */]();\n                // Direction is target to eye\n                return instance.__dir.copy(instance.worldTransform.z).normalize().negate().array;\n            }\n        },\n        directionalLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Directional}\n     * @memberOf clay.light.Directional.prototype\n     */\n    clone: function () {\n        var light = __WEBPACK_IMPORTED_MODULE_0__Light__[\"a\" /* default */].prototype.clone.call(this);\n        light.shadowBias = this.shadowBias;\n        light.shadowSlopeScale = this.shadowSlopeScale;\n        return light;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DirectionalLight);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2xpZ2h0L0RpcmVjdGlvbmFsLmpzP2MyMjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpZ2h0IGZyb20gJy4uL0xpZ2h0JztcbmltcG9ydCBWZWN0b3IzIGZyb20gJy4uL21hdGgvVmVjdG9yMyc7XG5cbi8qKlxuICogQGNvbnN0cnVjdG9yIGNsYXkubGlnaHQuRGlyZWN0aW9uYWxcbiAqIEBleHRlbmRzIGNsYXkuTGlnaHRcbiAqXG4gKiBAZXhhbXBsZVxuICogICAgIHZhciBsaWdodCA9IG5ldyBjbGF5LmxpZ2h0LkRpcmVjdGlvbmFsKHtcbiAqICAgICAgICAgaW50ZW5zaXR5OiAwLjUsXG4gKiAgICAgICAgIGNvbG9yOiBbMS4wLCAwLjAsIDAuMF1cbiAqICAgICB9KTtcbiAqICAgICBsaWdodC5wb3NpdGlvbi5zZXQoMTAsIDEwLCAxMCk7XG4gKiAgICAgbGlnaHQubG9va0F0KGNsYXkuVmVjdG9yMy5aRVJPKTtcbiAqICAgICBzY2VuZS5hZGQobGlnaHQpO1xuICovXG52YXIgRGlyZWN0aW9uYWxMaWdodCA9IExpZ2h0LmV4dGVuZCgvKiogQGxlbmRzIGNsYXkubGlnaHQuRGlyZWN0aW9uYWwjICovIHtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIHNoYWRvd0JpYXM6IDAuMDAxLFxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgc2hhZG93U2xvcGVTY2FsZTogMi4wLFxuICAgIC8qKlxuICAgICAqIFNoYWRvdyBjYXNjYWRlLlxuICAgICAqIFVzZSBQU1NNIHRlY2huaXF1ZSB3aGVuIGl0IGlzIGxhcmdlciB0aGFuIDEgYW5kIGhhdmUgYSB1bmlxdWUgZGlyZWN0aW9uYWwgbGlnaHQgaW4gc2NlbmUuXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBzaGFkb3dDYXNjYWRlOiAxLFxuXG4gICAgLyoqXG4gICAgICogQXZhaWxhYmxlIHdoZW4gc2hhZG93Q2FzY2FkZSBpcyBsYXJnZXIgdGhhbiAxIGFuZCBoYXZlIGEgdW5pcXVlIGRpcmVjdGlvbmFsIGxpZ2h0IGluIHNjZW5lLlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgY2FzY2FkZVNwbGl0TG9nRmFjdG9yOiAwLjJcbn0sIHtcblxuICAgIHR5cGU6ICdESVJFQ1RJT05BTF9MSUdIVCcsXG5cbiAgICB1bmlmb3JtVGVtcGxhdGVzOiB7XG4gICAgICAgIGRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb246IHtcbiAgICAgICAgICAgIHR5cGU6ICczZicsXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgaW5zdGFuY2UuX19kaXIgPSBpbnN0YW5jZS5fX2RpciB8fCBuZXcgVmVjdG9yMygpO1xuICAgICAgICAgICAgICAgIC8vIERpcmVjdGlvbiBpcyB0YXJnZXQgdG8gZXllXG4gICAgICAgICAgICAgICAgcmV0dXJuIGluc3RhbmNlLl9fZGlyLmNvcHkoaW5zdGFuY2Uud29ybGRUcmFuc2Zvcm0ueikubm9ybWFsaXplKCkubmVnYXRlKCkuYXJyYXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGRpcmVjdGlvbmFsTGlnaHRDb2xvcjoge1xuICAgICAgICAgICAgdHlwZTogJzNmJyxcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29sb3IgPSBpbnN0YW5jZS5jb2xvcjtcbiAgICAgICAgICAgICAgICB2YXIgaW50ZW5zaXR5ID0gaW5zdGFuY2UuaW50ZW5zaXR5O1xuICAgICAgICAgICAgICAgIHJldHVybiBbY29sb3JbMF0gKiBpbnRlbnNpdHksIGNvbG9yWzFdICogaW50ZW5zaXR5LCBjb2xvclsyXSAqIGludGVuc2l0eV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEByZXR1cm4ge2NsYXkubGlnaHQuRGlyZWN0aW9uYWx9XG4gICAgICogQG1lbWJlck9mIGNsYXkubGlnaHQuRGlyZWN0aW9uYWwucHJvdG90eXBlXG4gICAgICovXG4gICAgY2xvbmU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGxpZ2h0ID0gTGlnaHQucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyk7XG4gICAgICAgIGxpZ2h0LnNoYWRvd0JpYXMgPSB0aGlzLnNoYWRvd0JpYXM7XG4gICAgICAgIGxpZ2h0LnNoYWRvd1Nsb3BlU2NhbGUgPSB0aGlzLnNoYWRvd1Nsb3BlU2NhbGU7XG4gICAgICAgIHJldHVybiBsaWdodDtcbiAgICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgRGlyZWN0aW9uYWxMaWdodDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2xpZ2h0L0RpcmVjdGlvbmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///139\n");

/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Light__ = __webpack_require__(22);\n\n\n/**\n * @constructor clay.light.Ambient\n * @extends clay.Light\n */\nvar AmbientLight = __WEBPACK_IMPORTED_MODULE_0__Light__[\"a\" /* default */].extend({\n\n    castShadow: false\n\n}, {\n\n    type: 'AMBIENT_LIGHT',\n\n    uniformTemplates: {\n        ambientLightColor: {\n            type: '3f',\n            value: function(instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0]*intensity, color[1]*intensity, color[2]*intensity];\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.Ambient}\n     * @memberOf clay.light.Ambient.prototype\n     */\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (AmbientLight);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2xpZ2h0L0FtYmllbnQuanM/NzNjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGlnaHQgZnJvbSAnLi4vTGlnaHQnO1xuXG4vKipcbiAqIEBjb25zdHJ1Y3RvciBjbGF5LmxpZ2h0LkFtYmllbnRcbiAqIEBleHRlbmRzIGNsYXkuTGlnaHRcbiAqL1xudmFyIEFtYmllbnRMaWdodCA9IExpZ2h0LmV4dGVuZCh7XG5cbiAgICBjYXN0U2hhZG93OiBmYWxzZVxuXG59LCB7XG5cbiAgICB0eXBlOiAnQU1CSUVOVF9MSUdIVCcsXG5cbiAgICB1bmlmb3JtVGVtcGxhdGVzOiB7XG4gICAgICAgIGFtYmllbnRMaWdodENvbG9yOiB7XG4gICAgICAgICAgICB0eXBlOiAnM2YnLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbG9yID0gaW5zdGFuY2UuY29sb3I7XG4gICAgICAgICAgICAgICAgdmFyIGludGVuc2l0eSA9IGluc3RhbmNlLmludGVuc2l0eTtcbiAgICAgICAgICAgICAgICByZXR1cm4gW2NvbG9yWzBdKmludGVuc2l0eSwgY29sb3JbMV0qaW50ZW5zaXR5LCBjb2xvclsyXSppbnRlbnNpdHldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBuYW1lIGNsb25lXG4gICAgICogQHJldHVybiB7Y2xheS5saWdodC5BbWJpZW50fVxuICAgICAqIEBtZW1iZXJPZiBjbGF5LmxpZ2h0LkFtYmllbnQucHJvdG90eXBlXG4gICAgICovXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQW1iaWVudExpZ2h0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvbGlnaHQvQW1iaWVudC5qc1xuLy8gbW9kdWxlIGlkID0gMTQwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///140\n");

/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    devicePixelRatio: null,\n\n    // If enable preZ\n    preZ: false,\n    // If enable picking\n    picking: false,\n\n    // If enable shadow\n    shadow: true,\n    // Environment panorama texture url.\n    environment: '',\n\n    // Configuration abount ground\n    ground: {\n        show: false,\n\n        grid: false\n    },\n\n    // QMV provide three directional lights and two ambient lights.\n\n    // Configuration of main light\n    mainLight: {\n        // If enable shadow of main light.\n        shadow: true,\n        // Quality of main light shadow. 'low'|'medium'|'high'|'ultra'\n        shadowQuality: 'medium',\n        // Intensity of main light\n        intensity: 0.8,\n        // Color of main light\n        color: '#fff',\n        // Alpha is rotation from bottom to up.\n        alpha: 45,\n        // Beta is rotation from left to right.\n        beta: 45\n    },\n    // Configuration of secondary light\n    secondaryLight: {\n        // If enable shadow of secondary light.\n        shadow: true,\n        shadowQuality: 'medium',\n        // Intensity of secondary light. Defaultly not enable secondary light.\n        intensity: 0,\n        // Color of secondary light.\n        color: '#fff',\n        alpha: 60,\n        beta: -50\n    },\n    // Configuration of tertiary light\n    tertiaryLight: {\n        // If enable shadow of tertiary light.\n        shadow: true,\n        shadowQuality: 'medium',\n        // Intensity of secondary light. Defaultly not enable secondary light.\n        intensity: 0,\n        // Color of tertiary light.\n        color: '#fff',\n        alpha: 89,\n        beta: 0\n    },\n    // Configuration of constant ambient light.\n    // Which will add a constant color on any surface.\n    ambientLight: {\n        // ambient light intensity.\n        intensity: 0.3,\n        // ambient light color.\n        color: '#fff'\n    },\n    ambientCubemapLight: {\n        // Environment panorama texture url for cubemap lighting\n        texture: '',\n        // Exposure factor when parsing hdr format.\n        exposure: 3,\n        // Intensity of diffuse radiance.\n        diffuseIntensity: 0.5,\n        // Intensity of specular radiance.\n        specularIntensity: 0.5\n    },\n    // Configuration about post effects.\n    postEffect: {\n        // If enable post effects.\n        enable: false,\n        // Configuration about bloom post effect\n        bloom: {\n            // If enable bloom\n            enable: false,\n            // Intensity of bloom\n            intensity: 0.1\n        },\n        // Configuration about depth of field\n        depthOfField: {\n            enable: false,\n            // Focal distance of camera in word space.\n            focalDistance: 5,\n            // Focal range of camera in word space. in this range image will be absolutely sharp.\n            focalRange: 1,\n            // Max out of focus blur radius.\n            blurRadius: 5,\n            // fstop of camera. Smaller fstop will have shallow depth of field\n            fstop: 2.8,\n            // Blur quality. 'low'|'medium'|'high'|'ultra'\n            quality: 'medium'\n        },\n        // Configuration about screen space ambient occulusion\n        screenSpaceAmbientOcclusion: {\n            // If enable SSAO\n            enable: false,\n            // Sampling radius in work space.\n            // Larger will produce more soft concat shadow.\n            // But also needs higher quality or it will have more obvious artifacts\n            radius: 0.5,\n            // Quality of SSAO. 'low'|'medium'|'high'|'ultra'\n            quality: 'medium',\n            // Intensity of SSAO\n            intensity: 1\n        },\n        // Configuration about screen space reflection\n        screenSpaceReflection: {\n            enable: false,\n            // If physically corrected.\n            physical: false,\n            // Quality of SSR. 'low'|'medium'|'high'|'ultra'\n            quality: 'medium',\n            // Surface with less roughness will have reflection.\n            maxRoughness: 0.8\n        },\n        // Configuration about color correction\n        colorCorrection: {\n            // If enable color correction\n            enable: true,\n            exposure: 0,\n            brightness: 0,\n            contrast: 1,\n            saturation: 1,\n            // Lookup texture for color correction.\n            // See https://ecomfe.github.io/echarts-doc/public/cn/option-gl.html#globe.postEffect.colorCorrection.lookupTexture\n            lookupTexture: ''\n        },\n        FXAA: {\n            // If enable FXAA\n            enable: false\n        }\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9kZWZhdWx0U2NlbmVDb25maWcuanM/NzgzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgZGV2aWNlUGl4ZWxSYXRpbzogbnVsbCxcblxuICAgIC8vIElmIGVuYWJsZSBwcmVaXG4gICAgcHJlWjogZmFsc2UsXG4gICAgLy8gSWYgZW5hYmxlIHBpY2tpbmdcbiAgICBwaWNraW5nOiBmYWxzZSxcblxuICAgIC8vIElmIGVuYWJsZSBzaGFkb3dcbiAgICBzaGFkb3c6IHRydWUsXG4gICAgLy8gRW52aXJvbm1lbnQgcGFub3JhbWEgdGV4dHVyZSB1cmwuXG4gICAgZW52aXJvbm1lbnQ6ICcnLFxuXG4gICAgLy8gQ29uZmlndXJhdGlvbiBhYm91bnQgZ3JvdW5kXG4gICAgZ3JvdW5kOiB7XG4gICAgICAgIHNob3c6IGZhbHNlLFxuXG4gICAgICAgIGdyaWQ6IGZhbHNlXG4gICAgfSxcblxuICAgIC8vIFFNViBwcm92aWRlIHRocmVlIGRpcmVjdGlvbmFsIGxpZ2h0cyBhbmQgdHdvIGFtYmllbnQgbGlnaHRzLlxuXG4gICAgLy8gQ29uZmlndXJhdGlvbiBvZiBtYWluIGxpZ2h0XG4gICAgbWFpbkxpZ2h0OiB7XG4gICAgICAgIC8vIElmIGVuYWJsZSBzaGFkb3cgb2YgbWFpbiBsaWdodC5cbiAgICAgICAgc2hhZG93OiB0cnVlLFxuICAgICAgICAvLyBRdWFsaXR5IG9mIG1haW4gbGlnaHQgc2hhZG93LiAnbG93J3wnbWVkaXVtJ3wnaGlnaCd8J3VsdHJhJ1xuICAgICAgICBzaGFkb3dRdWFsaXR5OiAnbWVkaXVtJyxcbiAgICAgICAgLy8gSW50ZW5zaXR5IG9mIG1haW4gbGlnaHRcbiAgICAgICAgaW50ZW5zaXR5OiAwLjgsXG4gICAgICAgIC8vIENvbG9yIG9mIG1haW4gbGlnaHRcbiAgICAgICAgY29sb3I6ICcjZmZmJyxcbiAgICAgICAgLy8gQWxwaGEgaXMgcm90YXRpb24gZnJvbSBib3R0b20gdG8gdXAuXG4gICAgICAgIGFscGhhOiA0NSxcbiAgICAgICAgLy8gQmV0YSBpcyByb3RhdGlvbiBmcm9tIGxlZnQgdG8gcmlnaHQuXG4gICAgICAgIGJldGE6IDQ1XG4gICAgfSxcbiAgICAvLyBDb25maWd1cmF0aW9uIG9mIHNlY29uZGFyeSBsaWdodFxuICAgIHNlY29uZGFyeUxpZ2h0OiB7XG4gICAgICAgIC8vIElmIGVuYWJsZSBzaGFkb3cgb2Ygc2Vjb25kYXJ5IGxpZ2h0LlxuICAgICAgICBzaGFkb3c6IHRydWUsXG4gICAgICAgIHNoYWRvd1F1YWxpdHk6ICdtZWRpdW0nLFxuICAgICAgICAvLyBJbnRlbnNpdHkgb2Ygc2Vjb25kYXJ5IGxpZ2h0LiBEZWZhdWx0bHkgbm90IGVuYWJsZSBzZWNvbmRhcnkgbGlnaHQuXG4gICAgICAgIGludGVuc2l0eTogMCxcbiAgICAgICAgLy8gQ29sb3Igb2Ygc2Vjb25kYXJ5IGxpZ2h0LlxuICAgICAgICBjb2xvcjogJyNmZmYnLFxuICAgICAgICBhbHBoYTogNjAsXG4gICAgICAgIGJldGE6IC01MFxuICAgIH0sXG4gICAgLy8gQ29uZmlndXJhdGlvbiBvZiB0ZXJ0aWFyeSBsaWdodFxuICAgIHRlcnRpYXJ5TGlnaHQ6IHtcbiAgICAgICAgLy8gSWYgZW5hYmxlIHNoYWRvdyBvZiB0ZXJ0aWFyeSBsaWdodC5cbiAgICAgICAgc2hhZG93OiB0cnVlLFxuICAgICAgICBzaGFkb3dRdWFsaXR5OiAnbWVkaXVtJyxcbiAgICAgICAgLy8gSW50ZW5zaXR5IG9mIHNlY29uZGFyeSBsaWdodC4gRGVmYXVsdGx5IG5vdCBlbmFibGUgc2Vjb25kYXJ5IGxpZ2h0LlxuICAgICAgICBpbnRlbnNpdHk6IDAsXG4gICAgICAgIC8vIENvbG9yIG9mIHRlcnRpYXJ5IGxpZ2h0LlxuICAgICAgICBjb2xvcjogJyNmZmYnLFxuICAgICAgICBhbHBoYTogODksXG4gICAgICAgIGJldGE6IDBcbiAgICB9LFxuICAgIC8vIENvbmZpZ3VyYXRpb24gb2YgY29uc3RhbnQgYW1iaWVudCBsaWdodC5cbiAgICAvLyBXaGljaCB3aWxsIGFkZCBhIGNvbnN0YW50IGNvbG9yIG9uIGFueSBzdXJmYWNlLlxuICAgIGFtYmllbnRMaWdodDoge1xuICAgICAgICAvLyBhbWJpZW50IGxpZ2h0IGludGVuc2l0eS5cbiAgICAgICAgaW50ZW5zaXR5OiAwLjMsXG4gICAgICAgIC8vIGFtYmllbnQgbGlnaHQgY29sb3IuXG4gICAgICAgIGNvbG9yOiAnI2ZmZidcbiAgICB9LFxuICAgIGFtYmllbnRDdWJlbWFwTGlnaHQ6IHtcbiAgICAgICAgLy8gRW52aXJvbm1lbnQgcGFub3JhbWEgdGV4dHVyZSB1cmwgZm9yIGN1YmVtYXAgbGlnaHRpbmdcbiAgICAgICAgdGV4dHVyZTogJycsXG4gICAgICAgIC8vIEV4cG9zdXJlIGZhY3RvciB3aGVuIHBhcnNpbmcgaGRyIGZvcm1hdC5cbiAgICAgICAgZXhwb3N1cmU6IDMsXG4gICAgICAgIC8vIEludGVuc2l0eSBvZiBkaWZmdXNlIHJhZGlhbmNlLlxuICAgICAgICBkaWZmdXNlSW50ZW5zaXR5OiAwLjUsXG4gICAgICAgIC8vIEludGVuc2l0eSBvZiBzcGVjdWxhciByYWRpYW5jZS5cbiAgICAgICAgc3BlY3VsYXJJbnRlbnNpdHk6IDAuNVxuICAgIH0sXG4gICAgLy8gQ29uZmlndXJhdGlvbiBhYm91dCBwb3N0IGVmZmVjdHMuXG4gICAgcG9zdEVmZmVjdDoge1xuICAgICAgICAvLyBJZiBlbmFibGUgcG9zdCBlZmZlY3RzLlxuICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAvLyBDb25maWd1cmF0aW9uIGFib3V0IGJsb29tIHBvc3QgZWZmZWN0XG4gICAgICAgIGJsb29tOiB7XG4gICAgICAgICAgICAvLyBJZiBlbmFibGUgYmxvb21cbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAvLyBJbnRlbnNpdHkgb2YgYmxvb21cbiAgICAgICAgICAgIGludGVuc2l0eTogMC4xXG4gICAgICAgIH0sXG4gICAgICAgIC8vIENvbmZpZ3VyYXRpb24gYWJvdXQgZGVwdGggb2YgZmllbGRcbiAgICAgICAgZGVwdGhPZkZpZWxkOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgLy8gRm9jYWwgZGlzdGFuY2Ugb2YgY2FtZXJhIGluIHdvcmQgc3BhY2UuXG4gICAgICAgICAgICBmb2NhbERpc3RhbmNlOiA1LFxuICAgICAgICAgICAgLy8gRm9jYWwgcmFuZ2Ugb2YgY2FtZXJhIGluIHdvcmQgc3BhY2UuIGluIHRoaXMgcmFuZ2UgaW1hZ2Ugd2lsbCBiZSBhYnNvbHV0ZWx5IHNoYXJwLlxuICAgICAgICAgICAgZm9jYWxSYW5nZTogMSxcbiAgICAgICAgICAgIC8vIE1heCBvdXQgb2YgZm9jdXMgYmx1ciByYWRpdXMuXG4gICAgICAgICAgICBibHVyUmFkaXVzOiA1LFxuICAgICAgICAgICAgLy8gZnN0b3Agb2YgY2FtZXJhLiBTbWFsbGVyIGZzdG9wIHdpbGwgaGF2ZSBzaGFsbG93IGRlcHRoIG9mIGZpZWxkXG4gICAgICAgICAgICBmc3RvcDogMi44LFxuICAgICAgICAgICAgLy8gQmx1ciBxdWFsaXR5LiAnbG93J3wnbWVkaXVtJ3wnaGlnaCd8J3VsdHJhJ1xuICAgICAgICAgICAgcXVhbGl0eTogJ21lZGl1bSdcbiAgICAgICAgfSxcbiAgICAgICAgLy8gQ29uZmlndXJhdGlvbiBhYm91dCBzY3JlZW4gc3BhY2UgYW1iaWVudCBvY2N1bHVzaW9uXG4gICAgICAgIHNjcmVlblNwYWNlQW1iaWVudE9jY2x1c2lvbjoge1xuICAgICAgICAgICAgLy8gSWYgZW5hYmxlIFNTQU9cbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAvLyBTYW1wbGluZyByYWRpdXMgaW4gd29yayBzcGFjZS5cbiAgICAgICAgICAgIC8vIExhcmdlciB3aWxsIHByb2R1Y2UgbW9yZSBzb2Z0IGNvbmNhdCBzaGFkb3cuXG4gICAgICAgICAgICAvLyBCdXQgYWxzbyBuZWVkcyBoaWdoZXIgcXVhbGl0eSBvciBpdCB3aWxsIGhhdmUgbW9yZSBvYnZpb3VzIGFydGlmYWN0c1xuICAgICAgICAgICAgcmFkaXVzOiAwLjUsXG4gICAgICAgICAgICAvLyBRdWFsaXR5IG9mIFNTQU8uICdsb3cnfCdtZWRpdW0nfCdoaWdoJ3wndWx0cmEnXG4gICAgICAgICAgICBxdWFsaXR5OiAnbWVkaXVtJyxcbiAgICAgICAgICAgIC8vIEludGVuc2l0eSBvZiBTU0FPXG4gICAgICAgICAgICBpbnRlbnNpdHk6IDFcbiAgICAgICAgfSxcbiAgICAgICAgLy8gQ29uZmlndXJhdGlvbiBhYm91dCBzY3JlZW4gc3BhY2UgcmVmbGVjdGlvblxuICAgICAgICBzY3JlZW5TcGFjZVJlZmxlY3Rpb246IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAvLyBJZiBwaHlzaWNhbGx5IGNvcnJlY3RlZC5cbiAgICAgICAgICAgIHBoeXNpY2FsOiBmYWxzZSxcbiAgICAgICAgICAgIC8vIFF1YWxpdHkgb2YgU1NSLiAnbG93J3wnbWVkaXVtJ3wnaGlnaCd8J3VsdHJhJ1xuICAgICAgICAgICAgcXVhbGl0eTogJ21lZGl1bScsXG4gICAgICAgICAgICAvLyBTdXJmYWNlIHdpdGggbGVzcyByb3VnaG5lc3Mgd2lsbCBoYXZlIHJlZmxlY3Rpb24uXG4gICAgICAgICAgICBtYXhSb3VnaG5lc3M6IDAuOFxuICAgICAgICB9LFxuICAgICAgICAvLyBDb25maWd1cmF0aW9uIGFib3V0IGNvbG9yIGNvcnJlY3Rpb25cbiAgICAgICAgY29sb3JDb3JyZWN0aW9uOiB7XG4gICAgICAgICAgICAvLyBJZiBlbmFibGUgY29sb3IgY29ycmVjdGlvblxuICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgZXhwb3N1cmU6IDAsXG4gICAgICAgICAgICBicmlnaHRuZXNzOiAwLFxuICAgICAgICAgICAgY29udHJhc3Q6IDEsXG4gICAgICAgICAgICBzYXR1cmF0aW9uOiAxLFxuICAgICAgICAgICAgLy8gTG9va3VwIHRleHR1cmUgZm9yIGNvbG9yIGNvcnJlY3Rpb24uXG4gICAgICAgICAgICAvLyBTZWUgaHR0cHM6Ly9lY29tZmUuZ2l0aHViLmlvL2VjaGFydHMtZG9jL3B1YmxpYy9jbi9vcHRpb24tZ2wuaHRtbCNnbG9iZS5wb3N0RWZmZWN0LmNvbG9yQ29ycmVjdGlvbi5sb29rdXBUZXh0dXJlXG4gICAgICAgICAgICBsb29rdXBUZXh0dXJlOiAnJ1xuICAgICAgICB9LFxuICAgICAgICBGWEFBOiB7XG4gICAgICAgICAgICAvLyBJZiBlbmFibGUgRlhBQVxuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZVxuICAgICAgICB9XG4gICAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9zcmMvZGVmYXVsdFNjZW5lQ29uZmlnLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///141\n");

/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export $override */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = clone;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = merge;\n/* unused harmony export mergeAll */\n/* unused harmony export extend */\n/* unused harmony export defaults */\n/* unused harmony export createCanvas */\n/* unused harmony export getContext */\n/* unused harmony export indexOf */\n/* unused harmony export inherits */\n/* unused harmony export mixin */\n/* unused harmony export isArrayLike */\n/* unused harmony export each */\n/* unused harmony export map */\n/* unused harmony export reduce */\n/* unused harmony export filter */\n/* unused harmony export find */\n/* unused harmony export bind */\n/* unused harmony export curry */\n/* unused harmony export isArray */\n/* unused harmony export isFunction */\n/* unused harmony export isString */\n/* unused harmony export isObject */\n/* unused harmony export isBuiltInObject */\n/* unused harmony export isTypedArray */\n/* unused harmony export isDom */\n/* unused harmony export eqNaN */\n/* unused harmony export retrieve */\n/* unused harmony export retrieve2 */\n/* unused harmony export retrieve3 */\n/* unused harmony export slice */\n/* unused harmony export normalizeCssArray */\n/* unused harmony export assert */\n/* unused harmony export trim */\n/* unused harmony export setAsPrimitive */\n/* unused harmony export isPrimitive */\n/* unused harmony export createHashMap */\n/* unused harmony export concatArray */\n/* unused harmony export noop */\n/**\n * @module zrender/core/util\n */\n\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n    '[object Function]': 1,\n    '[object RegExp]': 1,\n    '[object Date]': 1,\n    '[object Error]': 1,\n    '[object CanvasGradient]': 1,\n    '[object CanvasPattern]': 1,\n    // For node-canvas\n    '[object Image]': 1,\n    '[object Canvas]': 1\n};\n\nvar TYPED_ARRAY = {\n    '[object Int8Array]': 1,\n    '[object Uint8Array]': 1,\n    '[object Uint8ClampedArray]': 1,\n    '[object Int16Array]': 1,\n    '[object Uint16Array]': 1,\n    '[object Int32Array]': 1,\n    '[object Uint32Array]': 1,\n    '[object Float32Array]': 1,\n    '[object Float64Array]': 1\n};\n\nvar objToString = Object.prototype.toString;\n\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce;\n\n// Avoid assign to an exported variable, for transforming to cjs.\nvar methods = {};\n\nfunction $override(name, fn) {\n    // Clear ctx instance for different environment\n    if (name === 'createCanvas') {\n        _ctx = null;\n    }\n\n    methods[name] = fn;\n}\n\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\nfunction clone(source) {\n    if (source == null || typeof source !== 'object') {\n        return source;\n    }\n\n    var result = source;\n    var typeStr = objToString.call(source);\n\n    if (typeStr === '[object Array]') {\n        if (!isPrimitive(source)) {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n    }\n    else if (TYPED_ARRAY[typeStr]) {\n        if (!isPrimitive(source)) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n    }\n    else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n        result = {};\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                result[key] = clone(source[key]);\n            }\n        }\n    }\n\n    return result;\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\nfunction merge(target, source, overwrite) {\n    // We should escapse that source is string\n    // and enter for ... in ...\n    if (!isObject(source) || !isObject(target)) {\n        return overwrite ? clone(source) : target;\n    }\n\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var targetProp = target[key];\n            var sourceProp = source[key];\n\n            if (isObject(sourceProp)\n                && isObject(targetProp)\n                && !isArray(sourceProp)\n                && !isArray(targetProp)\n                && !isDom(sourceProp)\n                && !isDom(targetProp)\n                && !isBuiltInObject(sourceProp)\n                && !isBuiltInObject(targetProp)\n                && !isPrimitive(sourceProp)\n                && !isPrimitive(targetProp)\n            ) {\n                // 如果需要递归覆盖，就递归调用merge\n                merge(targetProp, sourceProp, overwrite);\n            }\n            else if (overwrite || !(key in target)) {\n                // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                target[key] = clone(source[key], true);\n            }\n        }\n    }\n\n    return target;\n}\n\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\nfunction mergeAll(targetAndSources, overwrite) {\n    var result = targetAndSources[0];\n    for (var i = 1, len = targetAndSources.length; i < len; i++) {\n        result = merge(result, targetAndSources[i], overwrite);\n    }\n    return result;\n}\n\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\nfunction defaults(target, source, overlay) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)\n            && (overlay ? source[key] != null : target[key] == null)\n        ) {\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\nvar createCanvas = function () {\n    return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n    return document.createElement('canvas');\n};\n\n// FIXME\nvar _ctx;\n\nfunction getContext() {\n    if (!_ctx) {\n        // Use util.createCanvas instead of createCanvas\n        // because createCanvas may be overwritten in different environment\n        _ctx = createCanvas().getContext('2d');\n    }\n    return _ctx;\n}\n\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\nfunction indexOf(array, value) {\n    if (array) {\n        if (array.indexOf) {\n            return array.indexOf(value);\n        }\n        for (var i = 0, len = array.length; i < len; i++) {\n            if (array[i] === value) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\nfunction inherits(clazz, baseClazz) {\n    var clazzPrototype = clazz.prototype;\n    function F() {}\n    F.prototype = baseClazz.prototype;\n    clazz.prototype = new F();\n\n    for (var prop in clazzPrototype) {\n        if (clazzPrototype.hasOwnProperty(prop)) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n    }\n    clazz.prototype.constructor = clazz;\n    clazz.superClass = baseClazz;\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\nfunction mixin(target, source, overlay) {\n    target = 'prototype' in target ? target.prototype : target;\n    source = 'prototype' in source ? source.prototype : source;\n\n    defaults(target, source, overlay);\n}\n\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\nfunction isArrayLike(data) {\n    if (!data) {\n        return;\n    }\n    if (typeof data === 'string') {\n        return false;\n    }\n    return typeof data.length === 'number';\n}\n\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\nfunction each(obj, cb, context) {\n    if (!(obj && cb)) {\n        return;\n    }\n    if (obj.forEach && obj.forEach === nativeForEach) {\n        obj.forEach(cb, context);\n    }\n    else if (obj.length === +obj.length) {\n        for (var i = 0, len = obj.length; i < len; i++) {\n            cb.call(context, obj[i], i, obj);\n        }\n    }\n    else {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                cb.call(context, obj[key], key, obj);\n            }\n        }\n    }\n}\n\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\nfunction map(obj, cb, context) {\n    if (!(obj && cb)) {\n        return;\n    }\n    if (obj.map && obj.map === nativeMap) {\n        return obj.map(cb, context);\n    }\n    else {\n        var result = [];\n        for (var i = 0, len = obj.length; i < len; i++) {\n            result.push(cb.call(context, obj[i], i, obj));\n        }\n        return result;\n    }\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\nfunction reduce(obj, cb, memo, context) {\n    if (!(obj && cb)) {\n        return;\n    }\n    if (obj.reduce && obj.reduce === nativeReduce) {\n        return obj.reduce(cb, memo, context);\n    }\n    else {\n        for (var i = 0, len = obj.length; i < len; i++) {\n            memo = cb.call(context, memo, obj[i], i, obj);\n        }\n        return memo;\n    }\n}\n\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\nfunction filter(obj, cb, context) {\n    if (!(obj && cb)) {\n        return;\n    }\n    if (obj.filter && obj.filter === nativeFilter) {\n        return obj.filter(cb, context);\n    }\n    else {\n        var result = [];\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                result.push(obj[i]);\n            }\n        }\n        return result;\n    }\n}\n\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\nfunction find(obj, cb, context) {\n    if (!(obj && cb)) {\n        return;\n    }\n    for (var i = 0, len = obj.length; i < len; i++) {\n        if (cb.call(context, obj[i], i, obj)) {\n            return obj[i];\n        }\n    }\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\nfunction bind(func, context) {\n    var args = nativeSlice.call(arguments, 2);\n    return function () {\n        return func.apply(context, args.concat(nativeSlice.call(arguments)));\n    };\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\nfunction curry(func) {\n    var args = nativeSlice.call(arguments, 1);\n    return function () {\n        return func.apply(this, args.concat(nativeSlice.call(arguments)));\n    };\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\nfunction isArray(value) {\n    return objToString.call(value) === '[object Array]';\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\nfunction isString(value) {\n    return objToString.call(value) === '[object String]';\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\nfunction isObject(value) {\n    // Avoid a V8 JIT bug in Chrome 19-20.\n    // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n    var type = typeof value;\n    return type === 'function' || (!!value && type === 'object');\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\nfunction isBuiltInObject(value) {\n    return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\nfunction isTypedArray(value) {\n    return !!TYPED_ARRAY[objToString.call(value)];\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\nfunction isDom(value) {\n    return typeof value === 'object'\n        && typeof value.nodeType === 'number'\n        && typeof value.ownerDocument === 'object';\n}\n\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\nfunction eqNaN(value) {\n    /* eslint-disable-next-line no-self-compare */\n    return value !== value;\n}\n\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\nfunction retrieve(values) {\n    for (var i = 0, len = arguments.length; i < len; i++) {\n        if (arguments[i] != null) {\n            return arguments[i];\n        }\n    }\n}\n\nfunction retrieve2(value0, value1) {\n    return value0 != null\n        ? value0\n        : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n    return value0 != null\n        ? value0\n        : value1 != null\n        ? value1\n        : value2;\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\nfunction slice() {\n    return Function.call.apply(nativeSlice, arguments);\n}\n\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\nfunction normalizeCssArray(val) {\n    if (typeof (val) === 'number') {\n        return [val, val, val, val];\n    }\n    var len = val.length;\n    if (len === 2) {\n        // vertical | horizontal\n        return [val[0], val[1], val[0], val[1]];\n    }\n    else if (len === 3) {\n        // top | horizontal | bottom\n        return [val[0], val[1], val[2], val[1]];\n    }\n    return val;\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\n\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\nfunction trim(str) {\n    if (str == null) {\n        return null;\n    }\n    else if (typeof str.trim === 'function') {\n        return str.trim();\n    }\n    else {\n        return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n    }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\nfunction setAsPrimitive(obj) {\n    obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n    return obj[primitiveKey];\n}\n\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\nfunction HashMap(obj) {\n    var isArr = isArray(obj);\n    // Key should not be set on this, otherwise\n    // methods get/set/... may be overrided.\n    this.data = {};\n    var thisMap = this;\n\n    (obj instanceof HashMap)\n        ? obj.each(visit)\n        : (obj && each(obj, visit));\n\n    function visit(value, key) {\n        isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n    }\n}\n\nHashMap.prototype = {\n    constructor: HashMap,\n    // Do not provide `has` method to avoid defining what is `has`.\n    // (We usually treat `null` and `undefined` as the same, different\n    // from ES6 Map).\n    get: function (key) {\n        return this.data.hasOwnProperty(key) ? this.data[key] : null;\n    },\n    set: function (key, value) {\n        // Comparing with invocation chaining, `return value` is more commonly\n        // used in this case: `var someVal = map.set('a', genVal());`\n        return (this.data[key] = value);\n    },\n    // Although util.each can be performed on this hashMap directly, user\n    // should not use the exposed keys, who are prefixed.\n    each: function (cb, context) {\n        context !== void 0 && (cb = bind(cb, context));\n        /* eslint-disable guard-for-in */\n        for (var key in this.data) {\n            this.data.hasOwnProperty(key) && cb(this.data[key], key);\n        }\n        /* eslint-enable guard-for-in */\n    },\n    // Do not use this method if performance sensitive.\n    removeKey: function (key) {\n        delete this.data[key];\n    }\n};\n\nfunction createHashMap(obj) {\n    return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n    var newArray = new a.constructor(a.length + b.length);\n    for (var i = 0; i < a.length; i++) {\n        newArray[i] = a[i];\n    }\n    var offset = a.length;\n    for (i = 0; i < b.length; i++) {\n        newArray[i + offset] = b[i];\n    }\n    return newArray;\n}\n\n\nfunction noop() {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///142\n");

/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_BoundingBox__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_dep_glmatrix__ = __webpack_require__(144);\n\n\nvar vec3 = __WEBPACK_IMPORTED_MODULE_1_claygl_src_dep_glmatrix__[\"a\" /* default */].vec3;\n\nfunction getBoundingBoxOfSkinningMesh(mesh, out) {\n    var pos = [];\n    var joint = [];\n    var weight = [];\n    var skinMatrices = [];\n    var skinnedPos = [];\n    var tmp = [];\n\n    var geometry = mesh.geometry;\n    var skinMatricesArray = mesh.skeleton.getSubSkinMatrices(mesh.__GUID__, mesh.joints);\n    for (var i = 0; i < mesh.joints.length; i++) {\n        skinMatrices[i] = skinMatrices[i] || [];\n        for (var k = 0; k < 16; k++) {\n            skinMatrices[i][k] = skinMatricesArray[i * 16 + k];\n        }\n    }\n\n    var positionAttr = geometry.attributes.position;\n    var weightAttr = geometry.attributes.weight;\n    var jointAttr = geometry.attributes.joint;\n\n    var min = [Infinity, Infinity, Infinity];\n    var max = [-Infinity, -Infinity, -Infinity];\n\n    for (var i = 0; i < geometry.vertexCount; i++) {\n        positionAttr.get(i, pos);\n        weightAttr.get(i, weight);\n        jointAttr.get(i, joint);\n        weight[3] = 1 - weight[0] - weight[1] - weight[2];\n\n        vec3.set(skinnedPos, 0, 0, 0);\n        for (var k = 0; k < 4; k++) {\n            if (joint[k] >= 0 && weight[k] > 1e-6) {\n                vec3.transformMat4(tmp, pos, skinMatrices[joint[k]]);\n                vec3.scaleAndAdd(skinnedPos, skinnedPos, tmp, weight[k]);\n            }\n        }\n\n        vec3.min(min, min, skinnedPos);\n        vec3.max(max, max, skinnedPos);\n    }\n    out.min.setArray(min);\n    out.max.setArray(max);\n}\n\nfunction getBoundingBoxWithSkinning(node, out) {\n\n    out = out || new __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_BoundingBox__[\"a\" /* default */]();\n\n    var tmpBBox = new __WEBPACK_IMPORTED_MODULE_0_claygl_src_math_BoundingBox__[\"a\" /* default */]();\n    node.traverse(function (mesh) {\n        if (mesh.geometry) {\n            if (mesh.isSkinnedMesh()) {\n                getBoundingBoxOfSkinningMesh(mesh, tmpBBox);\n                mesh.geometry.boundingBox.copy(tmpBBox);\n            }\n            else {\n                tmpBBox.copy(mesh.geometry.boundingBox);\n                tmpBBox.applyTransform(mesh.worldTransform);\n            }\n            out.union(tmpBBox);\n        }\n    });\n    return out;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (getBoundingBoxWithSkinning);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy91dGlsL2dldEJvdW5kaW5nQm94V2l0aFNraW5uaW5nLmpzPzE5YjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJvdW5kaW5nQm94IGZyb20gJ2NsYXlnbC9zcmMvbWF0aC9Cb3VuZGluZ0JveCc7XG5pbXBvcnQgZ2xtYXRyaXggZnJvbSAnY2xheWdsL3NyYy9kZXAvZ2xtYXRyaXgnO1xudmFyIHZlYzMgPSBnbG1hdHJpeC52ZWMzO1xuXG5mdW5jdGlvbiBnZXRCb3VuZGluZ0JveE9mU2tpbm5pbmdNZXNoKG1lc2gsIG91dCkge1xuICAgIHZhciBwb3MgPSBbXTtcbiAgICB2YXIgam9pbnQgPSBbXTtcbiAgICB2YXIgd2VpZ2h0ID0gW107XG4gICAgdmFyIHNraW5NYXRyaWNlcyA9IFtdO1xuICAgIHZhciBza2lubmVkUG9zID0gW107XG4gICAgdmFyIHRtcCA9IFtdO1xuXG4gICAgdmFyIGdlb21ldHJ5ID0gbWVzaC5nZW9tZXRyeTtcbiAgICB2YXIgc2tpbk1hdHJpY2VzQXJyYXkgPSBtZXNoLnNrZWxldG9uLmdldFN1YlNraW5NYXRyaWNlcyhtZXNoLl9fR1VJRF9fLCBtZXNoLmpvaW50cyk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtZXNoLmpvaW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBza2luTWF0cmljZXNbaV0gPSBza2luTWF0cmljZXNbaV0gfHwgW107XG4gICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgMTY7IGsrKykge1xuICAgICAgICAgICAgc2tpbk1hdHJpY2VzW2ldW2tdID0gc2tpbk1hdHJpY2VzQXJyYXlbaSAqIDE2ICsga107XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcG9zaXRpb25BdHRyID0gZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbjtcbiAgICB2YXIgd2VpZ2h0QXR0ciA9IGdlb21ldHJ5LmF0dHJpYnV0ZXMud2VpZ2h0O1xuICAgIHZhciBqb2ludEF0dHIgPSBnZW9tZXRyeS5hdHRyaWJ1dGVzLmpvaW50O1xuXG4gICAgdmFyIG1pbiA9IFtJbmZpbml0eSwgSW5maW5pdHksIEluZmluaXR5XTtcbiAgICB2YXIgbWF4ID0gWy1JbmZpbml0eSwgLUluZmluaXR5LCAtSW5maW5pdHldO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBnZW9tZXRyeS52ZXJ0ZXhDb3VudDsgaSsrKSB7XG4gICAgICAgIHBvc2l0aW9uQXR0ci5nZXQoaSwgcG9zKTtcbiAgICAgICAgd2VpZ2h0QXR0ci5nZXQoaSwgd2VpZ2h0KTtcbiAgICAgICAgam9pbnRBdHRyLmdldChpLCBqb2ludCk7XG4gICAgICAgIHdlaWdodFszXSA9IDEgLSB3ZWlnaHRbMF0gLSB3ZWlnaHRbMV0gLSB3ZWlnaHRbMl07XG5cbiAgICAgICAgdmVjMy5zZXQoc2tpbm5lZFBvcywgMCwgMCwgMCk7XG4gICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgNDsgaysrKSB7XG4gICAgICAgICAgICBpZiAoam9pbnRba10gPj0gMCAmJiB3ZWlnaHRba10gPiAxZS02KSB7XG4gICAgICAgICAgICAgICAgdmVjMy50cmFuc2Zvcm1NYXQ0KHRtcCwgcG9zLCBza2luTWF0cmljZXNbam9pbnRba11dKTtcbiAgICAgICAgICAgICAgICB2ZWMzLnNjYWxlQW5kQWRkKHNraW5uZWRQb3MsIHNraW5uZWRQb3MsIHRtcCwgd2VpZ2h0W2tdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZlYzMubWluKG1pbiwgbWluLCBza2lubmVkUG9zKTtcbiAgICAgICAgdmVjMy5tYXgobWF4LCBtYXgsIHNraW5uZWRQb3MpO1xuICAgIH1cbiAgICBvdXQubWluLnNldEFycmF5KG1pbik7XG4gICAgb3V0Lm1heC5zZXRBcnJheShtYXgpO1xufVxuXG5mdW5jdGlvbiBnZXRCb3VuZGluZ0JveFdpdGhTa2lubmluZyhub2RlLCBvdXQpIHtcblxuICAgIG91dCA9IG91dCB8fCBuZXcgQm91bmRpbmdCb3goKTtcblxuICAgIHZhciB0bXBCQm94ID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgbm9kZS50cmF2ZXJzZShmdW5jdGlvbiAobWVzaCkge1xuICAgICAgICBpZiAobWVzaC5nZW9tZXRyeSkge1xuICAgICAgICAgICAgaWYgKG1lc2guaXNTa2lubmVkTWVzaCgpKSB7XG4gICAgICAgICAgICAgICAgZ2V0Qm91bmRpbmdCb3hPZlNraW5uaW5nTWVzaChtZXNoLCB0bXBCQm94KTtcbiAgICAgICAgICAgICAgICBtZXNoLmdlb21ldHJ5LmJvdW5kaW5nQm94LmNvcHkodG1wQkJveCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0bXBCQm94LmNvcHkobWVzaC5nZW9tZXRyeS5ib3VuZGluZ0JveCk7XG4gICAgICAgICAgICAgICAgdG1wQkJveC5hcHBseVRyYW5zZm9ybShtZXNoLndvcmxkVHJhbnNmb3JtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG91dC51bmlvbih0bXBCQm94KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBvdXQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldEJvdW5kaW5nQm94V2l0aFNraW5uaW5nO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL3NyYy91dGlsL2dldEJvdW5kaW5nQm94V2l0aFNraW5uaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///143\n");

/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__glmatrix__ = __webpack_require__(145);\n// DEPRECATED\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__glmatrix__[\"a\" /* default */]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2RlcC9nbG1hdHJpeC5qcz9jMTZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIERFUFJFQ0FURURcbmltcG9ydCBnbG1hdHJpeCBmcm9tICcuLi9nbG1hdHJpeCc7XG5cbmV4cG9ydCBkZWZhdWx0IGdsbWF0cml4O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvZGVwL2dsbWF0cml4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///144\n");

/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__vec2__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__vec3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vec4__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mat2__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mat2d__ = __webpack_require__(147);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mat3__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mat4__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__quat__ = __webpack_require__(18);\n/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.2.2\n */\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    vec2: __WEBPACK_IMPORTED_MODULE_0__vec2__[\"a\" /* default */],\n    vec3: __WEBPACK_IMPORTED_MODULE_1__vec3__[\"a\" /* default */],\n    vec4: __WEBPACK_IMPORTED_MODULE_2__vec4__[\"a\" /* default */],\n    mat2: __WEBPACK_IMPORTED_MODULE_3__mat2__[\"a\" /* default */],\n    mat2d: __WEBPACK_IMPORTED_MODULE_4__mat2d__[\"a\" /* default */],\n    mat3: __WEBPACK_IMPORTED_MODULE_5__mat3__[\"a\" /* default */],\n    mat4: __WEBPACK_IMPORTED_MODULE_6__mat4__[\"a\" /* default */],\n    quat: __WEBPACK_IMPORTED_MODULE_7__quat__[\"a\" /* default */]\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL2dsbWF0cml4L2luZGV4LmpzPzNjYzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGdsLW1hdHJpeCAtIEhpZ2ggcGVyZm9ybWFuY2UgbWF0cml4IGFuZCB2ZWN0b3Igb3BlcmF0aW9uc1xuICogQGF1dGhvciBCcmFuZG9uIEpvbmVzXG4gKiBAYXV0aG9yIENvbGluIE1hY0tlbnppZSBJVlxuICogQHZlcnNpb24gMi4yLjJcbiAqL1xuXG4vKiBDb3B5cmlnaHQgKGMpIDIwMTMsIEJyYW5kb24gSm9uZXMsIENvbGluIE1hY0tlbnppZSBJVi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cblxuUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0IG1vZGlmaWNhdGlvbixcbmFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDpcblxuICAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpc1xuICAgIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLlxuICAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAgICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uXG4gICAgYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG5cblRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgXCJBUyBJU1wiIEFORFxuQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRURcbldBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkVcbkRJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgSE9MREVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SXG5BTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVNcbihJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUztcbkxPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTlxuQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlRcbihJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTXG5TT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4gKi9cblxuaW1wb3J0IHZlYzIgZnJvbSAnLi92ZWMyJztcbmltcG9ydCB2ZWMzIGZyb20gJy4vdmVjMyc7XG5pbXBvcnQgdmVjNCBmcm9tICcuL3ZlYzQnO1xuaW1wb3J0IG1hdDIgZnJvbSAnLi9tYXQyJztcbmltcG9ydCBtYXQyZCBmcm9tICcuL21hdDJkJztcbmltcG9ydCBtYXQzIGZyb20gJy4vbWF0Myc7XG5pbXBvcnQgbWF0NCBmcm9tICcuL21hdDQnO1xuaW1wb3J0IHF1YXQgZnJvbSAnLi9xdWF0JztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIHZlYzI6IHZlYzIsXG4gICAgdmVjMzogdmVjMyxcbiAgICB2ZWM0OiB2ZWM0LFxuICAgIG1hdDI6IG1hdDIsXG4gICAgbWF0MmQ6IG1hdDJkLFxuICAgIG1hdDM6IG1hdDMsXG4gICAgbWF0NDogbWF0NCxcbiAgICBxdWF0OiBxdWF0XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2NsYXlnbC9zcmMvZ2xtYXRyaXgvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///145\n");

/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\n\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) {\n    L[2] = a[2]/a[0];\n    U[0] = a[0];\n    U[1] = a[1];\n    U[3] = a[3] - L[2] * U[1];\n    return [L, D, U];\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (mat2);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///146\n");

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(15);\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new __WEBPACK_IMPORTED_MODULE_0__common__[\"a\" /* GLMAT_ARRAY_TYPE */](6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (mat2d);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///147\n");

/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math_Vector2__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math_Vector3__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__GestureMgr__ = __webpack_require__(149);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_vendor__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__camera_Perspective__ = __webpack_require__(19);\n\n\n\n\n\n\n\nvar MOUSE_BUTTON_KEY_MAP = {\n    left: 0,\n    middle: 1,\n    right: 2\n};\n\nfunction firstNotNull() {\n    for (var i = 0, len = arguments.length; i < len; i++) {\n        if (arguments[i] != null) {\n            return arguments[i];\n        }\n    }\n}\n\nfunction convertToArray(val) {\n    if (!Array.isArray(val)) {\n        val = [val, val];\n    }\n    return val;\n}\n\n/**\n * @constructor\n * @alias clay.plugin.OrbitControl\n * @extends clay.core.Base\n */\nvar OrbitControl = __WEBPACK_IMPORTED_MODULE_0__core_Base__[\"a\" /* default */].extend(function () {\n\n    return /** @lends clay.plugin.OrbitControl# */ {\n\n        /**\n         * @type {clay.Timeline}\n         */\n        timeline: null,\n\n        /**\n         * @type {HTMLElement}\n         */\n        domElement: null,\n\n        /**\n         * @type {clay.Node}\n         */\n        target: null,\n        /**\n         * @type {clay.Vector3}\n         */\n        _center: new __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */](),\n\n        /**\n         * Minimum distance to the center\n         * @type {number}\n         * @default 0.5\n         */\n        minDistance: 0.1,\n\n        /**\n         * Maximum distance to the center\n         * @type {number}\n         * @default 2\n         */\n        maxDistance: 1000,\n\n        /**\n         * Only available when camera is orthographic\n         */\n        maxOrthographicSize: 300,\n\n        /**\n         * Only available when camera is orthographic\n         */\n        minOrthographicSize: 30,\n\n        /**\n         * Aspect of orthographic camera\n         * Only available when camera is orthographic\n         */\n        orthographicAspect: 1,\n\n        /**\n         * Minimum alpha rotation\n         */\n        minAlpha: -90,\n\n        /**\n         * Maximum alpha rotation\n         */\n        maxAlpha: 90,\n\n        /**\n         * Minimum beta rotation\n         */\n        minBeta: -Infinity,\n        /**\n         * Maximum beta rotation\n         */\n        maxBeta: Infinity,\n\n        /**\n         * Start auto rotating after still for the given time\n         */\n        autoRotateAfterStill: 0,\n\n        /**\n         * Direction of autoRotate. cw or ccw when looking top down.\n         */\n        autoRotateDirection: 'cw',\n\n        /**\n         * Degree per second\n         */\n        autoRotateSpeed: 60,\n\n        panMouseButton: 'middle',\n        rotateMouseButton: 'left',\n\n        /**\n         * Pan or rotate\n         * @type {String}\n         */\n        _mode: 'rotate',\n\n        /**\n         * @param {number}\n         */\n        damping: 0.8,\n\n        /**\n         * @param {number}\n         */\n        rotateSensitivity: 1,\n\n        /**\n         * @param {number}\n         */\n        zoomSensitivity: 1,\n\n        /**\n         * @param {number}\n         */\n        panSensitivity: 1,\n\n        _needsUpdate: false,\n\n        _rotating: false,\n\n        // Rotation around yAxis\n        _phi: 0,\n        // Rotation around xAxis\n        _theta: 0,\n\n        _mouseX: 0,\n        _mouseY: 0,\n\n        _rotateVelocity: new __WEBPACK_IMPORTED_MODULE_1__math_Vector2__[\"a\" /* default */](),\n\n        _panVelocity: new __WEBPACK_IMPORTED_MODULE_1__math_Vector2__[\"a\" /* default */](),\n\n        _distance: 20,\n\n        _zoomSpeed: 0,\n\n        _stillTimeout: 0,\n\n        _animators: [],\n\n        _gestureMgr: new __WEBPACK_IMPORTED_MODULE_3__GestureMgr__[\"a\" /* default */]()\n    };\n}, function () {\n    // Each OrbitControl has it's own handler\n    this._mouseDownHandler = this._mouseDownHandler.bind(this);\n    this._mouseWheelHandler = this._mouseWheelHandler.bind(this);\n    this._mouseMoveHandler = this._mouseMoveHandler.bind(this);\n    this._mouseUpHandler = this._mouseUpHandler.bind(this);\n    this._pinchHandler = this._pinchHandler.bind(this);\n\n    this.init();\n}, /** @lends clay.plugin.OrbitControl# */ {\n    /**\n     * Initialize.\n     * Mouse event binding\n     */\n    init: function () {\n        var dom = this.domElement;\n\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'touchstart', this._mouseDownHandler);\n\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'mousedown', this._mouseDownHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'wheel', this._mouseWheelHandler);\n\n        if (this.timeline) {\n            this.timeline.on('frame', this.update, this);\n        }\n        if (this.target) {\n            this.decomposeTransform();\n        }\n    },\n\n    /**\n     * Dispose.\n     * Mouse event unbinding\n     */\n    dispose: function () {\n        var dom = this.domElement;\n\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'touchstart', this._mouseDownHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'touchmove', this._mouseMoveHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'touchend', this._mouseUpHandler);\n\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'mousedown', this._mouseDownHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'mousemove', this._mouseMoveHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'mouseup', this._mouseUpHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'wheel', this._mouseWheelHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'mouseout', this._mouseUpHandler);\n\n        if (this.timeline) {\n            this.timeline.off('frame', this.update);\n        }\n        this.stopAllAnimation();\n    },\n\n    /**\n     * Get distance\n     * @return {number}\n     */\n    getDistance: function () {\n        return this._distance;\n    },\n\n    /**\n     * Set distance\n     * @param {number} distance\n     */\n    setDistance: function (distance) {\n        this._distance = distance;\n        this._needsUpdate = true;\n    },\n\n    /**\n     * Get size of orthographic viewing volume\n     * @return {number}\n     */\n    getOrthographicSize: function () {\n        return this._orthoSize;\n    },\n\n    /**\n     * Set size of orthographic viewing volume\n     * @param {number} size\n     */\n    setOrthographicSize: function (size) {\n        this._orthoSize = size;\n        this._needsUpdate = true;\n    },\n\n    /**\n     * Get alpha rotation\n     * Alpha angle for top-down rotation. Positive to rotate to top.\n     *\n     * Which means camera rotation around x axis.\n     */\n    getAlpha: function () {\n        return this._theta / Math.PI * 180;\n    },\n\n    /**\n     * Get beta rotation\n     * Beta angle for left-right rotation. Positive to rotate to right.\n     *\n     * Which means camera rotation around y axis.\n     */\n    getBeta: function () {\n        return -this._phi / Math.PI * 180;\n    },\n\n    /**\n     * Get control center\n     * @return {Array.<number>}\n     */\n    getCenter: function () {\n        return this._center.toArray();\n    },\n\n    /**\n     * Set alpha rotation angle\n     * @param {number} alpha\n     */\n    setAlpha: function (alpha) {\n        alpha = Math.max(Math.min(this.maxAlpha, alpha), this.minAlpha);\n\n        this._theta = alpha / 180 * Math.PI;\n        this._needsUpdate = true;\n    },\n\n    /**\n     * Set beta rotation angle\n     * @param {number} beta\n     */\n    setBeta: function (beta) {\n        beta = Math.max(Math.min(this.maxBeta, beta), this.minBeta);\n\n        this._phi = -beta / 180 * Math.PI;\n        this._needsUpdate = true;\n    },\n\n    /**\n     * Set control center\n     * @param {Array.<number>} center\n     */\n    setCenter: function (centerArr) {\n        this._center.setArray(centerArr);\n    },\n\n    setOption: function (opts) {\n        opts = opts || {};\n\n        ['autoRotate', 'autoRotateAfterStill',\n            'autoRotateDirection', 'autoRotateSpeed',\n            'damping',\n            'minDistance', 'maxDistance',\n            'minOrthographicSize', 'maxOrthographicSize', 'orthographicAspect',\n            'minAlpha', 'maxAlpha', 'minBeta', 'maxBeta',\n            'rotateSensitivity', 'zoomSensitivity', 'panSensitivity'\n        ].forEach(function (key) {\n            if (opts[key] != null) {\n                this[key] = opts[key];\n            }\n        }, this);\n\n        if (opts.distance != null) {\n            this.setDistance(opts.distance);\n        }\n        if (opts.orthographicSize != null) {\n            this.setOrthographicSize(opts.orthographicSize);\n        }\n\n        if (opts.alpha != null) {\n            this.setAlpha(opts.alpha);\n        }\n        if (opts.beta != null) {\n            this.setBeta(opts.beta);\n        }\n\n        if (opts.center) {\n            this.setCenter(opts.center);\n        }\n\n        if (this.target) {\n            this._updateTransform();\n            this.target.update();\n        }\n    },\n\n    /**\n     * @param {Object} opts\n     * @param {number} opts.distance\n     * @param {number} opts.orthographicSize\n     * @param {number} opts.alpha\n     * @param {number} opts.beta\n     * @param {Array.<number>} opts.center\n     * @param {number} [opts.duration=1000]\n     * @param {number} [opts.easing='linear']\n     * @param {number} [opts.done]\n     */\n    animateTo: function (opts) {\n        var self = this;\n\n        var obj = {};\n        var target = {};\n        var timeline = this.timeline;\n        if (!timeline) {\n            return;\n        }\n        if (opts.distance != null) {\n            obj.distance = this.getDistance();\n            target.distance = opts.distance;\n        }\n        if (opts.orthographicSize != null) {\n            obj.orthographicSize = this.getOrthographicSize();\n            target.orthographicSize = opts.orthographicSize;\n        }\n        if (opts.alpha != null) {\n            obj.alpha = this.getAlpha();\n            target.alpha = opts.alpha;\n        }\n        if (opts.beta != null) {\n            obj.beta = this.getBeta();\n            target.beta = opts.beta;\n        }\n        if (opts.center != null) {\n            obj.center = this.getCenter();\n            target.center = opts.center;\n        }\n\n        return this._addAnimator(\n            timeline.animate(obj)\n                .when(opts.duration || 1000, target)\n                .during(function () {\n                    if (obj.alpha != null) {\n                        self.setAlpha(obj.alpha);\n                    }\n                    if (obj.beta != null) {\n                        self.setBeta(obj.beta);\n                    }\n                    if (obj.distance != null) {\n                        self.setDistance(obj.distance);\n                    }\n                    if (obj.orthographicSize != null) {\n                        self.setOrthographicSize(obj.orthographicSize);\n                    }\n                    if (obj.center != null) {\n                        self.setCenter(obj.center);\n                    }\n                    self._needsUpdate = true;\n                })\n                .done(opts.done)\n        ).start(opts.easing || 'linear');\n    },\n\n    /**\n     * Stop all animations\n     */\n    stopAllAnimation: function () {\n        for (var i = 0; i < this._animators.length; i++) {\n            this._animators[i].stop();\n        }\n        this._animators.length = 0;\n    },\n\n    _isAnimating: function () {\n        return this._animators.length > 0;\n    },\n    /**\n     * Call update each frame\n     * @param  {number} deltaTime Frame time\n     */\n    update: function (deltaTime) {\n\n        deltaTime = deltaTime || 16;\n\n        if (this._rotating) {\n            var radian = (this.autoRotateDirection === 'cw' ? 1 : -1)\n                * this.autoRotateSpeed / 180 * Math.PI;\n            this._phi -= radian * deltaTime / 1000;\n            this._needsUpdate = true;\n        }\n        else if (this._rotateVelocity.len() > 0) {\n            this._needsUpdate = true;\n        }\n\n        if (Math.abs(this._zoomSpeed) > 0.01 || this._panVelocity.len() > 0) {\n            this._needsUpdate = true;\n        }\n\n        if (!this._needsUpdate) {\n            return;\n        }\n\n        // Fixed deltaTime\n        this._updateDistanceOrSize(Math.min(deltaTime, 50));\n        this._updatePan(Math.min(deltaTime, 50));\n\n        this._updateRotate(Math.min(deltaTime, 50));\n\n        this._updateTransform();\n\n        this.target.update();\n\n        this.trigger('update');\n\n        this._needsUpdate = false;\n    },\n\n    _updateRotate: function (deltaTime) {\n        var velocity = this._rotateVelocity;\n        this._phi = velocity.y * deltaTime / 20 + this._phi;\n        this._theta = velocity.x * deltaTime / 20 + this._theta;\n\n        this.setAlpha(this.getAlpha());\n        this.setBeta(this.getBeta());\n\n        this._vectorDamping(velocity, this.damping);\n    },\n\n    _updateDistanceOrSize: function (deltaTime) {\n        this._setDistance(this._distance + this._zoomSpeed * deltaTime / 20);\n        if (!(this.target instanceof __WEBPACK_IMPORTED_MODULE_5__camera_Perspective__[\"a\" /* default */])) {\n            this._setOrthoSize(this._orthoSize + this._zoomSpeed * deltaTime / 20);\n        }\n\n        this._zoomSpeed *= Math.pow(this.damping, deltaTime / 16);\n    },\n\n    _setDistance: function (distance) {\n        this._distance = Math.max(Math.min(distance, this.maxDistance), this.minDistance);\n    },\n\n    _setOrthoSize: function (size) {\n        this._orthoSize = Math.max(Math.min(size, this.maxOrthographicSize), this.minOrthographicSize);\n        var camera = this.target;\n        var cameraHeight = this._orthoSize;\n        // TODO\n        var cameraWidth = cameraHeight * this.orthographicAspect;\n        camera.left = -cameraWidth / 2;\n        camera.right = cameraWidth / 2;\n        camera.top = cameraHeight / 2;\n        camera.bottom = -cameraHeight / 2;\n    },\n\n    _updatePan: function (deltaTime) {\n        var velocity = this._panVelocity;\n        var len = this._distance;\n\n        var target = this.target;\n        var yAxis = target.worldTransform.y;\n        var xAxis = target.worldTransform.x;\n\n        // PENDING\n        this._center\n            .scaleAndAdd(xAxis, -velocity.x * len / 200)\n            .scaleAndAdd(yAxis, -velocity.y * len / 200);\n\n        this._vectorDamping(velocity, 0);\n\n        velocity.x = velocity.y = 0;\n    },\n\n    _updateTransform: function () {\n        var camera = this.target;\n\n        var dir = new __WEBPACK_IMPORTED_MODULE_2__math_Vector3__[\"a\" /* default */]();\n        var theta = this._theta + Math.PI / 2;\n        var phi = this._phi + Math.PI / 2;\n        var r = Math.sin(theta);\n\n        dir.x = r * Math.cos(phi);\n        dir.y = -Math.cos(theta);\n        dir.z = r * Math.sin(phi);\n\n        camera.position.copy(this._center).scaleAndAdd(dir, this._distance);\n        camera.rotation.identity()\n            // First around y, then around x\n            .rotateY(-this._phi)\n            .rotateX(-this._theta);\n    },\n\n    _startCountingStill: function () {\n        clearTimeout(this._stillTimeout);\n\n        var time = this.autoRotateAfterStill;\n        var self = this;\n        if (!isNaN(time) && time > 0) {\n            this._stillTimeout = setTimeout(function () {\n                self._rotating = true;\n            }, time * 1000);\n        }\n    },\n\n    _vectorDamping: function (v, damping) {\n        var speed = v.len();\n        speed = speed * damping;\n        if (speed < 1e-4) {\n            speed = 0;\n        }\n        v.normalize().scale(speed);\n    },\n\n    decomposeTransform: function () {\n        if (!this.target) {\n            return;\n        }\n\n        this.target.updateWorldTransform();\n\n        var forward = this.target.worldTransform.z;\n        var alpha = Math.asin(forward.y);\n        var beta = Math.atan2(forward.x, forward.z);\n\n        this._theta = alpha;\n        this._phi = -beta;\n\n        this.setBeta(this.getBeta());\n        this.setAlpha(this.getAlpha());\n\n        this._setDistance(this.target.position.dist(this._center));\n        if (!(this.target instanceof __WEBPACK_IMPORTED_MODULE_5__camera_Perspective__[\"a\" /* default */])){\n            this._setOrthoSize(this.target.top - this.target.bottom);\n        }\n    },\n\n    _mouseDownHandler: function (e) {\n        if (this._isAnimating()) {\n            return;\n        }\n        var x = e.clientX;\n        var y = e.clientY;\n        // Touch\n        if (e.targetTouches) {\n            var touch = e.targetTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n\n            this._mode = 'rotate';\n\n            this._processGesture(e, 'start');\n        }\n        else {\n            if (e.button === MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton]) {\n                this._mode = 'rotate';\n            }\n            else if (e.button === MOUSE_BUTTON_KEY_MAP[this.panMouseButton]) {\n                this._mode = 'pan';\n\n                /**\n                 * Vendors like Mozilla provide a mouse-driven panning feature\n                 * that is activated when the middle mouse button is pressed.\n                 *\n                 * @see https://w3c.github.io/uievents/#event-type-mousedown\n                 */\n                e.preventDefault();\n            }\n            else {\n                this._mode = null;\n            }\n        }\n\n        var dom = this.domElement;\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'touchmove', this._mouseMoveHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'touchend', this._mouseUpHandler);\n\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'mousemove', this._mouseMoveHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'mouseup', this._mouseUpHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].addEventListener(dom, 'mouseout', this._mouseUpHandler);\n\n        // Reset rotate velocity\n        this._rotateVelocity.set(0, 0);\n        this._rotating = false;\n        if (this.autoRotate) {\n            this._startCountingStill();\n        }\n\n        this._mouseX = x;\n        this._mouseY = y;\n    },\n\n    _mouseMoveHandler: function (e) {\n        if (this._isAnimating()) {\n            return;\n        }\n        var x = e.clientX;\n        var y = e.clientY;\n\n        var haveGesture;\n        // Touch\n        if (e.targetTouches) {\n            var touch = e.targetTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n\n            haveGesture = this._processGesture(e, 'change');\n        }\n\n        var panSensitivity = convertToArray(this.panSensitivity);\n        var rotateSensitivity = convertToArray(this.rotateSensitivity);\n\n        if (!haveGesture) {\n            if (this._mode === 'rotate') {\n                this._rotateVelocity.y += (x - this._mouseX) / this.domElement.clientWidth * 2 * rotateSensitivity[0];\n                this._rotateVelocity.x += (y - this._mouseY) / this.domElement.clientHeight * 2 * rotateSensitivity[1];\n            }\n            else if (this._mode === 'pan') {\n                this._panVelocity.x += (x - this._mouseX) / this.domElement.clientWidth * panSensitivity[0] * 400;\n                this._panVelocity.y += (-y + this._mouseY) / this.domElement.clientHeight * panSensitivity[1] * 400;\n            }\n        }\n\n        this._mouseX = x;\n        this._mouseY = y;\n\n        e.preventDefault && e.preventDefault();\n    },\n\n    _mouseWheelHandler: function (e) {\n        if (this._isAnimating()) {\n            return;\n        }\n        var delta = e.deltaY;\n        if (delta === 0) {\n            return;\n        }\n        this._zoomHandler(e, delta > 0 ? 1 : -1);\n    },\n\n    _pinchHandler: function (e) {\n        if (this._isAnimating()) {\n            return;\n        }\n        this._zoomHandler(e, e.pinchScale > 1 ? 0.4 : -0.4);\n    },\n\n    _zoomHandler: function (e, delta) {\n\n        var speed;\n        if (this.target instanceof __WEBPACK_IMPORTED_MODULE_5__camera_Perspective__[\"a\" /* default */]) {\n            speed = Math.max(Math.max(Math.min(\n                this._distance - this.minDistance,\n                this.maxDistance - this._distance\n            )) / 20, 0.5);\n        }\n        else {\n            speed = Math.max(Math.max(Math.min(\n                this._orthoSize - this.minOrthographicSize,\n                this.maxOrthographicSize - this._orthoSize\n            )) / 20, 0.5);\n        }\n\n        this._zoomSpeed = (delta > 0 ? -1 : 1) * speed * this.zoomSensitivity;\n\n        this._rotating = false;\n\n        if (this.autoRotate && this._mode === 'rotate') {\n            this._startCountingStill();\n        }\n\n        e.preventDefault && e.preventDefault();\n    },\n\n    _mouseUpHandler: function (event) {\n        var dom = this.domElement;\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'touchmove', this._mouseMoveHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'touchend', this._mouseUpHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'mousemove', this._mouseMoveHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'mouseup', this._mouseUpHandler);\n        __WEBPACK_IMPORTED_MODULE_4__core_vendor__[\"a\" /* default */].removeEventListener(dom, 'mouseout', this._mouseUpHandler);\n\n        this._processGesture(event, 'end');\n    },\n\n    _addAnimator: function (animator) {\n        var animators = this._animators;\n        animators.push(animator);\n        animator.done(function () {\n            var idx = animators.indexOf(animator);\n            if (idx >= 0) {\n                animators.splice(idx, 1);\n            }\n        });\n        return animator;\n    },\n\n\n    _processGesture: function (event, stage) {\n        var gestureMgr = this._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            null,\n            this.domElement\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            this._pinchHandler(gestureInfo.event);\n        }\n\n        return gestureInfo;\n    }\n});\n\n/**\n * If auto rotate the target\n * @type {boolean}\n * @default false\n */\nObject.defineProperty(OrbitControl.prototype, 'autoRotate', {\n    get: function () {\n        return this._autoRotate;\n    },\n    set: function (val) {\n        this._autoRotate = val;\n        this._rotating = val;\n    }\n});\n\nObject.defineProperty(OrbitControl.prototype, 'target', {\n    get: function () {\n        return this._target;\n    },\n    set: function (val) {\n        if (val && val.target) {\n            this.setCenter(val.target.toArray());\n        }\n        this._target = val;\n        this.decomposeTransform();\n    }\n});\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (OrbitControl);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///148\n");

/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var GestureMgr = function () {\n\n    this._track = [];\n};\n\nGestureMgr.prototype = {\n\n    constructor: GestureMgr,\n\n    recognize: function (event, target, root) {\n        this._doTrack(event, target, root);\n        return this._recognize(event);\n    },\n\n    clear: function () {\n        this._track.length = 0;\n        return this;\n    },\n\n    _doTrack: function (event, target, root) {\n        var touches = event.targetTouches;\n\n        if (!touches) {\n            return;\n        }\n\n        var trackItem = {\n            points: [],\n            touches: [],\n            target: target,\n            event: event\n        };\n\n        for (var i = 0, len = touches.length; i < len; i++) {\n            var touch = touches[i];\n            trackItem.points.push([touch.clientX, touch.clientY]);\n            trackItem.touches.push(touch);\n        }\n\n        this._track.push(trackItem);\n    },\n\n    _recognize: function (event) {\n        for (var eventName in recognizers) {\n            if (recognizers.hasOwnProperty(eventName)) {\n                var gestureInfo = recognizers[eventName](this._track, event);\n                if (gestureInfo) {\n                    return gestureInfo;\n                }\n            }\n        }\n    }\n};\n\nfunction dist(pointPair) {\n    var dx = pointPair[1][0] - pointPair[0][0];\n    var dy = pointPair[1][1] - pointPair[0][1];\n\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n    return [\n        (pointPair[0][0] + pointPair[1][0]) / 2,\n        (pointPair[0][1] + pointPair[1][1]) / 2\n    ];\n}\n\nvar recognizers = {\n\n    pinch: function (track, event) {\n        var trackLen = track.length;\n\n        if (!trackLen) {\n            return;\n        }\n\n        var pinchEnd = (track[trackLen - 1] || {}).points;\n        var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n        if (pinchPre\n            && pinchPre.length > 1\n            && pinchEnd\n            && pinchEnd.length > 1\n        ) {\n            var pinchScale = dist(pinchEnd) / dist(pinchPre);\n            !isFinite(pinchScale) && (pinchScale = 1);\n\n            event.pinchScale = pinchScale;\n\n            var pinchCenter = center(pinchEnd);\n            event.pinchX = pinchCenter[0];\n            event.pinchY = pinchCenter[1];\n\n            return {\n                type: 'pinch',\n                target: track[0].target,\n                event: event\n            };\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GestureMgr);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jbGF5Z2wvc3JjL3BsdWdpbi9HZXN0dXJlTWdyLmpzPzI4MzciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEdlc3R1cmVNZ3IgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB0aGlzLl90cmFjayA9IFtdO1xufTtcblxuR2VzdHVyZU1nci5wcm90b3R5cGUgPSB7XG5cbiAgICBjb25zdHJ1Y3RvcjogR2VzdHVyZU1ncixcblxuICAgIHJlY29nbml6ZTogZnVuY3Rpb24gKGV2ZW50LCB0YXJnZXQsIHJvb3QpIHtcbiAgICAgICAgdGhpcy5fZG9UcmFjayhldmVudCwgdGFyZ2V0LCByb290KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlY29nbml6ZShldmVudCk7XG4gICAgfSxcblxuICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3RyYWNrLmxlbmd0aCA9IDA7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICBfZG9UcmFjazogZnVuY3Rpb24gKGV2ZW50LCB0YXJnZXQsIHJvb3QpIHtcbiAgICAgICAgdmFyIHRvdWNoZXMgPSBldmVudC50YXJnZXRUb3VjaGVzO1xuXG4gICAgICAgIGlmICghdG91Y2hlcykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHRyYWNrSXRlbSA9IHtcbiAgICAgICAgICAgIHBvaW50czogW10sXG4gICAgICAgICAgICB0b3VjaGVzOiBbXSxcbiAgICAgICAgICAgIHRhcmdldDogdGFyZ2V0LFxuICAgICAgICAgICAgZXZlbnQ6IGV2ZW50XG4gICAgICAgIH07XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRvdWNoZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIHZhciB0b3VjaCA9IHRvdWNoZXNbaV07XG4gICAgICAgICAgICB0cmFja0l0ZW0ucG9pbnRzLnB1c2goW3RvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFldKTtcbiAgICAgICAgICAgIHRyYWNrSXRlbS50b3VjaGVzLnB1c2godG91Y2gpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fdHJhY2sucHVzaCh0cmFja0l0ZW0pO1xuICAgIH0sXG5cbiAgICBfcmVjb2duaXplOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgZm9yICh2YXIgZXZlbnROYW1lIGluIHJlY29nbml6ZXJzKSB7XG4gICAgICAgICAgICBpZiAocmVjb2duaXplcnMuaGFzT3duUHJvcGVydHkoZXZlbnROYW1lKSkge1xuICAgICAgICAgICAgICAgIHZhciBnZXN0dXJlSW5mbyA9IHJlY29nbml6ZXJzW2V2ZW50TmFtZV0odGhpcy5fdHJhY2ssIGV2ZW50KTtcbiAgICAgICAgICAgICAgICBpZiAoZ2VzdHVyZUluZm8pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdlc3R1cmVJbmZvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG5cbmZ1bmN0aW9uIGRpc3QocG9pbnRQYWlyKSB7XG4gICAgdmFyIGR4ID0gcG9pbnRQYWlyWzFdWzBdIC0gcG9pbnRQYWlyWzBdWzBdO1xuICAgIHZhciBkeSA9IHBvaW50UGFpclsxXVsxXSAtIHBvaW50UGFpclswXVsxXTtcblxuICAgIHJldHVybiBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xufVxuXG5mdW5jdGlvbiBjZW50ZXIocG9pbnRQYWlyKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgKHBvaW50UGFpclswXVswXSArIHBvaW50UGFpclsxXVswXSkgLyAyLFxuICAgICAgICAocG9pbnRQYWlyWzBdWzFdICsgcG9pbnRQYWlyWzFdWzFdKSAvIDJcbiAgICBdO1xufVxuXG52YXIgcmVjb2duaXplcnMgPSB7XG5cbiAgICBwaW5jaDogZnVuY3Rpb24gKHRyYWNrLCBldmVudCkge1xuICAgICAgICB2YXIgdHJhY2tMZW4gPSB0cmFjay5sZW5ndGg7XG5cbiAgICAgICAgaWYgKCF0cmFja0xlbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHBpbmNoRW5kID0gKHRyYWNrW3RyYWNrTGVuIC0gMV0gfHwge30pLnBvaW50cztcbiAgICAgICAgdmFyIHBpbmNoUHJlID0gKHRyYWNrW3RyYWNrTGVuIC0gMl0gfHwge30pLnBvaW50cyB8fCBwaW5jaEVuZDtcblxuICAgICAgICBpZiAocGluY2hQcmVcbiAgICAgICAgICAgICYmIHBpbmNoUHJlLmxlbmd0aCA+IDFcbiAgICAgICAgICAgICYmIHBpbmNoRW5kXG4gICAgICAgICAgICAmJiBwaW5jaEVuZC5sZW5ndGggPiAxXG4gICAgICAgICkge1xuICAgICAgICAgICAgdmFyIHBpbmNoU2NhbGUgPSBkaXN0KHBpbmNoRW5kKSAvIGRpc3QocGluY2hQcmUpO1xuICAgICAgICAgICAgIWlzRmluaXRlKHBpbmNoU2NhbGUpICYmIChwaW5jaFNjYWxlID0gMSk7XG5cbiAgICAgICAgICAgIGV2ZW50LnBpbmNoU2NhbGUgPSBwaW5jaFNjYWxlO1xuXG4gICAgICAgICAgICB2YXIgcGluY2hDZW50ZXIgPSBjZW50ZXIocGluY2hFbmQpO1xuICAgICAgICAgICAgZXZlbnQucGluY2hYID0gcGluY2hDZW50ZXJbMF07XG4gICAgICAgICAgICBldmVudC5waW5jaFkgPSBwaW5jaENlbnRlclsxXTtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAncGluY2gnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogdHJhY2tbMF0udGFyZ2V0LFxuICAgICAgICAgICAgICAgIGV2ZW50OiBldmVudFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEdlc3R1cmVNZ3I7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvY2xheWdsL3NyYy9wbHVnaW4vR2VzdHVyZU1nci5qc1xuLy8gbW9kdWxlIGlkID0gMTQ5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///149\n");

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_core_Base__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_math_Vector4__ = __webpack_require__(151);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_math_BoundingBox__ = __webpack_require__(10);\n\n\n\n\nvar DEFAULT_FAR_ALPHA = 0.1;\nvar DEFAULT_NEAR_ALPHA = 1.0;\n\nvar HotspotManger = __WEBPACK_IMPORTED_MODULE_0_claygl_src_core_Base__[\"a\" /* default */].extend(function () {\n\n    return {\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        dom: null,\n\n        /**\n         * @type {clay.Renderer}\n         */\n        renderer: null,\n\n        /**\n         * @type {clay.camera.Perspective}\n         */\n        camera: null,\n\n        _boundingBox: new __WEBPACK_IMPORTED_MODULE_2_claygl_src_math_BoundingBox__[\"a\" /* default */](),\n\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        _hotspotRoot: null,\n\n        _hotspots: []\n    };\n}, function () {\n    if (!this.dom || !this.renderer || !this.camera) {\n        throw new Error('Tip manager needs `root`,  `camera`, `renderer`');\n    }\n\n    var tipRoot = this._hotspotRoot = document.createElement('div');\n    tipRoot.style.cssText = 'position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;';\n    this.dom.appendChild(tipRoot);\n}, {\n\n    setBoundingBox: function (min, max) {\n        this._boundingBox.min.setArray(min);\n        this._boundingBox.max.setArray(max);\n    },\n\n    add: function (position, tipDom) {\n\n        if (typeof tipDom === 'string') {\n            var tipDom2 = document.createElement('div');\n            tipDom2.innerHTML = tipDom;\n            tipDom = tipDom2;\n        }\n\n        tipDom.classList.add('qmv-annotation');\n        tipDom.style.position = 'absolute';\n\n        this._hotspotRoot.appendChild(tipDom);\n\n        this._hotspots.push({\n            position: position,\n            dom: tipDom\n        });\n\n        return tipDom;\n    },\n\n    remove: function (tipDom) {\n        var idx = -1;\n        for (var i = 0; i < this._hotspots.length; i++) {\n            if (this._hotspots[i].dom === tipDom) {\n                idx = i;\n                break;\n            }\n        }\n        if (idx >= 0) {\n            this._hotspots.splice(idx, 1);\n            this._hotspotRoot.removeChild(tipDom);\n        }\n    },\n\n    update: function () {\n        var pos = new __WEBPACK_IMPORTED_MODULE_1_claygl_src_math_Vector4__[\"a\" /* default */]();\n        var tmpBBox = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_math_BoundingBox__[\"a\" /* default */]();\n        this._hotspots.forEach(function (hotspot) {\n\n            // Update position\n            var p = hotspot.position;\n            pos.set(p[0], p[1], p[2], 1);\n            pos.transformMat4(this.camera.viewMatrix);\n            var linearDepth = pos.z;\n\n            pos.transformMat4(this.camera.projectionMatrix);\n            pos.scale(1 / pos.w);\n\n            var x = (pos.x + 1.0) * 0.5 * this.renderer.getWidth();\n            var y = (pos.y + 1.0) * 0.5 * this.renderer.getHeight();\n\n            hotspot.dom.style.left = x + 'px';\n            hotspot.dom.style.top = this.renderer.getHeight() - y + 'px';\n\n            // Upadte alpha\n            var farAlpha = hotspot.farAlpha == null ? DEFAULT_FAR_ALPHA : hotspot.farAlpha;\n            var nearAlpha = hotspot.nearAlpha == null ? DEFAULT_NEAR_ALPHA : hotspot.nearAlpha;\n\n            tmpBBox.copy(this._boundingBox);\n            tmpBBox.applyTransform(this.camera.viewMatrix);\n            var percent = (linearDepth - tmpBBox.max.z) / (tmpBBox.min.z - tmpBBox.max.z);\n            var alpha = Math.max(Math.min(percent, 1.0), 0.0) * (farAlpha - nearAlpha) + nearAlpha;\n\n            hotspot.dom.style.opacity = 1;\n\n            hotspot.onupdate && hotspot.onupdate(x, y);\n        }, this);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (HotspotManger);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9Ib3RzcG90TWFuYWdlci5qcz9iMTY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlIGZyb20gJ2NsYXlnbC9zcmMvY29yZS9CYXNlJztcbmltcG9ydCBWZWN0b3I0IGZyb20gJ2NsYXlnbC9zcmMvbWF0aC9WZWN0b3I0JztcbmltcG9ydCBCb3VuZGluZ0JveCBmcm9tICdjbGF5Z2wvc3JjL21hdGgvQm91bmRpbmdCb3gnO1xuXG52YXIgREVGQVVMVF9GQVJfQUxQSEEgPSAwLjE7XG52YXIgREVGQVVMVF9ORUFSX0FMUEhBID0gMS4wO1xuXG52YXIgSG90c3BvdE1hbmdlciA9IEJhc2UuZXh0ZW5kKGZ1bmN0aW9uICgpIHtcblxuICAgIHJldHVybiB7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEB0eXBlIHtIVE1MRG9tRWxlbWVudH1cbiAgICAgICAgICovXG4gICAgICAgIGRvbTogbnVsbCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHR5cGUge2NsYXkuUmVuZGVyZXJ9XG4gICAgICAgICAqL1xuICAgICAgICByZW5kZXJlcjogbnVsbCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHR5cGUge2NsYXkuY2FtZXJhLlBlcnNwZWN0aXZlfVxuICAgICAgICAgKi9cbiAgICAgICAgY2FtZXJhOiBudWxsLFxuXG4gICAgICAgIF9ib3VuZGluZ0JveDogbmV3IEJvdW5kaW5nQm94KCksXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEB0eXBlIHtIVE1MRG9tRWxlbWVudH1cbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICovXG4gICAgICAgIF9ob3RzcG90Um9vdDogbnVsbCxcblxuICAgICAgICBfaG90c3BvdHM6IFtdXG4gICAgfTtcbn0sIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXRoaXMuZG9tIHx8ICF0aGlzLnJlbmRlcmVyIHx8ICF0aGlzLmNhbWVyYSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RpcCBtYW5hZ2VyIG5lZWRzIGByb290YCwgIGBjYW1lcmFgLCBgcmVuZGVyZXJgJyk7XG4gICAgfVxuXG4gICAgdmFyIHRpcFJvb3QgPSB0aGlzLl9ob3RzcG90Um9vdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRpcFJvb3Quc3R5bGUuY3NzVGV4dCA9ICdwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7cmlnaHQ6MDtib3R0b206MDtvdmVyZmxvdzpoaWRkZW47JztcbiAgICB0aGlzLmRvbS5hcHBlbmRDaGlsZCh0aXBSb290KTtcbn0sIHtcblxuICAgIHNldEJvdW5kaW5nQm94OiBmdW5jdGlvbiAobWluLCBtYXgpIHtcbiAgICAgICAgdGhpcy5fYm91bmRpbmdCb3gubWluLnNldEFycmF5KG1pbik7XG4gICAgICAgIHRoaXMuX2JvdW5kaW5nQm94Lm1heC5zZXRBcnJheShtYXgpO1xuICAgIH0sXG5cbiAgICBhZGQ6IGZ1bmN0aW9uIChwb3NpdGlvbiwgdGlwRG9tKSB7XG5cbiAgICAgICAgaWYgKHR5cGVvZiB0aXBEb20gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB2YXIgdGlwRG9tMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgdGlwRG9tMi5pbm5lckhUTUwgPSB0aXBEb207XG4gICAgICAgICAgICB0aXBEb20gPSB0aXBEb20yO1xuICAgICAgICB9XG5cbiAgICAgICAgdGlwRG9tLmNsYXNzTGlzdC5hZGQoJ3Ftdi1hbm5vdGF0aW9uJyk7XG4gICAgICAgIHRpcERvbS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG5cbiAgICAgICAgdGhpcy5faG90c3BvdFJvb3QuYXBwZW5kQ2hpbGQodGlwRG9tKTtcblxuICAgICAgICB0aGlzLl9ob3RzcG90cy5wdXNoKHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbixcbiAgICAgICAgICAgIGRvbTogdGlwRG9tXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB0aXBEb207XG4gICAgfSxcblxuICAgIHJlbW92ZTogZnVuY3Rpb24gKHRpcERvbSkge1xuICAgICAgICB2YXIgaWR4ID0gLTE7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5faG90c3BvdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9ob3RzcG90c1tpXS5kb20gPT09IHRpcERvbSkge1xuICAgICAgICAgICAgICAgIGlkeCA9IGk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLl9ob3RzcG90cy5zcGxpY2UoaWR4LCAxKTtcbiAgICAgICAgICAgIHRoaXMuX2hvdHNwb3RSb290LnJlbW92ZUNoaWxkKHRpcERvbSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwb3MgPSBuZXcgVmVjdG9yNCgpO1xuICAgICAgICB2YXIgdG1wQkJveCA9IG5ldyBCb3VuZGluZ0JveCgpO1xuICAgICAgICB0aGlzLl9ob3RzcG90cy5mb3JFYWNoKGZ1bmN0aW9uIChob3RzcG90KSB7XG5cbiAgICAgICAgICAgIC8vIFVwZGF0ZSBwb3NpdGlvblxuICAgICAgICAgICAgdmFyIHAgPSBob3RzcG90LnBvc2l0aW9uO1xuICAgICAgICAgICAgcG9zLnNldChwWzBdLCBwWzFdLCBwWzJdLCAxKTtcbiAgICAgICAgICAgIHBvcy50cmFuc2Zvcm1NYXQ0KHRoaXMuY2FtZXJhLnZpZXdNYXRyaXgpO1xuICAgICAgICAgICAgdmFyIGxpbmVhckRlcHRoID0gcG9zLno7XG5cbiAgICAgICAgICAgIHBvcy50cmFuc2Zvcm1NYXQ0KHRoaXMuY2FtZXJhLnByb2plY3Rpb25NYXRyaXgpO1xuICAgICAgICAgICAgcG9zLnNjYWxlKDEgLyBwb3Mudyk7XG5cbiAgICAgICAgICAgIHZhciB4ID0gKHBvcy54ICsgMS4wKSAqIDAuNSAqIHRoaXMucmVuZGVyZXIuZ2V0V2lkdGgoKTtcbiAgICAgICAgICAgIHZhciB5ID0gKHBvcy55ICsgMS4wKSAqIDAuNSAqIHRoaXMucmVuZGVyZXIuZ2V0SGVpZ2h0KCk7XG5cbiAgICAgICAgICAgIGhvdHNwb3QuZG9tLnN0eWxlLmxlZnQgPSB4ICsgJ3B4JztcbiAgICAgICAgICAgIGhvdHNwb3QuZG9tLnN0eWxlLnRvcCA9IHRoaXMucmVuZGVyZXIuZ2V0SGVpZ2h0KCkgLSB5ICsgJ3B4JztcblxuICAgICAgICAgICAgLy8gVXBhZHRlIGFscGhhXG4gICAgICAgICAgICB2YXIgZmFyQWxwaGEgPSBob3RzcG90LmZhckFscGhhID09IG51bGwgPyBERUZBVUxUX0ZBUl9BTFBIQSA6IGhvdHNwb3QuZmFyQWxwaGE7XG4gICAgICAgICAgICB2YXIgbmVhckFscGhhID0gaG90c3BvdC5uZWFyQWxwaGEgPT0gbnVsbCA/IERFRkFVTFRfTkVBUl9BTFBIQSA6IGhvdHNwb3QubmVhckFscGhhO1xuXG4gICAgICAgICAgICB0bXBCQm94LmNvcHkodGhpcy5fYm91bmRpbmdCb3gpO1xuICAgICAgICAgICAgdG1wQkJveC5hcHBseVRyYW5zZm9ybSh0aGlzLmNhbWVyYS52aWV3TWF0cml4KTtcbiAgICAgICAgICAgIHZhciBwZXJjZW50ID0gKGxpbmVhckRlcHRoIC0gdG1wQkJveC5tYXgueikgLyAodG1wQkJveC5taW4ueiAtIHRtcEJCb3gubWF4LnopO1xuICAgICAgICAgICAgdmFyIGFscGhhID0gTWF0aC5tYXgoTWF0aC5taW4ocGVyY2VudCwgMS4wKSwgMC4wKSAqIChmYXJBbHBoYSAtIG5lYXJBbHBoYSkgKyBuZWFyQWxwaGE7XG5cbiAgICAgICAgICAgIGhvdHNwb3QuZG9tLnN0eWxlLm9wYWNpdHkgPSAxO1xuXG4gICAgICAgICAgICBob3RzcG90Lm9udXBkYXRlICYmIGhvdHNwb3Qub251cGRhdGUoeCwgeSk7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBIb3RzcG90TWFuZ2VyO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL3NyYy9Ib3RzcG90TWFuYWdlci5qc1xuLy8gbW9kdWxlIGlkID0gMTUwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///150\n");

/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__ = __webpack_require__(21);\n\n\n/**\n * @constructor\n * @alias clay.Vector4\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Vector4 = function(x, y, z, w) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    w = w || 0;\n\n    /**\n     * Storage of Vector4, read and write of x, y, z, w will change the values in array\n     * All methods also operate on the array instead of x, y, z, w components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector4#\n     */\n    this.array = __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].fromValues(x, y, z, w);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector4#\n     */\n    this._dirty = true;\n};\n\nVector4.prototype = {\n\n    constructor: Vector4,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    add: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @param  {number}  w\n     * @return {clay.Vector4}\n     */\n    set: function(x, y, z, w) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this.array[3] = w;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y, z and w components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector4}\n     */\n    setArray: function(arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n        this.array[3] = arr[3];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector4\n     * @return {clay.Vector4}\n     */\n    clone: function() {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    copy: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dist: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    distance: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    div: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    divide: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dot: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].length(this.array);\n    },\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector4} a\n     * @param  {clay.Vector4} b\n     * @param  {number}  t\n     * @return {clay.Vector4}\n     */\n    lerp: function(a, b, t) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    min: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    max: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    mul: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    multiply: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector4}\n     */\n    negate: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector4}\n     */\n    normalize: function() {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y, z, w components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector4}\n     */\n    random: function(scale) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scale: function(s) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector4} b\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scaleAndAdd: function(b, s) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    sqrDist: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    squaredDistance: function(b) {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function() {\n        return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    sub: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    subtract: function(b) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector4}\n     */\n    transformMat4: function(m) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Quaternion q\n     * @param  {clay.Quaternion} q\n     * @return {clay.Vector4}\n     */\n    transformQuat: function(q) {\n        __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].transformQuat(this.array, this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Vector4.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name w\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'w', {\n        get: function () {\n            return this.array[3];\n        },\n        set: function (value) {\n            this.array[3] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.add = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector4}\n */\nVector4.set = function(out, x, y, z, w) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].set(out.array, x, y, z, w);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.copy = function(out, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dist = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.distance = Vector4.dist;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.div = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.divide = Vector4.div;\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dot = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.len = function(b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].length(b.array);\n};\n\n// Vector4.length = Vector4.len;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  t\n * @return {clay.Vector4}\n */\nVector4.lerp = function(out, a, b, t) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.min = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.max = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.mul = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.multiply = Vector4.mul;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.negate = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.normalize = function(out, a) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.random = function(out, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scale = function(out, a, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scaleAndAdd = function(out, a, b, scale) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.sqrDist = function(a, b) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].sqrDist(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.squaredDistance = Vector4.sqrDist;\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.sqrLen = function(a) {\n    return __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.squaredLength = Vector4.sqrLen;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.sub = function(out, a, b) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.subtract = Vector4.sub;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector4}\n */\nVector4.transformMat4 = function(out, a, m) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector4}\n */\nVector4.transformQuat = function(out, a, q) {\n    __WEBPACK_IMPORTED_MODULE_0__glmatrix_vec4__[\"a\" /* default */].transformQuat(out.array, a.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vector4);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///151\n");

/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export qmv.ground.vertex\\n@import clay.lambert.vertex\\n@end\\n\\n\\n@export qmv.ground.fragment\\n\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform vec4 color : [0.0, 0.0, 0.0, 0.0];\\nuniform float gridSize: 5;\\nuniform float gridSize2: 1;\\nuniform vec4 gridColor: [1.0, 1.0, 1.0, 1.0];\\nuniform vec4 gridColor2: [0.8, 0.8, 0.8, 1.0];\\n\\nuniform bool showGrid: true;\\n\\nuniform float glossiness: 0.7;\\n\\n#ifdef SSAOMAP_ENABLED\\nuniform sampler2D ssaoMap;\\nuniform vec4 viewport : VIEWPORT;\\n#endif\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n@import clay.plugin.compute_shadow_map\\n\\nvoid main()\\n{\\n gl_FragColor = color;\\n\\n if (showGrid) {\\n float wx = v_WorldPosition.x;\\n float wz = v_WorldPosition.z;\\n float x0 = abs(fract(wx / gridSize - 0.5) - 0.5) / fwidth(wx) * gridSize / 2.0;\\n float z0 = abs(fract(wz / gridSize - 0.5) - 0.5) / fwidth(wz) * gridSize / 2.0;\\n\\n float x1 = abs(fract(wx / gridSize2 - 0.5) - 0.5) / fwidth(wx) * gridSize2;\\n float z1 = abs(fract(wz / gridSize2 - 0.5) - 0.5) / fwidth(wz) * gridSize2;\\n\\n float v0 = 1.0 - clamp(min(x0, z0), 0.0, 1.0);\\n float v1 = 1.0 - clamp(min(x1, z1), 0.0, 1.0);\\n if (v0 > 0.1) {\\n gl_FragColor = mix(gl_FragColor, gridColor, v0);\\n }\\n else {\\n gl_FragColor = mix(gl_FragColor, gridColor2, v1);\\n }\\n }\\n\\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\\n {\\n diffuseColor += ambientLightColor[_idx_];\\n }\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\\n }}\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\\n {\\n vec3 lightDirection = -directionalLightDirection[i];\\n vec3 lightColor = directionalLightColor[i];\\n\\n float ndl = dot(v_Normal, normalize(lightDirection));\\n\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if( shadowEnabled )\\n {\\n shadowContrib = shadowContribsDir[i];\\n }\\n#endif\\n\\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\\n }\\n#endif\\n\\n#ifdef SSAOMAP_ENABLED\\n diffuseColor *= texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\\n#endif\\n\\n gl_FragColor.rgb *= diffuseColor;\\n\\n gl_FragColor.a *= 1.0 - clamp(length(v_WorldPosition.xz) / 30.0, 0.0, 1.0);\\n\\n}\\n\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9ncmFwaGljL2dyb3VuZC5nbHNsLmpzP2Q0MzUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJAZXhwb3J0IHFtdi5ncm91bmQudmVydGV4XFxuQGltcG9ydCBjbGF5LmxhbWJlcnQudmVydGV4XFxuQGVuZFxcblxcblxcbkBleHBvcnQgcW12Lmdyb3VuZC5mcmFnbWVudFxcblxcbnZhcnlpbmcgdmVjMiB2X1RleGNvb3JkO1xcbnZhcnlpbmcgdmVjMyB2X05vcm1hbDtcXG52YXJ5aW5nIHZlYzMgdl9Xb3JsZFBvc2l0aW9uO1xcblxcbnVuaWZvcm0gdmVjNCBjb2xvciA6IFswLjAsIDAuMCwgMC4wLCAwLjBdO1xcbnVuaWZvcm0gZmxvYXQgZ3JpZFNpemU6IDU7XFxudW5pZm9ybSBmbG9hdCBncmlkU2l6ZTI6IDE7XFxudW5pZm9ybSB2ZWM0IGdyaWRDb2xvcjogWzEuMCwgMS4wLCAxLjAsIDEuMF07XFxudW5pZm9ybSB2ZWM0IGdyaWRDb2xvcjI6IFswLjgsIDAuOCwgMC44LCAxLjBdO1xcblxcbnVuaWZvcm0gYm9vbCBzaG93R3JpZDogdHJ1ZTtcXG5cXG51bmlmb3JtIGZsb2F0IGdsb3NzaW5lc3M6IDAuNztcXG5cXG4jaWZkZWYgU1NBT01BUF9FTkFCTEVEXFxudW5pZm9ybSBzYW1wbGVyMkQgc3Nhb01hcDtcXG51bmlmb3JtIHZlYzQgdmlld3BvcnQgOiBWSUVXUE9SVDtcXG4jZW5kaWZcXG5cXG4jaWZkZWYgQU1CSUVOVF9MSUdIVF9DT1VOVFxcbkBpbXBvcnQgY2xheS5oZWFkZXIuYW1iaWVudF9saWdodFxcbiNlbmRpZlxcbiNpZmRlZiBBTUJJRU5UX1NIX0xJR0hUX0NPVU5UXFxuQGltcG9ydCBjbGF5LmhlYWRlci5hbWJpZW50X3NoX2xpZ2h0XFxuI2VuZGlmXFxuI2lmZGVmIERJUkVDVElPTkFMX0xJR0hUX0NPVU5UXFxuQGltcG9ydCBjbGF5LmhlYWRlci5kaXJlY3Rpb25hbF9saWdodFxcbiNlbmRpZlxcblxcbkBpbXBvcnQgY2xheS5wbHVnaW4uY29tcHV0ZV9zaGFkb3dfbWFwXFxuXFxudm9pZCBtYWluKClcXG57XFxuIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcblxcbiBpZiAoc2hvd0dyaWQpIHtcXG4gZmxvYXQgd3ggPSB2X1dvcmxkUG9zaXRpb24ueDtcXG4gZmxvYXQgd3ogPSB2X1dvcmxkUG9zaXRpb24uejtcXG4gZmxvYXQgeDAgPSBhYnMoZnJhY3Qod3ggLyBncmlkU2l6ZSAtIDAuNSkgLSAwLjUpIC8gZndpZHRoKHd4KSAqIGdyaWRTaXplIC8gMi4wO1xcbiBmbG9hdCB6MCA9IGFicyhmcmFjdCh3eiAvIGdyaWRTaXplIC0gMC41KSAtIDAuNSkgLyBmd2lkdGgod3opICogZ3JpZFNpemUgLyAyLjA7XFxuXFxuIGZsb2F0IHgxID0gYWJzKGZyYWN0KHd4IC8gZ3JpZFNpemUyIC0gMC41KSAtIDAuNSkgLyBmd2lkdGgod3gpICogZ3JpZFNpemUyO1xcbiBmbG9hdCB6MSA9IGFicyhmcmFjdCh3eiAvIGdyaWRTaXplMiAtIDAuNSkgLSAwLjUpIC8gZndpZHRoKHd6KSAqIGdyaWRTaXplMjtcXG5cXG4gZmxvYXQgdjAgPSAxLjAgLSBjbGFtcChtaW4oeDAsIHowKSwgMC4wLCAxLjApO1xcbiBmbG9hdCB2MSA9IDEuMCAtIGNsYW1wKG1pbih4MSwgejEpLCAwLjAsIDEuMCk7XFxuIGlmICh2MCA+IDAuMSkge1xcbiBnbF9GcmFnQ29sb3IgPSBtaXgoZ2xfRnJhZ0NvbG9yLCBncmlkQ29sb3IsIHYwKTtcXG4gfVxcbiBlbHNlIHtcXG4gZ2xfRnJhZ0NvbG9yID0gbWl4KGdsX0ZyYWdDb2xvciwgZ3JpZENvbG9yMiwgdjEpO1xcbiB9XFxuIH1cXG5cXG4gdmVjMyBkaWZmdXNlQ29sb3IgPSB2ZWMzKDAuMCwgMC4wLCAwLjApO1xcblxcbiNpZmRlZiBBTUJJRU5UX0xJR0hUX0NPVU5UXFxuIGZvcihpbnQgX2lkeF8gPSAwOyBfaWR4XyA8IEFNQklFTlRfTElHSFRfQ09VTlQ7IF9pZHhfKyspXFxuIHtcXG4gZGlmZnVzZUNvbG9yICs9IGFtYmllbnRMaWdodENvbG9yW19pZHhfXTtcXG4gfVxcbiNlbmRpZlxcbiNpZmRlZiBBTUJJRU5UX1NIX0xJR0hUX0NPVU5UXFxuIGZvcihpbnQgX2lkeF8gPSAwOyBfaWR4XyA8IEFNQklFTlRfU0hfTElHSFRfQ09VTlQ7IF9pZHhfKyspXFxuIHt7XFxuIGRpZmZ1c2VDb2xvciArPSBjYWxjQW1iaWVudFNITGlnaHQoX2lkeF8sIHZfTm9ybWFsKSAqIGFtYmllbnRTSExpZ2h0Q29sb3JbX2lkeF9dO1xcbiB9fVxcbiNlbmRpZlxcblxcbiNpZmRlZiBESVJFQ1RJT05BTF9MSUdIVF9DT1VOVFxcbiNpZiBkZWZpbmVkKERJUkVDVElPTkFMX0xJR0hUX1NIQURPV01BUF9DT1VOVClcXG4gZmxvYXQgc2hhZG93Q29udHJpYnNEaXJbRElSRUNUSU9OQUxfTElHSFRfQ09VTlRdO1xcbiBpZihzaGFkb3dFbmFibGVkKVxcbiB7XFxuIGNvbXB1dGVTaGFkb3dPZkRpcmVjdGlvbmFsTGlnaHRzKHZfV29ybGRQb3NpdGlvbiwgc2hhZG93Q29udHJpYnNEaXIpO1xcbiB9XFxuI2VuZGlmXFxuIGZvcihpbnQgaSA9IDA7IGkgPCBESVJFQ1RJT05BTF9MSUdIVF9DT1VOVDsgaSsrKVxcbiB7XFxuIHZlYzMgbGlnaHREaXJlY3Rpb24gPSAtZGlyZWN0aW9uYWxMaWdodERpcmVjdGlvbltpXTtcXG4gdmVjMyBsaWdodENvbG9yID0gZGlyZWN0aW9uYWxMaWdodENvbG9yW2ldO1xcblxcbiBmbG9hdCBuZGwgPSBkb3Qodl9Ob3JtYWwsIG5vcm1hbGl6ZShsaWdodERpcmVjdGlvbikpO1xcblxcbiBmbG9hdCBzaGFkb3dDb250cmliID0gMS4wO1xcbiNpZiBkZWZpbmVkKERJUkVDVElPTkFMX0xJR0hUX1NIQURPV01BUF9DT1VOVClcXG4gaWYoIHNoYWRvd0VuYWJsZWQgKVxcbiB7XFxuIHNoYWRvd0NvbnRyaWIgPSBzaGFkb3dDb250cmlic0RpcltpXTtcXG4gfVxcbiNlbmRpZlxcblxcbiBkaWZmdXNlQ29sb3IgKz0gbGlnaHRDb2xvciAqIGNsYW1wKG5kbCwgMC4wLCAxLjApICogc2hhZG93Q29udHJpYjtcXG4gfVxcbiNlbmRpZlxcblxcbiNpZmRlZiBTU0FPTUFQX0VOQUJMRURcXG4gZGlmZnVzZUNvbG9yICo9IHRleHR1cmUyRChzc2FvTWFwLCAoZ2xfRnJhZ0Nvb3JkLnh5IC0gdmlld3BvcnQueHkpIC8gdmlld3BvcnQuencpLnI7XFxuI2VuZGlmXFxuXFxuIGdsX0ZyYWdDb2xvci5yZ2IgKj0gZGlmZnVzZUNvbG9yO1xcblxcbiBnbF9GcmFnQ29sb3IuYSAqPSAxLjAgLSBjbGFtcChsZW5ndGgodl9Xb3JsZFBvc2l0aW9uLnh6KSAvIDMwLjAsIDAuMCwgMS4wKTtcXG5cXG59XFxuXFxuQGVuZFwiO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vc3JjL2dyYXBoaWMvZ3JvdW5kLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDE1MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///152\n");

/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__env__ = __webpack_require__(39);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n    return {\n\n        preZ: true,\n\n        materials: [],\n\n        takes: [],\n\n        textureFlipY: false,\n\n        zUpToYUp: false,\n\n        shadow: true,\n\n        environment: 'auto',\n\n        viewControl: {\n            alpha: 20,\n            beta: 30,\n            distance: 18\n        },\n\n        ground: {\n            show: true,\n\n            grid: false\n        },\n\n        mainLight: {\n            // If enable shadow of main light.\n            shadow: true,\n            // Quality of main light shadow. 'low'|'medium'|'high'|'ultra'\n            shadowQuality: 'medium',\n            // Intensity of main light\n            intensity: 0.8,\n            // Color of main light\n            color: '#fff',\n            // Alpha is rotation from bottom to up.\n            alpha: 45,\n            // Beta is rotation from left to right.\n            beta: 45,\n\n            $padAngle: [0.25, 0.5]\n        },\n        // Configuration of secondary light\n        secondaryLight: {\n            // If enable shadow of secondary light.\n            shadow: true,\n            shadowQuality: 'medium',\n            // Intensity of secondary light. Defaultly not enable secondary light.\n            intensity: 0,\n            // Color of secondary light.\n            color: '#fff',\n            alpha: 60,\n            beta: -50,\n\n            $padAngle: [-50 / 180, 60 / 90]\n        },\n        // Configuration of tertiary light\n        tertiaryLight: {\n            // If enable shadow of tertiary light.\n            shadow: true,\n            shadowQuality: 'medium',\n            // Intensity of secondary light. Defaultly not enable secondary light.\n            intensity: 0,\n            // Color of tertiary light.\n            color: '#fff',\n            alpha: 89,\n            beta: 0,\n\n            $padAngle: [0, 89 / 90]\n        },\n        // Configuration of constant ambient light.\n        // Which will add a constant color on any surface.\n        ambientLight: {\n            // ambient light intensity.\n            intensity: 0.0,\n            // ambient light color.\n            color: '#fff'\n        },\n        ambientCubemapLight: {\n            // Environment panorama texture url for cubemap lighting\n            texture: __WEBPACK_IMPORTED_MODULE_0__env__[\"a\" /* default */].ENV_TEXTURE_ROOT + 'milky-way.hdr',\n\n            $texture: 'milky-way',\n            $textureOptions: ['milky-way', 'pisa', 'Barce_Rooftop_C', 'Factory_Catwalk', 'Grand_Canyon_C', 'Ice_Lake', 'Hall', 'Old_Industrial_Hall'],\n\n            // Exposure factor when parsing hdr format.\n            exposure: 3,\n            // Intensity of diffuse radiance.\n            diffuseIntensity: 0.3,\n            // Intensity of specular radiance.\n            specularIntensity: 0.5\n        },\n        // Configuration about post effects.\n        postEffect: {\n            // If enable post effects.\n            enable: true,\n            // Configuration about bloom post effect\n            bloom: {\n                // If enable bloom\n                enable: true,\n                // Intensity of bloom\n                intensity: 0.1\n            },\n            // Configuration about depth of field\n            depthOfField: {\n                enable: false,\n                // Focal distance of camera in word space.\n                focalDistance: 4,\n                // Focal range of camera in word space. in this range image will be absolutely sharp.\n                focalRange: 1,\n                // Max out of focus blur radius.\n                blurRadius: 5,\n                // fstop of camera. Smaller fstop will have shallow depth of field\n                fstop: 10,\n                // Blur quality. 'low'|'medium'|'high'|'ultra'\n                quality: 'medium',\n\n                $qualityOptions: ['low', 'medium', 'high', 'ultra']\n            },\n            // Configuration about screen space ambient occulusion\n            screenSpaceAmbientOcclusion: {\n                // If enable SSAO\n                enable: false,\n                // Sampling radius in work space.\n                // Larger will produce more soft concat shadow.\n                // But also needs higher quality or it will have more obvious artifacts\n                radius: 1.5,\n                // Quality of SSAO. 'low'|'medium'|'high'|'ultra'\n                quality: 'medium',\n                // Intensity of SSAO\n                intensity: 1,\n\n                $qualityOptions: ['low', 'medium', 'high', 'ultra']\n            },\n            // Configuration about screen space reflection\n            screenSpaceReflection: {\n                enable: false,\n                // If physically corrected.\n                physical: false,\n                // Quality of SSR. 'low'|'medium'|'high'|'ultra'\n                quality: 'medium',\n                // Surface with less roughness will have reflection.\n                maxRoughness: 0.8,\n\n                $qualityOptions: ['low', 'medium', 'high', 'ultra']\n            },\n            // Configuration about color correction\n            colorCorrection: {\n                // If enable color correction\n                enable: true,\n                exposure: 0,\n                brightness: 0,\n                contrast: 1,\n                saturation: 1,\n                // Lookup texture for color correction.\n                // See https://ecomfe.github.io/echarts-doc/public/cn/option-gl.html#globe.postEffect.colorCorrection.lookupTexture\n                lookupTexture: ''\n            },\n            FXAA: {\n                // If enable FXAA\n                enable: false\n            }\n        }\n    };\n});;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///153\n");

/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n    return {\n\n        name: '',\n\n        type: 'pbrMetallicRoughness',\n\n        color: '#fff',\n\n        transparent: false,\n        alpha: 1,\n        alphaCutoff: 0,\n\n        diffuseMap: '',\n        normalMap: '',\n        parallaxOcclusionScale: 0.01,\n        parallaxOcclusionMap: '',\n\n        emission: '#fff',\n        emissionIntensity: 0,\n        emissiveMap: '',\n\n        uvRepeat: [1, 1],\n\n        // Metallic and roughness\n        metalness: 0,\n        roughness: 0.5,\n        metalnessMap: '',\n        roughnessMap: '',\n\n        // Specular and glossiness\n        glossiness: 0.5,\n        specularColor: '#111',\n        glossinessMap: '',\n        specularMap: '',\n\n        $alphaRange: [0, 1],\n        $alphaCutoffRange: [0, 1],\n        $metalnessRange: [0, 1],\n        $roughnessRange: [0, 1],\n        $glossinessRange: [0, 1],\n        $parallaxOcclusionScaleRange: [0, 0.1],\n\n        $textureTiling: 1\n    };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2dldERlZmF1bHRNYXRlcmlhbENvbmZpZy5qcz81YjE3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG5cbiAgICAgICAgbmFtZTogJycsXG5cbiAgICAgICAgdHlwZTogJ3Bick1ldGFsbGljUm91Z2huZXNzJyxcblxuICAgICAgICBjb2xvcjogJyNmZmYnLFxuXG4gICAgICAgIHRyYW5zcGFyZW50OiBmYWxzZSxcbiAgICAgICAgYWxwaGE6IDEsXG4gICAgICAgIGFscGhhQ3V0b2ZmOiAwLFxuXG4gICAgICAgIGRpZmZ1c2VNYXA6ICcnLFxuICAgICAgICBub3JtYWxNYXA6ICcnLFxuICAgICAgICBwYXJhbGxheE9jY2x1c2lvblNjYWxlOiAwLjAxLFxuICAgICAgICBwYXJhbGxheE9jY2x1c2lvbk1hcDogJycsXG5cbiAgICAgICAgZW1pc3Npb246ICcjZmZmJyxcbiAgICAgICAgZW1pc3Npb25JbnRlbnNpdHk6IDAsXG4gICAgICAgIGVtaXNzaXZlTWFwOiAnJyxcblxuICAgICAgICB1dlJlcGVhdDogWzEsIDFdLFxuXG4gICAgICAgIC8vIE1ldGFsbGljIGFuZCByb3VnaG5lc3NcbiAgICAgICAgbWV0YWxuZXNzOiAwLFxuICAgICAgICByb3VnaG5lc3M6IDAuNSxcbiAgICAgICAgbWV0YWxuZXNzTWFwOiAnJyxcbiAgICAgICAgcm91Z2huZXNzTWFwOiAnJyxcblxuICAgICAgICAvLyBTcGVjdWxhciBhbmQgZ2xvc3NpbmVzc1xuICAgICAgICBnbG9zc2luZXNzOiAwLjUsXG4gICAgICAgIHNwZWN1bGFyQ29sb3I6ICcjMTExJyxcbiAgICAgICAgZ2xvc3NpbmVzc01hcDogJycsXG4gICAgICAgIHNwZWN1bGFyTWFwOiAnJyxcblxuICAgICAgICAkYWxwaGFSYW5nZTogWzAsIDFdLFxuICAgICAgICAkYWxwaGFDdXRvZmZSYW5nZTogWzAsIDFdLFxuICAgICAgICAkbWV0YWxuZXNzUmFuZ2U6IFswLCAxXSxcbiAgICAgICAgJHJvdWdobmVzc1JhbmdlOiBbMCwgMV0sXG4gICAgICAgICRnbG9zc2luZXNzUmFuZ2U6IFswLCAxXSxcbiAgICAgICAgJHBhcmFsbGF4T2NjbHVzaW9uU2NhbGVSYW5nZTogWzAsIDAuMV0sXG5cbiAgICAgICAgJHRleHR1cmVUaWxpbmc6IDFcbiAgICB9O1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2dldERlZmF1bHRNYXRlcmlhbENvbmZpZy5qc1xuLy8gbW9kdWxlIGlkID0gMTU0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///154\n");

/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return init; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return saveModelFiles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createModelFilesURL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return saveSceneConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return writeTextureImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return removeProject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return downloadProject; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__env__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__glTFHelper__ = __webpack_require__(156);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vendor_convert__ = __webpack_require__(157);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_mime_types__ = __webpack_require__(158);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_mime_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_mime_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vendor_download__ = __webpack_require__(163);\n\n\n\n\n\n\n\nvar fs;\nvar Buffer = BrowserFS.BFSRequire('buffer').Buffer;\n\nvar FS_NOT_PREPARED_ERROR = 'File system not prepared yet.';\n\nfunction extname(fileName) {\n    var idx = fileName.lastIndexOf('.');\n    return idx >= 0 ? fileName.substr(idx + 1).toLowerCase() : '';\n}\n// Simple method handling mkdir and dirname.\nfunction mkdir(path, parentDir) {\n    var pathList = path.split('/');\n    parentDir = parentDir || '';\n    if (path.indexOf('/') === 0) {\n        pathList.shift();\n    }\n    // Handle xxx//xxx\n    pathList = pathList.filter(function (item) {\n        return !!item;\n    });\n    return new Promise(function (resolve, reject) {\n        if (!fs) {\n            reject(FS_NOT_PREPARED_ERROR);\n            return;\n        }\n        var current = pathList.shift();\n        var dirName = parentDir + '/' + current;\n        fs.mkdir(dirName, function (err) {\n            if (!err || err.code === 'EEXIST') {\n                if (pathList.length) {\n                    mkdir(pathList.join('/'), dirName).then(resolve).catch(reject);\n                }\n                else {\n                    resolve();\n                }\n            }\n            else {\n                reject(err.toString());\n            }\n        });\n    });\n}\n\nfunction rmdir(path) {\n    return new Promise(function (resolve, reject) {\n        if (!fs) {\n            reject(FS_NOT_PREPARED_ERROR);\n            return;\n        }\n\n        ls(path).then(function (files) {\n            return Promise.all(files.map(function (fileName) {\n                return new Promise(function (resolve, reject) {\n                    var filePath = path + '/' + fileName;\n                    fs.lstat(filePath, function (err, stat) {\n                        if (err) {\n                            reject(err.toString());\n                        }\n                        else {\n                            stat.isDirectory() \n                                ? rmdir(filePath).then(resolve, reject)\n                                : fs.unlink(filePath, function (err) {\n                                    err ? reject(err.toString()) : resolve();\n                                });\n                        }\n                    });  \n                });\n            }));\n        }, reject)\n        .then(function () {\n            fs.rmdir(path, function (err) {\n                err ? reject(err.toString()) : resolve();\n            });\n        }, reject);\n    });\n}\n\nfunction dirname(path) {\n    var arr = path.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction writeFile(path, file) {\n    return new Promise(function (resolve, reject) {\n        if (!fs) {\n            reject(FS_NOT_PREPARED_ERROR);\n        }\n        FileAPI.readAsArrayBuffer(file, function (evt) {\n            if (evt.type === 'load') {\n                fs.writeFile(path, Buffer.from(evt.result), function (err) {\n                    // Don't know why there is EEXIST error.\n                    if (err && err.code !== 'EEXIST') {\n                        reject(err);\n                    }\n                    else {\n                        console.log('Writed file ' + file.name + ' ' + evt.result.byteLength);\n                        resolve();\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction ls(path) {\n    return new Promise(function (resolve, reject) {\n        fs.readdir(path, function (err, files) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(files);\n            }\n        });\n    });\n}\n\nfunction init(cb) {\n    BrowserFS.install(window);\n    // Configures BrowserFS to use the LocalStorage file system.\n    BrowserFS.configure({\n        fs: 'IndexedDB',\n        options: {}\n        // options: {\n        //     size: 1024 * 1024 * 100,\n        //     type: PERSISTENT\n        // }\n    }, function(e) {\n        if (e) {\n            // An error happened!\n            throw e;\n        }\n        fs = BrowserFS.BFSRequire('fs');        \n\n        mkdir('/project').then(function () {\n            Promise.all([\n                loadModelFromFS(),\n                loadSceneFromFS()\n            ]).then(function (result) {\n                if (!result[0]) {\n                    cb();\n                }\n                else {\n                    cb && cb(result[0].glTF, result[0].filesMap, result[1]);\n                }\n            }).catch(function (err) {\n                cb();\n            });\n        }, function (err) {\n            cb();\n        });\n    });\n}\n\nfunction saveModelFiles(files) {\n    function doSave() {\n        return mkdir('/project/model').then(function () {\n            return Promise.all(files.map(function (file) {\n                return writeFile('/project/model/' + file.name, file);\n            }));\n        });\n    }\n        \n    return rmdir('/project/model').then(function () {\n        return doSave();\n    }, function (err) {\n        return doSave();\n    });\n}\n\nfunction saveSceneConfig(sceneCfg) {\n    return mkdir('/project').then(function () {\n        return writeFile('/project/scene.json', new File(\n            [JSON.stringify(sceneCfg)],\n            'scene.json',\n            { type: 'application/json' }\n        ));\n    });\n}\n\nfunction loadSceneFromFS() {\n    return new Promise(function (resolve, reject) {\n        if (!fs) {\n            reject(FS_NOT_PREPARED_ERROR);\n            return;\n        }\n        fs.readFile('/project/scene.json', 'utf-8', function (err, data) {\n            if (err) {\n                resolve(null);\n            }\n            else {\n                var json = null;\n                try {\n                    json = JSON.parse(data);\n                }\n                catch(e) {\n                    console.error(e);\n                }\n                resolve(json);\n            }\n        });\n    });\n}\n\nfunction loadModelFromFS() {\n    return readModelFilesFromFS().then(function (files) {\n        return createModelFilesURL(files);\n    });\n}\n\nfunction writeTextureImage(file) {\n    return mkdir('/project/model').then(function () {\n        return writeFile('/project/model/' + file.name, file);\n    });\n}\n\nfunction removeProject() {\n    return rmdir('/project');\n}\n\nfunction readModelFilesFromFS() {\n    return ls('/project/model').then(function (files) {\n        return Promise.all(files.map(function (fileName) {\n            return new Promise(function (resolve, reject) {\n                fs.readFile('/project/model/' + fileName, function (err, data) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(new File(\n                            [data],\n                            fileName,\n                            { type: __WEBPACK_IMPORTED_MODULE_3_mime_types___default.a.lookup(extname(fileName))}\n                        ));\n                    }\n                });\n            });\n        }));\n    });\n}\n\n/**\n * Create urls from files need for model loading.\n */\nvar currentFilesMap = {};\nfunction createModelFilesURL(files) {\n    return new Promise(function (resolve, reject) {\n        var glTFFile = files.find(function (file) {\n            return file.name.endsWith('.gltf');\n        });\n        var glBFile = files.find(function (file) {\n            return file.name.endsWith('.glb');\n        });\n        if (!glTFFile && !glBFile) {\n            if (undefined === 'electron') {\n                var validModelFiles = files.filter(function (file) {\n                    var ext = extname(file.name);\n                    return __WEBPACK_IMPORTED_MODULE_0__env__[\"a\" /* default */].SUPPORTED_MODEL_FILES.indexOf(ext) >= 0;\n                });\n                if (validModelFiles.length > 0) {\n                    Object(__WEBPACK_IMPORTED_MODULE_2_vendor_convert__[\"a\" /* default */])(validModelFiles).then(function (result) {\n                        var _buffer = result.buffer;\n                        // Buffer to array buffer\n                        var glTFBuffer = _buffer.buffer.slice(_buffer.byteOffset, _buffer.byteOffset + _buffer.byteLength);\n                        afterFileConvert(result.name, result.json, glTFBuffer);\n                    }, function (err) {\n                        reject('Failed to convert model:' + err.toString());\n                    });\n                }\n                else {\n                    reject('No model file found');\n                }\n            }\n            else {\n                reject('No glTF file found');\n            }\n        }\n        else {\n            afterFileConvert();\n        }\n\n        function afterFileConvert(glTFName, glTFText, glTFBuffer) {\n            files = files.filter(function (file) {\n                return file.name.match(/.(gltf|bin|glb)$/)\n                    || file.type.match(/image/);\n            });\n    \n            // Unload urls after use\n            for (var name in currentFilesMap) {\n                URL.revokeObjectURL(currentFilesMap[name]);\n            }\n            var filesMap = {};\n            currentFilesMap = filesMap;\n    \n            function readAllFiles(cb) {\n                var count = 0;\n                files.forEach(function (file) {\n                    if (file !== glTFFile) {\n                        count++;\n                        filesMap[file.name] = URL.createObjectURL(file);\n                    }\n                });\n                cb && cb(filesMap);\n            }\n    \n            if (glTFText) {\n                readAllFiles(function (filesMap) {\n                    files.push(new File(\n                        [glTFText], glTFName + '.gltf', { type: 'application/json' }\n                    ), new File(\n                        [glTFBuffer], glTFName + '.bin', { type: 'application/octet-stream' }\n                    ));\n                    resolve({\n                        glTF: JSON.parse(glTFText), filesMap: filesMap, \n                        buffers: [glTFBuffer],\n                        allFiles: files\n                    });\n                });\n            }\n            else {\n                if (glBFile) {\n                    FileAPI.readAsArrayBuffer(glBFile, function (evt) {\n                        if (evt.type === 'load') {\n                            readAllFiles(function (filesMap) {\n                                resolve({\n                                    glTF: evt.result, filesMap: filesMap, allFiles: files\n                                });\n                             });\n                        }\n                    });\n                }\n                else if (glTFFile) {\n                    FileAPI.readAsText(glTFFile, 'utf-8', function (evt) {\n                        if (evt.type === 'load') {\n                            // Success\n                            // TODO json parse maybe failed\n                            var json;\n                            try {\n                                json = JSON.parse(evt.result);   \n                            }\n                            catch (e) {\n                                resolve(null);\n                                return;\n                            }\n                            readAllFiles(function (filesMap) {\n                                resolve({\n                                    glTF: json, filesMap: filesMap, allFiles: files\n                                });\n                             });\n                        }\n                    });\n                }\n            }\n        }\n    });\n}\n\nfunction downloadProject(format, onsuccess, onerror) {\n    Promise.all([\n        readModelFilesFromFS(),\n        loadSceneFromFS()\n    ]).then(function (result) {\n        var files = result[0];\n        var loadedSceneCfg = result[1];\n\n        var zip = new JSZip();\n\n        var glTFFile;\n        var filesMap = {};\n        files = (files || []).filter(function (file) {\n            if (file.name.endsWith('.gltf')) {\n                glTFFile = file;\n            }\n            else {\n                filesMap[file.name] = file;\n                return true;\n            }\n        });\n\n        if (!glTFFile) {\n            swal('No glTF file in project!');\n            onerror && onerror();\n            return;\n        }\n\n        Promise.all(loadedSceneCfg.materials.map(function (matConfig, idx) {\n            // TODO Different material use same metalnessMap and roughnessMap.\n            if (matConfig.metalnessMap || matConfig.roughnessMap) {\n                var metalnessFile = filesMap[matConfig.metalnessMap];\n                var roughnessFile = filesMap[matConfig.roughnessMap];\n                return new Promise(function (resolve) {\n                    Object(__WEBPACK_IMPORTED_MODULE_1__glTFHelper__[\"b\" /* mergeMetallicRoughness */])(metalnessFile, roughnessFile, matConfig.metalness, matConfig.roughness).then(function (canvas) {\n                        var fileName = matConfig.name + '$' + idx + '_metallicRoughness.png';\n                        var dataUrl = canvas.toDataURL();\n                        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n                        zip.file(fileName, dataUrl, {\n                            base64: true\n                        });\n                        matConfig.metalnessMap = matConfig.roughnessMap = fileName;\n\n                        console.log('Merged %s, %s to %s', matConfig.metalnessMap, matConfig.roughnessMap, fileName);\n\n                        resolve();\n                    });\n                });\n            }\n            else if (matConfig.specularMap || matConfig.glossinessMap) {\n                var specularFile = filesMap[matConfig.specularMap];\n                var glossinessFile = filesMap[matConfig.glossinessMap];\n                return new Promise(function (resolve) {\n                    Object(__WEBPACK_IMPORTED_MODULE_1__glTFHelper__[\"c\" /* mergeSpecularGlossiness */])(specularFile, glossinessFile, matConfig.specularColor, matConfig.glossiness).then(function (canvas) {\n                        var fileName = matConfig.name + '$' + idx + '_specularGlossiness.png';\n                        var dataUrl = canvas.toDataURL();\n                        dataUrl = dataUrl.slice('data:image/png;base64,'.length);\n                        zip.file(fileName, dataUrl, {\n                            base64: true\n                        });\n                        matConfig.specularMap = matConfig.glossinessMap = fileName;\n\n                        console.log('Merged %s, %s to %s', matConfig.specularMap, matConfig.glossinessMap, fileName);\n\n                        resolve();\n                    });\n                });\n            }\n            return null;\n        }).filter(function (p) { return p != null; })).then(function () {\n            FileAPI.readAsText(glTFFile, 'utf-8', function (e) {\n                if (e.type == 'load') {\n                    var newGLTF = Object(__WEBPACK_IMPORTED_MODULE_1__glTFHelper__[\"d\" /* updateGLTFMaterials */])(JSON.parse(e.result), loadedSceneCfg);\n                    newGLTF.extensionsUsed = newGLTF.extensionsUsed || [];\n                    if (newGLTF.extensionsUsed.indexOf('KHR_materials_pbrSpecularGlossiness') < 0) {\n                        newGLTF.extensionsUsed.push('KHR_materials_pbrSpecularGlossiness');\n                    }\n                    ['extensionsUsed', 'images', 'textures', 'samplers', 'animations'].forEach(function (key) {\n                        if (newGLTF[key] && !newGLTF[key].length) {\n                            delete newGLTF[key];\n                        }\n                    });\n                    if (!newGLTF.textures) {\n                        delete newGLTF.samplers;\n                    }\n                    // Remove unused images\n                    files = files.filter(function (file) {\n                        if (file.type.match(/image/)) {\n                            return newGLTF.images && newGLTF.images.some(function (img) {\n                                return img.uri === file.name;\n                            });\n                        }\n                        // Other is binary file.\n                        else if (file.name.endsWith('.bin')) {\n                            return true;\n                        }\n                    });\n                    files.forEach(function (file) {\n                        zip.file(file.name, file);         \n                    });\n\n                    if (format === 'glb') {\n                        var binaryFiles = [];\n                        var imageFiles = [];\n                        zip.forEach(function (path, file) {\n                            (path.endsWith('.bin') ? binaryFiles : imageFiles).push({\n                                reader: zip.file(path).async('arraybuffer'),\n                                name: path\n                            });\n                        });\n                        Promise.all([\n                            Promise.all(binaryFiles.map(function (a) {return a.reader; })),\n                            Promise.all(imageFiles.map(function (a) { return a.reader; }))\n                        ]).then(function (res) {\n                            var ab = Object(__WEBPACK_IMPORTED_MODULE_1__glTFHelper__[\"a\" /* convertToBinary */])(newGLTF, res[0], res[1].reduce(function (obj, ab, idx) {\n                                obj[imageFiles[idx].name] = ab;\n                                return obj;\n                            }, {}));\n                            Object(__WEBPACK_IMPORTED_MODULE_4_vendor_download__[\"a\" /* default */])(new Blob([ab], {type: 'model/json-binary'}), 'model.glb');\n                            onsuccess && onsuccess();\n                        }).catch(onerror);\n                    }\n                    else {\n                        zip.file(glTFFile.name, JSON.stringify(newGLTF, null, 2));\n                        zip.generateAsync({ type: 'blob' })\n                        .then(function (blob) {\n                            Object(__WEBPACK_IMPORTED_MODULE_4_vendor_download__[\"a\" /* default */])(blob, 'model.zip');\n                            onsuccess && onsuccess();\n                        }).catch(onerror);\n                    }\n                }\n            });\n        });\n    }).catch(function (err) {\n        swal(err.toString());\n        onerror && onerror();\n    })\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///155\n");

/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return updateGLTFMaterials; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return mergeMetallicRoughness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return mergeSpecularGlossiness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return convertToBinary; });\n/* unused harmony export TEXTURES */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_graphic_helper__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_loader_GLTF__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__ = __webpack_require__(1);\n\n\n\n\nvar TEXTURES = ['diffuseMap', 'normalMap', 'emissiveMap', 'metalnessMap', 'roughnessMap', 'specularMap', 'glossinessMap']\n\nfunction prepareImageData(imgFiles, updateImgData) {\n    return new Promise(function (resolve, reject) {\n        Promise.all(imgFiles.map(function (imgFile) {\n            var imgUrl = imgFile && URL.createObjectURL(imgFile);\n            return new Promise(function (resolve, reject) {\n                if (!imgUrl) {\n                    resolve(null);\n                }\n                else {\n                    var img = new Image();\n                    img.src = imgUrl;\n                    img.onload = function () { resolve(img); };\n                }\n            });\n        })).then(function (imgs) {\n            var firstImg = imgs.find(function (img) {\n                return img != null;\n            });\n            if (!firstImg) {\n                resolve(null);\n            }\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var width = canvas.width = firstImg.width;\n            var height = canvas.height = firstImg.height;\n\n            var imageDataList = imgs.map(function (img) {\n                if (img) {\n                    ctx.drawImage(img, 0, 0, width, height);\n                    return ctx.getImageData(0, 0, width, height).data;\n                }\n                return null;\n            });\n            resolve({\n                canvas: canvas,\n                imageDataList: imageDataList\n            });\n        });\n    });\n}\n\nfunction mergeMetallicRoughness(metallicFile, roughnessFile, metallicFactor, roughnessFactor) {\n    return new Promise(function (resolve, reject) {\n        prepareImageData([metallicFile, roughnessFile])\n            .then(function (result) {\n                var canvas = result.canvas;\n                var ctx = canvas.getContext('2d');\n                var metallicImgData = result.imageDataList[0];\n                var roughnessImgData = result.imageDataList[1];\n                var finalImgData = ctx.createImageData(canvas.width, canvas.height);\n                for (var i = 0; i < (metallicImgData || roughnessImgData).length; i += 4) {\n                    var m = metallicFactor;\n                    if (metallicImgData) {\n                        // Metallic use B channel.\n                        // TODO Specified channel ?\n                        var m2 = metallicImgData[i + 2] / 255;\n                        m = Math.min(Math.max(m2 + (m - 0.5) * 2, 0), 1);\n                    }\n                    var r = roughnessFactor;\n                    if (roughnessImgData) {\n                        // Roughness use G channel.\n                        // TODO Specified channel ?\n                        var r2 = roughnessImgData[i + 1] / 255;\n                        r = Math.min(Math.max(r2 + (r - 0.5) * 2, 0), 1);\n                    }\n                    finalImgData.data[i] = finalImgData.data[i + 3] = 0;\n                    finalImgData.data[i + 1] = Math.round(r * 255);\n                    finalImgData.data[i + 2] = Math.round(m * 255);\n                }\n                ctx.putImageData(finalImgData, 0, 0);\n\n                resolve(canvas);\n            });\n    });\n}\n\nfunction mergeSpecularGlossiness(specularFile, glossinessFile, specularFactor, glossinessFactor) {\n    specularFactor = __WEBPACK_IMPORTED_MODULE_0__src_graphic_helper__[\"a\" /* default */].parseColor(specularFactor).slice(0, 3);\n    return new Promise(function (resolve, reject) {\n        prepareImageData([specularFile, glossinessFile])\n            .then(function (result) {\n                var canvas = result.canvas;\n                var ctx = canvas.getContext('2d');\n                var specularImgData = result.imageDataList[0];\n                var glossinessImgData = result.imageDataList[1];\n                var finalImgData = ctx.createImageData(canvas.width, canvas.height);\n                for (var i = 0; i < (specularImgData || glossinessImgData).length; i += 4) {\n                    var spec = specularFactor.slice();\n                    if (specularImgData) {\n                        spec[0] *= specularImgData[i] / 255;\n                        spec[1] *= specularImgData[i + 1] / 255;\n                        spec[2] *= specularImgData[i + 2] / 255;\n                    }\n                    var g = glossinessFactor;\n                    if (glossinessImgData) {\n                        // Roughness use G channel.\n                        // TODO Specified channel ?\n                        var g2 = glossinessImgData[i + 3] / 255;\n                        g = Math.min(Math.max(g2 + (g - 0.5) * 2, 0), 1);\n                    }\n                    for (var k = 0; k < 3; k++) {\n                        finalImgData.data[i + k] = Math.round(spec[k] * 255);\n                    }\n                    finalImgData.data[i + 3] = Math.round(g * 255);\n                }\n                ctx.putImageData(finalImgData, 0, 0);\n\n                resolve(canvas);\n            });\n    });\n}\n\nfunction writeTextures(glTF, sceneConfig) {\n    var textureIndices = {};\n    var currentIndex = 0;\n    glTF.images = [];\n    glTF.textures = [];\n    glTF.samplers = [{\n        minFilter: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].LINEAR_MIPMAP_LINEAR,\n        magFilter: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].LINEAR,\n        wrapS: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].REPEAT,\n        wrapT: __WEBPACK_IMPORTED_MODULE_2_claygl_src_Texture__[\"a\" /* default */].REPEAT\n    }];\n    sceneConfig.materials.forEach(function (matConfig, idx) {\n        // metalnessMap is already merged with roughnessMap\n        TEXTURES.forEach(function (texName) {\n            if (matConfig[texName] && !textureIndices.hasOwnProperty(texName)) {\n                glTF.images.push({\n                    uri: matConfig[texName]\n                });\n                glTF.textures.push({\n                    sampler: 0,\n                    source: currentIndex\n                });\n                textureIndices[matConfig[texName]] = currentIndex++;\n            }\n        });\n    });\n\n    return textureIndices;\n}\n\nfunction getMetallicRoughnessMat(matConfig, textureIndices) {\n    var metallicRoughness = {\n        baseColorFactor: __WEBPACK_IMPORTED_MODULE_0__src_graphic_helper__[\"a\" /* default */].parseColor(matConfig.color),\n        metallicFactor: matConfig.metalness,\n        roughnessFactor: matConfig.roughness\n    };\n    metallicRoughness.baseColorFactor[3] = matConfig.alpha;\n    if (matConfig.diffuseMap) {\n        metallicRoughness.baseColorTexture = {\n            index: textureIndices[matConfig.diffuseMap],\n            texCoord: 0\n        };\n    }\n    if (matConfig.metalnessMap) {\n        // metalnessMap is already merged with roughnessMap\n        metallicRoughness.metallicRoughnessTexture = {\n            index: textureIndices[matConfig.metalnessMap],\n            texCoord: 0\n        };\n        metallicRoughness.metallicFactor = 1;\n        metallicRoughness.roughnessFactor = 1;\n    }\n\n    return metallicRoughness;\n}\n\nfunction getSpecularGlossiness(matConfig, textureIndices) {\n    var specularGlossiness = {\n        diffuseFactor: __WEBPACK_IMPORTED_MODULE_0__src_graphic_helper__[\"a\" /* default */].parseColor(matConfig.color),\n        specularFactor: __WEBPACK_IMPORTED_MODULE_0__src_graphic_helper__[\"a\" /* default */].parseColor(matConfig.specularColor).slice(0, 3),\n        glossinessFactor: matConfig.glossiness\n    };\n    specularGlossiness.diffuseFactor[3] = matConfig.alpha;\n    if (matConfig.diffuseMap) {\n        specularGlossiness.diffuseTexture = {\n            index: textureIndices[matConfig.diffuseMap],\n            texCoord: 0\n        };\n    }\n    if (matConfig.specularMap) {\n        // specularMap is already merged with glossinessMap\n        specularGlossiness.specularGlossinessTexture = {\n            index: textureIndices[matConfig.specularMap],\n            texCoord: 0\n        };\n        specularGlossiness.specularFactor = [1, 1, 1];\n        specularGlossiness.glossinessFactor = 1;\n    }\n\n    return specularGlossiness;\n}\n\nfunction updateGLTFMaterials(glTF, sceneConfig) {\n    if (!glTF.materials) {\n        return;\n    }\n    var textureIndices = writeTextures(glTF, sceneConfig);\n\n    var primitivesMap = {};\n    glTF.materials = [];\n    glTF.nodes.forEach(function (nodeInfo, nodeIdx) {\n        if (nodeInfo.mesh != null) {\n            var meshInfo = glTF.meshes[nodeInfo.mesh];\n            if (meshInfo.primitives.length === 1) {\n                // Use node name instead of mesh name.\n                // FIXME Hard coded\n                primitivesMap[nodeInfo.name] = meshInfo.primitives[0];\n            }\n            else {\n                meshInfo.primitives.forEach(function (primitive, idx) {\n                    primitivesMap[__WEBPACK_IMPORTED_MODULE_1_claygl_src_loader_GLTF__[\"a\" /* default */].generateMeshName(glTF.meshes, nodeInfo.mesh, idx)] = primitive;\n                });\n            }\n        }\n    });\n\n    sceneConfig.materials.forEach(function (matConfig, idx) {\n        var gltfMat = {\n            name: matConfig.name,\n            emissiveFactor: __WEBPACK_IMPORTED_MODULE_0__src_graphic_helper__[\"a\" /* default */].parseColor(matConfig.emission).slice(0, 3).map(function (channel) {\n                return channel * matConfig.emissionIntensity;\n            }),\n            alphaMode: matConfig.transparent ? 'BLEND' : 'OPAQUE'\n            // TODO texture tiling.\n        };\n        if (matConfig.normalMap) {\n            gltfMat.normalTexture = {\n                texCoord: 0,\n                scale: 1,\n                index: textureIndices[matConfig.normalMap]\n            };\n        }\n        if (matConfig.emissiveMap) {\n            gltfMat.emissiveTexture = {\n                texCoord: 0,\n                index: textureIndices[matConfig.emissiveMap]\n            };\n        }\n\n        if (matConfig.type === 'pbrMetallicRoughness') {\n            gltfMat.pbrMetallicRoughness = getMetallicRoughnessMat(matConfig, textureIndices);\n        }\n        else {\n            gltfMat.extensions = {\n                'KHR_materials_pbrSpecularGlossiness': getSpecularGlossiness(matConfig, textureIndices)\n            };\n        }\n        matConfig.targetMeshes.forEach(function (meshName) {\n            primitivesMap[meshName].material = idx;\n        });\n        glTF.materials[idx] = gltfMat;\n    });\n\n    glTF.extras = glTF.extras || {};\n    glTF.extras.clayViewerConfig = sceneConfig;\n    return glTF;\n}\n\nfunction convertToBinary(glTF, binaryBuffers, imageBuffersMap) {\n\n    function alignedLength(len) {\n        return Math.ceil(len / 4) * 4;\n    }\n\n    var bufferOffset = 0;\n    var bufferOffsets = [];\n    var buffers = binaryBuffers.slice();\n    glTF.buffers.forEach(function (buffer) {\n        bufferOffsets.push(bufferOffset);\n        bufferOffset += alignedLength(buffer.byteLength);\n        delete buffer.uri;\n    });\n\n    glTF.bufferViews.forEach(function (bufferView) {\n        if (bufferView.byteOffset == null) {\n            bufferView.byteOffset = 0;\n        }\n        else {\n            bufferView.byteOffset = bufferView.byteOffset + bufferOffsets[bufferView.buffer];\n        }\n    });\n\n    (glTF.images || []).forEach(function (imageInfo, idx) {\n        var uri = imageInfo.uri;\n        var imageBuffer = imageBuffersMap[uri];\n        delete imageInfo.uri;\n        if (!imageBuffer) {\n            return;\n        }\n        var bufferView = {\n            buffer: 0,\n            byteOffset: bufferOffset,\n            byteLength: imageBuffer.byteLength\n        };\n        bufferOffsets.push(bufferOffset);\n        bufferOffset += alignedLength(imageBuffer.byteLength);\n        imageInfo.bufferView = glTF.bufferViews.length;\n        imageInfo.mimeType = getMimeType(uri);\n        glTF.bufferViews.push(bufferView);\n        buffers.push(imageBuffer);\n    });\n    var binBufferSize = bufferOffset;\n    glTF.buffers = [{\n        byteLength: binBufferSize\n    }];\n    var enc = new TextEncoder();\n    var jsonBuffer = enc.encode(JSON.stringify(glTF));\n    var jsonAlignedLength = alignedLength(jsonBuffer.length);\n    var padding;\n    if (jsonAlignedLength !== jsonBuffer.length) {\n        padding = jsonAlignedLength - jsonBuffer.length;\n    }\n    var totalSize = 12 + // file header: magic + version + length\n        8 + // json chunk header: json length + type\n        jsonAlignedLength +\n        8 + // bin chunk header: chunk length + type\n        binBufferSize;\n    var outBuffer = new ArrayBuffer(totalSize);\n    var dataView = new DataView(outBuffer);\n    var bufIndex = 0;\n    // Magic number\n    dataView.setUint32(bufIndex, 0x46546C67, true);\n    bufIndex += 4;\n    // Version\n    dataView.setUint32(bufIndex, 2, true);\n    bufIndex += 4;\n    dataView.setUint32(bufIndex, totalSize, true);\n    bufIndex += 4;\n    // JSON\n    dataView.setUint32(bufIndex, jsonAlignedLength, true);\n    bufIndex += 4;\n    dataView.setUint32(bufIndex, 0x4E4F534A, true);\n    bufIndex += 4;\n    for (var j = 0; j< jsonBuffer.length; j++){\n        dataView.setUint8(bufIndex++, jsonBuffer[j]);\n    }\n    if (padding != null) {\n        for (var j = 0; j< padding;j++) {\n            dataView.setUint8(bufIndex++, 0x20);\n        }\n    }\n    // BIN\n    dataView.setUint32(bufIndex, binBufferSize, true);\n    bufIndex += 4;\n    dataView.setUint32(bufIndex, 0x004E4942, true);\n    bufIndex += 4;\n    for (var i = 0; i < buffers.length; i++) {\n        var bufoffset = bufIndex + bufferOffsets[i];\n        var buf = new Uint8Array(buffers[i]);\n        var thisbufindex = bufoffset;\n        for (var j = 0; j < buf.byteLength; j++) {\n            dataView.setUint8(thisbufindex, buf[j]);\n            thisbufindex++;\n        }\n    }\n\n    return outBuffer;\n}\n// https://github.com/sbtron/makeglb/blob/master/index.html\nfunction getMimeType(filename) {\n    for (var mimeType in MILE_TYPES) {\n        for (var extensionIndex in MILE_TYPES[mimeType]) {\n            var extension = MILE_TYPES[mimeType][extensionIndex];\n            if (filename.toLowerCase().endsWith('.' + extension)) {\n                return mimeType;\n            }\n        }\n    }\n    return 'application/octet-stream';\n}\nvar MILE_TYPES = {\n    'image/png': ['png'],\n    'image/jpeg': ['jpg', 'jpeg'],\n    'text/plain': ['glsl', 'vert', 'vs', 'frag', 'fs', 'txt'],\n    'image/vnd-ms.dds': ['dds']\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///156\n");

/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n    \n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2Jyb3dzZXIvY29udmVydC5qcz80NmEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHtcbiAgICBcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9icm93c2VyL2NvbnZlcnQuanNcbi8vIG1vZHVsZSBpZCA9IDE1N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///157\n");

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = __webpack_require__(159)\nvar extname = __webpack_require__(161).extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9taW1lLXR5cGVzL2luZGV4LmpzP2UwZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBtaW1lLXR5cGVzXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgZGIgPSByZXF1aXJlKCdtaW1lLWRiJylcbnZhciBleHRuYW1lID0gcmVxdWlyZSgncGF0aCcpLmV4dG5hbWVcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgRVhUUkFDVF9UWVBFX1JFR0VYUCA9IC9eXFxzKihbXjtcXHNdKikoPzo7fFxcc3wkKS9cbnZhciBURVhUX1RZUEVfUkVHRVhQID0gL150ZXh0XFwvL2lcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLmNoYXJzZXQgPSBjaGFyc2V0XG5leHBvcnRzLmNoYXJzZXRzID0geyBsb29rdXA6IGNoYXJzZXQgfVxuZXhwb3J0cy5jb250ZW50VHlwZSA9IGNvbnRlbnRUeXBlXG5leHBvcnRzLmV4dGVuc2lvbiA9IGV4dGVuc2lvblxuZXhwb3J0cy5leHRlbnNpb25zID0gT2JqZWN0LmNyZWF0ZShudWxsKVxuZXhwb3J0cy5sb29rdXAgPSBsb29rdXBcbmV4cG9ydHMudHlwZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG5cbi8vIFBvcHVsYXRlIHRoZSBleHRlbnNpb25zL3R5cGVzIG1hcHNcbnBvcHVsYXRlTWFwcyhleHBvcnRzLmV4dGVuc2lvbnMsIGV4cG9ydHMudHlwZXMpXG5cbi8qKlxuICogR2V0IHRoZSBkZWZhdWx0IGNoYXJzZXQgZm9yIGEgTUlNRSB0eXBlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gKiBAcmV0dXJuIHtib29sZWFufHN0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBjaGFyc2V0ICh0eXBlKSB7XG4gIGlmICghdHlwZSB8fCB0eXBlb2YgdHlwZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIFRPRE86IHVzZSBtZWRpYS10eXBlclxuICB2YXIgbWF0Y2ggPSBFWFRSQUNUX1RZUEVfUkVHRVhQLmV4ZWModHlwZSlcbiAgdmFyIG1pbWUgPSBtYXRjaCAmJiBkYlttYXRjaFsxXS50b0xvd2VyQ2FzZSgpXVxuXG4gIGlmIChtaW1lICYmIG1pbWUuY2hhcnNldCkge1xuICAgIHJldHVybiBtaW1lLmNoYXJzZXRcbiAgfVxuXG4gIC8vIGRlZmF1bHQgdGV4dC8qIHRvIHV0Zi04XG4gIGlmIChtYXRjaCAmJiBURVhUX1RZUEVfUkVHRVhQLnRlc3QobWF0Y2hbMV0pKSB7XG4gICAgcmV0dXJuICdVVEYtOCdcbiAgfVxuXG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGZ1bGwgQ29udGVudC1UeXBlIGhlYWRlciBnaXZlbiBhIE1JTUUgdHlwZSBvciBleHRlbnNpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7Ym9vbGVhbnxzdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gY29udGVudFR5cGUgKHN0cikge1xuICAvLyBUT0RPOiBzaG91bGQgdGhpcyBldmVuIGJlIGluIHRoaXMgbW9kdWxlP1xuICBpZiAoIXN0ciB8fCB0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgdmFyIG1pbWUgPSBzdHIuaW5kZXhPZignLycpID09PSAtMVxuICAgID8gZXhwb3J0cy5sb29rdXAoc3RyKVxuICAgIDogc3RyXG5cbiAgaWYgKCFtaW1lKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBUT0RPOiB1c2UgY29udGVudC10eXBlIG9yIG90aGVyIG1vZHVsZVxuICBpZiAobWltZS5pbmRleE9mKCdjaGFyc2V0JykgPT09IC0xKSB7XG4gICAgdmFyIGNoYXJzZXQgPSBleHBvcnRzLmNoYXJzZXQobWltZSlcbiAgICBpZiAoY2hhcnNldCkgbWltZSArPSAnOyBjaGFyc2V0PScgKyBjaGFyc2V0LnRvTG93ZXJDYXNlKClcbiAgfVxuXG4gIHJldHVybiBtaW1lXG59XG5cbi8qKlxuICogR2V0IHRoZSBkZWZhdWx0IGV4dGVuc2lvbiBmb3IgYSBNSU1FIHR5cGUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEByZXR1cm4ge2Jvb2xlYW58c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGV4dGVuc2lvbiAodHlwZSkge1xuICBpZiAoIXR5cGUgfHwgdHlwZW9mIHR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBUT0RPOiB1c2UgbWVkaWEtdHlwZXJcbiAgdmFyIG1hdGNoID0gRVhUUkFDVF9UWVBFX1JFR0VYUC5leGVjKHR5cGUpXG5cbiAgLy8gZ2V0IGV4dGVuc2lvbnNcbiAgdmFyIGV4dHMgPSBtYXRjaCAmJiBleHBvcnRzLmV4dGVuc2lvbnNbbWF0Y2hbMV0udG9Mb3dlckNhc2UoKV1cblxuICBpZiAoIWV4dHMgfHwgIWV4dHMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICByZXR1cm4gZXh0c1swXVxufVxuXG4vKipcbiAqIExvb2t1cCB0aGUgTUlNRSB0eXBlIGZvciBhIGZpbGUgcGF0aC9leHRlbnNpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEByZXR1cm4ge2Jvb2xlYW58c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGxvb2t1cCAocGF0aCkge1xuICBpZiAoIXBhdGggfHwgdHlwZW9mIHBhdGggIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBnZXQgdGhlIGV4dGVuc2lvbiAoXCJleHRcIiBvciBcIi5leHRcIiBvciBmdWxsIHBhdGgpXG4gIHZhciBleHRlbnNpb24gPSBleHRuYW1lKCd4LicgKyBwYXRoKVxuICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgLnN1YnN0cigxKVxuXG4gIGlmICghZXh0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICByZXR1cm4gZXhwb3J0cy50eXBlc1tleHRlbnNpb25dIHx8IGZhbHNlXG59XG5cbi8qKlxuICogUG9wdWxhdGUgdGhlIGV4dGVuc2lvbnMgYW5kIHR5cGVzIG1hcHMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBvcHVsYXRlTWFwcyAoZXh0ZW5zaW9ucywgdHlwZXMpIHtcbiAgLy8gc291cmNlIHByZWZlcmVuY2UgKGxlYXN0IC0+IG1vc3QpXG4gIHZhciBwcmVmZXJlbmNlID0gWyduZ2lueCcsICdhcGFjaGUnLCB1bmRlZmluZWQsICdpYW5hJ11cblxuICBPYmplY3Qua2V5cyhkYikuZm9yRWFjaChmdW5jdGlvbiBmb3JFYWNoTWltZVR5cGUgKHR5cGUpIHtcbiAgICB2YXIgbWltZSA9IGRiW3R5cGVdXG4gICAgdmFyIGV4dHMgPSBtaW1lLmV4dGVuc2lvbnNcblxuICAgIGlmICghZXh0cyB8fCAhZXh0cy5sZW5ndGgpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIG1pbWUgLT4gZXh0ZW5zaW9uc1xuICAgIGV4dGVuc2lvbnNbdHlwZV0gPSBleHRzXG5cbiAgICAvLyBleHRlbnNpb24gLT4gbWltZVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXh0cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGV4dGVuc2lvbiA9IGV4dHNbaV1cblxuICAgICAgaWYgKHR5cGVzW2V4dGVuc2lvbl0pIHtcbiAgICAgICAgdmFyIGZyb20gPSBwcmVmZXJlbmNlLmluZGV4T2YoZGJbdHlwZXNbZXh0ZW5zaW9uXV0uc291cmNlKVxuICAgICAgICB2YXIgdG8gPSBwcmVmZXJlbmNlLmluZGV4T2YobWltZS5zb3VyY2UpXG5cbiAgICAgICAgaWYgKHR5cGVzW2V4dGVuc2lvbl0gIT09ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nICYmXG4gICAgICAgICAgKGZyb20gPiB0byB8fCAoZnJvbSA9PT0gdG8gJiYgdHlwZXNbZXh0ZW5zaW9uXS5zdWJzdHIoMCwgMTIpID09PSAnYXBwbGljYXRpb24vJykpKSB7XG4gICAgICAgICAgLy8gc2tpcCB0aGUgcmVtYXBwaW5nXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBzZXQgdGhlIGV4dGVuc2lvbiAtPiBtaW1lXG4gICAgICB0eXBlc1tleHRlbnNpb25dID0gdHlwZVxuICAgIH1cbiAgfSlcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9taW1lLXR5cGVzL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///158\n");

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = __webpack_require__(160)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9taW1lLWRiL2luZGV4LmpzPzJkYzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBtaW1lLWRiXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2RiLmpzb24nKVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL21pbWUtZGIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE1OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///159\n");

/***/ }),
/* 160 */
/***/ (function(module, exports) {

eval("module.exports = {\"application/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"application/3gpdash-qoe-report+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/3gpp-ims+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/a2l\":{\"source\":\"iana\"},\"application/activemessage\":{\"source\":\"iana\"},\"application/activity+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-directory+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcost+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcostparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointprop+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointpropparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-error+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamcontrol+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/aml\":{\"source\":\"iana\"},\"application/andrew-inset\":{\"source\":\"iana\",\"extensions\":[\"ez\"]},\"application/applefile\":{\"source\":\"iana\"},\"application/applixware\":{\"source\":\"apache\",\"extensions\":[\"aw\"]},\"application/atf\":{\"source\":\"iana\"},\"application/atfx\":{\"source\":\"iana\"},\"application/atom+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atom\"]},\"application/atomcat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomcat\"]},\"application/atomdeleted+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomdeleted\"]},\"application/atomicmail\":{\"source\":\"iana\"},\"application/atomsvc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomsvc\"]},\"application/atsc-dwd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dwd\"]},\"application/atsc-dynamic-event-message\":{\"source\":\"iana\"},\"application/atsc-held+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"held\"]},\"application/atsc-rdt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/atsc-rsat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsat\"]},\"application/atxml\":{\"source\":\"iana\"},\"application/auth-policy+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/bacnet-xdd+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/batch-smtp\":{\"source\":\"iana\"},\"application/bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/beep+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/calendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/calendar+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xcs\"]},\"application/call-completion\":{\"source\":\"iana\"},\"application/cals-1840\":{\"source\":\"iana\"},\"application/cap+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/cbor\":{\"source\":\"iana\"},\"application/cbor-seq\":{\"source\":\"iana\"},\"application/cccex\":{\"source\":\"iana\"},\"application/ccmp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ccxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ccxml\"]},\"application/cdfx+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdfx\"]},\"application/cdmi-capability\":{\"source\":\"iana\",\"extensions\":[\"cdmia\"]},\"application/cdmi-container\":{\"source\":\"iana\",\"extensions\":[\"cdmic\"]},\"application/cdmi-domain\":{\"source\":\"iana\",\"extensions\":[\"cdmid\"]},\"application/cdmi-object\":{\"source\":\"iana\",\"extensions\":[\"cdmio\"]},\"application/cdmi-queue\":{\"source\":\"iana\",\"extensions\":[\"cdmiq\"]},\"application/cdni\":{\"source\":\"iana\"},\"application/cea\":{\"source\":\"iana\"},\"application/cea-2018+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cellml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cfw\":{\"source\":\"iana\"},\"application/clue+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/clue_info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cms\":{\"source\":\"iana\"},\"application/cnrp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-group+json\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-payload\":{\"source\":\"iana\"},\"application/commonground\":{\"source\":\"iana\"},\"application/conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cose\":{\"source\":\"iana\"},\"application/cose-key\":{\"source\":\"iana\"},\"application/cose-key-set\":{\"source\":\"iana\"},\"application/cpl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csrattrs\":{\"source\":\"iana\"},\"application/csta+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cstadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csvm+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cu-seeme\":{\"source\":\"apache\",\"extensions\":[\"cu\"]},\"application/cwt\":{\"source\":\"iana\"},\"application/cybercash\":{\"source\":\"iana\"},\"application/dart\":{\"compressible\":true},\"application/dash+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpd\"]},\"application/dashdelta\":{\"source\":\"iana\"},\"application/davmount+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"davmount\"]},\"application/dca-rft\":{\"source\":\"iana\"},\"application/dcd\":{\"source\":\"iana\"},\"application/dec-dx\":{\"source\":\"iana\"},\"application/dialog-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom\":{\"source\":\"iana\"},\"application/dicom+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dii\":{\"source\":\"iana\"},\"application/dit\":{\"source\":\"iana\"},\"application/dns\":{\"source\":\"iana\"},\"application/dns+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dns-message\":{\"source\":\"iana\"},\"application/docbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dbk\"]},\"application/dots+cbor\":{\"source\":\"iana\"},\"application/dskpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dssc+der\":{\"source\":\"iana\",\"extensions\":[\"dssc\"]},\"application/dssc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdssc\"]},\"application/dvcs\":{\"source\":\"iana\"},\"application/ecmascript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ecma\",\"es\"]},\"application/edi-consent\":{\"source\":\"iana\"},\"application/edi-x12\":{\"source\":\"iana\",\"compressible\":false},\"application/edifact\":{\"source\":\"iana\",\"compressible\":false},\"application/efi\":{\"source\":\"iana\"},\"application/emergencycalldata.comment+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.deviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.ecall.msd\":{\"source\":\"iana\"},\"application/emergencycalldata.providerinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.serviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.subscriberinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.veds+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emma+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emma\"]},\"application/emotionml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emotionml\"]},\"application/encaprtp\":{\"source\":\"iana\"},\"application/epp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/epub+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"epub\"]},\"application/eshop\":{\"source\":\"iana\"},\"application/exi\":{\"source\":\"iana\",\"extensions\":[\"exi\"]},\"application/expect-ct-report+json\":{\"source\":\"iana\",\"compressible\":true},\"application/fastinfoset\":{\"source\":\"iana\"},\"application/fastsoap\":{\"source\":\"iana\"},\"application/fdt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fdt\"]},\"application/fhir+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fhir+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fido.trusted-apps+json\":{\"compressible\":true},\"application/fits\":{\"source\":\"iana\"},\"application/flexfec\":{\"source\":\"iana\"},\"application/font-sfnt\":{\"source\":\"iana\"},\"application/font-tdpfr\":{\"source\":\"iana\",\"extensions\":[\"pfr\"]},\"application/font-woff\":{\"source\":\"iana\",\"compressible\":false},\"application/framework-attributes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/geo+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"geojson\"]},\"application/geo+json-seq\":{\"source\":\"iana\"},\"application/geopackage+sqlite3\":{\"source\":\"iana\"},\"application/geoxacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/gltf-buffer\":{\"source\":\"iana\"},\"application/gml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gml\"]},\"application/gpx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"gpx\"]},\"application/gxf\":{\"source\":\"apache\",\"extensions\":[\"gxf\"]},\"application/gzip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gz\"]},\"application/h224\":{\"source\":\"iana\"},\"application/held+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/hjson\":{\"extensions\":[\"hjson\"]},\"application/http\":{\"source\":\"iana\"},\"application/hyperstudio\":{\"source\":\"iana\",\"extensions\":[\"stk\"]},\"application/ibe-key-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pkg-reply+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pp-data\":{\"source\":\"iana\"},\"application/iges\":{\"source\":\"iana\"},\"application/im-iscomposing+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/index\":{\"source\":\"iana\"},\"application/index.cmd\":{\"source\":\"iana\"},\"application/index.obj\":{\"source\":\"iana\"},\"application/index.response\":{\"source\":\"iana\"},\"application/index.vnd\":{\"source\":\"iana\"},\"application/inkml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ink\",\"inkml\"]},\"application/iotp\":{\"source\":\"iana\"},\"application/ipfix\":{\"source\":\"iana\",\"extensions\":[\"ipfix\"]},\"application/ipp\":{\"source\":\"iana\"},\"application/isup\":{\"source\":\"iana\"},\"application/its+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"its\"]},\"application/java-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jar\",\"war\",\"ear\"]},\"application/java-serialized-object\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"ser\"]},\"application/java-vm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"class\"]},\"application/javascript\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"js\",\"mjs\"]},\"application/jf2feed+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jose\":{\"source\":\"iana\"},\"application/jose+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jrd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"json\",\"map\"]},\"application/json-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json-seq\":{\"source\":\"iana\"},\"application/json5\":{\"extensions\":[\"json5\"]},\"application/jsonml+json\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"jsonml\"]},\"application/jwk+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwk-set+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwt\":{\"source\":\"iana\"},\"application/kpml-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/kpml-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ld+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"jsonld\"]},\"application/lgr+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lgr\"]},\"application/link-format\":{\"source\":\"iana\"},\"application/load-control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lost+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lostxml\"]},\"application/lostsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lpf+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/lxf\":{\"source\":\"iana\"},\"application/mac-binhex40\":{\"source\":\"iana\",\"extensions\":[\"hqx\"]},\"application/mac-compactpro\":{\"source\":\"apache\",\"extensions\":[\"cpt\"]},\"application/macwriteii\":{\"source\":\"iana\"},\"application/mads+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mads\"]},\"application/manifest+json\":{\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"webmanifest\"]},\"application/marc\":{\"source\":\"iana\",\"extensions\":[\"mrc\"]},\"application/marcxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mrcx\"]},\"application/mathematica\":{\"source\":\"iana\",\"extensions\":[\"ma\",\"nb\",\"mb\"]},\"application/mathml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mathml\"]},\"application/mathml-content+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mathml-presentation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-associated-procedure-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-deregister+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-envelope+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-protection-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-reception-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-schedule+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-user-service-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbox\":{\"source\":\"iana\",\"extensions\":[\"mbox\"]},\"application/media-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/media_control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mediaservercontrol+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mscml\"]},\"application/merge-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/metalink+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"metalink\"]},\"application/metalink4+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"meta4\"]},\"application/mets+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mets\"]},\"application/mf4\":{\"source\":\"iana\"},\"application/mikey\":{\"source\":\"iana\"},\"application/mipc\":{\"source\":\"iana\"},\"application/mmt-aei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"maei\"]},\"application/mmt-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musd\"]},\"application/mods+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mods\"]},\"application/moss-keys\":{\"source\":\"iana\"},\"application/moss-signature\":{\"source\":\"iana\"},\"application/mosskey-data\":{\"source\":\"iana\"},\"application/mosskey-request\":{\"source\":\"iana\"},\"application/mp21\":{\"source\":\"iana\",\"extensions\":[\"m21\",\"mp21\"]},\"application/mp4\":{\"source\":\"iana\",\"extensions\":[\"mp4s\",\"m4p\"]},\"application/mpeg4-generic\":{\"source\":\"iana\"},\"application/mpeg4-iod\":{\"source\":\"iana\"},\"application/mpeg4-iod-xmt\":{\"source\":\"iana\"},\"application/mrb-consumer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/mrb-publish+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/msc-ivr+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msc-mixer+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msword\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"doc\",\"dot\"]},\"application/mud+json\":{\"source\":\"iana\",\"compressible\":true},\"application/multipart-core\":{\"source\":\"iana\"},\"application/mxf\":{\"source\":\"iana\",\"extensions\":[\"mxf\"]},\"application/n-quads\":{\"source\":\"iana\",\"extensions\":[\"nq\"]},\"application/n-triples\":{\"source\":\"iana\",\"extensions\":[\"nt\"]},\"application/nasdata\":{\"source\":\"iana\"},\"application/news-checkgroups\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-groupinfo\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-transmission\":{\"source\":\"iana\"},\"application/nlsml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/node\":{\"source\":\"iana\",\"extensions\":[\"cjs\"]},\"application/nss\":{\"source\":\"iana\"},\"application/ocsp-request\":{\"source\":\"iana\"},\"application/ocsp-response\":{\"source\":\"iana\"},\"application/octet-stream\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]},\"application/oda\":{\"source\":\"iana\",\"extensions\":[\"oda\"]},\"application/odm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/odx\":{\"source\":\"iana\"},\"application/oebps-package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"opf\"]},\"application/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogx\"]},\"application/omdoc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"omdoc\"]},\"application/onenote\":{\"source\":\"apache\",\"extensions\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]},\"application/oscore\":{\"source\":\"iana\"},\"application/oxps\":{\"source\":\"iana\",\"extensions\":[\"oxps\"]},\"application/p2p-overlay+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"relo\"]},\"application/parityfec\":{\"source\":\"iana\"},\"application/passport\":{\"source\":\"iana\"},\"application/patch-ops-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/pdf\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pdf\"]},\"application/pdx\":{\"source\":\"iana\"},\"application/pem-certificate-chain\":{\"source\":\"iana\"},\"application/pgp-encrypted\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pgp\"]},\"application/pgp-keys\":{\"source\":\"iana\"},\"application/pgp-signature\":{\"source\":\"iana\",\"extensions\":[\"asc\",\"sig\"]},\"application/pics-rules\":{\"source\":\"apache\",\"extensions\":[\"prf\"]},\"application/pidf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pidf-diff+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pkcs10\":{\"source\":\"iana\",\"extensions\":[\"p10\"]},\"application/pkcs12\":{\"source\":\"iana\"},\"application/pkcs7-mime\":{\"source\":\"iana\",\"extensions\":[\"p7m\",\"p7c\"]},\"application/pkcs7-signature\":{\"source\":\"iana\",\"extensions\":[\"p7s\"]},\"application/pkcs8\":{\"source\":\"iana\",\"extensions\":[\"p8\"]},\"application/pkcs8-encrypted\":{\"source\":\"iana\"},\"application/pkix-attr-cert\":{\"source\":\"iana\",\"extensions\":[\"ac\"]},\"application/pkix-cert\":{\"source\":\"iana\",\"extensions\":[\"cer\"]},\"application/pkix-crl\":{\"source\":\"iana\",\"extensions\":[\"crl\"]},\"application/pkix-pkipath\":{\"source\":\"iana\",\"extensions\":[\"pkipath\"]},\"application/pkixcmp\":{\"source\":\"iana\",\"extensions\":[\"pki\"]},\"application/pls+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pls\"]},\"application/poc-settings+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/postscript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ai\",\"eps\",\"ps\"]},\"application/ppsp-tracker+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/provenance+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"provx\"]},\"application/prs.alvestrand.titrax-sheet\":{\"source\":\"iana\"},\"application/prs.cww\":{\"source\":\"iana\",\"extensions\":[\"cww\"]},\"application/prs.hpub+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/prs.nprend\":{\"source\":\"iana\"},\"application/prs.plucker\":{\"source\":\"iana\"},\"application/prs.rdf-xml-crypt\":{\"source\":\"iana\"},\"application/prs.xsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pskc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pskcxml\"]},\"application/pvd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/qsig\":{\"source\":\"iana\"},\"application/raml+yaml\":{\"compressible\":true,\"extensions\":[\"raml\"]},\"application/raptorfec\":{\"source\":\"iana\"},\"application/rdap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/rdf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rdf\",\"owl\"]},\"application/reginfo+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rif\"]},\"application/relax-ng-compact-syntax\":{\"source\":\"iana\",\"extensions\":[\"rnc\"]},\"application/remote-printing\":{\"source\":\"iana\"},\"application/reputon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/resource-lists+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rl\"]},\"application/resource-lists-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rld\"]},\"application/rfc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/riscos\":{\"source\":\"iana\"},\"application/rlmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/rls-services+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rs\"]},\"application/route-apd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rapd\"]},\"application/route-s-tsid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sls\"]},\"application/route-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rusd\"]},\"application/rpki-ghostbusters\":{\"source\":\"iana\",\"extensions\":[\"gbr\"]},\"application/rpki-manifest\":{\"source\":\"iana\",\"extensions\":[\"mft\"]},\"application/rpki-publication\":{\"source\":\"iana\"},\"application/rpki-roa\":{\"source\":\"iana\",\"extensions\":[\"roa\"]},\"application/rpki-updown\":{\"source\":\"iana\"},\"application/rsd+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rsd\"]},\"application/rss+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rss\"]},\"application/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"application/rtploopback\":{\"source\":\"iana\"},\"application/rtx\":{\"source\":\"iana\"},\"application/samlassertion+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/samlmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sbe\":{\"source\":\"iana\"},\"application/sbml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sbml\"]},\"application/scaip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/scim+json\":{\"source\":\"iana\",\"compressible\":true},\"application/scvp-cv-request\":{\"source\":\"iana\",\"extensions\":[\"scq\"]},\"application/scvp-cv-response\":{\"source\":\"iana\",\"extensions\":[\"scs\"]},\"application/scvp-vp-request\":{\"source\":\"iana\",\"extensions\":[\"spq\"]},\"application/scvp-vp-response\":{\"source\":\"iana\",\"extensions\":[\"spp\"]},\"application/sdp\":{\"source\":\"iana\",\"extensions\":[\"sdp\"]},\"application/secevent+jwt\":{\"source\":\"iana\"},\"application/senml+cbor\":{\"source\":\"iana\"},\"application/senml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"senmlx\"]},\"application/senml-etch+cbor\":{\"source\":\"iana\"},\"application/senml-etch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml-exi\":{\"source\":\"iana\"},\"application/sensml+cbor\":{\"source\":\"iana\"},\"application/sensml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sensml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sensmlx\"]},\"application/sensml-exi\":{\"source\":\"iana\"},\"application/sep+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sep-exi\":{\"source\":\"iana\"},\"application/session-info\":{\"source\":\"iana\"},\"application/set-payment\":{\"source\":\"iana\"},\"application/set-payment-initiation\":{\"source\":\"iana\",\"extensions\":[\"setpay\"]},\"application/set-registration\":{\"source\":\"iana\"},\"application/set-registration-initiation\":{\"source\":\"iana\",\"extensions\":[\"setreg\"]},\"application/sgml\":{\"source\":\"iana\"},\"application/sgml-open-catalog\":{\"source\":\"iana\"},\"application/shf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"shf\"]},\"application/sieve\":{\"source\":\"iana\",\"extensions\":[\"siv\",\"sieve\"]},\"application/simple-filter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/simple-message-summary\":{\"source\":\"iana\"},\"application/simplesymbolcontainer\":{\"source\":\"iana\"},\"application/sipc\":{\"source\":\"iana\"},\"application/slate\":{\"source\":\"iana\"},\"application/smil\":{\"source\":\"iana\"},\"application/smil+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"smi\",\"smil\"]},\"application/smpte336m\":{\"source\":\"iana\"},\"application/soap+fastinfoset\":{\"source\":\"iana\"},\"application/soap+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sparql-query\":{\"source\":\"iana\",\"extensions\":[\"rq\"]},\"application/sparql-results+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"srx\"]},\"application/spirits-event+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sql\":{\"source\":\"iana\"},\"application/srgs\":{\"source\":\"iana\",\"extensions\":[\"gram\"]},\"application/srgs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"grxml\"]},\"application/sru+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sru\"]},\"application/ssdl+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ssdl\"]},\"application/ssml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ssml\"]},\"application/stix+json\":{\"source\":\"iana\",\"compressible\":true},\"application/swid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"swidtag\"]},\"application/tamp-apex-update\":{\"source\":\"iana\"},\"application/tamp-apex-update-confirm\":{\"source\":\"iana\"},\"application/tamp-community-update\":{\"source\":\"iana\"},\"application/tamp-community-update-confirm\":{\"source\":\"iana\"},\"application/tamp-error\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust-confirm\":{\"source\":\"iana\"},\"application/tamp-status-query\":{\"source\":\"iana\"},\"application/tamp-status-response\":{\"source\":\"iana\"},\"application/tamp-update\":{\"source\":\"iana\"},\"application/tamp-update-confirm\":{\"source\":\"iana\"},\"application/tar\":{\"compressible\":true},\"application/taxii+json\":{\"source\":\"iana\",\"compressible\":true},\"application/td+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tei\",\"teicorpus\"]},\"application/tetra_isi\":{\"source\":\"iana\"},\"application/thraud+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tfi\"]},\"application/timestamp-query\":{\"source\":\"iana\"},\"application/timestamp-reply\":{\"source\":\"iana\"},\"application/timestamped-data\":{\"source\":\"iana\",\"extensions\":[\"tsd\"]},\"application/tlsrpt+gzip\":{\"source\":\"iana\"},\"application/tlsrpt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tnauthlist\":{\"source\":\"iana\"},\"application/toml\":{\"compressible\":true,\"extensions\":[\"toml\"]},\"application/trickle-ice-sdpfrag\":{\"source\":\"iana\"},\"application/trig\":{\"source\":\"iana\"},\"application/ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttml\"]},\"application/tve-trigger\":{\"source\":\"iana\"},\"application/tzif\":{\"source\":\"iana\"},\"application/tzif-leap\":{\"source\":\"iana\"},\"application/ulpfec\":{\"source\":\"iana\"},\"application/urc-grpsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-ressheet+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsheet\"]},\"application/urc-targetdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-uisocketdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vemmi\":{\"source\":\"iana\"},\"application/vividence.scriptfile\":{\"source\":\"apache\"},\"application/vnd.1000minds.decision-model+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"1km\"]},\"application/vnd.3gpp-prose+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-prose-pc3ch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-v2x-local-service-information\":{\"source\":\"iana\"},\"application/vnd.3gpp.access-transfer-events+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.bsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gmop+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mc-signalling-ear\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-payload\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-signalling\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-floor-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-signed+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-init-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-transmission-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mid-call+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.pic-bw-large\":{\"source\":\"iana\",\"extensions\":[\"plb\"]},\"application/vnd.3gpp.pic-bw-small\":{\"source\":\"iana\",\"extensions\":[\"psb\"]},\"application/vnd.3gpp.pic-bw-var\":{\"source\":\"iana\",\"extensions\":[\"pvb\"]},\"application/vnd.3gpp.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-ext+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.state-and-event-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ussd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.bcmcsinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp2.tcap\":{\"source\":\"iana\",\"extensions\":[\"tcap\"]},\"application/vnd.3lightssoftware.imagescal\":{\"source\":\"iana\"},\"application/vnd.3m.post-it-notes\":{\"source\":\"iana\",\"extensions\":[\"pwn\"]},\"application/vnd.accpac.simply.aso\":{\"source\":\"iana\",\"extensions\":[\"aso\"]},\"application/vnd.accpac.simply.imp\":{\"source\":\"iana\",\"extensions\":[\"imp\"]},\"application/vnd.acucobol\":{\"source\":\"iana\",\"extensions\":[\"acu\"]},\"application/vnd.acucorp\":{\"source\":\"iana\",\"extensions\":[\"atc\",\"acutc\"]},\"application/vnd.adobe.air-application-installer-package+zip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"air\"]},\"application/vnd.adobe.flash.movie\":{\"source\":\"iana\"},\"application/vnd.adobe.formscentral.fcdt\":{\"source\":\"iana\",\"extensions\":[\"fcdt\"]},\"application/vnd.adobe.fxp\":{\"source\":\"iana\",\"extensions\":[\"fxp\",\"fxpl\"]},\"application/vnd.adobe.partial-upload\":{\"source\":\"iana\"},\"application/vnd.adobe.xdp+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdp\"]},\"application/vnd.adobe.xfdf\":{\"source\":\"iana\",\"extensions\":[\"xfdf\"]},\"application/vnd.aether.imp\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata-pagedef\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-charset\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codedfont\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codepage\":{\"source\":\"iana\"},\"application/vnd.afpc.modca\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-formdef\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-mediummap\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-objectcontainer\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-overlay\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-pagesegment\":{\"source\":\"iana\"},\"application/vnd.ah-barcode\":{\"source\":\"iana\"},\"application/vnd.ahead.space\":{\"source\":\"iana\",\"extensions\":[\"ahead\"]},\"application/vnd.airzip.filesecure.azf\":{\"source\":\"iana\",\"extensions\":[\"azf\"]},\"application/vnd.airzip.filesecure.azs\":{\"source\":\"iana\",\"extensions\":[\"azs\"]},\"application/vnd.amadeus+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.amazon.ebook\":{\"source\":\"apache\",\"extensions\":[\"azw\"]},\"application/vnd.amazon.mobi8-ebook\":{\"source\":\"iana\"},\"application/vnd.americandynamics.acc\":{\"source\":\"iana\",\"extensions\":[\"acc\"]},\"application/vnd.amiga.ami\":{\"source\":\"iana\",\"extensions\":[\"ami\"]},\"application/vnd.amundsen.maze+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.android.ota\":{\"source\":\"iana\"},\"application/vnd.android.package-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"apk\"]},\"application/vnd.anki\":{\"source\":\"iana\"},\"application/vnd.anser-web-certificate-issue-initiation\":{\"source\":\"iana\",\"extensions\":[\"cii\"]},\"application/vnd.anser-web-funds-transfer-initiation\":{\"source\":\"apache\",\"extensions\":[\"fti\"]},\"application/vnd.antix.game-component\":{\"source\":\"iana\",\"extensions\":[\"atx\"]},\"application/vnd.apache.thrift.binary\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.compact\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.json\":{\"source\":\"iana\"},\"application/vnd.api+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.aplextor.warrp+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apothekende.reservation+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apple.installer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpkg\"]},\"application/vnd.apple.keynote\":{\"source\":\"iana\",\"extensions\":[\"keynote\"]},\"application/vnd.apple.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"m3u8\"]},\"application/vnd.apple.numbers\":{\"source\":\"iana\",\"extensions\":[\"numbers\"]},\"application/vnd.apple.pages\":{\"source\":\"iana\",\"extensions\":[\"pages\"]},\"application/vnd.apple.pkpass\":{\"compressible\":false,\"extensions\":[\"pkpass\"]},\"application/vnd.arastra.swi\":{\"source\":\"iana\"},\"application/vnd.aristanetworks.swi\":{\"source\":\"iana\",\"extensions\":[\"swi\"]},\"application/vnd.artisan+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.artsquare\":{\"source\":\"iana\"},\"application/vnd.astraea-software.iota\":{\"source\":\"iana\",\"extensions\":[\"iota\"]},\"application/vnd.audiograph\":{\"source\":\"iana\",\"extensions\":[\"aep\"]},\"application/vnd.autopackage\":{\"source\":\"iana\"},\"application/vnd.avalon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.avistar+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.balsamiq.bmml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmml\"]},\"application/vnd.balsamiq.bmpr\":{\"source\":\"iana\"},\"application/vnd.banana-accounting\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.error\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bekitzur-stech+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bint.med-content\":{\"source\":\"iana\"},\"application/vnd.biopax.rdf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.blink-idb-value-wrapper\":{\"source\":\"iana\"},\"application/vnd.blueice.multipass\":{\"source\":\"iana\",\"extensions\":[\"mpm\"]},\"application/vnd.bluetooth.ep.oob\":{\"source\":\"iana\"},\"application/vnd.bluetooth.le.oob\":{\"source\":\"iana\"},\"application/vnd.bmi\":{\"source\":\"iana\",\"extensions\":[\"bmi\"]},\"application/vnd.bpf\":{\"source\":\"iana\"},\"application/vnd.bpf3\":{\"source\":\"iana\"},\"application/vnd.businessobjects\":{\"source\":\"iana\",\"extensions\":[\"rep\"]},\"application/vnd.byu.uapi+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cab-jscript\":{\"source\":\"iana\"},\"application/vnd.canon-cpdl\":{\"source\":\"iana\"},\"application/vnd.canon-lips\":{\"source\":\"iana\"},\"application/vnd.capasystems-pg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cendio.thinlinc.clientconf\":{\"source\":\"iana\"},\"application/vnd.century-systems.tcp_stream\":{\"source\":\"iana\"},\"application/vnd.chemdraw+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdxml\"]},\"application/vnd.chess-pgn\":{\"source\":\"iana\"},\"application/vnd.chipnuts.karaoke-mmd\":{\"source\":\"iana\",\"extensions\":[\"mmd\"]},\"application/vnd.ciedi\":{\"source\":\"iana\"},\"application/vnd.cinderella\":{\"source\":\"iana\",\"extensions\":[\"cdy\"]},\"application/vnd.cirpack.isdn-ext\":{\"source\":\"iana\"},\"application/vnd.citationstyles.style+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csl\"]},\"application/vnd.claymore\":{\"source\":\"iana\",\"extensions\":[\"cla\"]},\"application/vnd.cloanto.rp9\":{\"source\":\"iana\",\"extensions\":[\"rp9\"]},\"application/vnd.clonk.c4group\":{\"source\":\"iana\",\"extensions\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]},\"application/vnd.cluetrust.cartomobile-config\":{\"source\":\"iana\",\"extensions\":[\"c11amc\"]},\"application/vnd.cluetrust.cartomobile-config-pkg\":{\"source\":\"iana\",\"extensions\":[\"c11amz\"]},\"application/vnd.coffeescript\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet-template\":{\"source\":\"iana\"},\"application/vnd.collection+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.doc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.next+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.comicbook+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.comicbook-rar\":{\"source\":\"iana\"},\"application/vnd.commerce-battelle\":{\"source\":\"iana\"},\"application/vnd.commonspace\":{\"source\":\"iana\",\"extensions\":[\"csp\"]},\"application/vnd.contact.cmsg\":{\"source\":\"iana\",\"extensions\":[\"cdbcmsg\"]},\"application/vnd.coreos.ignition+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cosmocaller\":{\"source\":\"iana\",\"extensions\":[\"cmc\"]},\"application/vnd.crick.clicker\":{\"source\":\"iana\",\"extensions\":[\"clkx\"]},\"application/vnd.crick.clicker.keyboard\":{\"source\":\"iana\",\"extensions\":[\"clkk\"]},\"application/vnd.crick.clicker.palette\":{\"source\":\"iana\",\"extensions\":[\"clkp\"]},\"application/vnd.crick.clicker.template\":{\"source\":\"iana\",\"extensions\":[\"clkt\"]},\"application/vnd.crick.clicker.wordbank\":{\"source\":\"iana\",\"extensions\":[\"clkw\"]},\"application/vnd.criticaltools.wbs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wbs\"]},\"application/vnd.cryptii.pipe+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.crypto-shade-file\":{\"source\":\"iana\"},\"application/vnd.ctc-posml\":{\"source\":\"iana\",\"extensions\":[\"pml\"]},\"application/vnd.ctct.ws+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cups-pdf\":{\"source\":\"iana\"},\"application/vnd.cups-postscript\":{\"source\":\"iana\"},\"application/vnd.cups-ppd\":{\"source\":\"iana\",\"extensions\":[\"ppd\"]},\"application/vnd.cups-raster\":{\"source\":\"iana\"},\"application/vnd.cups-raw\":{\"source\":\"iana\"},\"application/vnd.curl\":{\"source\":\"iana\"},\"application/vnd.curl.car\":{\"source\":\"apache\",\"extensions\":[\"car\"]},\"application/vnd.curl.pcurl\":{\"source\":\"apache\",\"extensions\":[\"pcurl\"]},\"application/vnd.cyan.dean.root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cybank\":{\"source\":\"iana\"},\"application/vnd.d2l.coursepackage1p0+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.dart\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dart\"]},\"application/vnd.data-vision.rdz\":{\"source\":\"iana\",\"extensions\":[\"rdz\"]},\"application/vnd.datapackage+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dataresource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dbf\":{\"source\":\"iana\"},\"application/vnd.debian.binary-package\":{\"source\":\"iana\"},\"application/vnd.dece.data\":{\"source\":\"iana\",\"extensions\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]},\"application/vnd.dece.ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uvt\",\"uvvt\"]},\"application/vnd.dece.unspecified\":{\"source\":\"iana\",\"extensions\":[\"uvx\",\"uvvx\"]},\"application/vnd.dece.zip\":{\"source\":\"iana\",\"extensions\":[\"uvz\",\"uvvz\"]},\"application/vnd.denovo.fcselayout-link\":{\"source\":\"iana\",\"extensions\":[\"fe_launch\"]},\"application/vnd.desmume.movie\":{\"source\":\"iana\"},\"application/vnd.dir-bi.plate-dl-nosuffix\":{\"source\":\"iana\"},\"application/vnd.dm.delegation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dna\":{\"source\":\"iana\",\"extensions\":[\"dna\"]},\"application/vnd.document+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dolby.mlp\":{\"source\":\"apache\",\"extensions\":[\"mlp\"]},\"application/vnd.dolby.mobile.1\":{\"source\":\"iana\"},\"application/vnd.dolby.mobile.2\":{\"source\":\"iana\"},\"application/vnd.doremir.scorecloud-binary-document\":{\"source\":\"iana\"},\"application/vnd.dpgraph\":{\"source\":\"iana\",\"extensions\":[\"dpg\"]},\"application/vnd.dreamfactory\":{\"source\":\"iana\",\"extensions\":[\"dfac\"]},\"application/vnd.drive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ds-keypoint\":{\"source\":\"apache\",\"extensions\":[\"kpxx\"]},\"application/vnd.dtg.local\":{\"source\":\"iana\"},\"application/vnd.dtg.local.flash\":{\"source\":\"iana\"},\"application/vnd.dtg.local.html\":{\"source\":\"iana\"},\"application/vnd.dvb.ait\":{\"source\":\"iana\",\"extensions\":[\"ait\"]},\"application/vnd.dvb.dvbisl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.dvbj\":{\"source\":\"iana\"},\"application/vnd.dvb.esgcontainer\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcdftnotifaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess2\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgpdd\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcroaming\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-base\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-enhancement\":{\"source\":\"iana\"},\"application/vnd.dvb.notif-aggregate-root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-container+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-generic+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-msglist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-init+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.pfr\":{\"source\":\"iana\"},\"application/vnd.dvb.service\":{\"source\":\"iana\",\"extensions\":[\"svc\"]},\"application/vnd.dxr\":{\"source\":\"iana\"},\"application/vnd.dynageo\":{\"source\":\"iana\",\"extensions\":[\"geo\"]},\"application/vnd.dzr\":{\"source\":\"iana\"},\"application/vnd.easykaraoke.cdgdownload\":{\"source\":\"iana\"},\"application/vnd.ecdis-update\":{\"source\":\"iana\"},\"application/vnd.ecip.rlp\":{\"source\":\"iana\"},\"application/vnd.ecowin.chart\":{\"source\":\"iana\",\"extensions\":[\"mag\"]},\"application/vnd.ecowin.filerequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.fileupdate\":{\"source\":\"iana\"},\"application/vnd.ecowin.series\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesrequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesupdate\":{\"source\":\"iana\"},\"application/vnd.efi.img\":{\"source\":\"iana\"},\"application/vnd.efi.iso\":{\"source\":\"iana\"},\"application/vnd.emclient.accessrequest+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.enliven\":{\"source\":\"iana\",\"extensions\":[\"nml\"]},\"application/vnd.enphase.envoy\":{\"source\":\"iana\"},\"application/vnd.eprints.data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.epson.esf\":{\"source\":\"iana\",\"extensions\":[\"esf\"]},\"application/vnd.epson.msf\":{\"source\":\"iana\",\"extensions\":[\"msf\"]},\"application/vnd.epson.quickanime\":{\"source\":\"iana\",\"extensions\":[\"qam\"]},\"application/vnd.epson.salt\":{\"source\":\"iana\",\"extensions\":[\"slt\"]},\"application/vnd.epson.ssf\":{\"source\":\"iana\",\"extensions\":[\"ssf\"]},\"application/vnd.ericsson.quickcall\":{\"source\":\"iana\"},\"application/vnd.espass-espass+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.eszigno3+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es3\",\"et3\"]},\"application/vnd.etsi.aoc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.asic-e+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.asic-s+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.cug+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvcommand+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-bc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-cod+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-npvr+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvservice+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mcid+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mheg5\":{\"source\":\"iana\"},\"application/vnd.etsi.overload-control-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.pstn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.sci+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.simservs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.timestamp-token\":{\"source\":\"iana\"},\"application/vnd.etsi.tsl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.tsl.der\":{\"source\":\"iana\"},\"application/vnd.eudora.data\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.profile\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.settings\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.theme\":{\"source\":\"iana\"},\"application/vnd.exstream-empower+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.exstream-package\":{\"source\":\"iana\"},\"application/vnd.ezpix-album\":{\"source\":\"iana\",\"extensions\":[\"ez2\"]},\"application/vnd.ezpix-package\":{\"source\":\"iana\",\"extensions\":[\"ez3\"]},\"application/vnd.f-secure.mobile\":{\"source\":\"iana\"},\"application/vnd.fastcopy-disk-image\":{\"source\":\"iana\"},\"application/vnd.fdf\":{\"source\":\"iana\",\"extensions\":[\"fdf\"]},\"application/vnd.fdsn.mseed\":{\"source\":\"iana\",\"extensions\":[\"mseed\"]},\"application/vnd.fdsn.seed\":{\"source\":\"iana\",\"extensions\":[\"seed\",\"dataless\"]},\"application/vnd.ffsns\":{\"source\":\"iana\"},\"application/vnd.ficlab.flb+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.filmit.zfc\":{\"source\":\"iana\"},\"application/vnd.fints\":{\"source\":\"iana\"},\"application/vnd.firemonkeys.cloudcell\":{\"source\":\"iana\"},\"application/vnd.flographit\":{\"source\":\"iana\",\"extensions\":[\"gph\"]},\"application/vnd.fluxtime.clip\":{\"source\":\"iana\",\"extensions\":[\"ftc\"]},\"application/vnd.font-fontforge-sfd\":{\"source\":\"iana\"},\"application/vnd.framemaker\":{\"source\":\"iana\",\"extensions\":[\"fm\",\"frame\",\"maker\",\"book\"]},\"application/vnd.frogans.fnc\":{\"source\":\"iana\",\"extensions\":[\"fnc\"]},\"application/vnd.frogans.ltf\":{\"source\":\"iana\",\"extensions\":[\"ltf\"]},\"application/vnd.fsc.weblaunch\":{\"source\":\"iana\",\"extensions\":[\"fsc\"]},\"application/vnd.fujitsu.oasys\":{\"source\":\"iana\",\"extensions\":[\"oas\"]},\"application/vnd.fujitsu.oasys2\":{\"source\":\"iana\",\"extensions\":[\"oa2\"]},\"application/vnd.fujitsu.oasys3\":{\"source\":\"iana\",\"extensions\":[\"oa3\"]},\"application/vnd.fujitsu.oasysgp\":{\"source\":\"iana\",\"extensions\":[\"fg5\"]},\"application/vnd.fujitsu.oasysprs\":{\"source\":\"iana\",\"extensions\":[\"bh2\"]},\"application/vnd.fujixerox.art-ex\":{\"source\":\"iana\"},\"application/vnd.fujixerox.art4\":{\"source\":\"iana\"},\"application/vnd.fujixerox.ddd\":{\"source\":\"iana\",\"extensions\":[\"ddd\"]},\"application/vnd.fujixerox.docuworks\":{\"source\":\"iana\",\"extensions\":[\"xdw\"]},\"application/vnd.fujixerox.docuworks.binder\":{\"source\":\"iana\",\"extensions\":[\"xbd\"]},\"application/vnd.fujixerox.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujixerox.hbpl\":{\"source\":\"iana\"},\"application/vnd.fut-misnet\":{\"source\":\"iana\"},\"application/vnd.futoin+cbor\":{\"source\":\"iana\"},\"application/vnd.futoin+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fuzzysheet\":{\"source\":\"iana\",\"extensions\":[\"fzs\"]},\"application/vnd.genomatix.tuxedo\":{\"source\":\"iana\",\"extensions\":[\"txd\"]},\"application/vnd.gentics.grd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geo+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geocube+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geogebra.file\":{\"source\":\"iana\",\"extensions\":[\"ggb\"]},\"application/vnd.geogebra.tool\":{\"source\":\"iana\",\"extensions\":[\"ggt\"]},\"application/vnd.geometry-explorer\":{\"source\":\"iana\",\"extensions\":[\"gex\",\"gre\"]},\"application/vnd.geonext\":{\"source\":\"iana\",\"extensions\":[\"gxt\"]},\"application/vnd.geoplan\":{\"source\":\"iana\",\"extensions\":[\"g2w\"]},\"application/vnd.geospace\":{\"source\":\"iana\",\"extensions\":[\"g3w\"]},\"application/vnd.gerber\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt-response\":{\"source\":\"iana\"},\"application/vnd.gmx\":{\"source\":\"iana\",\"extensions\":[\"gmx\"]},\"application/vnd.google-apps.document\":{\"compressible\":false,\"extensions\":[\"gdoc\"]},\"application/vnd.google-apps.presentation\":{\"compressible\":false,\"extensions\":[\"gslides\"]},\"application/vnd.google-apps.spreadsheet\":{\"compressible\":false,\"extensions\":[\"gsheet\"]},\"application/vnd.google-earth.kml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"kml\"]},\"application/vnd.google-earth.kmz\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"kmz\"]},\"application/vnd.gov.sk.e-form+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.gov.sk.e-form+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.gov.sk.xmldatacontainer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.grafeq\":{\"source\":\"iana\",\"extensions\":[\"gqf\",\"gqs\"]},\"application/vnd.gridmp\":{\"source\":\"iana\"},\"application/vnd.groove-account\":{\"source\":\"iana\",\"extensions\":[\"gac\"]},\"application/vnd.groove-help\":{\"source\":\"iana\",\"extensions\":[\"ghf\"]},\"application/vnd.groove-identity-message\":{\"source\":\"iana\",\"extensions\":[\"gim\"]},\"application/vnd.groove-injector\":{\"source\":\"iana\",\"extensions\":[\"grv\"]},\"application/vnd.groove-tool-message\":{\"source\":\"iana\",\"extensions\":[\"gtm\"]},\"application/vnd.groove-tool-template\":{\"source\":\"iana\",\"extensions\":[\"tpl\"]},\"application/vnd.groove-vcard\":{\"source\":\"iana\",\"extensions\":[\"vcg\"]},\"application/vnd.hal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hal+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"hal\"]},\"application/vnd.handheld-entertainment+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zmm\"]},\"application/vnd.hbci\":{\"source\":\"iana\",\"extensions\":[\"hbci\"]},\"application/vnd.hc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hcl-bireports\":{\"source\":\"iana\"},\"application/vnd.hdt\":{\"source\":\"iana\"},\"application/vnd.heroku+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hhe.lesson-player\":{\"source\":\"iana\",\"extensions\":[\"les\"]},\"application/vnd.hp-hpgl\":{\"source\":\"iana\",\"extensions\":[\"hpgl\"]},\"application/vnd.hp-hpid\":{\"source\":\"iana\",\"extensions\":[\"hpid\"]},\"application/vnd.hp-hps\":{\"source\":\"iana\",\"extensions\":[\"hps\"]},\"application/vnd.hp-jlyt\":{\"source\":\"iana\",\"extensions\":[\"jlt\"]},\"application/vnd.hp-pcl\":{\"source\":\"iana\",\"extensions\":[\"pcl\"]},\"application/vnd.hp-pclxl\":{\"source\":\"iana\",\"extensions\":[\"pclxl\"]},\"application/vnd.httphone\":{\"source\":\"iana\"},\"application/vnd.hydrostatix.sof-data\":{\"source\":\"iana\",\"extensions\":[\"sfd-hdstx\"]},\"application/vnd.hyper+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyper-item+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyperdrive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hzn-3d-crossword\":{\"source\":\"iana\"},\"application/vnd.ibm.afplinedata\":{\"source\":\"iana\"},\"application/vnd.ibm.electronic-media\":{\"source\":\"iana\"},\"application/vnd.ibm.minipay\":{\"source\":\"iana\",\"extensions\":[\"mpy\"]},\"application/vnd.ibm.modcap\":{\"source\":\"iana\",\"extensions\":[\"afp\",\"listafp\",\"list3820\"]},\"application/vnd.ibm.rights-management\":{\"source\":\"iana\",\"extensions\":[\"irm\"]},\"application/vnd.ibm.secure-container\":{\"source\":\"iana\",\"extensions\":[\"sc\"]},\"application/vnd.iccprofile\":{\"source\":\"iana\",\"extensions\":[\"icc\",\"icm\"]},\"application/vnd.ieee.1905\":{\"source\":\"iana\"},\"application/vnd.igloader\":{\"source\":\"iana\",\"extensions\":[\"igl\"]},\"application/vnd.imagemeter.folder+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.imagemeter.image+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.immervision-ivp\":{\"source\":\"iana\",\"extensions\":[\"ivp\"]},\"application/vnd.immervision-ivu\":{\"source\":\"iana\",\"extensions\":[\"ivu\"]},\"application/vnd.ims.imsccv1p1\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p2\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p3\":{\"source\":\"iana\"},\"application/vnd.ims.lis.v2.result+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolconsumerprofile+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy.id+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings.simple+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informedcontrol.rms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informix-visionary\":{\"source\":\"iana\"},\"application/vnd.infotech.project\":{\"source\":\"iana\"},\"application/vnd.infotech.project+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.innopath.wamp.notification\":{\"source\":\"iana\"},\"application/vnd.insors.igm\":{\"source\":\"iana\",\"extensions\":[\"igm\"]},\"application/vnd.intercon.formnet\":{\"source\":\"iana\",\"extensions\":[\"xpw\",\"xpx\"]},\"application/vnd.intergeo\":{\"source\":\"iana\",\"extensions\":[\"i2g\"]},\"application/vnd.intertrust.digibox\":{\"source\":\"iana\"},\"application/vnd.intertrust.nncp\":{\"source\":\"iana\"},\"application/vnd.intu.qbo\":{\"source\":\"iana\",\"extensions\":[\"qbo\"]},\"application/vnd.intu.qfx\":{\"source\":\"iana\",\"extensions\":[\"qfx\"]},\"application/vnd.iptc.g2.catalogitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.conceptitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.knowledgeitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.packageitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.planningitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ipunplugged.rcprofile\":{\"source\":\"iana\",\"extensions\":[\"rcprofile\"]},\"application/vnd.irepository.package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"irp\"]},\"application/vnd.is-xpr\":{\"source\":\"iana\",\"extensions\":[\"xpr\"]},\"application/vnd.isac.fcs\":{\"source\":\"iana\",\"extensions\":[\"fcs\"]},\"application/vnd.iso11783-10+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.jam\":{\"source\":\"iana\",\"extensions\":[\"jam\"]},\"application/vnd.japannet-directory-service\":{\"source\":\"iana\"},\"application/vnd.japannet-jpnstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-payment-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-registration\":{\"source\":\"iana\"},\"application/vnd.japannet-registration-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-setstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-verification\":{\"source\":\"iana\"},\"application/vnd.japannet-verification-wakeup\":{\"source\":\"iana\"},\"application/vnd.jcp.javame.midlet-rms\":{\"source\":\"iana\",\"extensions\":[\"rms\"]},\"application/vnd.jisp\":{\"source\":\"iana\",\"extensions\":[\"jisp\"]},\"application/vnd.joost.joda-archive\":{\"source\":\"iana\",\"extensions\":[\"joda\"]},\"application/vnd.jsk.isdn-ngn\":{\"source\":\"iana\"},\"application/vnd.kahootz\":{\"source\":\"iana\",\"extensions\":[\"ktz\",\"ktr\"]},\"application/vnd.kde.karbon\":{\"source\":\"iana\",\"extensions\":[\"karbon\"]},\"application/vnd.kde.kchart\":{\"source\":\"iana\",\"extensions\":[\"chrt\"]},\"application/vnd.kde.kformula\":{\"source\":\"iana\",\"extensions\":[\"kfo\"]},\"application/vnd.kde.kivio\":{\"source\":\"iana\",\"extensions\":[\"flw\"]},\"application/vnd.kde.kontour\":{\"source\":\"iana\",\"extensions\":[\"kon\"]},\"application/vnd.kde.kpresenter\":{\"source\":\"iana\",\"extensions\":[\"kpr\",\"kpt\"]},\"application/vnd.kde.kspread\":{\"source\":\"iana\",\"extensions\":[\"ksp\"]},\"application/vnd.kde.kword\":{\"source\":\"iana\",\"extensions\":[\"kwd\",\"kwt\"]},\"application/vnd.kenameaapp\":{\"source\":\"iana\",\"extensions\":[\"htke\"]},\"application/vnd.kidspiration\":{\"source\":\"iana\",\"extensions\":[\"kia\"]},\"application/vnd.kinar\":{\"source\":\"iana\",\"extensions\":[\"kne\",\"knp\"]},\"application/vnd.koan\":{\"source\":\"iana\",\"extensions\":[\"skp\",\"skd\",\"skt\",\"skm\"]},\"application/vnd.kodak-descriptor\":{\"source\":\"iana\",\"extensions\":[\"sse\"]},\"application/vnd.las\":{\"source\":\"iana\"},\"application/vnd.las.las+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.las.las+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lasxml\"]},\"application/vnd.laszip\":{\"source\":\"iana\"},\"application/vnd.leap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.liberty-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.llamagraphics.life-balance.desktop\":{\"source\":\"iana\",\"extensions\":[\"lbd\"]},\"application/vnd.llamagraphics.life-balance.exchange+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lbe\"]},\"application/vnd.logipipe.circuit+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.loom\":{\"source\":\"iana\"},\"application/vnd.lotus-1-2-3\":{\"source\":\"iana\",\"extensions\":[\"123\"]},\"application/vnd.lotus-approach\":{\"source\":\"iana\",\"extensions\":[\"apr\"]},\"application/vnd.lotus-freelance\":{\"source\":\"iana\",\"extensions\":[\"pre\"]},\"application/vnd.lotus-notes\":{\"source\":\"iana\",\"extensions\":[\"nsf\"]},\"application/vnd.lotus-organizer\":{\"source\":\"iana\",\"extensions\":[\"org\"]},\"application/vnd.lotus-screencam\":{\"source\":\"iana\",\"extensions\":[\"scm\"]},\"application/vnd.lotus-wordpro\":{\"source\":\"iana\",\"extensions\":[\"lwp\"]},\"application/vnd.macports.portpkg\":{\"source\":\"iana\",\"extensions\":[\"portpkg\"]},\"application/vnd.mapbox-vector-tile\":{\"source\":\"iana\"},\"application/vnd.marlin.drm.actiontoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.conftoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.license+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.mdcf\":{\"source\":\"iana\"},\"application/vnd.mason+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.maxmind.maxmind-db\":{\"source\":\"iana\"},\"application/vnd.mcd\":{\"source\":\"iana\",\"extensions\":[\"mcd\"]},\"application/vnd.medcalcdata\":{\"source\":\"iana\",\"extensions\":[\"mc1\"]},\"application/vnd.mediastation.cdkey\":{\"source\":\"iana\",\"extensions\":[\"cdkey\"]},\"application/vnd.meridian-slingshot\":{\"source\":\"iana\"},\"application/vnd.mfer\":{\"source\":\"iana\",\"extensions\":[\"mwf\"]},\"application/vnd.mfmp\":{\"source\":\"iana\",\"extensions\":[\"mfm\"]},\"application/vnd.micro+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.micrografx.flo\":{\"source\":\"iana\",\"extensions\":[\"flo\"]},\"application/vnd.micrografx.igx\":{\"source\":\"iana\",\"extensions\":[\"igx\"]},\"application/vnd.microsoft.portable-executable\":{\"source\":\"iana\"},\"application/vnd.microsoft.windows.thumbnail-cache\":{\"source\":\"iana\"},\"application/vnd.miele+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.mif\":{\"source\":\"iana\",\"extensions\":[\"mif\"]},\"application/vnd.minisoft-hp3000-save\":{\"source\":\"iana\"},\"application/vnd.mitsubishi.misty-guard.trustweb\":{\"source\":\"iana\"},\"application/vnd.mobius.daf\":{\"source\":\"iana\",\"extensions\":[\"daf\"]},\"application/vnd.mobius.dis\":{\"source\":\"iana\",\"extensions\":[\"dis\"]},\"application/vnd.mobius.mbk\":{\"source\":\"iana\",\"extensions\":[\"mbk\"]},\"application/vnd.mobius.mqy\":{\"source\":\"iana\",\"extensions\":[\"mqy\"]},\"application/vnd.mobius.msl\":{\"source\":\"iana\",\"extensions\":[\"msl\"]},\"application/vnd.mobius.plc\":{\"source\":\"iana\",\"extensions\":[\"plc\"]},\"application/vnd.mobius.txf\":{\"source\":\"iana\",\"extensions\":[\"txf\"]},\"application/vnd.mophun.application\":{\"source\":\"iana\",\"extensions\":[\"mpn\"]},\"application/vnd.mophun.certificate\":{\"source\":\"iana\",\"extensions\":[\"mpc\"]},\"application/vnd.motorola.flexsuite\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.adsi\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.fis\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.gotap\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.kmr\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.ttc\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.wem\":{\"source\":\"iana\"},\"application/vnd.motorola.iprm\":{\"source\":\"iana\"},\"application/vnd.mozilla.xul+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xul\"]},\"application/vnd.ms-3mfdocument\":{\"source\":\"iana\"},\"application/vnd.ms-artgalry\":{\"source\":\"iana\",\"extensions\":[\"cil\"]},\"application/vnd.ms-asf\":{\"source\":\"iana\"},\"application/vnd.ms-cab-compressed\":{\"source\":\"iana\",\"extensions\":[\"cab\"]},\"application/vnd.ms-color.iccprofile\":{\"source\":\"apache\"},\"application/vnd.ms-excel\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]},\"application/vnd.ms-excel.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlam\"]},\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsb\"]},\"application/vnd.ms-excel.sheet.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsm\"]},\"application/vnd.ms-excel.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xltm\"]},\"application/vnd.ms-fontobject\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eot\"]},\"application/vnd.ms-htmlhelp\":{\"source\":\"iana\",\"extensions\":[\"chm\"]},\"application/vnd.ms-ims\":{\"source\":\"iana\",\"extensions\":[\"ims\"]},\"application/vnd.ms-lrm\":{\"source\":\"iana\",\"extensions\":[\"lrm\"]},\"application/vnd.ms-office.activex+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-officetheme\":{\"source\":\"iana\",\"extensions\":[\"thmx\"]},\"application/vnd.ms-opentype\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-outlook\":{\"compressible\":false,\"extensions\":[\"msg\"]},\"application/vnd.ms-package.obfuscated-opentype\":{\"source\":\"apache\"},\"application/vnd.ms-pki.seccat\":{\"source\":\"apache\",\"extensions\":[\"cat\"]},\"application/vnd.ms-pki.stl\":{\"source\":\"apache\",\"extensions\":[\"stl\"]},\"application/vnd.ms-playready.initiator+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-powerpoint\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ppt\",\"pps\",\"pot\"]},\"application/vnd.ms-powerpoint.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppam\"]},\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"pptm\"]},\"application/vnd.ms-powerpoint.slide.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"sldm\"]},\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppsm\"]},\"application/vnd.ms-powerpoint.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"potm\"]},\"application/vnd.ms-printdevicecapabilities+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-printing.printticket+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-printschematicket+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-project\":{\"source\":\"iana\",\"extensions\":[\"mpp\",\"mpt\"]},\"application/vnd.ms-tnef\":{\"source\":\"iana\"},\"application/vnd.ms-windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.nwprinting.oob\":{\"source\":\"iana\"},\"application/vnd.ms-windows.printerpairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.wsd.oob\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-resp\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-resp\":{\"source\":\"iana\"},\"application/vnd.ms-word.document.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"docm\"]},\"application/vnd.ms-word.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"dotm\"]},\"application/vnd.ms-works\":{\"source\":\"iana\",\"extensions\":[\"wps\",\"wks\",\"wcm\",\"wdb\"]},\"application/vnd.ms-wpl\":{\"source\":\"iana\",\"extensions\":[\"wpl\"]},\"application/vnd.ms-xpsdocument\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xps\"]},\"application/vnd.msa-disk-image\":{\"source\":\"iana\"},\"application/vnd.mseq\":{\"source\":\"iana\",\"extensions\":[\"mseq\"]},\"application/vnd.msign\":{\"source\":\"iana\"},\"application/vnd.multiad.creator\":{\"source\":\"iana\"},\"application/vnd.multiad.creator.cif\":{\"source\":\"iana\"},\"application/vnd.music-niff\":{\"source\":\"iana\"},\"application/vnd.musician\":{\"source\":\"iana\",\"extensions\":[\"mus\"]},\"application/vnd.muvee.style\":{\"source\":\"iana\",\"extensions\":[\"msty\"]},\"application/vnd.mynfc\":{\"source\":\"iana\",\"extensions\":[\"taglet\"]},\"application/vnd.ncd.control\":{\"source\":\"iana\"},\"application/vnd.ncd.reference\":{\"source\":\"iana\"},\"application/vnd.nearst.inv+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nervana\":{\"source\":\"iana\"},\"application/vnd.netfpx\":{\"source\":\"iana\"},\"application/vnd.neurolanguage.nlu\":{\"source\":\"iana\",\"extensions\":[\"nlu\"]},\"application/vnd.nimn\":{\"source\":\"iana\"},\"application/vnd.nintendo.nitro.rom\":{\"source\":\"iana\"},\"application/vnd.nintendo.snes.rom\":{\"source\":\"iana\"},\"application/vnd.nitf\":{\"source\":\"iana\",\"extensions\":[\"ntf\",\"nitf\"]},\"application/vnd.noblenet-directory\":{\"source\":\"iana\",\"extensions\":[\"nnd\"]},\"application/vnd.noblenet-sealer\":{\"source\":\"iana\",\"extensions\":[\"nns\"]},\"application/vnd.noblenet-web\":{\"source\":\"iana\",\"extensions\":[\"nnw\"]},\"application/vnd.nokia.catalogs\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.iptv.config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.isds-radio-presets\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.landmarkcollection+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.n-gage.ac+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ac\"]},\"application/vnd.nokia.n-gage.data\":{\"source\":\"iana\",\"extensions\":[\"ngdat\"]},\"application/vnd.nokia.n-gage.symbian.install\":{\"source\":\"iana\",\"extensions\":[\"n-gage\"]},\"application/vnd.nokia.ncd\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.radio-preset\":{\"source\":\"iana\",\"extensions\":[\"rpst\"]},\"application/vnd.nokia.radio-presets\":{\"source\":\"iana\",\"extensions\":[\"rpss\"]},\"application/vnd.novadigm.edm\":{\"source\":\"iana\",\"extensions\":[\"edm\"]},\"application/vnd.novadigm.edx\":{\"source\":\"iana\",\"extensions\":[\"edx\"]},\"application/vnd.novadigm.ext\":{\"source\":\"iana\",\"extensions\":[\"ext\"]},\"application/vnd.ntt-local.content-share\":{\"source\":\"iana\"},\"application/vnd.ntt-local.file-transfer\":{\"source\":\"iana\"},\"application/vnd.ntt-local.ogw_remote-access\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_remote\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_tcp_stream\":{\"source\":\"iana\"},\"application/vnd.oasis.opendocument.chart\":{\"source\":\"iana\",\"extensions\":[\"odc\"]},\"application/vnd.oasis.opendocument.chart-template\":{\"source\":\"iana\",\"extensions\":[\"otc\"]},\"application/vnd.oasis.opendocument.database\":{\"source\":\"iana\",\"extensions\":[\"odb\"]},\"application/vnd.oasis.opendocument.formula\":{\"source\":\"iana\",\"extensions\":[\"odf\"]},\"application/vnd.oasis.opendocument.formula-template\":{\"source\":\"iana\",\"extensions\":[\"odft\"]},\"application/vnd.oasis.opendocument.graphics\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odg\"]},\"application/vnd.oasis.opendocument.graphics-template\":{\"source\":\"iana\",\"extensions\":[\"otg\"]},\"application/vnd.oasis.opendocument.image\":{\"source\":\"iana\",\"extensions\":[\"odi\"]},\"application/vnd.oasis.opendocument.image-template\":{\"source\":\"iana\",\"extensions\":[\"oti\"]},\"application/vnd.oasis.opendocument.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odp\"]},\"application/vnd.oasis.opendocument.presentation-template\":{\"source\":\"iana\",\"extensions\":[\"otp\"]},\"application/vnd.oasis.opendocument.spreadsheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ods\"]},\"application/vnd.oasis.opendocument.spreadsheet-template\":{\"source\":\"iana\",\"extensions\":[\"ots\"]},\"application/vnd.oasis.opendocument.text\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odt\"]},\"application/vnd.oasis.opendocument.text-master\":{\"source\":\"iana\",\"extensions\":[\"odm\"]},\"application/vnd.oasis.opendocument.text-template\":{\"source\":\"iana\",\"extensions\":[\"ott\"]},\"application/vnd.oasis.opendocument.text-web\":{\"source\":\"iana\",\"extensions\":[\"oth\"]},\"application/vnd.obn\":{\"source\":\"iana\"},\"application/vnd.ocf+cbor\":{\"source\":\"iana\"},\"application/vnd.oci.image.manifest.v1+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oftn.l10n+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessdownload+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessstreaming+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.cspg-hexbinary\":{\"source\":\"iana\"},\"application/vnd.oipf.dae.svg+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.dae.xhtml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.mippvcontrolmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.pae.gem\":{\"source\":\"iana\"},\"application/vnd.oipf.spdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.spdlist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.ueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.userprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.olpc-sugar\":{\"source\":\"iana\",\"extensions\":[\"xo\"]},\"application/vnd.oma-scws-config\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-request\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-response\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.associated-procedure-parameter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.drm-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.imd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.ltkm\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.notification+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.provisioningtrigger\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgboot\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgdd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sgdu\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.simple-symbol-container\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.smartcard-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sprov+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.stkm\":{\"source\":\"iana\"},\"application/vnd.oma.cab-address-book+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-feature-handler+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-pcc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-subs-invite+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-user-prefs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.dcd\":{\"source\":\"iana\"},\"application/vnd.oma.dcdc\":{\"source\":\"iana\"},\"application/vnd.oma.dd2+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dd2\"]},\"application/vnd.oma.drm.risd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.group-usage-list+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+tlv\":{\"source\":\"iana\"},\"application/vnd.oma.pal+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.detailed-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.final-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.groups+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.invocation-descriptor+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.optimized-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.push\":{\"source\":\"iana\"},\"application/vnd.oma.scidm.messages+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.xcap-directory+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-email+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-file+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-folder+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omaloc-supl-init\":{\"source\":\"iana\"},\"application/vnd.onepager\":{\"source\":\"iana\"},\"application/vnd.onepagertamp\":{\"source\":\"iana\"},\"application/vnd.onepagertamx\":{\"source\":\"iana\"},\"application/vnd.onepagertat\":{\"source\":\"iana\"},\"application/vnd.onepagertatp\":{\"source\":\"iana\"},\"application/vnd.onepagertatx\":{\"source\":\"iana\"},\"application/vnd.openblox.game+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"obgx\"]},\"application/vnd.openblox.game-binary\":{\"source\":\"iana\"},\"application/vnd.openeye.oeb\":{\"source\":\"iana\"},\"application/vnd.openofficeorg.extension\":{\"source\":\"apache\",\"extensions\":[\"oxt\"]},\"application/vnd.openstreetmap.data+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osm\"]},\"application/vnd.openxmlformats-officedocument.custom-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawing+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.extended-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pptx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slide\":{\"source\":\"iana\",\"extensions\":[\"sldx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":{\"source\":\"iana\",\"extensions\":[\"ppsx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.template\":{\"source\":\"iana\",\"extensions\":[\"potx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xlsx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":{\"source\":\"iana\",\"extensions\":[\"xltx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.theme+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.themeoverride+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.vmldrawing\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"docx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":{\"source\":\"iana\",\"extensions\":[\"dotx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.core-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.relationships+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oracle.resource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.orange.indata\":{\"source\":\"iana\"},\"application/vnd.osa.netdeploy\":{\"source\":\"iana\"},\"application/vnd.osgeo.mapguide.package\":{\"source\":\"iana\",\"extensions\":[\"mgp\"]},\"application/vnd.osgi.bundle\":{\"source\":\"iana\"},\"application/vnd.osgi.dp\":{\"source\":\"iana\",\"extensions\":[\"dp\"]},\"application/vnd.osgi.subsystem\":{\"source\":\"iana\",\"extensions\":[\"esa\"]},\"application/vnd.otps.ct-kip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oxli.countgraph\":{\"source\":\"iana\"},\"application/vnd.pagerduty+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.palm\":{\"source\":\"iana\",\"extensions\":[\"pdb\",\"pqa\",\"oprc\"]},\"application/vnd.panoply\":{\"source\":\"iana\"},\"application/vnd.paos.xml\":{\"source\":\"iana\"},\"application/vnd.patentdive\":{\"source\":\"iana\"},\"application/vnd.patientecommsdoc\":{\"source\":\"iana\"},\"application/vnd.pawaafile\":{\"source\":\"iana\",\"extensions\":[\"paw\"]},\"application/vnd.pcos\":{\"source\":\"iana\"},\"application/vnd.pg.format\":{\"source\":\"iana\",\"extensions\":[\"str\"]},\"application/vnd.pg.osasli\":{\"source\":\"iana\",\"extensions\":[\"ei6\"]},\"application/vnd.piaccess.application-licence\":{\"source\":\"iana\"},\"application/vnd.picsel\":{\"source\":\"iana\",\"extensions\":[\"efif\"]},\"application/vnd.pmi.widget\":{\"source\":\"iana\",\"extensions\":[\"wg\"]},\"application/vnd.poc.group-advertisement+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.pocketlearn\":{\"source\":\"iana\",\"extensions\":[\"plf\"]},\"application/vnd.powerbuilder6\":{\"source\":\"iana\",\"extensions\":[\"pbd\"]},\"application/vnd.powerbuilder6-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75-s\":{\"source\":\"iana\"},\"application/vnd.preminet\":{\"source\":\"iana\"},\"application/vnd.previewsystems.box\":{\"source\":\"iana\",\"extensions\":[\"box\"]},\"application/vnd.proteus.magazine\":{\"source\":\"iana\",\"extensions\":[\"mgz\"]},\"application/vnd.psfs\":{\"source\":\"iana\"},\"application/vnd.publishare-delta-tree\":{\"source\":\"iana\",\"extensions\":[\"qps\"]},\"application/vnd.pvi.ptid1\":{\"source\":\"iana\",\"extensions\":[\"ptid\"]},\"application/vnd.pwg-multiplexed\":{\"source\":\"iana\"},\"application/vnd.pwg-xhtml-print+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.qualcomm.brew-app-res\":{\"source\":\"iana\"},\"application/vnd.quarantainenet\":{\"source\":\"iana\"},\"application/vnd.quark.quarkxpress\":{\"source\":\"iana\",\"extensions\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]},\"application/vnd.quobject-quoxdocument\":{\"source\":\"iana\"},\"application/vnd.radisys.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-stream+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-base+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-detect+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-group+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-speech+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-transform+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rainstor.data\":{\"source\":\"iana\"},\"application/vnd.rapid\":{\"source\":\"iana\"},\"application/vnd.rar\":{\"source\":\"iana\"},\"application/vnd.realvnc.bed\":{\"source\":\"iana\",\"extensions\":[\"bed\"]},\"application/vnd.recordare.musicxml\":{\"source\":\"iana\",\"extensions\":[\"mxl\"]},\"application/vnd.recordare.musicxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musicxml\"]},\"application/vnd.renlearn.rlprint\":{\"source\":\"iana\"},\"application/vnd.restful+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rig.cryptonote\":{\"source\":\"iana\",\"extensions\":[\"cryptonote\"]},\"application/vnd.rim.cod\":{\"source\":\"apache\",\"extensions\":[\"cod\"]},\"application/vnd.rn-realmedia\":{\"source\":\"apache\",\"extensions\":[\"rm\"]},\"application/vnd.rn-realmedia-vbr\":{\"source\":\"apache\",\"extensions\":[\"rmvb\"]},\"application/vnd.route66.link66+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"link66\"]},\"application/vnd.rs-274x\":{\"source\":\"iana\"},\"application/vnd.ruckus.download\":{\"source\":\"iana\"},\"application/vnd.s3sms\":{\"source\":\"iana\"},\"application/vnd.sailingtracker.track\":{\"source\":\"iana\",\"extensions\":[\"st\"]},\"application/vnd.sar\":{\"source\":\"iana\"},\"application/vnd.sbm.cid\":{\"source\":\"iana\"},\"application/vnd.sbm.mid2\":{\"source\":\"iana\"},\"application/vnd.scribus\":{\"source\":\"iana\"},\"application/vnd.sealed.3df\":{\"source\":\"iana\"},\"application/vnd.sealed.csf\":{\"source\":\"iana\"},\"application/vnd.sealed.doc\":{\"source\":\"iana\"},\"application/vnd.sealed.eml\":{\"source\":\"iana\"},\"application/vnd.sealed.mht\":{\"source\":\"iana\"},\"application/vnd.sealed.net\":{\"source\":\"iana\"},\"application/vnd.sealed.ppt\":{\"source\":\"iana\"},\"application/vnd.sealed.tiff\":{\"source\":\"iana\"},\"application/vnd.sealed.xls\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.html\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.pdf\":{\"source\":\"iana\"},\"application/vnd.seemail\":{\"source\":\"iana\",\"extensions\":[\"see\"]},\"application/vnd.sema\":{\"source\":\"iana\",\"extensions\":[\"sema\"]},\"application/vnd.semd\":{\"source\":\"iana\",\"extensions\":[\"semd\"]},\"application/vnd.semf\":{\"source\":\"iana\",\"extensions\":[\"semf\"]},\"application/vnd.shade-save-file\":{\"source\":\"iana\"},\"application/vnd.shana.informed.formdata\":{\"source\":\"iana\",\"extensions\":[\"ifm\"]},\"application/vnd.shana.informed.formtemplate\":{\"source\":\"iana\",\"extensions\":[\"itp\"]},\"application/vnd.shana.informed.interchange\":{\"source\":\"iana\",\"extensions\":[\"iif\"]},\"application/vnd.shana.informed.package\":{\"source\":\"iana\",\"extensions\":[\"ipk\"]},\"application/vnd.shootproof+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shopkick+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shp\":{\"source\":\"iana\"},\"application/vnd.shx\":{\"source\":\"iana\"},\"application/vnd.sigrok.session\":{\"source\":\"iana\"},\"application/vnd.simtech-mindmapper\":{\"source\":\"iana\",\"extensions\":[\"twd\",\"twds\"]},\"application/vnd.siren+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.smaf\":{\"source\":\"iana\",\"extensions\":[\"mmf\"]},\"application/vnd.smart.notebook\":{\"source\":\"iana\"},\"application/vnd.smart.teacher\":{\"source\":\"iana\",\"extensions\":[\"teacher\"]},\"application/vnd.snesdev-page-table\":{\"source\":\"iana\"},\"application/vnd.software602.filler.form+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fo\"]},\"application/vnd.software602.filler.form-xml-zip\":{\"source\":\"iana\"},\"application/vnd.solent.sdkm+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sdkm\",\"sdkd\"]},\"application/vnd.spotfire.dxp\":{\"source\":\"iana\",\"extensions\":[\"dxp\"]},\"application/vnd.spotfire.sfs\":{\"source\":\"iana\",\"extensions\":[\"sfs\"]},\"application/vnd.sqlite3\":{\"source\":\"iana\"},\"application/vnd.sss-cod\":{\"source\":\"iana\"},\"application/vnd.sss-dtf\":{\"source\":\"iana\"},\"application/vnd.sss-ntf\":{\"source\":\"iana\"},\"application/vnd.stardivision.calc\":{\"source\":\"apache\",\"extensions\":[\"sdc\"]},\"application/vnd.stardivision.draw\":{\"source\":\"apache\",\"extensions\":[\"sda\"]},\"application/vnd.stardivision.impress\":{\"source\":\"apache\",\"extensions\":[\"sdd\"]},\"application/vnd.stardivision.math\":{\"source\":\"apache\",\"extensions\":[\"smf\"]},\"application/vnd.stardivision.writer\":{\"source\":\"apache\",\"extensions\":[\"sdw\",\"vor\"]},\"application/vnd.stardivision.writer-global\":{\"source\":\"apache\",\"extensions\":[\"sgl\"]},\"application/vnd.stepmania.package\":{\"source\":\"iana\",\"extensions\":[\"smzip\"]},\"application/vnd.stepmania.stepchart\":{\"source\":\"iana\",\"extensions\":[\"sm\"]},\"application/vnd.street-stream\":{\"source\":\"iana\"},\"application/vnd.sun.wadl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wadl\"]},\"application/vnd.sun.xml.calc\":{\"source\":\"apache\",\"extensions\":[\"sxc\"]},\"application/vnd.sun.xml.calc.template\":{\"source\":\"apache\",\"extensions\":[\"stc\"]},\"application/vnd.sun.xml.draw\":{\"source\":\"apache\",\"extensions\":[\"sxd\"]},\"application/vnd.sun.xml.draw.template\":{\"source\":\"apache\",\"extensions\":[\"std\"]},\"application/vnd.sun.xml.impress\":{\"source\":\"apache\",\"extensions\":[\"sxi\"]},\"application/vnd.sun.xml.impress.template\":{\"source\":\"apache\",\"extensions\":[\"sti\"]},\"application/vnd.sun.xml.math\":{\"source\":\"apache\",\"extensions\":[\"sxm\"]},\"application/vnd.sun.xml.writer\":{\"source\":\"apache\",\"extensions\":[\"sxw\"]},\"application/vnd.sun.xml.writer.global\":{\"source\":\"apache\",\"extensions\":[\"sxg\"]},\"application/vnd.sun.xml.writer.template\":{\"source\":\"apache\",\"extensions\":[\"stw\"]},\"application/vnd.sus-calendar\":{\"source\":\"iana\",\"extensions\":[\"sus\",\"susp\"]},\"application/vnd.svd\":{\"source\":\"iana\",\"extensions\":[\"svd\"]},\"application/vnd.swiftview-ics\":{\"source\":\"iana\"},\"application/vnd.symbian.install\":{\"source\":\"apache\",\"extensions\":[\"sis\",\"sisx\"]},\"application/vnd.syncml+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xsm\"]},\"application/vnd.syncml.dm+wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"bdm\"]},\"application/vnd.syncml.dm+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xdm\"]},\"application/vnd.syncml.dm.notification\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"ddf\"]},\"application/vnd.syncml.dmtnds+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmtnds+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.syncml.ds.notification\":{\"source\":\"iana\"},\"application/vnd.tableschema+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tao.intent-module-archive\":{\"source\":\"iana\",\"extensions\":[\"tao\"]},\"application/vnd.tcpdump.pcap\":{\"source\":\"iana\",\"extensions\":[\"pcap\",\"cap\",\"dmp\"]},\"application/vnd.think-cell.ppttc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tmd.mediaflex.api+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tml\":{\"source\":\"iana\"},\"application/vnd.tmobile-livetv\":{\"source\":\"iana\",\"extensions\":[\"tmo\"]},\"application/vnd.tri.onesource\":{\"source\":\"iana\"},\"application/vnd.trid.tpt\":{\"source\":\"iana\",\"extensions\":[\"tpt\"]},\"application/vnd.triscape.mxs\":{\"source\":\"iana\",\"extensions\":[\"mxs\"]},\"application/vnd.trueapp\":{\"source\":\"iana\",\"extensions\":[\"tra\"]},\"application/vnd.truedoc\":{\"source\":\"iana\"},\"application/vnd.ubisoft.webplayer\":{\"source\":\"iana\"},\"application/vnd.ufdl\":{\"source\":\"iana\",\"extensions\":[\"ufd\",\"ufdl\"]},\"application/vnd.uiq.theme\":{\"source\":\"iana\",\"extensions\":[\"utz\"]},\"application/vnd.umajin\":{\"source\":\"iana\",\"extensions\":[\"umj\"]},\"application/vnd.unity\":{\"source\":\"iana\",\"extensions\":[\"unityweb\"]},\"application/vnd.uoml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uoml\"]},\"application/vnd.uplanet.alert\":{\"source\":\"iana\"},\"application/vnd.uplanet.alert-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.list\":{\"source\":\"iana\"},\"application/vnd.uplanet.list-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.signal\":{\"source\":\"iana\"},\"application/vnd.uri-map\":{\"source\":\"iana\"},\"application/vnd.valve.source.material\":{\"source\":\"iana\"},\"application/vnd.vcx\":{\"source\":\"iana\",\"extensions\":[\"vcx\"]},\"application/vnd.vd-study\":{\"source\":\"iana\"},\"application/vnd.vectorworks\":{\"source\":\"iana\"},\"application/vnd.vel+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.verimatrix.vcas\":{\"source\":\"iana\"},\"application/vnd.veryant.thin\":{\"source\":\"iana\"},\"application/vnd.ves.encrypted\":{\"source\":\"iana\"},\"application/vnd.vidsoft.vidconference\":{\"source\":\"iana\"},\"application/vnd.visio\":{\"source\":\"iana\",\"extensions\":[\"vsd\",\"vst\",\"vss\",\"vsw\"]},\"application/vnd.visionary\":{\"source\":\"iana\",\"extensions\":[\"vis\"]},\"application/vnd.vividence.scriptfile\":{\"source\":\"iana\"},\"application/vnd.vsf\":{\"source\":\"iana\",\"extensions\":[\"vsf\"]},\"application/vnd.wap.sic\":{\"source\":\"iana\"},\"application/vnd.wap.slc\":{\"source\":\"iana\"},\"application/vnd.wap.wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"wbxml\"]},\"application/vnd.wap.wmlc\":{\"source\":\"iana\",\"extensions\":[\"wmlc\"]},\"application/vnd.wap.wmlscriptc\":{\"source\":\"iana\",\"extensions\":[\"wmlsc\"]},\"application/vnd.webturbo\":{\"source\":\"iana\",\"extensions\":[\"wtb\"]},\"application/vnd.wfa.p2p\":{\"source\":\"iana\"},\"application/vnd.wfa.wsc\":{\"source\":\"iana\"},\"application/vnd.windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.wmc\":{\"source\":\"iana\"},\"application/vnd.wmf.bootstrap\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica.package\":{\"source\":\"iana\"},\"application/vnd.wolfram.player\":{\"source\":\"iana\",\"extensions\":[\"nbp\"]},\"application/vnd.wordperfect\":{\"source\":\"iana\",\"extensions\":[\"wpd\"]},\"application/vnd.wqd\":{\"source\":\"iana\",\"extensions\":[\"wqd\"]},\"application/vnd.wrq-hp3000-labelled\":{\"source\":\"iana\"},\"application/vnd.wt.stf\":{\"source\":\"iana\",\"extensions\":[\"stf\"]},\"application/vnd.wv.csp+wbxml\":{\"source\":\"iana\"},\"application/vnd.wv.csp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.wv.ssp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xacml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xara\":{\"source\":\"iana\",\"extensions\":[\"xar\"]},\"application/vnd.xfdl\":{\"source\":\"iana\",\"extensions\":[\"xfdl\"]},\"application/vnd.xfdl.webform\":{\"source\":\"iana\"},\"application/vnd.xmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xmpie.cpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.dpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.plan\":{\"source\":\"iana\"},\"application/vnd.xmpie.ppkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.xlim\":{\"source\":\"iana\"},\"application/vnd.yamaha.hv-dic\":{\"source\":\"iana\",\"extensions\":[\"hvd\"]},\"application/vnd.yamaha.hv-script\":{\"source\":\"iana\",\"extensions\":[\"hvs\"]},\"application/vnd.yamaha.hv-voice\":{\"source\":\"iana\",\"extensions\":[\"hvp\"]},\"application/vnd.yamaha.openscoreformat\":{\"source\":\"iana\",\"extensions\":[\"osf\"]},\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osfpvg\"]},\"application/vnd.yamaha.remote-setup\":{\"source\":\"iana\"},\"application/vnd.yamaha.smaf-audio\":{\"source\":\"iana\",\"extensions\":[\"saf\"]},\"application/vnd.yamaha.smaf-phrase\":{\"source\":\"iana\",\"extensions\":[\"spf\"]},\"application/vnd.yamaha.through-ngn\":{\"source\":\"iana\"},\"application/vnd.yamaha.tunnel-udpencap\":{\"source\":\"iana\"},\"application/vnd.yaoweme\":{\"source\":\"iana\"},\"application/vnd.yellowriver-custom-menu\":{\"source\":\"iana\",\"extensions\":[\"cmp\"]},\"application/vnd.youtube.yt\":{\"source\":\"iana\"},\"application/vnd.zul\":{\"source\":\"iana\",\"extensions\":[\"zir\",\"zirz\"]},\"application/vnd.zzazz.deck+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zaz\"]},\"application/voicexml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vxml\"]},\"application/voucher-cms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vq-rtcpxr\":{\"source\":\"iana\"},\"application/wasm\":{\"compressible\":true,\"extensions\":[\"wasm\"]},\"application/watcherinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/webpush-options+json\":{\"source\":\"iana\",\"compressible\":true},\"application/whoispp-query\":{\"source\":\"iana\"},\"application/whoispp-response\":{\"source\":\"iana\"},\"application/widget\":{\"source\":\"iana\",\"extensions\":[\"wgt\"]},\"application/winhlp\":{\"source\":\"apache\",\"extensions\":[\"hlp\"]},\"application/wita\":{\"source\":\"iana\"},\"application/wordperfect5.1\":{\"source\":\"iana\"},\"application/wsdl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wsdl\"]},\"application/wspolicy+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wspolicy\"]},\"application/x-7z-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"7z\"]},\"application/x-abiword\":{\"source\":\"apache\",\"extensions\":[\"abw\"]},\"application/x-ace-compressed\":{\"source\":\"apache\",\"extensions\":[\"ace\"]},\"application/x-amf\":{\"source\":\"apache\"},\"application/x-apple-diskimage\":{\"source\":\"apache\",\"extensions\":[\"dmg\"]},\"application/x-arj\":{\"compressible\":false,\"extensions\":[\"arj\"]},\"application/x-authorware-bin\":{\"source\":\"apache\",\"extensions\":[\"aab\",\"x32\",\"u32\",\"vox\"]},\"application/x-authorware-map\":{\"source\":\"apache\",\"extensions\":[\"aam\"]},\"application/x-authorware-seg\":{\"source\":\"apache\",\"extensions\":[\"aas\"]},\"application/x-bcpio\":{\"source\":\"apache\",\"extensions\":[\"bcpio\"]},\"application/x-bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/x-bittorrent\":{\"source\":\"apache\",\"extensions\":[\"torrent\"]},\"application/x-blorb\":{\"source\":\"apache\",\"extensions\":[\"blb\",\"blorb\"]},\"application/x-bzip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz\"]},\"application/x-bzip2\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz2\",\"boz\"]},\"application/x-cbr\":{\"source\":\"apache\",\"extensions\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]},\"application/x-cdlink\":{\"source\":\"apache\",\"extensions\":[\"vcd\"]},\"application/x-cfs-compressed\":{\"source\":\"apache\",\"extensions\":[\"cfs\"]},\"application/x-chat\":{\"source\":\"apache\",\"extensions\":[\"chat\"]},\"application/x-chess-pgn\":{\"source\":\"apache\",\"extensions\":[\"pgn\"]},\"application/x-chrome-extension\":{\"extensions\":[\"crx\"]},\"application/x-cocoa\":{\"source\":\"nginx\",\"extensions\":[\"cco\"]},\"application/x-compress\":{\"source\":\"apache\"},\"application/x-conference\":{\"source\":\"apache\",\"extensions\":[\"nsc\"]},\"application/x-cpio\":{\"source\":\"apache\",\"extensions\":[\"cpio\"]},\"application/x-csh\":{\"source\":\"apache\",\"extensions\":[\"csh\"]},\"application/x-deb\":{\"compressible\":false},\"application/x-debian-package\":{\"source\":\"apache\",\"extensions\":[\"deb\",\"udeb\"]},\"application/x-dgc-compressed\":{\"source\":\"apache\",\"extensions\":[\"dgc\"]},\"application/x-director\":{\"source\":\"apache\",\"extensions\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]},\"application/x-doom\":{\"source\":\"apache\",\"extensions\":[\"wad\"]},\"application/x-dtbncx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ncx\"]},\"application/x-dtbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dtb\"]},\"application/x-dtbresource+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"res\"]},\"application/x-dvi\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"dvi\"]},\"application/x-envoy\":{\"source\":\"apache\",\"extensions\":[\"evy\"]},\"application/x-eva\":{\"source\":\"apache\",\"extensions\":[\"eva\"]},\"application/x-font-bdf\":{\"source\":\"apache\",\"extensions\":[\"bdf\"]},\"application/x-font-dos\":{\"source\":\"apache\"},\"application/x-font-framemaker\":{\"source\":\"apache\"},\"application/x-font-ghostscript\":{\"source\":\"apache\",\"extensions\":[\"gsf\"]},\"application/x-font-libgrx\":{\"source\":\"apache\"},\"application/x-font-linux-psf\":{\"source\":\"apache\",\"extensions\":[\"psf\"]},\"application/x-font-pcf\":{\"source\":\"apache\",\"extensions\":[\"pcf\"]},\"application/x-font-snf\":{\"source\":\"apache\",\"extensions\":[\"snf\"]},\"application/x-font-speedo\":{\"source\":\"apache\"},\"application/x-font-sunos-news\":{\"source\":\"apache\"},\"application/x-font-type1\":{\"source\":\"apache\",\"extensions\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"]},\"application/x-font-vfont\":{\"source\":\"apache\"},\"application/x-freearc\":{\"source\":\"apache\",\"extensions\":[\"arc\"]},\"application/x-futuresplash\":{\"source\":\"apache\",\"extensions\":[\"spl\"]},\"application/x-gca-compressed\":{\"source\":\"apache\",\"extensions\":[\"gca\"]},\"application/x-glulx\":{\"source\":\"apache\",\"extensions\":[\"ulx\"]},\"application/x-gnumeric\":{\"source\":\"apache\",\"extensions\":[\"gnumeric\"]},\"application/x-gramps-xml\":{\"source\":\"apache\",\"extensions\":[\"gramps\"]},\"application/x-gtar\":{\"source\":\"apache\",\"extensions\":[\"gtar\"]},\"application/x-gzip\":{\"source\":\"apache\"},\"application/x-hdf\":{\"source\":\"apache\",\"extensions\":[\"hdf\"]},\"application/x-httpd-php\":{\"compressible\":true,\"extensions\":[\"php\"]},\"application/x-install-instructions\":{\"source\":\"apache\",\"extensions\":[\"install\"]},\"application/x-iso9660-image\":{\"source\":\"apache\",\"extensions\":[\"iso\"]},\"application/x-java-archive-diff\":{\"source\":\"nginx\",\"extensions\":[\"jardiff\"]},\"application/x-java-jnlp-file\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jnlp\"]},\"application/x-javascript\":{\"compressible\":true},\"application/x-keepass2\":{\"extensions\":[\"kdbx\"]},\"application/x-latex\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"latex\"]},\"application/x-lua-bytecode\":{\"extensions\":[\"luac\"]},\"application/x-lzh-compressed\":{\"source\":\"apache\",\"extensions\":[\"lzh\",\"lha\"]},\"application/x-makeself\":{\"source\":\"nginx\",\"extensions\":[\"run\"]},\"application/x-mie\":{\"source\":\"apache\",\"extensions\":[\"mie\"]},\"application/x-mobipocket-ebook\":{\"source\":\"apache\",\"extensions\":[\"prc\",\"mobi\"]},\"application/x-mpegurl\":{\"compressible\":false},\"application/x-ms-application\":{\"source\":\"apache\",\"extensions\":[\"application\"]},\"application/x-ms-shortcut\":{\"source\":\"apache\",\"extensions\":[\"lnk\"]},\"application/x-ms-wmd\":{\"source\":\"apache\",\"extensions\":[\"wmd\"]},\"application/x-ms-wmz\":{\"source\":\"apache\",\"extensions\":[\"wmz\"]},\"application/x-ms-xbap\":{\"source\":\"apache\",\"extensions\":[\"xbap\"]},\"application/x-msaccess\":{\"source\":\"apache\",\"extensions\":[\"mdb\"]},\"application/x-msbinder\":{\"source\":\"apache\",\"extensions\":[\"obd\"]},\"application/x-mscardfile\":{\"source\":\"apache\",\"extensions\":[\"crd\"]},\"application/x-msclip\":{\"source\":\"apache\",\"extensions\":[\"clp\"]},\"application/x-msdos-program\":{\"extensions\":[\"exe\"]},\"application/x-msdownload\":{\"source\":\"apache\",\"extensions\":[\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]},\"application/x-msmediaview\":{\"source\":\"apache\",\"extensions\":[\"mvb\",\"m13\",\"m14\"]},\"application/x-msmetafile\":{\"source\":\"apache\",\"extensions\":[\"wmf\",\"wmz\",\"emf\",\"emz\"]},\"application/x-msmoney\":{\"source\":\"apache\",\"extensions\":[\"mny\"]},\"application/x-mspublisher\":{\"source\":\"apache\",\"extensions\":[\"pub\"]},\"application/x-msschedule\":{\"source\":\"apache\",\"extensions\":[\"scd\"]},\"application/x-msterminal\":{\"source\":\"apache\",\"extensions\":[\"trm\"]},\"application/x-mswrite\":{\"source\":\"apache\",\"extensions\":[\"wri\"]},\"application/x-netcdf\":{\"source\":\"apache\",\"extensions\":[\"nc\",\"cdf\"]},\"application/x-ns-proxy-autoconfig\":{\"compressible\":true,\"extensions\":[\"pac\"]},\"application/x-nzb\":{\"source\":\"apache\",\"extensions\":[\"nzb\"]},\"application/x-perl\":{\"source\":\"nginx\",\"extensions\":[\"pl\",\"pm\"]},\"application/x-pilot\":{\"source\":\"nginx\",\"extensions\":[\"prc\",\"pdb\"]},\"application/x-pkcs12\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"p12\",\"pfx\"]},\"application/x-pkcs7-certificates\":{\"source\":\"apache\",\"extensions\":[\"p7b\",\"spc\"]},\"application/x-pkcs7-certreqresp\":{\"source\":\"apache\",\"extensions\":[\"p7r\"]},\"application/x-pki-message\":{\"source\":\"iana\"},\"application/x-rar-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"rar\"]},\"application/x-redhat-package-manager\":{\"source\":\"nginx\",\"extensions\":[\"rpm\"]},\"application/x-research-info-systems\":{\"source\":\"apache\",\"extensions\":[\"ris\"]},\"application/x-sea\":{\"source\":\"nginx\",\"extensions\":[\"sea\"]},\"application/x-sh\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"sh\"]},\"application/x-shar\":{\"source\":\"apache\",\"extensions\":[\"shar\"]},\"application/x-shockwave-flash\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"swf\"]},\"application/x-silverlight-app\":{\"source\":\"apache\",\"extensions\":[\"xap\"]},\"application/x-sql\":{\"source\":\"apache\",\"extensions\":[\"sql\"]},\"application/x-stuffit\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"sit\"]},\"application/x-stuffitx\":{\"source\":\"apache\",\"extensions\":[\"sitx\"]},\"application/x-subrip\":{\"source\":\"apache\",\"extensions\":[\"srt\"]},\"application/x-sv4cpio\":{\"source\":\"apache\",\"extensions\":[\"sv4cpio\"]},\"application/x-sv4crc\":{\"source\":\"apache\",\"extensions\":[\"sv4crc\"]},\"application/x-t3vm-image\":{\"source\":\"apache\",\"extensions\":[\"t3\"]},\"application/x-tads\":{\"source\":\"apache\",\"extensions\":[\"gam\"]},\"application/x-tar\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"tar\"]},\"application/x-tcl\":{\"source\":\"apache\",\"extensions\":[\"tcl\",\"tk\"]},\"application/x-tex\":{\"source\":\"apache\",\"extensions\":[\"tex\"]},\"application/x-tex-tfm\":{\"source\":\"apache\",\"extensions\":[\"tfm\"]},\"application/x-texinfo\":{\"source\":\"apache\",\"extensions\":[\"texinfo\",\"texi\"]},\"application/x-tgif\":{\"source\":\"apache\",\"extensions\":[\"obj\"]},\"application/x-ustar\":{\"source\":\"apache\",\"extensions\":[\"ustar\"]},\"application/x-virtualbox-hdd\":{\"compressible\":true,\"extensions\":[\"hdd\"]},\"application/x-virtualbox-ova\":{\"compressible\":true,\"extensions\":[\"ova\"]},\"application/x-virtualbox-ovf\":{\"compressible\":true,\"extensions\":[\"ovf\"]},\"application/x-virtualbox-vbox\":{\"compressible\":true,\"extensions\":[\"vbox\"]},\"application/x-virtualbox-vbox-extpack\":{\"compressible\":false,\"extensions\":[\"vbox-extpack\"]},\"application/x-virtualbox-vdi\":{\"compressible\":true,\"extensions\":[\"vdi\"]},\"application/x-virtualbox-vhd\":{\"compressible\":true,\"extensions\":[\"vhd\"]},\"application/x-virtualbox-vmdk\":{\"compressible\":true,\"extensions\":[\"vmdk\"]},\"application/x-wais-source\":{\"source\":\"apache\",\"extensions\":[\"src\"]},\"application/x-web-app-manifest+json\":{\"compressible\":true,\"extensions\":[\"webapp\"]},\"application/x-www-form-urlencoded\":{\"source\":\"iana\",\"compressible\":true},\"application/x-x509-ca-cert\":{\"source\":\"iana\",\"extensions\":[\"der\",\"crt\",\"pem\"]},\"application/x-x509-ca-ra-cert\":{\"source\":\"iana\"},\"application/x-x509-next-ca-cert\":{\"source\":\"iana\"},\"application/x-xfig\":{\"source\":\"apache\",\"extensions\":[\"fig\"]},\"application/x-xliff+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/x-xpinstall\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"xpi\"]},\"application/x-xz\":{\"source\":\"apache\",\"extensions\":[\"xz\"]},\"application/x-zmachine\":{\"source\":\"apache\",\"extensions\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]},\"application/x400-bp\":{\"source\":\"iana\"},\"application/xacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xaml+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xaml\"]},\"application/xcap-att+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xav\"]},\"application/xcap-caps+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xca\"]},\"application/xcap-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/xcap-el+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xel\"]},\"application/xcap-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/xcap-ns+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xns\"]},\"application/xcon-conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcon-conference-info-diff+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xenc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xenc\"]},\"application/xhtml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xhtml\",\"xht\"]},\"application/xhtml-voice+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/xliff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\",\"xsl\",\"xsd\",\"rng\"]},\"application/xml-dtd\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dtd\"]},\"application/xml-external-parsed-entity\":{\"source\":\"iana\"},\"application/xml-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xmpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xop+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xop\"]},\"application/xproc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xpl\"]},\"application/xslt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xslt\"]},\"application/xspf+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xspf\"]},\"application/xv+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]},\"application/yang\":{\"source\":\"iana\",\"extensions\":[\"yang\"]},\"application/yang-data+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yin+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"yin\"]},\"application/zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"zip\"]},\"application/zlib\":{\"source\":\"iana\"},\"application/zstd\":{\"source\":\"iana\"},\"audio/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"audio/32kadpcm\":{\"source\":\"iana\"},\"audio/3gpp\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"3gpp\"]},\"audio/3gpp2\":{\"source\":\"iana\"},\"audio/aac\":{\"source\":\"iana\"},\"audio/ac3\":{\"source\":\"iana\"},\"audio/adpcm\":{\"source\":\"apache\",\"extensions\":[\"adp\"]},\"audio/amr\":{\"source\":\"iana\"},\"audio/amr-wb\":{\"source\":\"iana\"},\"audio/amr-wb+\":{\"source\":\"iana\"},\"audio/aptx\":{\"source\":\"iana\"},\"audio/asc\":{\"source\":\"iana\"},\"audio/atrac-advanced-lossless\":{\"source\":\"iana\"},\"audio/atrac-x\":{\"source\":\"iana\"},\"audio/atrac3\":{\"source\":\"iana\"},\"audio/basic\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"au\",\"snd\"]},\"audio/bv16\":{\"source\":\"iana\"},\"audio/bv32\":{\"source\":\"iana\"},\"audio/clearmode\":{\"source\":\"iana\"},\"audio/cn\":{\"source\":\"iana\"},\"audio/dat12\":{\"source\":\"iana\"},\"audio/dls\":{\"source\":\"iana\"},\"audio/dsr-es201108\":{\"source\":\"iana\"},\"audio/dsr-es202050\":{\"source\":\"iana\"},\"audio/dsr-es202211\":{\"source\":\"iana\"},\"audio/dsr-es202212\":{\"source\":\"iana\"},\"audio/dv\":{\"source\":\"iana\"},\"audio/dvi4\":{\"source\":\"iana\"},\"audio/eac3\":{\"source\":\"iana\"},\"audio/encaprtp\":{\"source\":\"iana\"},\"audio/evrc\":{\"source\":\"iana\"},\"audio/evrc-qcp\":{\"source\":\"iana\"},\"audio/evrc0\":{\"source\":\"iana\"},\"audio/evrc1\":{\"source\":\"iana\"},\"audio/evrcb\":{\"source\":\"iana\"},\"audio/evrcb0\":{\"source\":\"iana\"},\"audio/evrcb1\":{\"source\":\"iana\"},\"audio/evrcnw\":{\"source\":\"iana\"},\"audio/evrcnw0\":{\"source\":\"iana\"},\"audio/evrcnw1\":{\"source\":\"iana\"},\"audio/evrcwb\":{\"source\":\"iana\"},\"audio/evrcwb0\":{\"source\":\"iana\"},\"audio/evrcwb1\":{\"source\":\"iana\"},\"audio/evs\":{\"source\":\"iana\"},\"audio/flexfec\":{\"source\":\"iana\"},\"audio/fwdred\":{\"source\":\"iana\"},\"audio/g711-0\":{\"source\":\"iana\"},\"audio/g719\":{\"source\":\"iana\"},\"audio/g722\":{\"source\":\"iana\"},\"audio/g7221\":{\"source\":\"iana\"},\"audio/g723\":{\"source\":\"iana\"},\"audio/g726-16\":{\"source\":\"iana\"},\"audio/g726-24\":{\"source\":\"iana\"},\"audio/g726-32\":{\"source\":\"iana\"},\"audio/g726-40\":{\"source\":\"iana\"},\"audio/g728\":{\"source\":\"iana\"},\"audio/g729\":{\"source\":\"iana\"},\"audio/g7291\":{\"source\":\"iana\"},\"audio/g729d\":{\"source\":\"iana\"},\"audio/g729e\":{\"source\":\"iana\"},\"audio/gsm\":{\"source\":\"iana\"},\"audio/gsm-efr\":{\"source\":\"iana\"},\"audio/gsm-hr-08\":{\"source\":\"iana\"},\"audio/ilbc\":{\"source\":\"iana\"},\"audio/ip-mr_v2.5\":{\"source\":\"iana\"},\"audio/isac\":{\"source\":\"apache\"},\"audio/l16\":{\"source\":\"iana\"},\"audio/l20\":{\"source\":\"iana\"},\"audio/l24\":{\"source\":\"iana\",\"compressible\":false},\"audio/l8\":{\"source\":\"iana\"},\"audio/lpc\":{\"source\":\"iana\"},\"audio/melp\":{\"source\":\"iana\"},\"audio/melp1200\":{\"source\":\"iana\"},\"audio/melp2400\":{\"source\":\"iana\"},\"audio/melp600\":{\"source\":\"iana\"},\"audio/mhas\":{\"source\":\"iana\"},\"audio/midi\":{\"source\":\"apache\",\"extensions\":[\"mid\",\"midi\",\"kar\",\"rmi\"]},\"audio/mobile-xmf\":{\"source\":\"iana\",\"extensions\":[\"mxmf\"]},\"audio/mp3\":{\"compressible\":false,\"extensions\":[\"mp3\"]},\"audio/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"m4a\",\"mp4a\"]},\"audio/mp4a-latm\":{\"source\":\"iana\"},\"audio/mpa\":{\"source\":\"iana\"},\"audio/mpa-robust\":{\"source\":\"iana\"},\"audio/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]},\"audio/mpeg4-generic\":{\"source\":\"iana\"},\"audio/musepack\":{\"source\":\"apache\"},\"audio/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"oga\",\"ogg\",\"spx\"]},\"audio/opus\":{\"source\":\"iana\"},\"audio/parityfec\":{\"source\":\"iana\"},\"audio/pcma\":{\"source\":\"iana\"},\"audio/pcma-wb\":{\"source\":\"iana\"},\"audio/pcmu\":{\"source\":\"iana\"},\"audio/pcmu-wb\":{\"source\":\"iana\"},\"audio/prs.sid\":{\"source\":\"iana\"},\"audio/qcelp\":{\"source\":\"iana\"},\"audio/raptorfec\":{\"source\":\"iana\"},\"audio/red\":{\"source\":\"iana\"},\"audio/rtp-enc-aescm128\":{\"source\":\"iana\"},\"audio/rtp-midi\":{\"source\":\"iana\"},\"audio/rtploopback\":{\"source\":\"iana\"},\"audio/rtx\":{\"source\":\"iana\"},\"audio/s3m\":{\"source\":\"apache\",\"extensions\":[\"s3m\"]},\"audio/silk\":{\"source\":\"apache\",\"extensions\":[\"sil\"]},\"audio/smv\":{\"source\":\"iana\"},\"audio/smv-qcp\":{\"source\":\"iana\"},\"audio/smv0\":{\"source\":\"iana\"},\"audio/sp-midi\":{\"source\":\"iana\"},\"audio/speex\":{\"source\":\"iana\"},\"audio/t140c\":{\"source\":\"iana\"},\"audio/t38\":{\"source\":\"iana\"},\"audio/telephone-event\":{\"source\":\"iana\"},\"audio/tetra_acelp\":{\"source\":\"iana\"},\"audio/tetra_acelp_bb\":{\"source\":\"iana\"},\"audio/tone\":{\"source\":\"iana\"},\"audio/uemclip\":{\"source\":\"iana\"},\"audio/ulpfec\":{\"source\":\"iana\"},\"audio/usac\":{\"source\":\"iana\"},\"audio/vdvi\":{\"source\":\"iana\"},\"audio/vmr-wb\":{\"source\":\"iana\"},\"audio/vnd.3gpp.iufp\":{\"source\":\"iana\"},\"audio/vnd.4sb\":{\"source\":\"iana\"},\"audio/vnd.audiokoz\":{\"source\":\"iana\"},\"audio/vnd.celp\":{\"source\":\"iana\"},\"audio/vnd.cisco.nse\":{\"source\":\"iana\"},\"audio/vnd.cmles.radio-events\":{\"source\":\"iana\"},\"audio/vnd.cns.anp1\":{\"source\":\"iana\"},\"audio/vnd.cns.inf1\":{\"source\":\"iana\"},\"audio/vnd.dece.audio\":{\"source\":\"iana\",\"extensions\":[\"uva\",\"uvva\"]},\"audio/vnd.digital-winds\":{\"source\":\"iana\",\"extensions\":[\"eol\"]},\"audio/vnd.dlna.adts\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.1\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.2\":{\"source\":\"iana\"},\"audio/vnd.dolby.mlp\":{\"source\":\"iana\"},\"audio/vnd.dolby.mps\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2x\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2z\":{\"source\":\"iana\"},\"audio/vnd.dolby.pulse.1\":{\"source\":\"iana\"},\"audio/vnd.dra\":{\"source\":\"iana\",\"extensions\":[\"dra\"]},\"audio/vnd.dts\":{\"source\":\"iana\",\"extensions\":[\"dts\"]},\"audio/vnd.dts.hd\":{\"source\":\"iana\",\"extensions\":[\"dtshd\"]},\"audio/vnd.dts.uhd\":{\"source\":\"iana\"},\"audio/vnd.dvb.file\":{\"source\":\"iana\"},\"audio/vnd.everad.plj\":{\"source\":\"iana\"},\"audio/vnd.hns.audio\":{\"source\":\"iana\"},\"audio/vnd.lucent.voice\":{\"source\":\"iana\",\"extensions\":[\"lvp\"]},\"audio/vnd.ms-playready.media.pya\":{\"source\":\"iana\",\"extensions\":[\"pya\"]},\"audio/vnd.nokia.mobile-xmf\":{\"source\":\"iana\"},\"audio/vnd.nortel.vbk\":{\"source\":\"iana\"},\"audio/vnd.nuera.ecelp4800\":{\"source\":\"iana\",\"extensions\":[\"ecelp4800\"]},\"audio/vnd.nuera.ecelp7470\":{\"source\":\"iana\",\"extensions\":[\"ecelp7470\"]},\"audio/vnd.nuera.ecelp9600\":{\"source\":\"iana\",\"extensions\":[\"ecelp9600\"]},\"audio/vnd.octel.sbc\":{\"source\":\"iana\"},\"audio/vnd.presonus.multitrack\":{\"source\":\"iana\"},\"audio/vnd.qcelp\":{\"source\":\"iana\"},\"audio/vnd.rhetorex.32kadpcm\":{\"source\":\"iana\"},\"audio/vnd.rip\":{\"source\":\"iana\",\"extensions\":[\"rip\"]},\"audio/vnd.rn-realaudio\":{\"compressible\":false},\"audio/vnd.sealedmedia.softseal.mpeg\":{\"source\":\"iana\"},\"audio/vnd.vmx.cvsd\":{\"source\":\"iana\"},\"audio/vnd.wave\":{\"compressible\":false},\"audio/vorbis\":{\"source\":\"iana\",\"compressible\":false},\"audio/vorbis-config\":{\"source\":\"iana\"},\"audio/wav\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/wave\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"weba\"]},\"audio/x-aac\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"aac\"]},\"audio/x-aiff\":{\"source\":\"apache\",\"extensions\":[\"aif\",\"aiff\",\"aifc\"]},\"audio/x-caf\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"caf\"]},\"audio/x-flac\":{\"source\":\"apache\",\"extensions\":[\"flac\"]},\"audio/x-m4a\":{\"source\":\"nginx\",\"extensions\":[\"m4a\"]},\"audio/x-matroska\":{\"source\":\"apache\",\"extensions\":[\"mka\"]},\"audio/x-mpegurl\":{\"source\":\"apache\",\"extensions\":[\"m3u\"]},\"audio/x-ms-wax\":{\"source\":\"apache\",\"extensions\":[\"wax\"]},\"audio/x-ms-wma\":{\"source\":\"apache\",\"extensions\":[\"wma\"]},\"audio/x-pn-realaudio\":{\"source\":\"apache\",\"extensions\":[\"ram\",\"ra\"]},\"audio/x-pn-realaudio-plugin\":{\"source\":\"apache\",\"extensions\":[\"rmp\"]},\"audio/x-realaudio\":{\"source\":\"nginx\",\"extensions\":[\"ra\"]},\"audio/x-tta\":{\"source\":\"apache\"},\"audio/x-wav\":{\"source\":\"apache\",\"extensions\":[\"wav\"]},\"audio/xm\":{\"source\":\"apache\",\"extensions\":[\"xm\"]},\"chemical/x-cdx\":{\"source\":\"apache\",\"extensions\":[\"cdx\"]},\"chemical/x-cif\":{\"source\":\"apache\",\"extensions\":[\"cif\"]},\"chemical/x-cmdf\":{\"source\":\"apache\",\"extensions\":[\"cmdf\"]},\"chemical/x-cml\":{\"source\":\"apache\",\"extensions\":[\"cml\"]},\"chemical/x-csml\":{\"source\":\"apache\",\"extensions\":[\"csml\"]},\"chemical/x-pdb\":{\"source\":\"apache\"},\"chemical/x-xyz\":{\"source\":\"apache\",\"extensions\":[\"xyz\"]},\"font/collection\":{\"source\":\"iana\",\"extensions\":[\"ttc\"]},\"font/otf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"otf\"]},\"font/sfnt\":{\"source\":\"iana\"},\"font/ttf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttf\"]},\"font/woff\":{\"source\":\"iana\",\"extensions\":[\"woff\"]},\"font/woff2\":{\"source\":\"iana\",\"extensions\":[\"woff2\"]},\"image/aces\":{\"source\":\"iana\",\"extensions\":[\"exr\"]},\"image/apng\":{\"compressible\":false,\"extensions\":[\"apng\"]},\"image/avci\":{\"source\":\"iana\"},\"image/avcs\":{\"source\":\"iana\"},\"image/bmp\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/cgm\":{\"source\":\"iana\",\"extensions\":[\"cgm\"]},\"image/dicom-rle\":{\"source\":\"iana\",\"extensions\":[\"drle\"]},\"image/emf\":{\"source\":\"iana\",\"extensions\":[\"emf\"]},\"image/fits\":{\"source\":\"iana\",\"extensions\":[\"fits\"]},\"image/g3fax\":{\"source\":\"iana\",\"extensions\":[\"g3\"]},\"image/gif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gif\"]},\"image/heic\":{\"source\":\"iana\",\"extensions\":[\"heic\"]},\"image/heic-sequence\":{\"source\":\"iana\",\"extensions\":[\"heics\"]},\"image/heif\":{\"source\":\"iana\",\"extensions\":[\"heif\"]},\"image/heif-sequence\":{\"source\":\"iana\",\"extensions\":[\"heifs\"]},\"image/hej2k\":{\"source\":\"iana\",\"extensions\":[\"hej2\"]},\"image/hsj2\":{\"source\":\"iana\",\"extensions\":[\"hsj2\"]},\"image/ief\":{\"source\":\"iana\",\"extensions\":[\"ief\"]},\"image/jls\":{\"source\":\"iana\",\"extensions\":[\"jls\"]},\"image/jp2\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jp2\",\"jpg2\"]},\"image/jpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpeg\",\"jpg\",\"jpe\"]},\"image/jph\":{\"source\":\"iana\",\"extensions\":[\"jph\"]},\"image/jphc\":{\"source\":\"iana\",\"extensions\":[\"jhc\"]},\"image/jpm\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpm\"]},\"image/jpx\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpx\",\"jpf\"]},\"image/jxr\":{\"source\":\"iana\",\"extensions\":[\"jxr\"]},\"image/jxra\":{\"source\":\"iana\",\"extensions\":[\"jxra\"]},\"image/jxrs\":{\"source\":\"iana\",\"extensions\":[\"jxrs\"]},\"image/jxs\":{\"source\":\"iana\",\"extensions\":[\"jxs\"]},\"image/jxsc\":{\"source\":\"iana\",\"extensions\":[\"jxsc\"]},\"image/jxsi\":{\"source\":\"iana\",\"extensions\":[\"jxsi\"]},\"image/jxss\":{\"source\":\"iana\",\"extensions\":[\"jxss\"]},\"image/ktx\":{\"source\":\"iana\",\"extensions\":[\"ktx\"]},\"image/naplps\":{\"source\":\"iana\"},\"image/pjpeg\":{\"compressible\":false},\"image/png\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"png\"]},\"image/prs.btif\":{\"source\":\"iana\",\"extensions\":[\"btif\"]},\"image/prs.pti\":{\"source\":\"iana\",\"extensions\":[\"pti\"]},\"image/pwg-raster\":{\"source\":\"iana\"},\"image/sgi\":{\"source\":\"apache\",\"extensions\":[\"sgi\"]},\"image/svg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"svg\",\"svgz\"]},\"image/t38\":{\"source\":\"iana\",\"extensions\":[\"t38\"]},\"image/tiff\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"tif\",\"tiff\"]},\"image/tiff-fx\":{\"source\":\"iana\",\"extensions\":[\"tfx\"]},\"image/vnd.adobe.photoshop\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"psd\"]},\"image/vnd.airzip.accelerator.azv\":{\"source\":\"iana\",\"extensions\":[\"azv\"]},\"image/vnd.cns.inf2\":{\"source\":\"iana\"},\"image/vnd.dece.graphic\":{\"source\":\"iana\",\"extensions\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]},\"image/vnd.djvu\":{\"source\":\"iana\",\"extensions\":[\"djvu\",\"djv\"]},\"image/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"image/vnd.dwg\":{\"source\":\"iana\",\"extensions\":[\"dwg\"]},\"image/vnd.dxf\":{\"source\":\"iana\",\"extensions\":[\"dxf\"]},\"image/vnd.fastbidsheet\":{\"source\":\"iana\",\"extensions\":[\"fbs\"]},\"image/vnd.fpx\":{\"source\":\"iana\",\"extensions\":[\"fpx\"]},\"image/vnd.fst\":{\"source\":\"iana\",\"extensions\":[\"fst\"]},\"image/vnd.fujixerox.edmics-mmr\":{\"source\":\"iana\",\"extensions\":[\"mmr\"]},\"image/vnd.fujixerox.edmics-rlc\":{\"source\":\"iana\",\"extensions\":[\"rlc\"]},\"image/vnd.globalgraphics.pgb\":{\"source\":\"iana\"},\"image/vnd.microsoft.icon\":{\"source\":\"iana\",\"extensions\":[\"ico\"]},\"image/vnd.mix\":{\"source\":\"iana\"},\"image/vnd.mozilla.apng\":{\"source\":\"iana\"},\"image/vnd.ms-dds\":{\"extensions\":[\"dds\"]},\"image/vnd.ms-modi\":{\"source\":\"iana\",\"extensions\":[\"mdi\"]},\"image/vnd.ms-photo\":{\"source\":\"apache\",\"extensions\":[\"wdp\"]},\"image/vnd.net-fpx\":{\"source\":\"iana\",\"extensions\":[\"npx\"]},\"image/vnd.radiance\":{\"source\":\"iana\"},\"image/vnd.sealed.png\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.gif\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.jpg\":{\"source\":\"iana\"},\"image/vnd.svf\":{\"source\":\"iana\"},\"image/vnd.tencent.tap\":{\"source\":\"iana\",\"extensions\":[\"tap\"]},\"image/vnd.valve.source.texture\":{\"source\":\"iana\",\"extensions\":[\"vtf\"]},\"image/vnd.wap.wbmp\":{\"source\":\"iana\",\"extensions\":[\"wbmp\"]},\"image/vnd.xiff\":{\"source\":\"iana\",\"extensions\":[\"xif\"]},\"image/vnd.zbrush.pcx\":{\"source\":\"iana\",\"extensions\":[\"pcx\"]},\"image/webp\":{\"source\":\"apache\",\"extensions\":[\"webp\"]},\"image/wmf\":{\"source\":\"iana\",\"extensions\":[\"wmf\"]},\"image/x-3ds\":{\"source\":\"apache\",\"extensions\":[\"3ds\"]},\"image/x-cmu-raster\":{\"source\":\"apache\",\"extensions\":[\"ras\"]},\"image/x-cmx\":{\"source\":\"apache\",\"extensions\":[\"cmx\"]},\"image/x-freehand\":{\"source\":\"apache\",\"extensions\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]},\"image/x-icon\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/x-jng\":{\"source\":\"nginx\",\"extensions\":[\"jng\"]},\"image/x-mrsid-image\":{\"source\":\"apache\",\"extensions\":[\"sid\"]},\"image/x-ms-bmp\":{\"source\":\"nginx\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/x-pcx\":{\"source\":\"apache\",\"extensions\":[\"pcx\"]},\"image/x-pict\":{\"source\":\"apache\",\"extensions\":[\"pic\",\"pct\"]},\"image/x-portable-anymap\":{\"source\":\"apache\",\"extensions\":[\"pnm\"]},\"image/x-portable-bitmap\":{\"source\":\"apache\",\"extensions\":[\"pbm\"]},\"image/x-portable-graymap\":{\"source\":\"apache\",\"extensions\":[\"pgm\"]},\"image/x-portable-pixmap\":{\"source\":\"apache\",\"extensions\":[\"ppm\"]},\"image/x-rgb\":{\"source\":\"apache\",\"extensions\":[\"rgb\"]},\"image/x-tga\":{\"source\":\"apache\",\"extensions\":[\"tga\"]},\"image/x-xbitmap\":{\"source\":\"apache\",\"extensions\":[\"xbm\"]},\"image/x-xcf\":{\"compressible\":false},\"image/x-xpixmap\":{\"source\":\"apache\",\"extensions\":[\"xpm\"]},\"image/x-xwindowdump\":{\"source\":\"apache\",\"extensions\":[\"xwd\"]},\"message/cpim\":{\"source\":\"iana\"},\"message/delivery-status\":{\"source\":\"iana\"},\"message/disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"disposition-notification\"]},\"message/external-body\":{\"source\":\"iana\"},\"message/feedback-report\":{\"source\":\"iana\"},\"message/global\":{\"source\":\"iana\",\"extensions\":[\"u8msg\"]},\"message/global-delivery-status\":{\"source\":\"iana\",\"extensions\":[\"u8dsn\"]},\"message/global-disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"u8mdn\"]},\"message/global-headers\":{\"source\":\"iana\",\"extensions\":[\"u8hdr\"]},\"message/http\":{\"source\":\"iana\",\"compressible\":false},\"message/imdn+xml\":{\"source\":\"iana\",\"compressible\":true},\"message/news\":{\"source\":\"iana\"},\"message/partial\":{\"source\":\"iana\",\"compressible\":false},\"message/rfc822\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eml\",\"mime\"]},\"message/s-http\":{\"source\":\"iana\"},\"message/sip\":{\"source\":\"iana\"},\"message/sipfrag\":{\"source\":\"iana\"},\"message/tracking-status\":{\"source\":\"iana\"},\"message/vnd.si.simp\":{\"source\":\"iana\"},\"message/vnd.wfa.wsc\":{\"source\":\"iana\",\"extensions\":[\"wsc\"]},\"model/3mf\":{\"source\":\"iana\",\"extensions\":[\"3mf\"]},\"model/gltf+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gltf\"]},\"model/gltf-binary\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"glb\"]},\"model/iges\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"igs\",\"iges\"]},\"model/mesh\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"msh\",\"mesh\",\"silo\"]},\"model/mtl\":{\"source\":\"iana\",\"extensions\":[\"mtl\"]},\"model/obj\":{\"source\":\"iana\",\"extensions\":[\"obj\"]},\"model/stl\":{\"source\":\"iana\",\"extensions\":[\"stl\"]},\"model/vnd.collada+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dae\"]},\"model/vnd.dwf\":{\"source\":\"iana\",\"extensions\":[\"dwf\"]},\"model/vnd.flatland.3dml\":{\"source\":\"iana\"},\"model/vnd.gdl\":{\"source\":\"iana\",\"extensions\":[\"gdl\"]},\"model/vnd.gs-gdl\":{\"source\":\"apache\"},\"model/vnd.gs.gdl\":{\"source\":\"iana\"},\"model/vnd.gtw\":{\"source\":\"iana\",\"extensions\":[\"gtw\"]},\"model/vnd.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"model/vnd.mts\":{\"source\":\"iana\",\"extensions\":[\"mts\"]},\"model/vnd.opengex\":{\"source\":\"iana\",\"extensions\":[\"ogex\"]},\"model/vnd.parasolid.transmit.binary\":{\"source\":\"iana\",\"extensions\":[\"x_b\"]},\"model/vnd.parasolid.transmit.text\":{\"source\":\"iana\",\"extensions\":[\"x_t\"]},\"model/vnd.rosette.annotated-data-model\":{\"source\":\"iana\"},\"model/vnd.usdz+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"usdz\"]},\"model/vnd.valve.source.compiled-map\":{\"source\":\"iana\",\"extensions\":[\"bsp\"]},\"model/vnd.vtu\":{\"source\":\"iana\",\"extensions\":[\"vtu\"]},\"model/vrml\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"wrl\",\"vrml\"]},\"model/x3d+binary\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3db\",\"x3dbz\"]},\"model/x3d+fastinfoset\":{\"source\":\"iana\",\"extensions\":[\"x3db\"]},\"model/x3d+vrml\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3dv\",\"x3dvz\"]},\"model/x3d+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"x3d\",\"x3dz\"]},\"model/x3d-vrml\":{\"source\":\"iana\",\"extensions\":[\"x3dv\"]},\"multipart/alternative\":{\"source\":\"iana\",\"compressible\":false},\"multipart/appledouble\":{\"source\":\"iana\"},\"multipart/byteranges\":{\"source\":\"iana\"},\"multipart/digest\":{\"source\":\"iana\"},\"multipart/encrypted\":{\"source\":\"iana\",\"compressible\":false},\"multipart/form-data\":{\"source\":\"iana\",\"compressible\":false},\"multipart/header-set\":{\"source\":\"iana\"},\"multipart/mixed\":{\"source\":\"iana\"},\"multipart/multilingual\":{\"source\":\"iana\"},\"multipart/parallel\":{\"source\":\"iana\"},\"multipart/related\":{\"source\":\"iana\",\"compressible\":false},\"multipart/report\":{\"source\":\"iana\"},\"multipart/signed\":{\"source\":\"iana\",\"compressible\":false},\"multipart/vnd.bint.med-plus\":{\"source\":\"iana\"},\"multipart/voice-message\":{\"source\":\"iana\"},\"multipart/x-mixed-replace\":{\"source\":\"iana\"},\"text/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"text/cache-manifest\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"appcache\",\"manifest\"]},\"text/calendar\":{\"source\":\"iana\",\"extensions\":[\"ics\",\"ifb\"]},\"text/calender\":{\"compressible\":true},\"text/cmd\":{\"compressible\":true},\"text/coffeescript\":{\"extensions\":[\"coffee\",\"litcoffee\"]},\"text/css\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"css\"]},\"text/csv\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csv\"]},\"text/csv-schema\":{\"source\":\"iana\"},\"text/directory\":{\"source\":\"iana\"},\"text/dns\":{\"source\":\"iana\"},\"text/ecmascript\":{\"source\":\"iana\"},\"text/encaprtp\":{\"source\":\"iana\"},\"text/enriched\":{\"source\":\"iana\"},\"text/flexfec\":{\"source\":\"iana\"},\"text/fwdred\":{\"source\":\"iana\"},\"text/grammar-ref-list\":{\"source\":\"iana\"},\"text/html\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"html\",\"htm\",\"shtml\"]},\"text/jade\":{\"extensions\":[\"jade\"]},\"text/javascript\":{\"source\":\"iana\",\"compressible\":true},\"text/jcr-cnd\":{\"source\":\"iana\"},\"text/jsx\":{\"compressible\":true,\"extensions\":[\"jsx\"]},\"text/less\":{\"compressible\":true,\"extensions\":[\"less\"]},\"text/markdown\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"markdown\",\"md\"]},\"text/mathml\":{\"source\":\"nginx\",\"extensions\":[\"mml\"]},\"text/mdx\":{\"compressible\":true,\"extensions\":[\"mdx\"]},\"text/mizar\":{\"source\":\"iana\"},\"text/n3\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"n3\"]},\"text/parameters\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/parityfec\":{\"source\":\"iana\"},\"text/plain\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]},\"text/provenance-notation\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/prs.fallenstein.rst\":{\"source\":\"iana\"},\"text/prs.lines.tag\":{\"source\":\"iana\",\"extensions\":[\"dsc\"]},\"text/prs.prop.logic\":{\"source\":\"iana\"},\"text/raptorfec\":{\"source\":\"iana\"},\"text/red\":{\"source\":\"iana\"},\"text/rfc822-headers\":{\"source\":\"iana\"},\"text/richtext\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtx\"]},\"text/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"text/rtp-enc-aescm128\":{\"source\":\"iana\"},\"text/rtploopback\":{\"source\":\"iana\"},\"text/rtx\":{\"source\":\"iana\"},\"text/sgml\":{\"source\":\"iana\",\"extensions\":[\"sgml\",\"sgm\"]},\"text/shex\":{\"extensions\":[\"shex\"]},\"text/slim\":{\"extensions\":[\"slim\",\"slm\"]},\"text/strings\":{\"source\":\"iana\"},\"text/stylus\":{\"extensions\":[\"stylus\",\"styl\"]},\"text/t140\":{\"source\":\"iana\"},\"text/tab-separated-values\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tsv\"]},\"text/troff\":{\"source\":\"iana\",\"extensions\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]},\"text/turtle\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"ttl\"]},\"text/ulpfec\":{\"source\":\"iana\"},\"text/uri-list\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uri\",\"uris\",\"urls\"]},\"text/vcard\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vcard\"]},\"text/vnd.a\":{\"source\":\"iana\"},\"text/vnd.abc\":{\"source\":\"iana\"},\"text/vnd.ascii-art\":{\"source\":\"iana\"},\"text/vnd.curl\":{\"source\":\"iana\",\"extensions\":[\"curl\"]},\"text/vnd.curl.dcurl\":{\"source\":\"apache\",\"extensions\":[\"dcurl\"]},\"text/vnd.curl.mcurl\":{\"source\":\"apache\",\"extensions\":[\"mcurl\"]},\"text/vnd.curl.scurl\":{\"source\":\"apache\",\"extensions\":[\"scurl\"]},\"text/vnd.debian.copyright\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.dmclientscript\":{\"source\":\"iana\"},\"text/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"text/vnd.esmertec.theme-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.ficlab.flt\":{\"source\":\"iana\"},\"text/vnd.fly\":{\"source\":\"iana\",\"extensions\":[\"fly\"]},\"text/vnd.fmi.flexstor\":{\"source\":\"iana\",\"extensions\":[\"flx\"]},\"text/vnd.gml\":{\"source\":\"iana\"},\"text/vnd.graphviz\":{\"source\":\"iana\",\"extensions\":[\"gv\"]},\"text/vnd.hgl\":{\"source\":\"iana\"},\"text/vnd.in3d.3dml\":{\"source\":\"iana\",\"extensions\":[\"3dml\"]},\"text/vnd.in3d.spot\":{\"source\":\"iana\",\"extensions\":[\"spot\"]},\"text/vnd.iptc.newsml\":{\"source\":\"iana\"},\"text/vnd.iptc.nitf\":{\"source\":\"iana\"},\"text/vnd.latex-z\":{\"source\":\"iana\"},\"text/vnd.motorola.reflex\":{\"source\":\"iana\"},\"text/vnd.ms-mediapackage\":{\"source\":\"iana\"},\"text/vnd.net2phone.commcenter.command\":{\"source\":\"iana\"},\"text/vnd.radisys.msml-basic-layout\":{\"source\":\"iana\"},\"text/vnd.senx.warpscript\":{\"source\":\"iana\"},\"text/vnd.si.uricatalogue\":{\"source\":\"iana\"},\"text/vnd.sosi\":{\"source\":\"iana\"},\"text/vnd.sun.j2me.app-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"jad\"]},\"text/vnd.trolltech.linguist\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.wap.si\":{\"source\":\"iana\"},\"text/vnd.wap.sl\":{\"source\":\"iana\"},\"text/vnd.wap.wml\":{\"source\":\"iana\",\"extensions\":[\"wml\"]},\"text/vnd.wap.wmlscript\":{\"source\":\"iana\",\"extensions\":[\"wmls\"]},\"text/vtt\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"vtt\"]},\"text/x-asm\":{\"source\":\"apache\",\"extensions\":[\"s\",\"asm\"]},\"text/x-c\":{\"source\":\"apache\",\"extensions\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]},\"text/x-component\":{\"source\":\"nginx\",\"extensions\":[\"htc\"]},\"text/x-fortran\":{\"source\":\"apache\",\"extensions\":[\"f\",\"for\",\"f77\",\"f90\"]},\"text/x-gwt-rpc\":{\"compressible\":true},\"text/x-handlebars-template\":{\"extensions\":[\"hbs\"]},\"text/x-java-source\":{\"source\":\"apache\",\"extensions\":[\"java\"]},\"text/x-jquery-tmpl\":{\"compressible\":true},\"text/x-lua\":{\"extensions\":[\"lua\"]},\"text/x-markdown\":{\"compressible\":true,\"extensions\":[\"mkd\"]},\"text/x-nfo\":{\"source\":\"apache\",\"extensions\":[\"nfo\"]},\"text/x-opml\":{\"source\":\"apache\",\"extensions\":[\"opml\"]},\"text/x-org\":{\"compressible\":true,\"extensions\":[\"org\"]},\"text/x-pascal\":{\"source\":\"apache\",\"extensions\":[\"p\",\"pas\"]},\"text/x-processing\":{\"compressible\":true,\"extensions\":[\"pde\"]},\"text/x-sass\":{\"extensions\":[\"sass\"]},\"text/x-scss\":{\"extensions\":[\"scss\"]},\"text/x-setext\":{\"source\":\"apache\",\"extensions\":[\"etx\"]},\"text/x-sfv\":{\"source\":\"apache\",\"extensions\":[\"sfv\"]},\"text/x-suse-ymp\":{\"compressible\":true,\"extensions\":[\"ymp\"]},\"text/x-uuencode\":{\"source\":\"apache\",\"extensions\":[\"uu\"]},\"text/x-vcalendar\":{\"source\":\"apache\",\"extensions\":[\"vcs\"]},\"text/x-vcard\":{\"source\":\"apache\",\"extensions\":[\"vcf\"]},\"text/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\"]},\"text/xml-external-parsed-entity\":{\"source\":\"iana\"},\"text/yaml\":{\"extensions\":[\"yaml\",\"yml\"]},\"video/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"video/3gpp\":{\"source\":\"iana\",\"extensions\":[\"3gp\",\"3gpp\"]},\"video/3gpp-tt\":{\"source\":\"iana\"},\"video/3gpp2\":{\"source\":\"iana\",\"extensions\":[\"3g2\"]},\"video/bmpeg\":{\"source\":\"iana\"},\"video/bt656\":{\"source\":\"iana\"},\"video/celb\":{\"source\":\"iana\"},\"video/dv\":{\"source\":\"iana\"},\"video/encaprtp\":{\"source\":\"iana\"},\"video/flexfec\":{\"source\":\"iana\"},\"video/h261\":{\"source\":\"iana\",\"extensions\":[\"h261\"]},\"video/h263\":{\"source\":\"iana\",\"extensions\":[\"h263\"]},\"video/h263-1998\":{\"source\":\"iana\"},\"video/h263-2000\":{\"source\":\"iana\"},\"video/h264\":{\"source\":\"iana\",\"extensions\":[\"h264\"]},\"video/h264-rcdo\":{\"source\":\"iana\"},\"video/h264-svc\":{\"source\":\"iana\"},\"video/h265\":{\"source\":\"iana\"},\"video/iso.segment\":{\"source\":\"iana\"},\"video/jpeg\":{\"source\":\"iana\",\"extensions\":[\"jpgv\"]},\"video/jpeg2000\":{\"source\":\"iana\"},\"video/jpm\":{\"source\":\"apache\",\"extensions\":[\"jpm\",\"jpgm\"]},\"video/mj2\":{\"source\":\"iana\",\"extensions\":[\"mj2\",\"mjp2\"]},\"video/mp1s\":{\"source\":\"iana\"},\"video/mp2p\":{\"source\":\"iana\"},\"video/mp2t\":{\"source\":\"iana\",\"extensions\":[\"ts\"]},\"video/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mp4\",\"mp4v\",\"mpg4\"]},\"video/mp4v-es\":{\"source\":\"iana\"},\"video/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]},\"video/mpeg4-generic\":{\"source\":\"iana\"},\"video/mpv\":{\"source\":\"iana\"},\"video/nv\":{\"source\":\"iana\"},\"video/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogv\"]},\"video/parityfec\":{\"source\":\"iana\"},\"video/pointer\":{\"source\":\"iana\"},\"video/quicktime\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"qt\",\"mov\"]},\"video/raptorfec\":{\"source\":\"iana\"},\"video/raw\":{\"source\":\"iana\"},\"video/rtp-enc-aescm128\":{\"source\":\"iana\"},\"video/rtploopback\":{\"source\":\"iana\"},\"video/rtx\":{\"source\":\"iana\"},\"video/smpte291\":{\"source\":\"iana\"},\"video/smpte292m\":{\"source\":\"iana\"},\"video/ulpfec\":{\"source\":\"iana\"},\"video/vc1\":{\"source\":\"iana\"},\"video/vc2\":{\"source\":\"iana\"},\"video/vnd.cctv\":{\"source\":\"iana\"},\"video/vnd.dece.hd\":{\"source\":\"iana\",\"extensions\":[\"uvh\",\"uvvh\"]},\"video/vnd.dece.mobile\":{\"source\":\"iana\",\"extensions\":[\"uvm\",\"uvvm\"]},\"video/vnd.dece.mp4\":{\"source\":\"iana\"},\"video/vnd.dece.pd\":{\"source\":\"iana\",\"extensions\":[\"uvp\",\"uvvp\"]},\"video/vnd.dece.sd\":{\"source\":\"iana\",\"extensions\":[\"uvs\",\"uvvs\"]},\"video/vnd.dece.video\":{\"source\":\"iana\",\"extensions\":[\"uvv\",\"uvvv\"]},\"video/vnd.directv.mpeg\":{\"source\":\"iana\"},\"video/vnd.directv.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dlna.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dvb.file\":{\"source\":\"iana\",\"extensions\":[\"dvb\"]},\"video/vnd.fvt\":{\"source\":\"iana\",\"extensions\":[\"fvt\"]},\"video/vnd.hns.video\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsavc\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsmpeg2\":{\"source\":\"iana\"},\"video/vnd.motorola.video\":{\"source\":\"iana\"},\"video/vnd.motorola.videop\":{\"source\":\"iana\"},\"video/vnd.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"mxu\",\"m4u\"]},\"video/vnd.ms-playready.media.pyv\":{\"source\":\"iana\",\"extensions\":[\"pyv\"]},\"video/vnd.nokia.interleaved-multimedia\":{\"source\":\"iana\"},\"video/vnd.nokia.mp4vr\":{\"source\":\"iana\"},\"video/vnd.nokia.videovoip\":{\"source\":\"iana\"},\"video/vnd.objectvideo\":{\"source\":\"iana\"},\"video/vnd.radgamettools.bink\":{\"source\":\"iana\"},\"video/vnd.radgamettools.smacker\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg1\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg4\":{\"source\":\"iana\"},\"video/vnd.sealed.swf\":{\"source\":\"iana\"},\"video/vnd.sealedmedia.softseal.mov\":{\"source\":\"iana\"},\"video/vnd.uvvu.mp4\":{\"source\":\"iana\",\"extensions\":[\"uvu\",\"uvvu\"]},\"video/vnd.vivo\":{\"source\":\"iana\",\"extensions\":[\"viv\"]},\"video/vnd.youtube.yt\":{\"source\":\"iana\"},\"video/vp8\":{\"source\":\"iana\"},\"video/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"webm\"]},\"video/x-f4v\":{\"source\":\"apache\",\"extensions\":[\"f4v\"]},\"video/x-fli\":{\"source\":\"apache\",\"extensions\":[\"fli\"]},\"video/x-flv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"flv\"]},\"video/x-m4v\":{\"source\":\"apache\",\"extensions\":[\"m4v\"]},\"video/x-matroska\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"mkv\",\"mk3d\",\"mks\"]},\"video/x-mng\":{\"source\":\"apache\",\"extensions\":[\"mng\"]},\"video/x-ms-asf\":{\"source\":\"apache\",\"extensions\":[\"asf\",\"asx\"]},\"video/x-ms-vob\":{\"source\":\"apache\",\"extensions\":[\"vob\"]},\"video/x-ms-wm\":{\"source\":\"apache\",\"extensions\":[\"wm\"]},\"video/x-ms-wmv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"wmv\"]},\"video/x-ms-wmx\":{\"source\":\"apache\",\"extensions\":[\"wmx\"]},\"video/x-ms-wvx\":{\"source\":\"apache\",\"extensions\":[\"wvx\"]},\"video/x-msvideo\":{\"source\":\"apache\",\"extensions\":[\"avi\"]},\"video/x-sgi-movie\":{\"source\":\"apache\",\"extensions\":[\"movie\"]},\"video/x-smv\":{\"source\":\"apache\",\"extensions\":[\"smv\"]},\"x-conference/x-cooltalk\":{\"source\":\"apache\",\"extensions\":[\"ice\"]},\"x-shader/x-fragment\":{\"compressible\":true},\"x-shader/x-vertex\":{\"compressible\":true}}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///160\n");

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///161\n");

/***/ }),
/* 162 */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///162\n");

/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function (file, fileName) {\n    saveAs(file, fileName);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2Jyb3dzZXIvZG93bmxvYWQuanM/MTAxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoZmlsZSwgZmlsZU5hbWUpIHtcbiAgICBzYXZlQXMoZmlsZSwgZmlsZU5hbWUpO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Jyb3dzZXIvZG93bmxvYWQuanNcbi8vIG1vZHVsZSBpZCA9IDE2M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///163\n");

/***/ }),
/* 164 */
/***/ (function(module, exports) {

eval("/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source !== 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    if (clazzPrototype.hasOwnProperty(prop)) {\n      clazz.prototype[prop] = clazzPrototype[prop];\n    }\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data === 'string') {\n    return false;\n  }\n\n  return typeof data.length === 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type === 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  /* eslint-disable-next-line no-self-compare */\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj); // Key should not be set on this, otherwise\n  // methods get/set/... may be overrided.\n\n  this.data = {};\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n}\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.data.hasOwnProperty(key) ? this.data[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this.data[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n    /* eslint-disable guard-for-in */\n\n    for (var key in this.data) {\n      this.data.hasOwnProperty(key) && cb(this.data[key], key);\n    }\n    /* eslint-enable guard-for-in */\n\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this.data[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///164\n");

/***/ }),
/* 165 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("function TextureUI(parent, object, key, params) {\n    ControlKit.ObjectComponent.apply(this, arguments);\n\n    this._object = object;\n    this._key = key;\n\n    this._onChange = params.onChange || function () {};\n    this._getFileNameByURL = params.getFileName || function (url) { return url; };\n\n    var self = this;\n\n    var wrap = this._wrapNode;\n    wrap.setStyleClass('texture-wrap');\n\n    var img = document.createElement('img');\n    var deleteEl = document.createElement('div');\n    deleteEl.className = 'texture-delete button';\n    var uploadEl = document.createElement('div');\n    uploadEl.className = 'texture-upload button';\n\n    this._img = img;\n    this._uploadEl = uploadEl;\n\n    wrap.getElement().appendChild(img);\n    wrap.getElement().appendChild(uploadEl);\n    wrap.getElement().appendChild(deleteEl);\n\n    this.update();\n\n    var liEl = this._wrapNode.getParent().getElement();\n\n    function uploadFiles(files) {\n        var imgFile = files.filter(function (file) {\n            return file.type.match(/image/);\n        })[0];\n\n        if (imgFile) {\n            object[key] = URL.createObjectURL(imgFile);\n\n            self._onChange(imgFile, object[key]);\n\n            self.update();\n        }\n    }\n    FileAPI.event.dnd(liEl, function (over) {\n        over ? liEl.classList.add('drag-hover')\n            : liEl.classList.remove('drag-hover');\n    }, function (files) {\n        uploadFiles(files);\n    });\n\n    // Clear\n    deleteEl.addEventListener('click', function () {\n        object[key] = 'none';\n        self.update();\n        self._onChange(null, 'none');\n    });\n    uploadEl.addEventListener('click', function () {\n        var el = document.createElement('input');\n        el.type = 'file';\n        el.onchange = function (e) {\n            uploadFiles(Array.prototype.slice.call(el.files));\n        };\n        el.click();\n    });\n}\n\nTextureUI.prototype = Object.create(ControlKit.ObjectComponent.prototype);\nTextureUI.prototype.constructor = TextureUI;\n\nTextureUI.prototype.update = function () {\n    var value = this._object[this._key];\n    this._img.src = value && value.toLowerCase() !== 'none' ? value : './img/chessboard.jpg';\n    this._img.style.opacity = (value && value != 'none') ? 1 : 0.5;\n\n    var text = this._getFileNameByURL(value) || value || 'none';;\n    this._uploadEl.innerHTML = text;\n    this._uploadEl.title = text;\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextureUI);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL1RleHR1cmUuanM/NjRmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBUZXh0dXJlVUkocGFyZW50LCBvYmplY3QsIGtleSwgcGFyYW1zKSB7XG4gICAgQ29udHJvbEtpdC5PYmplY3RDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIHRoaXMuX29iamVjdCA9IG9iamVjdDtcbiAgICB0aGlzLl9rZXkgPSBrZXk7XG5cbiAgICB0aGlzLl9vbkNoYW5nZSA9IHBhcmFtcy5vbkNoYW5nZSB8fCBmdW5jdGlvbiAoKSB7fTtcbiAgICB0aGlzLl9nZXRGaWxlTmFtZUJ5VVJMID0gcGFyYW1zLmdldEZpbGVOYW1lIHx8IGZ1bmN0aW9uICh1cmwpIHsgcmV0dXJuIHVybDsgfTtcblxuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIHZhciB3cmFwID0gdGhpcy5fd3JhcE5vZGU7XG4gICAgd3JhcC5zZXRTdHlsZUNsYXNzKCd0ZXh0dXJlLXdyYXAnKTtcblxuICAgIHZhciBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICB2YXIgZGVsZXRlRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkZWxldGVFbC5jbGFzc05hbWUgPSAndGV4dHVyZS1kZWxldGUgYnV0dG9uJztcbiAgICB2YXIgdXBsb2FkRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB1cGxvYWRFbC5jbGFzc05hbWUgPSAndGV4dHVyZS11cGxvYWQgYnV0dG9uJztcblxuICAgIHRoaXMuX2ltZyA9IGltZztcbiAgICB0aGlzLl91cGxvYWRFbCA9IHVwbG9hZEVsO1xuXG4gICAgd3JhcC5nZXRFbGVtZW50KCkuYXBwZW5kQ2hpbGQoaW1nKTtcbiAgICB3cmFwLmdldEVsZW1lbnQoKS5hcHBlbmRDaGlsZCh1cGxvYWRFbCk7XG4gICAgd3JhcC5nZXRFbGVtZW50KCkuYXBwZW5kQ2hpbGQoZGVsZXRlRWwpO1xuXG4gICAgdGhpcy51cGRhdGUoKTtcblxuICAgIHZhciBsaUVsID0gdGhpcy5fd3JhcE5vZGUuZ2V0UGFyZW50KCkuZ2V0RWxlbWVudCgpO1xuXG4gICAgZnVuY3Rpb24gdXBsb2FkRmlsZXMoZmlsZXMpIHtcbiAgICAgICAgdmFyIGltZ0ZpbGUgPSBmaWxlcy5maWx0ZXIoZnVuY3Rpb24gKGZpbGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmaWxlLnR5cGUubWF0Y2goL2ltYWdlLyk7XG4gICAgICAgIH0pWzBdO1xuXG4gICAgICAgIGlmIChpbWdGaWxlKSB7XG4gICAgICAgICAgICBvYmplY3Rba2V5XSA9IFVSTC5jcmVhdGVPYmplY3RVUkwoaW1nRmlsZSk7XG5cbiAgICAgICAgICAgIHNlbGYuX29uQ2hhbmdlKGltZ0ZpbGUsIG9iamVjdFtrZXldKTtcblxuICAgICAgICAgICAgc2VsZi51cGRhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBGaWxlQVBJLmV2ZW50LmRuZChsaUVsLCBmdW5jdGlvbiAob3Zlcikge1xuICAgICAgICBvdmVyID8gbGlFbC5jbGFzc0xpc3QuYWRkKCdkcmFnLWhvdmVyJylcbiAgICAgICAgICAgIDogbGlFbC5jbGFzc0xpc3QucmVtb3ZlKCdkcmFnLWhvdmVyJyk7XG4gICAgfSwgZnVuY3Rpb24gKGZpbGVzKSB7XG4gICAgICAgIHVwbG9hZEZpbGVzKGZpbGVzKTtcbiAgICB9KTtcblxuICAgIC8vIENsZWFyXG4gICAgZGVsZXRlRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIG9iamVjdFtrZXldID0gJ25vbmUnO1xuICAgICAgICBzZWxmLnVwZGF0ZSgpO1xuICAgICAgICBzZWxmLl9vbkNoYW5nZShudWxsLCAnbm9uZScpO1xuICAgIH0pO1xuICAgIHVwbG9hZEVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICBlbC50eXBlID0gJ2ZpbGUnO1xuICAgICAgICBlbC5vbmNoYW5nZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICB1cGxvYWRGaWxlcyhBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlbC5maWxlcykpO1xuICAgICAgICB9O1xuICAgICAgICBlbC5jbGljaygpO1xuICAgIH0pO1xufVxuXG5UZXh0dXJlVUkucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDb250cm9sS2l0Lk9iamVjdENvbXBvbmVudC5wcm90b3R5cGUpO1xuVGV4dHVyZVVJLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFRleHR1cmVVSTtcblxuVGV4dHVyZVVJLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gdGhpcy5fb2JqZWN0W3RoaXMuX2tleV07XG4gICAgdGhpcy5faW1nLnNyYyA9IHZhbHVlICYmIHZhbHVlLnRvTG93ZXJDYXNlKCkgIT09ICdub25lJyA/IHZhbHVlIDogJy4vaW1nL2NoZXNzYm9hcmQuanBnJztcbiAgICB0aGlzLl9pbWcuc3R5bGUub3BhY2l0eSA9ICh2YWx1ZSAmJiB2YWx1ZSAhPSAnbm9uZScpID8gMSA6IDAuNTtcblxuICAgIHZhciB0ZXh0ID0gdGhpcy5fZ2V0RmlsZU5hbWVCeVVSTCh2YWx1ZSkgfHwgdmFsdWUgfHwgJ25vbmUnOztcbiAgICB0aGlzLl91cGxvYWRFbC5pbm5lckhUTUwgPSB0ZXh0O1xuICAgIHRoaXMuX3VwbG9hZEVsLnRpdGxlID0gdGV4dDtcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgVGV4dHVyZVVJO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3VpL1RleHR1cmUuanNcbi8vIG1vZHVsZSBpZCA9IDE2NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///165\n");

/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return updateAnimationUI; });\n/* unused harmony export setTimeRange */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return hideTimeline; });\n/* unused harmony export showTimeline */\n\nfunction showTimeline() {\n    document.getElementById('timeline').style.display = 'block';\n}\nfunction hideTimeline() {\n    document.getElementById('timeline').style.display = 'none';\n    stopAnimation();\n}\n\nvar isPlay = false;\nvar currentTime = 0;\nvar startTime = 0;\nvar duration;\n\nvar viewer;\nvar animationToken;\nvar pauseBtnClickListener;\n\n\nfunction updateAnimationUI(_viewer) {\n    viewer = _viewer;\n    duration = Math.floor(_viewer.getAnimationDuration());\n    duration > 0 ? (showTimeline()) : (hideTimeline());\n\n    if (duration <= 0) {\n        return;\n    }\n    var pauseBtn = document.getElementById('timeline-pause-resume');\n    \n    pauseBtn.removeEventListener('click', pauseBtnClickListener);\n    pauseBtn.addEventListener('click', pauseBtnClickListener = function () {\n        if (isPlay) {\n            stopAnimation();\n        }\n        else {\n            startAnimation(_animationToken);\n        }\n    });\n\n\n    // Reset time\n    startTime = 0;\n    currentTime = 0;\n\n    updateControlPosition();\n\n    var _animationToken = Math.random();\n    animationToken = _animationToken;\n    \n    if (duration > 0) {\n        startAnimation(_animationToken);\n    }\n    else {\n        stopAnimation();\n    }\n    var _oldIsPlay = null;\n    if (!$('#timeline-progress input').data('ionRangeSlider')) {\n        $('#timeline-progress input').ionRangeSlider({\n            from_shadow: true,\n            force_edges: true,\n            onChange: function (data) {\n                currentTime = data.from;\n                viewer.setPose(currentTime);\n                if (_oldIsPlay == null) {\n                    _oldIsPlay = isPlay;\n                }\n                stopAnimation();\n            },\n            onFinish: function () {\n                if (_oldIsPlay) {\n                    startAnimation(_animationToken);\n                }\n                _oldIsPlay = null;\n            }\n        });\n        $('#timeline-range input').ionRangeSlider({\n            from_shadow: true,\n            force_edges: true,\n            type: 'double',\n            drag_interval: true,\n            grid: true,\n            grid_num: 10,\n            onChange: function (data) {\n                duration = data.to - data.from;\n                startTime = data.from;\n                currentTime = Math.min(Math.max(data.from, currentTime), data.to);\n                viewer.setPose(currentTime);\n                progressSlider.update({\n                    from_min: data.from,\n                    from_max: data.to\n                });\n            }\n        });\n\n        var progressSlider = $('#timeline-progress input').data('ionRangeSlider');\n        var rangeSlider = $('#timeline-range input').data('ionRangeSlider');\n        progressSlider.update({\n            min: 0,\n            max: duration,\n            from: currentTime,\n            from_min: 0,\n            from_max: duration\n        });\n        rangeSlider.update({\n            min: 0,\n            max: duration,\n            from: 0,\n            to: duration\n        });\n    }\n}\n\nfunction updateControlPosition() {\n    var slider = $('#timeline-progress input').data('ionRangeSlider');\n    if (slider) {\n        slider.update({\n            from: currentTime\n        });\n    }\n}\n\nfunction startAnimation(_animationToken) {\n    if (isPlay) {\n        return;\n    }\n\n    isPlay = true;\n\n    var _time = Date.now();\n\n    var pauseBtn = document.getElementById('timeline-pause-resume');\n    pauseBtn.classList.remove('icon-resume');\n    pauseBtn.classList.add('icon-pause');\n\n    function update() {\n        if (!isPlay) {\n            return;\n        }\n        if (_animationToken !== animationToken) {\n            return;\n        }\n\n        viewer.setPose(currentTime);\n\n        var dTime = Math.min(Date.now() - _time, 20);\n        _time = Date.now();\n\n        updateControlPosition();\n\n        currentTime += dTime;\n        if (currentTime > startTime + duration) {\n            currentTime = startTime;\n        }\n\n        requestAnimationFrame(update);\n    }\n\n    requestAnimationFrame(update);\n}\n\nfunction stopAnimation() {\n    if (!isPlay) {\n        return;\n    }\n\n    isPlay = false;\n    \n    var pauseBtn = document.getElementById('timeline-pause-resume');\n    pauseBtn.classList.remove('icon-pause');\n    pauseBtn.classList.add('icon-resume');\n}\n\nfunction setTimeRange(_startTime, _endTime) {\n    startTime = _startTime;\n    duration = _endTime - startTime;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RpbWVsaW5lLmpzPzgxYTAiXSwic291cmNlc0NvbnRlbnQiOlsiXG5mdW5jdGlvbiBzaG93VGltZWxpbmUoKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpbWVsaW5lJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG59XG5mdW5jdGlvbiBoaWRlVGltZWxpbmUoKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpbWVsaW5lJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBzdG9wQW5pbWF0aW9uKCk7XG59XG5cbnZhciBpc1BsYXkgPSBmYWxzZTtcbnZhciBjdXJyZW50VGltZSA9IDA7XG52YXIgc3RhcnRUaW1lID0gMDtcbnZhciBkdXJhdGlvbjtcblxudmFyIHZpZXdlcjtcbnZhciBhbmltYXRpb25Ub2tlbjtcbnZhciBwYXVzZUJ0bkNsaWNrTGlzdGVuZXI7XG5cblxuZnVuY3Rpb24gdXBkYXRlQW5pbWF0aW9uVUkoX3ZpZXdlcikge1xuICAgIHZpZXdlciA9IF92aWV3ZXI7XG4gICAgZHVyYXRpb24gPSBNYXRoLmZsb29yKF92aWV3ZXIuZ2V0QW5pbWF0aW9uRHVyYXRpb24oKSk7XG4gICAgZHVyYXRpb24gPiAwID8gKHNob3dUaW1lbGluZSgpKSA6IChoaWRlVGltZWxpbmUoKSk7XG5cbiAgICBpZiAoZHVyYXRpb24gPD0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBwYXVzZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aW1lbGluZS1wYXVzZS1yZXN1bWUnKTtcbiAgICBcbiAgICBwYXVzZUJ0bi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHBhdXNlQnRuQ2xpY2tMaXN0ZW5lcik7XG4gICAgcGF1c2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBwYXVzZUJ0bkNsaWNrTGlzdGVuZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpc1BsYXkpIHtcbiAgICAgICAgICAgIHN0b3BBbmltYXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN0YXJ0QW5pbWF0aW9uKF9hbmltYXRpb25Ub2tlbik7XG4gICAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgLy8gUmVzZXQgdGltZVxuICAgIHN0YXJ0VGltZSA9IDA7XG4gICAgY3VycmVudFRpbWUgPSAwO1xuXG4gICAgdXBkYXRlQ29udHJvbFBvc2l0aW9uKCk7XG5cbiAgICB2YXIgX2FuaW1hdGlvblRva2VuID0gTWF0aC5yYW5kb20oKTtcbiAgICBhbmltYXRpb25Ub2tlbiA9IF9hbmltYXRpb25Ub2tlbjtcbiAgICBcbiAgICBpZiAoZHVyYXRpb24gPiAwKSB7XG4gICAgICAgIHN0YXJ0QW5pbWF0aW9uKF9hbmltYXRpb25Ub2tlbik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzdG9wQW5pbWF0aW9uKCk7XG4gICAgfVxuICAgIHZhciBfb2xkSXNQbGF5ID0gbnVsbDtcbiAgICBpZiAoISQoJyN0aW1lbGluZS1wcm9ncmVzcyBpbnB1dCcpLmRhdGEoJ2lvblJhbmdlU2xpZGVyJykpIHtcbiAgICAgICAgJCgnI3RpbWVsaW5lLXByb2dyZXNzIGlucHV0JykuaW9uUmFuZ2VTbGlkZXIoe1xuICAgICAgICAgICAgZnJvbV9zaGFkb3c6IHRydWUsXG4gICAgICAgICAgICBmb3JjZV9lZGdlczogdHJ1ZSxcbiAgICAgICAgICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRUaW1lID0gZGF0YS5mcm9tO1xuICAgICAgICAgICAgICAgIHZpZXdlci5zZXRQb3NlKGN1cnJlbnRUaW1lKTtcbiAgICAgICAgICAgICAgICBpZiAoX29sZElzUGxheSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIF9vbGRJc1BsYXkgPSBpc1BsYXk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0b3BBbmltYXRpb24oKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkZpbmlzaDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChfb2xkSXNQbGF5KSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0QW5pbWF0aW9uKF9hbmltYXRpb25Ub2tlbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9vbGRJc1BsYXkgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgJCgnI3RpbWVsaW5lLXJhbmdlIGlucHV0JykuaW9uUmFuZ2VTbGlkZXIoe1xuICAgICAgICAgICAgZnJvbV9zaGFkb3c6IHRydWUsXG4gICAgICAgICAgICBmb3JjZV9lZGdlczogdHJ1ZSxcbiAgICAgICAgICAgIHR5cGU6ICdkb3VibGUnLFxuICAgICAgICAgICAgZHJhZ19pbnRlcnZhbDogdHJ1ZSxcbiAgICAgICAgICAgIGdyaWQ6IHRydWUsXG4gICAgICAgICAgICBncmlkX251bTogMTAsXG4gICAgICAgICAgICBvbkNoYW5nZTogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBkdXJhdGlvbiA9IGRhdGEudG8gLSBkYXRhLmZyb207XG4gICAgICAgICAgICAgICAgc3RhcnRUaW1lID0gZGF0YS5mcm9tO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRUaW1lID0gTWF0aC5taW4oTWF0aC5tYXgoZGF0YS5mcm9tLCBjdXJyZW50VGltZSksIGRhdGEudG8pO1xuICAgICAgICAgICAgICAgIHZpZXdlci5zZXRQb3NlKGN1cnJlbnRUaW1lKTtcbiAgICAgICAgICAgICAgICBwcm9ncmVzc1NsaWRlci51cGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICBmcm9tX21pbjogZGF0YS5mcm9tLFxuICAgICAgICAgICAgICAgICAgICBmcm9tX21heDogZGF0YS50b1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB2YXIgcHJvZ3Jlc3NTbGlkZXIgPSAkKCcjdGltZWxpbmUtcHJvZ3Jlc3MgaW5wdXQnKS5kYXRhKCdpb25SYW5nZVNsaWRlcicpO1xuICAgICAgICB2YXIgcmFuZ2VTbGlkZXIgPSAkKCcjdGltZWxpbmUtcmFuZ2UgaW5wdXQnKS5kYXRhKCdpb25SYW5nZVNsaWRlcicpO1xuICAgICAgICBwcm9ncmVzc1NsaWRlci51cGRhdGUoe1xuICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgbWF4OiBkdXJhdGlvbixcbiAgICAgICAgICAgIGZyb206IGN1cnJlbnRUaW1lLFxuICAgICAgICAgICAgZnJvbV9taW46IDAsXG4gICAgICAgICAgICBmcm9tX21heDogZHVyYXRpb25cbiAgICAgICAgfSk7XG4gICAgICAgIHJhbmdlU2xpZGVyLnVwZGF0ZSh7XG4gICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICBtYXg6IGR1cmF0aW9uLFxuICAgICAgICAgICAgZnJvbTogMCxcbiAgICAgICAgICAgIHRvOiBkdXJhdGlvblxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUNvbnRyb2xQb3NpdGlvbigpIHtcbiAgICB2YXIgc2xpZGVyID0gJCgnI3RpbWVsaW5lLXByb2dyZXNzIGlucHV0JykuZGF0YSgnaW9uUmFuZ2VTbGlkZXInKTtcbiAgICBpZiAoc2xpZGVyKSB7XG4gICAgICAgIHNsaWRlci51cGRhdGUoe1xuICAgICAgICAgICAgZnJvbTogY3VycmVudFRpbWVcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBzdGFydEFuaW1hdGlvbihfYW5pbWF0aW9uVG9rZW4pIHtcbiAgICBpZiAoaXNQbGF5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpc1BsYXkgPSB0cnVlO1xuXG4gICAgdmFyIF90aW1lID0gRGF0ZS5ub3coKTtcblxuICAgIHZhciBwYXVzZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aW1lbGluZS1wYXVzZS1yZXN1bWUnKTtcbiAgICBwYXVzZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKCdpY29uLXJlc3VtZScpO1xuICAgIHBhdXNlQnRuLmNsYXNzTGlzdC5hZGQoJ2ljb24tcGF1c2UnKTtcblxuICAgIGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICAgICAgaWYgKCFpc1BsYXkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoX2FuaW1hdGlvblRva2VuICE9PSBhbmltYXRpb25Ub2tlbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmlld2VyLnNldFBvc2UoY3VycmVudFRpbWUpO1xuXG4gICAgICAgIHZhciBkVGltZSA9IE1hdGgubWluKERhdGUubm93KCkgLSBfdGltZSwgMjApO1xuICAgICAgICBfdGltZSA9IERhdGUubm93KCk7XG5cbiAgICAgICAgdXBkYXRlQ29udHJvbFBvc2l0aW9uKCk7XG5cbiAgICAgICAgY3VycmVudFRpbWUgKz0gZFRpbWU7XG4gICAgICAgIGlmIChjdXJyZW50VGltZSA+IHN0YXJ0VGltZSArIGR1cmF0aW9uKSB7XG4gICAgICAgICAgICBjdXJyZW50VGltZSA9IHN0YXJ0VGltZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh1cGRhdGUpO1xuICAgIH1cblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh1cGRhdGUpO1xufVxuXG5mdW5jdGlvbiBzdG9wQW5pbWF0aW9uKCkge1xuICAgIGlmICghaXNQbGF5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpc1BsYXkgPSBmYWxzZTtcbiAgICBcbiAgICB2YXIgcGF1c2VCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGltZWxpbmUtcGF1c2UtcmVzdW1lJyk7XG4gICAgcGF1c2VCdG4uY2xhc3NMaXN0LnJlbW92ZSgnaWNvbi1wYXVzZScpO1xuICAgIHBhdXNlQnRuLmNsYXNzTGlzdC5hZGQoJ2ljb24tcmVzdW1lJyk7XG59XG5cbmZ1bmN0aW9uIHNldFRpbWVSYW5nZShfc3RhcnRUaW1lLCBfZW5kVGltZSkge1xuICAgIHN0YXJ0VGltZSA9IF9zdGFydFRpbWU7XG4gICAgZHVyYXRpb24gPSBfZW5kVGltZSAtIHN0YXJ0VGltZTtcbn1cblxuZXhwb3J0IHsgdXBkYXRlQW5pbWF0aW9uVUksIHNldFRpbWVSYW5nZSwgaGlkZVRpbWVsaW5lLCBzaG93VGltZWxpbmUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy90aW1lbGluZS5qc1xuLy8gbW9kdWxlIGlkID0gMTY2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///166\n");

/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_claygl_src_Texture2D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_claygl_src_Texture__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_claygl_src_compositor_Pass__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_claygl_src_Shader__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_claygl_src_FrameBuffer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_claygl_src_Material__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__edge_glsl_js__ = __webpack_require__(168);\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3_claygl_src_Shader__[\"a\" /* default */]['import'](__WEBPACK_IMPORTED_MODULE_6__edge_glsl_js__[\"a\" /* default */]);\n\nvar texture = new __WEBPACK_IMPORTED_MODULE_0_claygl_src_Texture2D__[\"a\" /* default */]();\nvar framebuffer = new __WEBPACK_IMPORTED_MODULE_4_claygl_src_FrameBuffer__[\"a\" /* default */]();\nframebuffer.attach(texture);\n\nvar edgePass = new __WEBPACK_IMPORTED_MODULE_2_claygl_src_compositor_Pass__[\"a\" /* default */]({\n    fragment: __WEBPACK_IMPORTED_MODULE_3_claygl_src_Shader__[\"a\" /* default */].source('qmv.editor.edge')\n});\n\nvar outlineBasicMaterial = new __WEBPACK_IMPORTED_MODULE_5_claygl_src_Material__[\"a\" /* default */]({\n    shader: new __WEBPACK_IMPORTED_MODULE_3_claygl_src_Shader__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_3_claygl_src_Shader__[\"a\" /* default */].source('clay.basic.vertex'), __WEBPACK_IMPORTED_MODULE_3_claygl_src_Shader__[\"a\" /* default */].source('clay.basic.fragment'))\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (viewer, meshes, camera) {\n    var renderer = viewer.getRenderer();\n    texture.width = renderer.getWidth();\n    texture.height = renderer.getHeight();\n\n    framebuffer.bind(renderer);\n    renderer.gl.clearColor(0, 0, 0, 0);\n    renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT | renderer.gl.DEPTH_BUFFER_BIT);\n    camera.update();\n    renderer.renderPass(meshes, camera, {\n        getMaterial: function () {\n            return outlineBasicMaterial;\n        }\n    });\n    framebuffer.unbind(renderer);\n\n    edgePass.setUniform('edgeWidth', 1.5);\n    edgePass.setUniform('edgeColor', [1, 1, 0, 1]);\n    edgePass.setUniform('texture', texture);\n    edgePass.setUniform('textureSize', [texture.width, texture.height]);\n    edgePass.render(renderer);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2RlYnVnL3JlbmRlck91dGxpbmUuanM/ZDM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGV4dHVyZTJEIGZyb20gJ2NsYXlnbC9zcmMvVGV4dHVyZTJEJztcbmltcG9ydCBUZXh0dXJlIGZyb20gJ2NsYXlnbC9zcmMvVGV4dHVyZSc7XG5pbXBvcnQgUGFzcyBmcm9tICdjbGF5Z2wvc3JjL2NvbXBvc2l0b3IvUGFzcyc7XG5pbXBvcnQgU2hhZGVyIGZyb20gJ2NsYXlnbC9zcmMvU2hhZGVyJztcbmltcG9ydCBGcmFtZUJ1ZmZlciBmcm9tICdjbGF5Z2wvc3JjL0ZyYW1lQnVmZmVyJztcbmltcG9ydCBNYXRlcmlhbCBmcm9tICdjbGF5Z2wvc3JjL01hdGVyaWFsJztcblxuaW1wb3J0IGVkZ2VTaGFkZXIgZnJvbSAnLi9lZGdlLmdsc2wuanMnO1xuU2hhZGVyWydpbXBvcnQnXShlZGdlU2hhZGVyKTtcblxudmFyIHRleHR1cmUgPSBuZXcgVGV4dHVyZTJEKCk7XG52YXIgZnJhbWVidWZmZXIgPSBuZXcgRnJhbWVCdWZmZXIoKTtcbmZyYW1lYnVmZmVyLmF0dGFjaCh0ZXh0dXJlKTtcblxudmFyIGVkZ2VQYXNzID0gbmV3IFBhc3Moe1xuICAgIGZyYWdtZW50OiBTaGFkZXIuc291cmNlKCdxbXYuZWRpdG9yLmVkZ2UnKVxufSk7XG5cbnZhciBvdXRsaW5lQmFzaWNNYXRlcmlhbCA9IG5ldyBNYXRlcmlhbCh7XG4gICAgc2hhZGVyOiBuZXcgU2hhZGVyKFNoYWRlci5zb3VyY2UoJ2NsYXkuYmFzaWMudmVydGV4JyksIFNoYWRlci5zb3VyY2UoJ2NsYXkuYmFzaWMuZnJhZ21lbnQnKSlcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAodmlld2VyLCBtZXNoZXMsIGNhbWVyYSkge1xuICAgIHZhciByZW5kZXJlciA9IHZpZXdlci5nZXRSZW5kZXJlcigpO1xuICAgIHRleHR1cmUud2lkdGggPSByZW5kZXJlci5nZXRXaWR0aCgpO1xuICAgIHRleHR1cmUuaGVpZ2h0ID0gcmVuZGVyZXIuZ2V0SGVpZ2h0KCk7XG5cbiAgICBmcmFtZWJ1ZmZlci5iaW5kKHJlbmRlcmVyKTtcbiAgICByZW5kZXJlci5nbC5jbGVhckNvbG9yKDAsIDAsIDAsIDApO1xuICAgIHJlbmRlcmVyLmdsLmNsZWFyKHJlbmRlcmVyLmdsLkNPTE9SX0JVRkZFUl9CSVQgfCByZW5kZXJlci5nbC5ERVBUSF9CVUZGRVJfQklUKTtcbiAgICBjYW1lcmEudXBkYXRlKCk7XG4gICAgcmVuZGVyZXIucmVuZGVyUGFzcyhtZXNoZXMsIGNhbWVyYSwge1xuICAgICAgICBnZXRNYXRlcmlhbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIG91dGxpbmVCYXNpY01hdGVyaWFsO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgZnJhbWVidWZmZXIudW5iaW5kKHJlbmRlcmVyKTtcblxuICAgIGVkZ2VQYXNzLnNldFVuaWZvcm0oJ2VkZ2VXaWR0aCcsIDEuNSk7XG4gICAgZWRnZVBhc3Muc2V0VW5pZm9ybSgnZWRnZUNvbG9yJywgWzEsIDEsIDAsIDFdKTtcbiAgICBlZGdlUGFzcy5zZXRVbmlmb3JtKCd0ZXh0dXJlJywgdGV4dHVyZSk7XG4gICAgZWRnZVBhc3Muc2V0VW5pZm9ybSgndGV4dHVyZVNpemUnLCBbdGV4dHVyZS53aWR0aCwgdGV4dHVyZS5oZWlnaHRdKTtcbiAgICBlZGdlUGFzcy5yZW5kZXIocmVuZGVyZXIpO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2RlYnVnL3JlbmRlck91dGxpbmUuanNcbi8vIG1vZHVsZSBpZCA9IDE2N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///167\n");

/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (\"@export qmv.editor.edge\\n\\nuniform sampler2D texture;\\n\\nuniform vec2 textureSize;\\n\\nuniform vec4 edgeColor: [0,0,0,1.0];\\nuniform float edgeWidth: 1;\\n\\nvarying vec2 v_Texcoord;\\n\\nfloat getCol(vec2 coord) {\\n return texture2D(texture, coord).a;\\n}\\n\\nvoid main() {\\n vec2 cc = v_Texcoord;\\n float center = getCol(cc);\\n\\n float dx = edgeWidth / textureSize.x;\\n float dy = edgeWidth / textureSize.y;\\n\\n vec2 coord;\\n float topLeft = getCol(cc+vec2(-dx, -dy));\\n float top = getCol(cc+vec2(0.0, -dy));\\n float topRight = getCol(cc+vec2(dx, -dy));\\n float left = getCol(cc+vec2(-dx, 0.0));\\n float right = getCol(cc+vec2(dx, 0.0));\\n float bottomLeft = getCol(cc+vec2(-dx, dy));\\n float bottom = getCol(cc+vec2(0.0, dy));\\n float bottomRight = getCol(cc+vec2(dx, dy));\\n\\n float v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\\n float h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\\n\\n float edge = sqrt(h * h + v * v);\\n\\n edge = smoothstep(0.9, 1.0, edge);\\n if (edge < 0.5) {\\n discard;\\n }\\n\\n gl_FragColor = edgeColor;\\n}\\n@end\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2RlYnVnL2VkZ2UuZ2xzbC5qcz85MmQ4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiQGV4cG9ydCBxbXYuZWRpdG9yLmVkZ2VcXG5cXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcblxcbnVuaWZvcm0gdmVjMiB0ZXh0dXJlU2l6ZTtcXG5cXG51bmlmb3JtIHZlYzQgZWRnZUNvbG9yOiBbMCwwLDAsMS4wXTtcXG51bmlmb3JtIGZsb2F0IGVkZ2VXaWR0aDogMTtcXG5cXG52YXJ5aW5nIHZlYzIgdl9UZXhjb29yZDtcXG5cXG5mbG9hdCBnZXRDb2wodmVjMiBjb29yZCkge1xcbiByZXR1cm4gdGV4dHVyZTJEKHRleHR1cmUsIGNvb3JkKS5hO1xcbn1cXG5cXG52b2lkIG1haW4oKSB7XFxuIHZlYzIgY2MgPSB2X1RleGNvb3JkO1xcbiBmbG9hdCBjZW50ZXIgPSBnZXRDb2woY2MpO1xcblxcbiBmbG9hdCBkeCA9IGVkZ2VXaWR0aCAvIHRleHR1cmVTaXplLng7XFxuIGZsb2F0IGR5ID0gZWRnZVdpZHRoIC8gdGV4dHVyZVNpemUueTtcXG5cXG4gdmVjMiBjb29yZDtcXG4gZmxvYXQgdG9wTGVmdCA9IGdldENvbChjYyt2ZWMyKC1keCwgLWR5KSk7XFxuIGZsb2F0IHRvcCA9IGdldENvbChjYyt2ZWMyKDAuMCwgLWR5KSk7XFxuIGZsb2F0IHRvcFJpZ2h0ID0gZ2V0Q29sKGNjK3ZlYzIoZHgsIC1keSkpO1xcbiBmbG9hdCBsZWZ0ID0gZ2V0Q29sKGNjK3ZlYzIoLWR4LCAwLjApKTtcXG4gZmxvYXQgcmlnaHQgPSBnZXRDb2woY2MrdmVjMihkeCwgMC4wKSk7XFxuIGZsb2F0IGJvdHRvbUxlZnQgPSBnZXRDb2woY2MrdmVjMigtZHgsIGR5KSk7XFxuIGZsb2F0IGJvdHRvbSA9IGdldENvbChjYyt2ZWMyKDAuMCwgZHkpKTtcXG4gZmxvYXQgYm90dG9tUmlnaHQgPSBnZXRDb2woY2MrdmVjMihkeCwgZHkpKTtcXG5cXG4gZmxvYXQgdiA9IC10b3BMZWZ0LTIuMCp0b3AtdG9wUmlnaHQrYm90dG9tTGVmdCsyLjAqYm90dG9tK2JvdHRvbVJpZ2h0O1xcbiBmbG9hdCBoID0gLWJvdHRvbUxlZnQtMi4wKmxlZnQtdG9wTGVmdCtib3R0b21SaWdodCsyLjAqcmlnaHQrdG9wUmlnaHQ7XFxuXFxuIGZsb2F0IGVkZ2UgPSBzcXJ0KGggKiBoICsgdiAqIHYpO1xcblxcbiBlZGdlID0gc21vb3Roc3RlcCgwLjksIDEuMCwgZWRnZSk7XFxuIGlmIChlZGdlIDwgMC41KSB7XFxuIGRpc2NhcmQ7XFxuIH1cXG5cXG4gZ2xfRnJhZ0NvbG9yID0gZWRnZUNvbG9yO1xcbn1cXG5AZW5kXCI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9kZWJ1Zy9lZGdlLmdsc2wuanNcbi8vIG1vZHVsZSBpZCA9IDE2OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///168\n");

/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function (url) {\n    window.open(url);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2Jyb3dzZXIvb3BlblVSTC5qcz80NGVhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh1cmwpIHtcbiAgICB3aW5kb3cub3Blbih1cmwpO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Jyb3dzZXIvb3BlblVSTC5qc1xuLy8gbW9kdWxlIGlkID0gMTY5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///169\n");

/***/ })
/******/ ]);